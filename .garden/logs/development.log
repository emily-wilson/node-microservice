
[2020-05-26T20:15:49.446Z] Thanks for installing Garden! We work hard to provide you with the best experience we can. We collect some anonymized usage data while you use Garden. If you'd like to know more about what we collect or if you'd like to opt out of telemetry, please read more at https://github.com/garden-io/garden/tree/v0.11.14/README.md#Analytics

[2020-05-26T20:15:49.452Z] Getting status...

[2020-05-26T20:15:49.722Z] Fetching kubectl...

[2020-05-26T20:15:59.043Z] Fetched kubectl

[2020-05-26T20:16:01.618Z] Fetching helm2...

[2020-05-26T20:16:14.468Z] Fetched helm2

[2020-05-26T20:16:15.110Z] Getting status... → Done

[2020-05-26T20:16:15.885Z] modules: []


[2020-05-26T20:17:12.115Z] Getting status...

[2020-05-26T20:17:15.227Z] Getting status... → Done

[2020-05-26T20:17:15.729Z] modules:
  - allowPublish: true
    apiVersion: garden.io/v0
    build:
      dependencies: []
    buildDependencies: {}
    buildMetadataPath: /Users/emilwils/Documents/node-microservice/.garden/build-metadata/client
    buildPath: /Users/emilwils/Documents/node-microservice/.garden/build/client
    compatibleTypes:
      - container
    configPath: /Users/emilwils/Documents/node-microservice/client/garden.yml
    description: Frontend container
    disabled: false
    include: []
    kind: Module
    name: client
    needsBuild: true
    outputs:
      deployment-image-name: client
      local-image-name: client
    path: /Users/emilwils/Documents/node-microservice/client
    serviceConfigs: []
    serviceDependencyNames: []
    taskConfigs: []
    taskDependencyNames: []
    testConfigs: []
    type: container
    version:
      dependencyVersions: {}
      files: []
      versionString: v-92b31cbaad


[2020-05-26T20:32:44.248Z] Getting status...

[2020-05-26T20:32:47.422Z] Getting status... → Done

[2020-05-26T20:32:47.932Z] Error: Module client neither specifies image nor provides Dockerfile
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
Error Details:
spec:
  services: []
  build:
    dependencies: []
    timeout: 1200
  buildArgs: {}
  tests: []
  tasks: []


[2020-05-26T20:32:48.862Z] Getting build status for v-4f04a66d1e...

[2020-05-26T20:32:48.867Z] Getting build status for v-4f04a66d1e... → Done (took 0 sec)

[2020-05-26T20:32:48.874Z] Error: 1 deploy task(s) failed!
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at Generator.next (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at new Promise (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at Object.handleProcessResults (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at DeployCommand.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
Error Details:
results:
  taskResults:
    get-service-status.frontend:
      type: get-service-status
      description: getting status for service 'frontend' (from module 'client')
      key: get-service-status.frontend
      name: frontend
      error:
        detail:
          spec:
            services:
              - name: frontend
                ports:
                  - name: http
                    containerPort: 8080
                    protocol: TCP
                    servicePort: 8080
                dependencies: []
                disabled: false
                annotations: {}
                daemon: false
                ingresses: []
                env: {}
                limits:
                  cpu: 1000
                  memory: 1024
                volumes: []
            build:
              dependencies: []
              timeout: 1200
            buildArgs: {}
            tests: []
            tasks: []
        type: configuration
      completedAt: '2020-05-26T20:32:47.929Z'
      batchId: 2ccfa90c-d5ce-4aa2-8bad-9a7cb8ea015f
    stage-build.client:
      type: stage-build
      key: stage-build.client
      name: client
      description: staging build for client
      completedAt: '2020-05-26T20:32:48.860Z'
      batchId: 2ccfa90c-d5ce-4aa2-8bad-9a7cb8ea015f
      output: {}
      dependencyResults: {}
    build.client:
      type: build
      key: build.client
      name: client
      description: building client
      completedAt: '2020-05-26T20:32:48.867Z'
      batchId: 2ccfa90c-d5ce-4aa2-8bad-9a7cb8ea015f
      output:
        fresh: false
      dependencyResults:
        stage-build.client:
          type: stage-build
          key: stage-build.client
          name: client
          description: staging build for client
          completedAt: '2020-05-26T20:32:48.860Z'
          batchId: 2ccfa90c-d5ce-4aa2-8bad-9a7cb8ea015f
          output: {}
          dependencyResults: {}
  restartRequired: false


[2020-05-26T20:32:48.876Z] 
See error.log for detailed error message

[2020-05-26T20:33:31.279Z] Getting status...

[2020-05-26T20:33:34.374Z] Getting status... → Done

[2020-05-26T20:33:34.904Z] Syncing module sources (5 files)...

[2020-05-26T20:33:34.952Z] Syncing module sources (5 files)... → Done (took 0 sec)

[2020-05-26T20:33:34.955Z] Getting build status for v-baa629c081...

[2020-05-26T20:33:35.447Z] Building version v-baa629c081...

[2020-05-26T20:33:35.513Z] Building server:v-baa629c081...

[2020-05-26T20:33:35.763Z] Building server:v-baa629c081... → Done (took 0.8 sec)

[2020-05-26T20:33:35.765Z] Deploying version v-baa629c081...

[2020-05-26T20:33:38.001Z] Waiting for resources to be ready...

[2020-05-26T20:33:40.064Z] Deploying version v-baa629c081...

[2020-05-26T20:33:40.077Z] Error: Error deploying backend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment backend-v-baa629c081: ScalingReplicaSet - Scaled up replica set backend-v-baa629c081-7c76d4d5d6 to 1
Pod backend-v-baa629c081-7c76d4d5d6-ltx26: Scheduled - Successfully assigned node-microservice/backend-v-baa629c081-7c76d4d5d6-ltx26 to minikube
Pod backend-v-baa629c081-7c76d4d5d6-ltx26: Pulled - Container image "server:v-baa629c081" already present on machine
Pod backend-v-baa629c081-7c76d4d5d6-ltx26: Created - Created container backend
Pod backend-v-baa629c081-7c76d4d5d6-ltx26: Started - Started container backend
Pod backend-v-baa629c081-7c76d4d5d6-ltx26: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-baa629c081

****** backend-v-baa629c081-7c76d4d5d6-ltx26 ******
------ backend ------    at Handshake.ErrorPacket (/usr/src/app/node_modules/mysql/lib/protocol/sequences/Handshake.js:123:18)
    at Protocol._parsePacket (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/src/app/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/src/app/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/src/app/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/src/app/node_modules/mysql/lib/Connection.js:526:10)
    at emitOne (events.js:96:13)
    at Socket.emit (events.js:191:7)
    --------------------
    at Protocol._enqueue (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/app/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/app/app.js:11:6)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.runMain (module.js:605:10)

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-baa629c081:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-baa629c081-7c76d4d5d6 to 1\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-baa629c081-7c76d4d5d6-ltx26 to minikube\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mPulled - Container image \"server:v-baa629c081\" already present on machine\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-baa629c081\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-baa629c081-7c76d4d5d6-ltx26 ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m    at Handshake.ErrorPacket (/usr/src/app/node_modules/mysql/lib/protocol/sequences/Handshake.js:123:18)\n    at Protocol._parsePacket (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:291:23)\n    at Parser._parsePacket (/usr/src/app/node_modules/mysql/lib/protocol/Parser.js:433:10)\n    at Parser.write (/usr/src/app/node_modules/mysql/lib/protocol/Parser.js:43:10)\n    at Protocol.write (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:38:16)\n    at Socket.<anonymous> (/usr/src/app/node_modules/mysql/lib/Connection.js:88:28)\n    at Socket.<anonymous> (/usr/src/app/node_modules/mysql/lib/Connection.js:526:10)\n    at emitOne (events.js:96:13)\n    at Socket.emit (events.js:191:7)\n    --------------------\n    at Protocol._enqueue (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/app/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/app/app.js:11:6)\n    at Module._compile (module.js:571:32)\n    at Object.Module._extensions..js (module.js:580:10)\n    at Module.load (module.js:488:32)\n    at tryModuleLoad (module.js:447:12)\n    at Function.Module._load (module.js:439:3)\n    at Module.runMain (module.js:605:10)\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-baa629c081
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-baa629c081
      uid: 645152cc-746c-43b2-99a5-1fa7e2326807
      resourceVersion: '9475'
      generation: 1
      creationTimestamp: '2020-05-26T20:33:36Z'
      labels:
        garden.io/version: v-baa629c081
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 3c12647ed6cf2ce40fd9565408fb8a88dac39f9ce12a70f14dac556b705d49de
        garden.io/version: v-baa629c081
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"3c12647ed6cf2ce40fd9565408fb8a88dac39f9ce12a70f14dac556b705d49de","garden.io/version":"v-baa629c081"},"labels":{"garden.io/version":"v-baa629c081","module":"server","service":"backend"},"name":"backend-v-baa629c081","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-baa629c081","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-baa629c081","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-baa629c081"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-baa629c081\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-baa629c081","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-baa629c081
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-baa629c081
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-26T20:33:40.106Z] Error: 1 deploy task(s) failed!
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at Generator.next (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at new Promise (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at Object.handleProcessResults (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at DeployCommand.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
Error Details:
results:
  taskResults:
    get-service-status.backend:
      type: get-service-status
      key: get-service-status.backend
      name: backend
      description: getting status for service 'backend' (from module 'server')
      completedAt: '2020-05-26T20:33:34.927Z'
      batchId: 5a8d58de-810f-4386-a55a-376be743740c
      output:
        forwardablePorts: []
        ingresses: []
        state: missing
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: backend-v-baa629c081
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-baa629c081
              namespace: node-microservice
              labels:
                module: server
                service: backend
                garden.io/version: v-baa629c081
            spec:
              selector:
                matchLabels:
                  service: backend
                  garden.io/version: v-baa629c081
              template:
                metadata:
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-baa629c081
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults: {}
    stage-build.server:
      type: stage-build
      key: stage-build.server
      name: server
      description: staging build for server
      completedAt: '2020-05-26T20:33:34.952Z'
      batchId: 5a8d58de-810f-4386-a55a-376be743740c
      output: {}
      dependencyResults: {}
    build.server:
      type: build
      key: build.server
      name: server
      description: building server
      completedAt: '2020-05-26T20:33:35.763Z'
      batchId: 5a8d58de-810f-4386-a55a-376be743740c
      output:
        fresh: true
        buildLog: "Sending build context to Docker daemon  23.04kB\r\r\nStep 1/7 : FROM node:7\n ---> d9aed20b68a4\nStep 2/7 : WORKDIR /usr/src/app\n ---> Using cache\n ---> 21cdbe2a105b\nStep 3/7 : COPY package*.json ./\n ---> Using cache\n ---> a62b8c8cb2ae\nStep 4/7 : RUN npm install\n ---> Using cache\n ---> de507c110ed0\nStep 5/7 : COPY . .\n ---> Using cache\n ---> 70db9dff2d2c\nStep 6/7 : EXPOSE 8080\n ---> Using cache\n ---> 96f746d33ffa\nStep 7/7 : CMD [\"node\", \"app.js\"]\n ---> Using cache\n ---> 49f15a49a7ec\nSuccessfully built 49f15a49a7ec\nSuccessfully tagged server:v-baa629c081\n"
        details:
          identifier: 'server:v-baa629c081'
      dependencyResults:
        stage-build.server:
          type: stage-build
          key: stage-build.server
          name: server
          description: staging build for server
          completedAt: '2020-05-26T20:33:34.952Z'
          batchId: 5a8d58de-810f-4386-a55a-376be743740c
          output: {}
          dependencyResults: {}
    deploy.backend:
      type: deploy
      description: deploying service 'backend' (from module 'server')
      key: deploy.backend
      name: backend
      error:
        detail:
          serviceName: backend
          status:
            state: unhealthy
            lastMessage: BackOff - Back-off restarting failed container
            logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-baa629c081:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-baa629c081-7c76d4d5d6 to 1\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-baa629c081-7c76d4d5d6-ltx26 to minikube\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mPulled - Container image \"server:v-baa629c081\" already present on machine\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-baa629c081\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-baa629c081-7c76d4d5d6-ltx26 ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m    at Handshake.ErrorPacket (/usr/src/app/node_modules/mysql/lib/protocol/sequences/Handshake.js:123:18)\n    at Protocol._parsePacket (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:291:23)\n    at Parser._parsePacket (/usr/src/app/node_modules/mysql/lib/protocol/Parser.js:433:10)\n    at Parser.write (/usr/src/app/node_modules/mysql/lib/protocol/Parser.js:43:10)\n    at Protocol.write (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:38:16)\n    at Socket.<anonymous> (/usr/src/app/node_modules/mysql/lib/Connection.js:88:28)\n    at Socket.<anonymous> (/usr/src/app/node_modules/mysql/lib/Connection.js:526:10)\n    at emitOne (events.js:96:13)\n    at Socket.emit (events.js:191:7)\n    --------------------\n    at Protocol._enqueue (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/app/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/app/app.js:11:6)\n    at Module._compile (module.js:571:32)\n    at Object.Module._extensions..js (module.js:580:10)\n    at Module.load (module.js:488:32)\n    at tryModuleLoad (module.js:447:12)\n    at Function.Module._load (module.js:439:3)\n    at Module.runMain (module.js:605:10)\n"
            resource:
              kind: Deployment
              apiVersion: apps/v1
              metadata:
                name: backend-v-baa629c081
                namespace: node-microservice
                selfLink: >-
                  /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-baa629c081
                uid: 645152cc-746c-43b2-99a5-1fa7e2326807
                resourceVersion: '9475'
                generation: 1
                creationTimestamp: '2020-05-26T20:33:36Z'
                labels:
                  garden.io/version: v-baa629c081
                  module: server
                  service: backend
                annotations:
                  deployment.kubernetes.io/revision: '1'
                  garden.io/configured.replicas: '1'
                  garden.io/generated: 'true'
                  garden.io/manifest-hash: >-
                    3c12647ed6cf2ce40fd9565408fb8a88dac39f9ce12a70f14dac556b705d49de
                  garden.io/version: v-baa629c081
                  kubectl.kubernetes.io/last-applied-configuration: >
                    {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"3c12647ed6cf2ce40fd9565408fb8a88dac39f9ce12a70f14dac556b705d49de","garden.io/version":"v-baa629c081"},"labels":{"garden.io/version":"v-baa629c081","module":"server","service":"backend"},"name":"backend-v-baa629c081","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-baa629c081","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-baa629c081","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-baa629c081"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-baa629c081\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-baa629c081","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
                managedFields:
                  - manager: kube-controller-manager
                    operation: Update
                    apiVersion: apps/v1
                    time: '2020-05-26T20:33:36Z'
                    fieldsType: FieldsV1
                    fieldsV1:
                      'f:metadata':
                        'f:annotations':
                          'f:deployment.kubernetes.io/revision': {}
                      'f:status':
                        'f:conditions':
                          .: {}
                          'k:{"type":"Available"}':
                            .: {}
                            'f:lastTransitionTime': {}
                            'f:lastUpdateTime': {}
                            'f:message': {}
                            'f:reason': {}
                            'f:status': {}
                            'f:type': {}
                          'k:{"type":"Progressing"}':
                            .: {}
                            'f:lastTransitionTime': {}
                            'f:lastUpdateTime': {}
                            'f:message': {}
                            'f:reason': {}
                            'f:status': {}
                            'f:type': {}
                        'f:observedGeneration': {}
                        'f:replicas': {}
                        'f:unavailableReplicas': {}
                        'f:updatedReplicas': {}
                  - manager: kubectl
                    operation: Update
                    apiVersion: apps/v1
                    time: '2020-05-26T20:33:36Z'
                    fieldsType: FieldsV1
                    fieldsV1:
                      'f:metadata':
                        'f:annotations':
                          .: {}
                          'f:garden.io/configured.replicas': {}
                          'f:garden.io/generated': {}
                          'f:garden.io/manifest-hash': {}
                          'f:garden.io/version': {}
                          'f:kubectl.kubernetes.io/last-applied-configuration': {}
                        'f:labels':
                          .: {}
                          'f:garden.io/version': {}
                          'f:module': {}
                          'f:service': {}
                      'f:spec':
                        'f:progressDeadlineSeconds': {}
                        'f:replicas': {}
                        'f:revisionHistoryLimit': {}
                        'f:selector':
                          'f:matchLabels':
                            .: {}
                            'f:garden.io/version': {}
                            'f:service': {}
                        'f:strategy':
                          'f:rollingUpdate':
                            .: {}
                            'f:maxSurge': {}
                            'f:maxUnavailable': {}
                          'f:type': {}
                        'f:template':
                          'f:metadata':
                            'f:labels':
                              .: {}
                              'f:garden.io/version': {}
                              'f:module': {}
                              'f:service': {}
                          'f:spec':
                            'f:containers':
                              'k:{"name":"backend"}':
                                .: {}
                                'f:env':
                                  .: {}
                                  'k:{"name":"GARDEN_DEPENDENCIES"}':
                                    .: {}
                                    'f:name': {}
                                    'f:value': {}
                                  'k:{"name":"GARDEN_VERSION"}':
                                    .: {}
                                    'f:name': {}
                                    'f:value': {}
                                  'k:{"name":"POD_HOST_IP"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_IP"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NAME"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NAMESPACE"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NODE_NAME"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_SERVICE_ACCOUNT"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_UID"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                'f:image': {}
                                'f:imagePullPolicy': {}
                                'f:name': {}
                                'f:ports':
                                  .: {}
                                  'k:{"containerPort":8080,"protocol":"TCP"}':
                                    .: {}
                                    'f:containerPort': {}
                                    'f:name': {}
                                    'f:protocol': {}
                                'f:resources':
                                  .: {}
                                  'f:limits':
                                    .: {}
                                    'f:cpu': {}
                                    'f:memory': {}
                                  'f:requests':
                                    .: {}
                                    'f:cpu': {}
                                    'f:memory': {}
                                'f:securityContext':
                                  .: {}
                                  'f:allowPrivilegeEscalation': {}
                                'f:terminationMessagePath': {}
                                'f:terminationMessagePolicy': {}
                            'f:dnsPolicy': {}
                            'f:restartPolicy': {}
                            'f:schedulerName': {}
                            'f:securityContext': {}
                            'f:terminationGracePeriodSeconds': {}
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    garden.io/version: v-baa629c081
                    service: backend
                template:
                  metadata:
                    creationTimestamp: null
                    labels:
                      garden.io/version: v-baa629c081
                      module: server
                      service: backend
                  spec:
                    containers:
                      - name: backend
                        image: 'server:v-baa629c081'
                        ports:
                          - name: http
                            containerPort: 8080
                            protocol: TCP
                        env:
                          - name: GARDEN_VERSION
                            value: v-baa629c081
                          - name: GARDEN_DEPENDENCIES
                            value: >-
                              [{"moduleName":"server","name":"server","type":"build","version":"v-baa629c081"}]
                          - name: POD_HOST_IP
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: status.hostIP
                          - name: POD_IP
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: status.podIP
                          - name: POD_NAME
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.name
                          - name: POD_NAMESPACE
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.namespace
                          - name: POD_NODE_NAME
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: spec.nodeName
                          - name: POD_SERVICE_ACCOUNT
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: spec.serviceAccountName
                          - name: POD_UID
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.uid
                        resources:
                          limits:
                            cpu: '1'
                            memory: 1Gi
                          requests:
                            cpu: 10m
                            memory: 64Mi
                        terminationMessagePath: /dev/termination-log
                        terminationMessagePolicy: File
                        imagePullPolicy: IfNotPresent
                        securityContext:
                          allowPrivilegeEscalation: false
                    restartPolicy: Always
                    terminationGracePeriodSeconds: 5
                    dnsPolicy: ClusterFirst
                    securityContext: {}
                    schedulerName: default-scheduler
                strategy:
                  type: RollingUpdate
                  rollingUpdate:
                    maxUnavailable: 1
                    maxSurge: 1
                revisionHistoryLimit: 3
                progressDeadlineSeconds: 600
              status:
                observedGeneration: 1
                replicas: 1
                updatedReplicas: 1
                unavailableReplicas: 1
                conditions:
                  - type: Available
                    status: 'True'
                    lastUpdateTime: '2020-05-26T20:33:36Z'
                    lastTransitionTime: '2020-05-26T20:33:36Z'
                    reason: MinimumReplicasAvailable
                    message: Deployment has minimum availability.
                  - type: Progressing
                    status: 'True'
                    lastUpdateTime: '2020-05-26T20:33:36Z'
                    lastTransitionTime: '2020-05-26T20:33:36Z'
                    reason: ReplicaSetUpdated
                    message: >-
                      ReplicaSet "backend-v-baa629c081-7c76d4d5d6" is
                      progressing.
        type: deployment
      completedAt: '2020-05-26T20:33:40.064Z'
      batchId: 5a8d58de-810f-4386-a55a-376be743740c
  restartRequired: false


[2020-05-26T20:33:40.115Z] 
See error.log for detailed error message

[2020-05-26T20:35:03.153Z] Getting status...

[2020-05-26T20:35:06.236Z] Getting status... → Done

[2020-05-26T20:35:06.772Z] Syncing module sources (5 files)...

[2020-05-26T20:35:06.801Z] Syncing module sources (5 files)... → Done (took 0 sec)

[2020-05-26T20:35:06.804Z] Getting build status for v-baa629c081...

[2020-05-26T20:35:07.288Z] Getting build status for v-baa629c081... → Done (took 0.5 sec)

[2020-05-26T20:35:07.290Z] Deploying version v-baa629c081...

[2020-05-26T20:35:08.662Z] Waiting for resources to be ready...

[2020-05-26T20:35:10.727Z] Deploying version v-baa629c081...

[2020-05-26T20:35:10.742Z] Error: Error deploying backend: CrashLoopBackOff - back-off 40s restarting failed container=backend pod=backend-v-baa629c081-7c76d4d5d6-ltx26_node-microservice(9d11b487-c2f6-49f4-a025-c6d806cccc41)

━━━ Events ━━━
Deployment backend-v-baa629c081: ScalingReplicaSet - Scaled up replica set backend-v-baa629c081-7c76d4d5d6 to 1
Pod backend-v-baa629c081-7c76d4d5d6-ltx26: Scheduled - Successfully assigned node-microservice/backend-v-baa629c081-7c76d4d5d6-ltx26 to minikube
Pod backend-v-baa629c081-7c76d4d5d6-ltx26: Pulled - Container image "server:v-baa629c081" already present on machine
Pod backend-v-baa629c081-7c76d4d5d6-ltx26: Created - Created container backend
Pod backend-v-baa629c081-7c76d4d5d6-ltx26: Started - Started container backend
Pod backend-v-baa629c081-7c76d4d5d6-ltx26: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-baa629c081

****** backend-v-baa629c081-7c76d4d5d6-ltx26 ******
------ backend ------    at Handshake.ErrorPacket (/usr/src/app/node_modules/mysql/lib/protocol/sequences/Handshake.js:123:18)
    at Protocol._parsePacket (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/src/app/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/src/app/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/src/app/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/src/app/node_modules/mysql/lib/Connection.js:526:10)
    at emitOne (events.js:96:13)
    at Socket.emit (events.js:191:7)
    --------------------
    at Protocol._enqueue (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/app/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/app/app.js:11:6)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.runMain (module.js:605:10)

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 40s restarting failed container=backend
    pod=backend-v-baa629c081-7c76d4d5d6-ltx26_node-microservice(9d11b487-c2f6-49f4-a025-c6d806cccc41)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-baa629c081:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-baa629c081-7c76d4d5d6 to 1\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-baa629c081-7c76d4d5d6-ltx26 to minikube\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mPulled - Container image \"server:v-baa629c081\" already present on machine\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-baa629c081\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-baa629c081-7c76d4d5d6-ltx26 ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m    at Handshake.ErrorPacket (/usr/src/app/node_modules/mysql/lib/protocol/sequences/Handshake.js:123:18)\n    at Protocol._parsePacket (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:291:23)\n    at Parser._parsePacket (/usr/src/app/node_modules/mysql/lib/protocol/Parser.js:433:10)\n    at Parser.write (/usr/src/app/node_modules/mysql/lib/protocol/Parser.js:43:10)\n    at Protocol.write (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:38:16)\n    at Socket.<anonymous> (/usr/src/app/node_modules/mysql/lib/Connection.js:88:28)\n    at Socket.<anonymous> (/usr/src/app/node_modules/mysql/lib/Connection.js:526:10)\n    at emitOne (events.js:96:13)\n    at Socket.emit (events.js:191:7)\n    --------------------\n    at Protocol._enqueue (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/app/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/app/app.js:11:6)\n    at Module._compile (module.js:571:32)\n    at Object.Module._extensions..js (module.js:580:10)\n    at Module.load (module.js:488:32)\n    at tryModuleLoad (module.js:447:12)\n    at Function.Module._load (module.js:439:3)\n    at Module.runMain (module.js:605:10)\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-baa629c081
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-baa629c081
      uid: 645152cc-746c-43b2-99a5-1fa7e2326807
      resourceVersion: '9547'
      generation: 1
      creationTimestamp: '2020-05-26T20:33:36Z'
      labels:
        garden.io/version: v-baa629c081
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 3c12647ed6cf2ce40fd9565408fb8a88dac39f9ce12a70f14dac556b705d49de
        garden.io/version: v-baa629c081
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"3c12647ed6cf2ce40fd9565408fb8a88dac39f9ce12a70f14dac556b705d49de","garden.io/version":"v-baa629c081"},"labels":{"garden.io/version":"v-baa629c081","module":"server","service":"backend"},"name":"backend-v-baa629c081","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-baa629c081","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-baa629c081","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-baa629c081"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-baa629c081\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-baa629c081","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-baa629c081
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-baa629c081
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-26T20:35:10.771Z] Error: 1 deploy task(s) failed!
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at Generator.next (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at new Promise (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at Object.handleProcessResults (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at DeployCommand.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
Error Details:
results:
  taskResults:
    stage-build.server:
      type: stage-build
      key: stage-build.server
      name: server
      description: staging build for server
      completedAt: '2020-05-26T20:35:06.802Z'
      batchId: 5904eeb0-35b9-4a64-a928-b93af2bc8a9f
      output: {}
      dependencyResults: {}
    get-service-status.backend:
      type: get-service-status
      key: get-service-status.backend
      name: backend
      description: getting status for service 'backend' (from module 'server')
      completedAt: '2020-05-26T20:35:07.243Z'
      batchId: 5904eeb0-35b9-4a64-a928-b93af2bc8a9f
      output:
        forwardablePorts: []
        ingresses: []
        state: unhealthy
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: backend-v-baa629c081
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-baa629c081
              namespace: node-microservice
              labels:
                module: server
                service: backend
                garden.io/version: v-baa629c081
            spec:
              selector:
                matchLabels:
                  service: backend
                  garden.io/version: v-baa629c081
              template:
                metadata:
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-baa629c081
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults: {}
    build.server:
      type: build
      key: build.server
      name: server
      description: building server
      completedAt: '2020-05-26T20:35:07.288Z'
      batchId: 5904eeb0-35b9-4a64-a928-b93af2bc8a9f
      output:
        fresh: false
      dependencyResults:
        stage-build.server:
          type: stage-build
          key: stage-build.server
          name: server
          description: staging build for server
          completedAt: '2020-05-26T20:35:06.802Z'
          batchId: 5904eeb0-35b9-4a64-a928-b93af2bc8a9f
          output: {}
          dependencyResults: {}
    deploy.backend:
      type: deploy
      description: deploying service 'backend' (from module 'server')
      key: deploy.backend
      name: backend
      error:
        detail:
          serviceName: backend
          status:
            state: unhealthy
            lastMessage: >-
              CrashLoopBackOff - back-off 40s restarting failed
              container=backend
              pod=backend-v-baa629c081-7c76d4d5d6-ltx26_node-microservice(9d11b487-c2f6-49f4-a025-c6d806cccc41)
            logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-baa629c081:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-baa629c081-7c76d4d5d6 to 1\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-baa629c081-7c76d4d5d6-ltx26 to minikube\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mPulled - Container image \"server:v-baa629c081\" already present on machine\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-baa629c081\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-baa629c081-7c76d4d5d6-ltx26 ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m    at Handshake.ErrorPacket (/usr/src/app/node_modules/mysql/lib/protocol/sequences/Handshake.js:123:18)\n    at Protocol._parsePacket (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:291:23)\n    at Parser._parsePacket (/usr/src/app/node_modules/mysql/lib/protocol/Parser.js:433:10)\n    at Parser.write (/usr/src/app/node_modules/mysql/lib/protocol/Parser.js:43:10)\n    at Protocol.write (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:38:16)\n    at Socket.<anonymous> (/usr/src/app/node_modules/mysql/lib/Connection.js:88:28)\n    at Socket.<anonymous> (/usr/src/app/node_modules/mysql/lib/Connection.js:526:10)\n    at emitOne (events.js:96:13)\n    at Socket.emit (events.js:191:7)\n    --------------------\n    at Protocol._enqueue (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/app/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/app/app.js:11:6)\n    at Module._compile (module.js:571:32)\n    at Object.Module._extensions..js (module.js:580:10)\n    at Module.load (module.js:488:32)\n    at tryModuleLoad (module.js:447:12)\n    at Function.Module._load (module.js:439:3)\n    at Module.runMain (module.js:605:10)\n"
            resource:
              kind: Deployment
              apiVersion: apps/v1
              metadata:
                name: backend-v-baa629c081
                namespace: node-microservice
                selfLink: >-
                  /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-baa629c081
                uid: 645152cc-746c-43b2-99a5-1fa7e2326807
                resourceVersion: '9547'
                generation: 1
                creationTimestamp: '2020-05-26T20:33:36Z'
                labels:
                  garden.io/version: v-baa629c081
                  module: server
                  service: backend
                annotations:
                  deployment.kubernetes.io/revision: '1'
                  garden.io/configured.replicas: '1'
                  garden.io/generated: 'true'
                  garden.io/manifest-hash: >-
                    3c12647ed6cf2ce40fd9565408fb8a88dac39f9ce12a70f14dac556b705d49de
                  garden.io/version: v-baa629c081
                  kubectl.kubernetes.io/last-applied-configuration: >
                    {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"3c12647ed6cf2ce40fd9565408fb8a88dac39f9ce12a70f14dac556b705d49de","garden.io/version":"v-baa629c081"},"labels":{"garden.io/version":"v-baa629c081","module":"server","service":"backend"},"name":"backend-v-baa629c081","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-baa629c081","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-baa629c081","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-baa629c081"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-baa629c081\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-baa629c081","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
                managedFields:
                  - manager: kubectl
                    operation: Update
                    apiVersion: apps/v1
                    time: '2020-05-26T20:33:36Z'
                    fieldsType: FieldsV1
                    fieldsV1:
                      'f:metadata':
                        'f:annotations':
                          .: {}
                          'f:garden.io/configured.replicas': {}
                          'f:garden.io/generated': {}
                          'f:garden.io/manifest-hash': {}
                          'f:garden.io/version': {}
                          'f:kubectl.kubernetes.io/last-applied-configuration': {}
                        'f:labels':
                          .: {}
                          'f:garden.io/version': {}
                          'f:module': {}
                          'f:service': {}
                      'f:spec':
                        'f:progressDeadlineSeconds': {}
                        'f:replicas': {}
                        'f:revisionHistoryLimit': {}
                        'f:selector':
                          'f:matchLabels':
                            .: {}
                            'f:garden.io/version': {}
                            'f:service': {}
                        'f:strategy':
                          'f:rollingUpdate':
                            .: {}
                            'f:maxSurge': {}
                            'f:maxUnavailable': {}
                          'f:type': {}
                        'f:template':
                          'f:metadata':
                            'f:labels':
                              .: {}
                              'f:garden.io/version': {}
                              'f:module': {}
                              'f:service': {}
                          'f:spec':
                            'f:containers':
                              'k:{"name":"backend"}':
                                .: {}
                                'f:env':
                                  .: {}
                                  'k:{"name":"GARDEN_DEPENDENCIES"}':
                                    .: {}
                                    'f:name': {}
                                    'f:value': {}
                                  'k:{"name":"GARDEN_VERSION"}':
                                    .: {}
                                    'f:name': {}
                                    'f:value': {}
                                  'k:{"name":"POD_HOST_IP"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_IP"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NAME"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NAMESPACE"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NODE_NAME"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_SERVICE_ACCOUNT"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_UID"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                'f:image': {}
                                'f:imagePullPolicy': {}
                                'f:name': {}
                                'f:ports':
                                  .: {}
                                  'k:{"containerPort":8080,"protocol":"TCP"}':
                                    .: {}
                                    'f:containerPort': {}
                                    'f:name': {}
                                    'f:protocol': {}
                                'f:resources':
                                  .: {}
                                  'f:limits':
                                    .: {}
                                    'f:cpu': {}
                                    'f:memory': {}
                                  'f:requests':
                                    .: {}
                                    'f:cpu': {}
                                    'f:memory': {}
                                'f:securityContext':
                                  .: {}
                                  'f:allowPrivilegeEscalation': {}
                                'f:terminationMessagePath': {}
                                'f:terminationMessagePolicy': {}
                            'f:dnsPolicy': {}
                            'f:restartPolicy': {}
                            'f:schedulerName': {}
                            'f:securityContext': {}
                            'f:terminationGracePeriodSeconds': {}
                  - manager: kube-controller-manager
                    operation: Update
                    apiVersion: apps/v1
                    time: '2020-05-26T20:33:52Z'
                    fieldsType: FieldsV1
                    fieldsV1:
                      'f:metadata':
                        'f:annotations':
                          'f:deployment.kubernetes.io/revision': {}
                      'f:status':
                        'f:conditions':
                          .: {}
                          'k:{"type":"Available"}':
                            .: {}
                            'f:lastTransitionTime': {}
                            'f:lastUpdateTime': {}
                            'f:message': {}
                            'f:reason': {}
                            'f:status': {}
                            'f:type': {}
                          'k:{"type":"Progressing"}':
                            .: {}
                            'f:lastTransitionTime': {}
                            'f:lastUpdateTime': {}
                            'f:message': {}
                            'f:reason': {}
                            'f:status': {}
                            'f:type': {}
                        'f:observedGeneration': {}
                        'f:replicas': {}
                        'f:unavailableReplicas': {}
                        'f:updatedReplicas': {}
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    garden.io/version: v-baa629c081
                    service: backend
                template:
                  metadata:
                    creationTimestamp: null
                    labels:
                      garden.io/version: v-baa629c081
                      module: server
                      service: backend
                  spec:
                    containers:
                      - name: backend
                        image: 'server:v-baa629c081'
                        ports:
                          - name: http
                            containerPort: 8080
                            protocol: TCP
                        env:
                          - name: GARDEN_VERSION
                            value: v-baa629c081
                          - name: GARDEN_DEPENDENCIES
                            value: >-
                              [{"moduleName":"server","name":"server","type":"build","version":"v-baa629c081"}]
                          - name: POD_HOST_IP
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: status.hostIP
                          - name: POD_IP
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: status.podIP
                          - name: POD_NAME
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.name
                          - name: POD_NAMESPACE
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.namespace
                          - name: POD_NODE_NAME
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: spec.nodeName
                          - name: POD_SERVICE_ACCOUNT
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: spec.serviceAccountName
                          - name: POD_UID
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.uid
                        resources:
                          limits:
                            cpu: '1'
                            memory: 1Gi
                          requests:
                            cpu: 10m
                            memory: 64Mi
                        terminationMessagePath: /dev/termination-log
                        terminationMessagePolicy: File
                        imagePullPolicy: IfNotPresent
                        securityContext:
                          allowPrivilegeEscalation: false
                    restartPolicy: Always
                    terminationGracePeriodSeconds: 5
                    dnsPolicy: ClusterFirst
                    securityContext: {}
                    schedulerName: default-scheduler
                strategy:
                  type: RollingUpdate
                  rollingUpdate:
                    maxUnavailable: 1
                    maxSurge: 1
                revisionHistoryLimit: 3
                progressDeadlineSeconds: 600
              status:
                observedGeneration: 1
                replicas: 1
                updatedReplicas: 1
                unavailableReplicas: 1
                conditions:
                  - type: Available
                    status: 'True'
                    lastUpdateTime: '2020-05-26T20:33:36Z'
                    lastTransitionTime: '2020-05-26T20:33:36Z'
                    reason: MinimumReplicasAvailable
                    message: Deployment has minimum availability.
                  - type: Progressing
                    status: 'True'
                    lastUpdateTime: '2020-05-26T20:33:51Z'
                    lastTransitionTime: '2020-05-26T20:33:36Z'
                    reason: NewReplicaSetAvailable
                    message: >-
                      ReplicaSet "backend-v-baa629c081-7c76d4d5d6" has
                      successfully progressed.
        type: deployment
      completedAt: '2020-05-26T20:35:10.727Z'
      batchId: 5904eeb0-35b9-4a64-a928-b93af2bc8a9f
  restartRequired: false


[2020-05-26T20:35:10.780Z] 
See error.log for detailed error message

[2020-05-26T20:39:08.554Z] Getting status...

[2020-05-26T20:39:11.675Z] Getting status... → Done

[2020-05-26T20:39:11.842Z] Error: Missing include and/or exclude directives on modules with overlapping paths.
Setting includes/excludes is required when modules have the same path (i.e. are in the same garden.yml file),
or when one module is nested within another.

Module server overlaps with module(s) db (same path).

Module db overlaps with module(s) server (same path).
    at Garden.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/garden.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/garden.js:0)
Error Details:
overlappingModules: []


[2020-05-26T20:39:11.843Z] 
See error.log for detailed error message

[2020-05-26T20:58:56.075Z] Getting status...

[2020-05-26T20:58:59.168Z] Getting status... → Done

[2020-05-26T20:58:59.911Z] Error: Missing include and/or exclude directives on modules with overlapping paths.
Setting includes/excludes is required when modules have the same path (i.e. are in the same garden.yml file),
or when one module is nested within another.

Module server overlaps with module(s) db (same path).

Module db overlaps with module(s) server (same path).
    at Garden.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/garden.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/garden.js:0)
Error Details:
overlappingModules: []


[2020-05-26T20:58:59.913Z] 
See error.log for detailed error message

[2020-05-26T20:59:36.510Z] Getting status...

[2020-05-26T20:59:39.606Z] Getting status... → Done

[2020-05-26T20:59:40.782Z] Syncing module sources (5 files)...

[2020-05-26T20:59:40.831Z] Syncing module sources (5 files)... → Done (took 0 sec)

[2020-05-26T20:59:40.833Z] Getting build status for v-f782aed143...

[2020-05-26T20:59:41.424Z] Getting build status for v-57df7df941...

[2020-05-26T20:59:41.429Z] Getting build status for v-57df7df941... → Done (took 0 sec)

[2020-05-26T20:59:41.431Z] Deploying version v-57df7df941...

[2020-05-26T20:59:41.453Z] Building version v-f782aed143...

[2020-05-26T20:59:41.543Z] Building server:v-f782aed143...

[2020-05-26T20:59:41.870Z] Building server:v-f782aed143... → Done (took 1 sec)

[2020-05-26T20:59:43.658Z] Waiting for resources to be ready...

[2020-05-26T20:59:45.671Z] Resources ready

[2020-05-26T20:59:45.689Z] Deploying version v-57df7df941... → Done (took 4.3 sec)

[2020-05-26T20:59:45.691Z] Deploying version v-f782aed143...

[2020-05-26T20:59:47.444Z] Waiting for resources to be ready...

[2020-05-26T20:59:49.457Z] Resources ready

[2020-05-26T20:59:49.490Z] Deploying version v-f782aed143... → Done (took 3.8 sec)

[2020-05-26T20:59:49.506Z] Done! ✔️ 

[2020-05-26T21:03:09.569Z] Getting status...

[2020-05-26T21:03:12.742Z] Getting status... → Done

[2020-05-26T21:03:14.296Z] Error: Could not find module(s): backend
    at Object.pickKeys (/snapshot/project/garden-service/tmp/dist/build/src/util/util.js:0)
    at ConfigGraph.getModules (/snapshot/project/garden-service/tmp/dist/build/src/config-graph.js:0)
    at BuildCommand.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/build.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/commands/build.js:0)
Error Details:
missing: []
available: []


[2020-05-26T21:03:14.297Z] 
See error.log for detailed error message

[2020-05-26T21:03:30.869Z] Getting status...

[2020-05-26T21:03:33.907Z] Getting status... → Done

[2020-05-26T21:03:35.043Z] Syncing module sources (5 files)...

[2020-05-26T21:03:35.074Z] Syncing module sources (5 files)... → Done (took 0 sec)

[2020-05-26T21:03:35.077Z] Getting build status for v-f782aed143...

[2020-05-26T21:03:35.573Z] Getting build status for v-f782aed143... → Done (took 0.5 sec)

[2020-05-26T21:03:35.576Z] Done! ✔️ 

[2020-05-26T21:03:56.911Z] Getting status...

[2020-05-26T21:04:00.025Z] Getting status... → Done

[2020-05-26T21:04:01.185Z] Syncing module sources (5 files)...

[2020-05-26T21:04:01.201Z] Error: Module client neither specifies image nor provides Dockerfile
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
Error Details:
spec:
  services: []
  build:
    dependencies: []
    timeout: 1200
  buildArgs: {}
  tests: []
  tasks: []


[2020-05-26T21:04:01.264Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-26T21:04:01.267Z] Getting build status for v-f782aed143...

[2020-05-26T21:04:01.870Z] Getting build status for v-57df7df941...

[2020-05-26T21:04:01.872Z] Getting build status for v-57df7df941... → Done (took 0 sec)

[2020-05-26T21:04:01.875Z] Deploying version v-57df7df941...

[2020-05-26T21:04:01.877Z] Deploying version v-57df7df941... → Already deployed

[2020-05-26T21:04:01.881Z] Getting build status for v-4f04a66d1e...

[2020-05-26T21:04:01.884Z] Getting build status for v-4f04a66d1e... → Done (took 0 sec)

[2020-05-26T21:04:01.968Z] Getting build status for v-f782aed143... → Done (took 0.7 sec)

[2020-05-26T21:04:01.971Z] Deploying version v-f782aed143...

[2020-05-26T21:04:01.974Z] Deploying version v-f782aed143... → Already deployed

[2020-05-26T21:04:02.026Z] Error: 1 deploy task(s) failed!
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at Generator.next (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at new Promise (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at Object.handleProcessResults (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at DeployCommand.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
Error Details:
results:
  taskResults:
    stage-build.server:
      type: stage-build
      key: stage-build.server
      name: server
      description: staging build for server
      completedAt: '2020-05-26T21:04:01.265Z'
      batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
      output: {}
      dependencyResults: {}
    get-service-status.db:
      type: get-service-status
      key: get-service-status.db
      name: db
      description: getting status for service 'db' (from module 'db')
      completedAt: '2020-05-26T21:04:01.857Z'
      batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-57df7df941
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: db-v-57df7df941
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-57df7df941
              namespace: node-microservice
              labels:
                module: db
                service: db
                garden.io/version: v-57df7df941
            spec:
              selector:
                matchLabels:
                  service: db
                  garden.io/version: v-57df7df941
              template:
                metadata:
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults: {}
    stage-build.db:
      type: stage-build
      key: stage-build.db
      name: db
      description: staging build for db
      completedAt: '2020-05-26T21:04:01.868Z'
      batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
      output: {}
      dependencyResults: {}
    build.db:
      type: build
      key: build.db
      name: db
      description: building db
      completedAt: '2020-05-26T21:04:01.873Z'
      batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
      output:
        fresh: false
      dependencyResults:
        stage-build.db:
          type: stage-build
          key: stage-build.db
          name: db
          description: staging build for db
          completedAt: '2020-05-26T21:04:01.868Z'
          batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
          output: {}
          dependencyResults: {}
    deploy.db:
      type: deploy
      key: deploy.db
      name: db
      description: deploying service 'db' (from module 'db')
      completedAt: '2020-05-26T21:04:01.877Z'
      batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-57df7df941
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: db-v-57df7df941
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-57df7df941
              namespace: node-microservice
              labels:
                module: db
                service: db
                garden.io/version: v-57df7df941
            spec:
              selector:
                matchLabels:
                  service: db
                  garden.io/version: v-57df7df941
              template:
                metadata:
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.db:
          type: get-service-status
          key: get-service-status.db
          name: db
          description: getting status for service 'db' (from module 'db')
          completedAt: '2020-05-26T21:04:01.857Z'
          batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults: {}
        build.db:
          type: build
          key: build.db
          name: db
          description: building db
          completedAt: '2020-05-26T21:04:01.873Z'
          batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
          output:
            fresh: false
          dependencyResults:
            stage-build.db:
              type: stage-build
              key: stage-build.db
              name: db
              description: staging build for db
              completedAt: '2020-05-26T21:04:01.868Z'
              batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
              output: {}
              dependencyResults: {}
    get-service-status.backend:
      type: get-service-status
      key: get-service-status.backend
      name: backend
      description: getting status for service 'backend' (from module 'server')
      completedAt: '2020-05-26T21:04:01.922Z'
      batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-f782aed143
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: backend-v-f782aed143
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-f782aed143
              namespace: node-microservice
              labels:
                module: server
                service: backend
                garden.io/version: v-f782aed143
            spec:
              selector:
                matchLabels:
                  service: backend
                  garden.io/version: v-f782aed143
              template:
                metadata:
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-f782aed143
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.db:
          type: get-service-status
          key: get-service-status.db
          name: db
          description: getting status for service 'db' (from module 'db')
          completedAt: '2020-05-26T21:04:01.857Z'
          batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults: {}
    build.server:
      type: build
      key: build.server
      name: server
      description: building server
      completedAt: '2020-05-26T21:04:01.968Z'
      batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
      output:
        fresh: false
      dependencyResults:
        stage-build.server:
          type: stage-build
          key: stage-build.server
          name: server
          description: staging build for server
          completedAt: '2020-05-26T21:04:01.265Z'
          batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
          output: {}
          dependencyResults: {}
    deploy.backend:
      type: deploy
      key: deploy.backend
      name: backend
      description: deploying service 'backend' (from module 'server')
      completedAt: '2020-05-26T21:04:01.974Z'
      batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-f782aed143
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: backend-v-f782aed143
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-f782aed143
              namespace: node-microservice
              labels:
                module: server
                service: backend
                garden.io/version: v-f782aed143
            spec:
              selector:
                matchLabels:
                  service: backend
                  garden.io/version: v-f782aed143
              template:
                metadata:
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-f782aed143
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.backend:
          type: get-service-status
          key: get-service-status.backend
          name: backend
          description: getting status for service 'backend' (from module 'server')
          completedAt: '2020-05-26T21:04:01.922Z'
          batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-f782aed143
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: backend-v-f782aed143
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-f782aed143
                  namespace: node-microservice
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-f782aed143
                spec:
                  selector:
                    matchLabels:
                      service: backend
                      garden.io/version: v-f782aed143
                  template:
                    metadata:
                      labels:
                        module: server
                        service: backend
                        garden.io/version: v-f782aed143
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults:
            get-service-status.db:
              type: get-service-status
              key: get-service-status.db
              name: db
              description: getting status for service 'db' (from module 'db')
              completedAt: '2020-05-26T21:04:01.857Z'
              batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
              output:
                forwardablePorts: []
                ingresses: []
                state: ready
                version: v-57df7df941
                detail:
                  remoteResources: []
                  workload:
                    kind: Deployment
                    apiVersion: apps/v1
                    metadata:
                      name: db-v-57df7df941
                      annotations:
                        garden.io/configured.replicas: '1'
                        garden.io/generated: 'true'
                        garden.io/version: v-57df7df941
                      namespace: node-microservice
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      selector:
                        matchLabels:
                          service: db
                          garden.io/version: v-57df7df941
                      template:
                        metadata:
                          labels:
                            module: db
                            service: db
                            garden.io/version: v-57df7df941
                        spec:
                          containers: []
                          restartPolicy: Always
                          terminationGracePeriodSeconds: 5
                          dnsPolicy: ClusterFirst
                      replicas: 1
                      strategy:
                        type: RollingUpdate
                        rollingUpdate:
                          maxUnavailable: 1
                          maxSurge: 1
                      revisionHistoryLimit: 3
              dependencyResults: {}
        deploy.db:
          type: deploy
          key: deploy.db
          name: db
          description: deploying service 'db' (from module 'db')
          completedAt: '2020-05-26T21:04:01.877Z'
          batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults:
            get-service-status.db:
              type: get-service-status
              key: get-service-status.db
              name: db
              description: getting status for service 'db' (from module 'db')
              completedAt: '2020-05-26T21:04:01.857Z'
              batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
              output:
                forwardablePorts: []
                ingresses: []
                state: ready
                version: v-57df7df941
                detail:
                  remoteResources: []
                  workload:
                    kind: Deployment
                    apiVersion: apps/v1
                    metadata:
                      name: db-v-57df7df941
                      annotations:
                        garden.io/configured.replicas: '1'
                        garden.io/generated: 'true'
                        garden.io/version: v-57df7df941
                      namespace: node-microservice
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      selector:
                        matchLabels:
                          service: db
                          garden.io/version: v-57df7df941
                      template:
                        metadata:
                          labels:
                            module: db
                            service: db
                            garden.io/version: v-57df7df941
                        spec:
                          containers: []
                          restartPolicy: Always
                          terminationGracePeriodSeconds: 5
                          dnsPolicy: ClusterFirst
                      replicas: 1
                      strategy:
                        type: RollingUpdate
                        rollingUpdate:
                          maxUnavailable: 1
                          maxSurge: 1
                      revisionHistoryLimit: 3
              dependencyResults: {}
            build.db:
              type: build
              key: build.db
              name: db
              description: building db
              completedAt: '2020-05-26T21:04:01.873Z'
              batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
              output:
                fresh: false
              dependencyResults:
                stage-build.db:
                  type: stage-build
                  key: stage-build.db
                  name: db
                  description: staging build for db
                  completedAt: '2020-05-26T21:04:01.868Z'
                  batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
                  output: {}
                  dependencyResults: {}
        build.server:
          type: build
          key: build.server
          name: server
          description: building server
          completedAt: '2020-05-26T21:04:01.968Z'
          batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
          output:
            fresh: false
          dependencyResults:
            stage-build.server:
              type: stage-build
              key: stage-build.server
              name: server
              description: staging build for server
              completedAt: '2020-05-26T21:04:01.265Z'
              batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
              output: {}
              dependencyResults: {}
    get-service-status.frontend:
      type: get-service-status
      description: getting status for service 'frontend' (from module 'client')
      key: get-service-status.frontend
      name: frontend
      error:
        detail:
          spec:
            services:
              - name: frontend
                ports:
                  - name: http
                    containerPort: 8080
                    protocol: TCP
                    servicePort: 8080
                dependencies: []
                disabled: false
                annotations: {}
                daemon: false
                ingresses: []
                env: {}
                limits:
                  cpu: 1000
                  memory: 1024
                volumes: []
            build:
              dependencies: []
              timeout: 1200
            buildArgs: {}
            tests: []
            tasks: []
        type: configuration
      completedAt: '2020-05-26T21:04:01.196Z'
      batchId: dfdec4c9-583c-45be-a1ca-984f1a0032a5
    stage-build.client:
      type: stage-build
      key: stage-build.client
      name: client
      description: staging build for client
      completedAt: '2020-05-26T21:04:01.878Z'
      batchId: dfdec4c9-583c-45be-a1ca-984f1a0032a5
      output: {}
      dependencyResults: {}
    build.client:
      type: build
      key: build.client
      name: client
      description: building client
      completedAt: '2020-05-26T21:04:01.884Z'
      batchId: dfdec4c9-583c-45be-a1ca-984f1a0032a5
      output:
        fresh: false
      dependencyResults:
        stage-build.client:
          type: stage-build
          key: stage-build.client
          name: client
          description: staging build for client
          completedAt: '2020-05-26T21:04:01.878Z'
          batchId: dfdec4c9-583c-45be-a1ca-984f1a0032a5
          output: {}
          dependencyResults: {}
  restartRequired: false


[2020-05-26T21:04:02.035Z] 
See error.log for detailed error message

[2020-05-26T21:09:21.758Z] Getting status...

[2020-05-26T21:09:25.033Z] Getting status... → Done

[2020-05-26T21:09:26.228Z] Syncing module sources (5 files)...

[2020-05-26T21:09:26.231Z] Syncing module sources (15 files)...

[2020-05-26T21:09:26.298Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-26T21:09:26.300Z] Getting build status for v-56ab2b577f...

[2020-05-26T21:09:26.946Z] Getting build status for v-57df7df941...

[2020-05-26T21:09:26.948Z] Getting build status for v-57df7df941... → Done (took 0 sec)

[2020-05-26T21:09:26.953Z] Deploying version v-57df7df941...

[2020-05-26T21:09:26.956Z] Deploying version v-57df7df941... → Already deployed

[2020-05-26T21:09:26.959Z] Syncing module sources (15 files)... → Done (took 0.7 sec)

[2020-05-26T21:09:26.961Z] Getting build status for v-302a3fe1bf...

[2020-05-26T21:09:27.088Z] Building version v-56ab2b577f...

[2020-05-26T21:09:27.119Z] Building version v-302a3fe1bf...

[2020-05-26T21:09:27.163Z] Building server:v-56ab2b577f...

[2020-05-26T21:09:27.202Z] Building client:v-302a3fe1bf...

[2020-05-26T21:10:47.931Z] Building server:v-56ab2b577f... → Done (took 81.6 sec)

[2020-05-26T21:10:47.933Z] Deploying version v-56ab2b577f...

[2020-05-26T21:10:50.565Z] Waiting for resources to be ready...

[2020-05-26T21:10:52.585Z] Resources ready

[2020-05-26T21:10:52.611Z] Deploying version v-56ab2b577f... → Done (took 4.7 sec)

[2020-05-26T21:11:12.755Z] Getting status...

[2020-05-26T21:11:16.137Z] Getting status... → Done

[2020-05-26T21:11:17.660Z] Syncing module sources (5 files)...

[2020-05-26T21:11:17.663Z] Syncing module sources (16 files)...

[2020-05-26T21:11:17.730Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-26T21:11:17.732Z] Getting build status for v-56ab2b577f...

[2020-05-26T21:11:18.240Z] Getting build status for v-56ab2b577f... → Done (took 0.5 sec)

[2020-05-26T21:11:18.303Z] Getting build status for v-57df7df941...

[2020-05-26T21:11:18.308Z] Getting build status for v-57df7df941... → Done (took 0 sec)

[2020-05-26T21:11:18.311Z] Deploying version v-57df7df941...

[2020-05-26T21:11:18.312Z] Deploying version v-57df7df941... → Already deployed

[2020-05-26T21:11:18.315Z] Deploying version v-56ab2b577f...

[2020-05-26T21:11:18.318Z] Deploying version v-56ab2b577f... → Already deployed

[2020-05-26T21:11:18.321Z] Syncing module sources (16 files)... → Done (took 0.7 sec)

[2020-05-26T21:11:18.324Z] Getting build status for v-d2cb35f33f...

[2020-05-26T21:11:18.468Z] Building version v-d2cb35f33f...

[2020-05-26T21:11:18.548Z] Building client:v-d2cb35f33f...

[2020-05-26T21:12:00.241Z] Building client:v-d2cb35f33f... → Done (took 41.9 sec)

[2020-05-26T21:12:00.244Z] Deploying version v-d2cb35f33f...

[2020-05-26T21:12:01.805Z] Waiting for resources to be ready...

[2020-05-26T21:12:03.856Z] Deployment/frontend-v-d2cb35f33f: Started container frontend

[2020-05-26T21:12:06.440Z] Deploying version v-d2cb35f33f...

[2020-05-26T21:12:06.459Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 10s restarting failed container=frontend pod=frontend-v-d2cb35f33f-74748f9b6f-fth9q_node-microservice(376498ef-a685-4077-9cb9-f8a277906276)

━━━ Events ━━━
Deployment frontend-v-d2cb35f33f: ScalingReplicaSet - Scaled up replica set frontend-v-d2cb35f33f-74748f9b6f to 1
Pod frontend-v-d2cb35f33f-74748f9b6f-fth9q: Scheduled - Successfully assigned node-microservice/frontend-v-d2cb35f33f-74748f9b6f-fth9q to minikube
Pod frontend-v-d2cb35f33f-74748f9b6f-fth9q: Pulled - Container image "client:v-d2cb35f33f" already present on machine
Pod frontend-v-d2cb35f33f-74748f9b6f-fth9q: Created - Created container frontend
Pod frontend-v-d2cb35f33f-74748f9b6f-fth9q: Started - Started container frontend
Pod frontend-v-d2cb35f33f-74748f9b6f-fth9q: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-d2cb35f33f

****** frontend-v-d2cb35f33f-74748f9b6f-fth9q ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=frontend
    pod=frontend-v-d2cb35f33f-74748f9b6f-fth9q_node-microservice(376498ef-a685-4077-9cb9-f8a277906276)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-d2cb35f33f:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-d2cb35f33f-74748f9b6f to 1\e[39m\n\e[94mPod frontend-v-d2cb35f33f-74748f9b6f-fth9q:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-d2cb35f33f-74748f9b6f-fth9q to minikube\e[39m\n\e[94mPod frontend-v-d2cb35f33f-74748f9b6f-fth9q:\e[39m \e[37mPulled - Container image \"client:v-d2cb35f33f\" already present on machine\e[39m\n\e[94mPod frontend-v-d2cb35f33f-74748f9b6f-fth9q:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-d2cb35f33f-74748f9b6f-fth9q:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-d2cb35f33f-74748f9b6f-fth9q:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-d2cb35f33f\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-d2cb35f33f-74748f9b6f-fth9q ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-d2cb35f33f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-d2cb35f33f
      uid: bb761a6c-9171-405a-8907-fb6211c52a1f
      resourceVersion: '15049'
      generation: 1
      creationTimestamp: '2020-05-26T21:12:00Z'
      labels:
        garden.io/version: v-d2cb35f33f
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: bfe12bc45c2f37fa2851724794e67e048bbcffbeb9d50a49cf963c7a25dde619
        garden.io/version: v-d2cb35f33f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"bfe12bc45c2f37fa2851724794e67e048bbcffbeb9d50a49cf963c7a25dde619","garden.io/version":"v-d2cb35f33f"},"labels":{"garden.io/version":"v-d2cb35f33f","module":"client","service":"frontend"},"name":"frontend-v-d2cb35f33f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-d2cb35f33f","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-d2cb35f33f","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-d2cb35f33f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-d2cb35f33f\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-d2cb35f33f","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-d2cb35f33f
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-d2cb35f33f
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-26T21:12:06.525Z] Error: 1 deploy task(s) failed!
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at Generator.next (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at new Promise (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at Object.handleProcessResults (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at DeployCommand.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
Error Details:
results:
  taskResults:
    get-service-status.db:
      type: get-service-status
      key: get-service-status.db
      name: db
      description: getting status for service 'db' (from module 'db')
      completedAt: '2020-05-26T21:11:17.720Z'
      batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-57df7df941
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: db-v-57df7df941
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-57df7df941
              namespace: node-microservice
              labels:
                module: db
                service: db
                garden.io/version: v-57df7df941
            spec:
              selector:
                matchLabels:
                  service: db
                  garden.io/version: v-57df7df941
              template:
                metadata:
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults: {}
    stage-build.server:
      type: stage-build
      key: stage-build.server
      name: server
      description: staging build for server
      completedAt: '2020-05-26T21:11:17.730Z'
      batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
      output: {}
      dependencyResults: {}
    get-service-status.backend:
      type: get-service-status
      key: get-service-status.backend
      name: backend
      description: getting status for service 'backend' (from module 'server')
      completedAt: '2020-05-26T21:11:18.138Z'
      batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-56ab2b577f
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: backend-v-56ab2b577f
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-56ab2b577f
              namespace: node-microservice
              labels:
                module: server
                service: backend
                garden.io/version: v-56ab2b577f
            spec:
              selector:
                matchLabels:
                  service: backend
                  garden.io/version: v-56ab2b577f
              template:
                metadata:
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-56ab2b577f
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.db:
          type: get-service-status
          key: get-service-status.db
          name: db
          description: getting status for service 'db' (from module 'db')
          completedAt: '2020-05-26T21:11:17.720Z'
          batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults: {}
    build.server:
      type: build
      key: build.server
      name: server
      description: building server
      completedAt: '2020-05-26T21:11:18.240Z'
      batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
      output:
        fresh: false
      dependencyResults:
        stage-build.server:
          type: stage-build
          key: stage-build.server
          name: server
          description: staging build for server
          completedAt: '2020-05-26T21:11:17.730Z'
          batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
          output: {}
          dependencyResults: {}
    stage-build.db:
      type: stage-build
      key: stage-build.db
      name: db
      description: staging build for db
      completedAt: '2020-05-26T21:11:18.301Z'
      batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
      output: {}
      dependencyResults: {}
    build.db:
      type: build
      key: build.db
      name: db
      description: building db
      completedAt: '2020-05-26T21:11:18.308Z'
      batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
      output:
        fresh: false
      dependencyResults:
        stage-build.db:
          type: stage-build
          key: stage-build.db
          name: db
          description: staging build for db
          completedAt: '2020-05-26T21:11:18.301Z'
          batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
          output: {}
          dependencyResults: {}
    deploy.db:
      type: deploy
      key: deploy.db
      name: db
      description: deploying service 'db' (from module 'db')
      completedAt: '2020-05-26T21:11:18.312Z'
      batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-57df7df941
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: db-v-57df7df941
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-57df7df941
              namespace: node-microservice
              labels:
                module: db
                service: db
                garden.io/version: v-57df7df941
            spec:
              selector:
                matchLabels:
                  service: db
                  garden.io/version: v-57df7df941
              template:
                metadata:
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.db:
          type: get-service-status
          key: get-service-status.db
          name: db
          description: getting status for service 'db' (from module 'db')
          completedAt: '2020-05-26T21:11:17.720Z'
          batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults: {}
        build.db:
          type: build
          key: build.db
          name: db
          description: building db
          completedAt: '2020-05-26T21:11:18.308Z'
          batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
          output:
            fresh: false
          dependencyResults:
            stage-build.db:
              type: stage-build
              key: stage-build.db
              name: db
              description: staging build for db
              completedAt: '2020-05-26T21:11:18.301Z'
              batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
              output: {}
              dependencyResults: {}
    deploy.backend:
      type: deploy
      key: deploy.backend
      name: backend
      description: deploying service 'backend' (from module 'server')
      completedAt: '2020-05-26T21:11:18.318Z'
      batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-56ab2b577f
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: backend-v-56ab2b577f
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-56ab2b577f
              namespace: node-microservice
              labels:
                module: server
                service: backend
                garden.io/version: v-56ab2b577f
            spec:
              selector:
                matchLabels:
                  service: backend
                  garden.io/version: v-56ab2b577f
              template:
                metadata:
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-56ab2b577f
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.backend:
          type: get-service-status
          key: get-service-status.backend
          name: backend
          description: getting status for service 'backend' (from module 'server')
          completedAt: '2020-05-26T21:11:18.138Z'
          batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-56ab2b577f
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: backend-v-56ab2b577f
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-56ab2b577f
                  namespace: node-microservice
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-56ab2b577f
                spec:
                  selector:
                    matchLabels:
                      service: backend
                      garden.io/version: v-56ab2b577f
                  template:
                    metadata:
                      labels:
                        module: server
                        service: backend
                        garden.io/version: v-56ab2b577f
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults:
            get-service-status.db:
              type: get-service-status
              key: get-service-status.db
              name: db
              description: getting status for service 'db' (from module 'db')
              completedAt: '2020-05-26T21:11:17.720Z'
              batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
              output:
                forwardablePorts: []
                ingresses: []
                state: ready
                version: v-57df7df941
                detail:
                  remoteResources: []
                  workload:
                    kind: Deployment
                    apiVersion: apps/v1
                    metadata:
                      name: db-v-57df7df941
                      annotations:
                        garden.io/configured.replicas: '1'
                        garden.io/generated: 'true'
                        garden.io/version: v-57df7df941
                      namespace: node-microservice
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      selector:
                        matchLabels:
                          service: db
                          garden.io/version: v-57df7df941
                      template:
                        metadata:
                          labels:
                            module: db
                            service: db
                            garden.io/version: v-57df7df941
                        spec:
                          containers: []
                          restartPolicy: Always
                          terminationGracePeriodSeconds: 5
                          dnsPolicy: ClusterFirst
                      replicas: 1
                      strategy:
                        type: RollingUpdate
                        rollingUpdate:
                          maxUnavailable: 1
                          maxSurge: 1
                      revisionHistoryLimit: 3
              dependencyResults: {}
        deploy.db:
          type: deploy
          key: deploy.db
          name: db
          description: deploying service 'db' (from module 'db')
          completedAt: '2020-05-26T21:11:18.312Z'
          batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults:
            get-service-status.db:
              type: get-service-status
              key: get-service-status.db
              name: db
              description: getting status for service 'db' (from module 'db')
              completedAt: '2020-05-26T21:11:17.720Z'
              batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
              output:
                forwardablePorts: []
                ingresses: []
                state: ready
                version: v-57df7df941
                detail:
                  remoteResources: []
                  workload:
                    kind: Deployment
                    apiVersion: apps/v1
                    metadata:
                      name: db-v-57df7df941
                      annotations:
                        garden.io/configured.replicas: '1'
                        garden.io/generated: 'true'
                        garden.io/version: v-57df7df941
                      namespace: node-microservice
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      selector:
                        matchLabels:
                          service: db
                          garden.io/version: v-57df7df941
                      template:
                        metadata:
                          labels:
                            module: db
                            service: db
                            garden.io/version: v-57df7df941
                        spec:
                          containers: []
                          restartPolicy: Always
                          terminationGracePeriodSeconds: 5
                          dnsPolicy: ClusterFirst
                      replicas: 1
                      strategy:
                        type: RollingUpdate
                        rollingUpdate:
                          maxUnavailable: 1
                          maxSurge: 1
                      revisionHistoryLimit: 3
              dependencyResults: {}
            build.db:
              type: build
              key: build.db
              name: db
              description: building db
              completedAt: '2020-05-26T21:11:18.308Z'
              batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
              output:
                fresh: false
              dependencyResults:
                stage-build.db:
                  type: stage-build
                  key: stage-build.db
                  name: db
                  description: staging build for db
                  completedAt: '2020-05-26T21:11:18.301Z'
                  batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
                  output: {}
                  dependencyResults: {}
        build.server:
          type: build
          key: build.server
          name: server
          description: building server
          completedAt: '2020-05-26T21:11:18.240Z'
          batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
          output:
            fresh: false
          dependencyResults:
            stage-build.server:
              type: stage-build
              key: stage-build.server
              name: server
              description: staging build for server
              completedAt: '2020-05-26T21:11:17.730Z'
              batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
              output: {}
              dependencyResults: {}
    get-service-status.frontend:
      type: get-service-status
      key: get-service-status.frontend
      name: frontend
      description: getting status for service 'frontend' (from module 'client')
      completedAt: '2020-05-26T21:11:17.710Z'
      batchId: e1da3aa4-0363-49e1-8dea-bfd9996f3b84
      output:
        forwardablePorts: []
        ingresses: []
        state: missing
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: frontend-v-d2cb35f33f
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-d2cb35f33f
              namespace: node-microservice
              labels:
                module: client
                service: frontend
                garden.io/version: v-d2cb35f33f
            spec:
              selector:
                matchLabels:
                  service: frontend
                  garden.io/version: v-d2cb35f33f
              template:
                metadata:
                  labels:
                    module: client
                    service: frontend
                    garden.io/version: v-d2cb35f33f
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults: {}
    stage-build.client:
      type: stage-build
      key: stage-build.client
      name: client
      description: staging build for client
      completedAt: '2020-05-26T21:11:18.321Z'
      batchId: e1da3aa4-0363-49e1-8dea-bfd9996f3b84
      output: {}
      dependencyResults: {}
    build.client:
      type: build
      key: build.client
      name: client
      description: building client
      completedAt: '2020-05-26T21:12:00.241Z'
      batchId: e1da3aa4-0363-49e1-8dea-bfd9996f3b84
      output:
        fresh: true
        buildLog: "Sending build context to Docker daemon  607.7kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\n ---> Using cache\n ---> b3f9eb30a186\nStep 4/7 : RUN npm install\n ---> Running in 4c4499090345\n\n> core-js@2.6.11 postinstall /usr/src/client/node_modules/babel-runtime/node_modules/core-js\n> node -e \"try{require('./postinstall')}catch(e){}\"\n\n\e[96mThank you for using core-js (\e[94m https://github.com/zloirock/core-js \e[96m) for polyfilling JavaScript standard library!\e[0m\n\n\e[96mThe project needs your help! Please consider supporting of core-js on Open Collective or Patreon: \e[0m\n\e[96m>\e[94m https://opencollective.com/core-js \e[0m\n\e[96m>\e[94m https://www.patreon.com/zloirock \e[0m\n\n\e[96mAlso, the author of core-js (\e[94m https://github.com/zloirock \e[96m) is looking for a good job -)\e[0m\n\n\n> core-js@3.6.5 postinstall /usr/src/client/node_modules/core-js\n> node -e \"try{require('./postinstall')}catch(e){}\"\n\n\e[96mThank you for using core-js (\e[94m https://github.com/zloirock/core-js \e[96m) for polyfilling JavaScript standard library!\e[0m\n\n\e[96mThe project needs your help! Please consider supporting of core-js on Open Collective or Patreon: \e[0m\n\e[96m>\e[94m https://opencollective.com/core-js \e[0m\n\e[96m>\e[94m https://www.patreon.com/zloirock \e[0m\n\n\e[96mAlso, the author of core-js (\e[94m https://github.com/zloirock \e[96m) is looking for a good job -)\e[0m\n\n\n> core-js-pure@3.6.5 postinstall /usr/src/client/node_modules/core-js-pure\n> node -e \"try{require('./postinstall')}catch(e){}\"\n\n\e[96mThank you for using core-js (\e[94m https://github.com/zloirock/core-js \e[96m) for polyfilling JavaScript standard library!\e[0m\n\n\e[96mThe project needs your help! Please consider supporting of core-js on Open Collective or Patreon: \e[0m\n\e[96m>\e[94m https://opencollective.com/core-js \e[0m\n\e[96m>\e[94m https://www.patreon.com/zloirock \e[0m\n\n\e[96mAlso, the author of core-js (\e[94m https://github.com/zloirock \e[96m) is looking for a good job -)\e[0m\n\n\e[91mnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules/webpack-dev-server/node_modules/fsevents):\nnpm \e[0m\e[91mWARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"linux\",\"arch\":\"x64\"})\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules/watchpack-chokidar2/node_modules/fsevents):\nnpm\e[0m\e[91m WARN \e[0m\e[91mnotsup\e[0m\e[91m SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"linux\",\"arch\":\"x64\"})\n\e[0m\e[91mnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules/jest-haste-map/node_modules/fsevents):\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"linux\",\"arch\":\"x64\"})\n\e[0m\e[91mnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@2.1.2 (node_modules/fsevents):\nnpm WARN \e[0m\e[91mnotsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.1.2: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"linux\",\"arch\":\"x64\"})\n\e[0m\e[91m\n\e[0madded 1616 packages from 752 contributors and audited 1623 packages in 30.02s\n\n59 packages are looking for funding\n  run `npm fund` for details\n\nfound 1 low severity vulnerability\n  run `npm audit fix` to fix them, or `npm audit` for details\nRemoving intermediate container 4c4499090345\n ---> 4dcd77c86b94\nStep 5/7 : COPY . .\n ---> 15d1f9690b12\nStep 6/7 : EXPOSE 5000\n ---> Running in 51fee096d49c\nRemoving intermediate container 51fee096d49c\n ---> 295939214ae6\nStep 7/7 : CMD [\"npm\", \"start\"]\n ---> Running in bce074a9c897\nRemoving intermediate container bce074a9c897\n ---> a7871a718580\nSuccessfully built a7871a718580\nSuccessfully tagged client:v-d2cb35f33f\n"
        details:
          identifier: 'client:v-d2cb35f33f'
      dependencyResults:
        stage-build.client:
          type: stage-build
          key: stage-build.client
          name: client
          description: staging build for client
          completedAt: '2020-05-26T21:11:18.321Z'
          batchId: e1da3aa4-0363-49e1-8dea-bfd9996f3b84
          output: {}
          dependencyResults: {}
    deploy.frontend:
      type: deploy
      description: deploying service 'frontend' (from module 'client')
      key: deploy.frontend
      name: frontend
      error:
        detail:
          serviceName: frontend
          status:
            state: unhealthy
            lastMessage: >-
              CrashLoopBackOff - back-off 10s restarting failed
              container=frontend
              pod=frontend-v-d2cb35f33f-74748f9b6f-fth9q_node-microservice(376498ef-a685-4077-9cb9-f8a277906276)
            logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-d2cb35f33f:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-d2cb35f33f-74748f9b6f to 1\e[39m\n\e[94mPod frontend-v-d2cb35f33f-74748f9b6f-fth9q:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-d2cb35f33f-74748f9b6f-fth9q to minikube\e[39m\n\e[94mPod frontend-v-d2cb35f33f-74748f9b6f-fth9q:\e[39m \e[37mPulled - Container image \"client:v-d2cb35f33f\" already present on machine\e[39m\n\e[94mPod frontend-v-d2cb35f33f-74748f9b6f-fth9q:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-d2cb35f33f-74748f9b6f-fth9q:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-d2cb35f33f-74748f9b6f-fth9q:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-d2cb35f33f\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-d2cb35f33f-74748f9b6f-fth9q ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
            resource:
              kind: Deployment
              apiVersion: apps/v1
              metadata:
                name: frontend-v-d2cb35f33f
                namespace: node-microservice
                selfLink: >-
                  /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-d2cb35f33f
                uid: bb761a6c-9171-405a-8907-fb6211c52a1f
                resourceVersion: '15049'
                generation: 1
                creationTimestamp: '2020-05-26T21:12:00Z'
                labels:
                  garden.io/version: v-d2cb35f33f
                  module: client
                  service: frontend
                annotations:
                  deployment.kubernetes.io/revision: '1'
                  garden.io/configured.replicas: '1'
                  garden.io/generated: 'true'
                  garden.io/manifest-hash: >-
                    bfe12bc45c2f37fa2851724794e67e048bbcffbeb9d50a49cf963c7a25dde619
                  garden.io/version: v-d2cb35f33f
                  kubectl.kubernetes.io/last-applied-configuration: >
                    {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"bfe12bc45c2f37fa2851724794e67e048bbcffbeb9d50a49cf963c7a25dde619","garden.io/version":"v-d2cb35f33f"},"labels":{"garden.io/version":"v-d2cb35f33f","module":"client","service":"frontend"},"name":"frontend-v-d2cb35f33f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-d2cb35f33f","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-d2cb35f33f","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-d2cb35f33f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-d2cb35f33f\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-d2cb35f33f","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
                managedFields:
                  - manager: kubectl
                    operation: Update
                    apiVersion: apps/v1
                    time: '2020-05-26T21:12:00Z'
                    fieldsType: FieldsV1
                    fieldsV1:
                      'f:metadata':
                        'f:annotations':
                          .: {}
                          'f:garden.io/configured.replicas': {}
                          'f:garden.io/generated': {}
                          'f:garden.io/manifest-hash': {}
                          'f:garden.io/version': {}
                          'f:kubectl.kubernetes.io/last-applied-configuration': {}
                        'f:labels':
                          .: {}
                          'f:garden.io/version': {}
                          'f:module': {}
                          'f:service': {}
                      'f:spec':
                        'f:progressDeadlineSeconds': {}
                        'f:replicas': {}
                        'f:revisionHistoryLimit': {}
                        'f:selector':
                          'f:matchLabels':
                            .: {}
                            'f:garden.io/version': {}
                            'f:service': {}
                        'f:strategy':
                          'f:rollingUpdate':
                            .: {}
                            'f:maxSurge': {}
                            'f:maxUnavailable': {}
                          'f:type': {}
                        'f:template':
                          'f:metadata':
                            'f:labels':
                              .: {}
                              'f:garden.io/version': {}
                              'f:module': {}
                              'f:service': {}
                          'f:spec':
                            'f:containers':
                              'k:{"name":"frontend"}':
                                .: {}
                                'f:env':
                                  .: {}
                                  'k:{"name":"GARDEN_DEPENDENCIES"}':
                                    .: {}
                                    'f:name': {}
                                    'f:value': {}
                                  'k:{"name":"GARDEN_VERSION"}':
                                    .: {}
                                    'f:name': {}
                                    'f:value': {}
                                  'k:{"name":"POD_HOST_IP"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_IP"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NAME"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NAMESPACE"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NODE_NAME"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_SERVICE_ACCOUNT"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_UID"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                'f:image': {}
                                'f:imagePullPolicy': {}
                                'f:name': {}
                                'f:resources':
                                  .: {}
                                  'f:limits':
                                    .: {}
                                    'f:cpu': {}
                                    'f:memory': {}
                                  'f:requests':
                                    .: {}
                                    'f:cpu': {}
                                    'f:memory': {}
                                'f:securityContext':
                                  .: {}
                                  'f:allowPrivilegeEscalation': {}
                                'f:terminationMessagePath': {}
                                'f:terminationMessagePolicy': {}
                            'f:dnsPolicy': {}
                            'f:restartPolicy': {}
                            'f:schedulerName': {}
                            'f:securityContext': {}
                            'f:terminationGracePeriodSeconds': {}
                  - manager: kube-controller-manager
                    operation: Update
                    apiVersion: apps/v1
                    time: '2020-05-26T21:12:05Z'
                    fieldsType: FieldsV1
                    fieldsV1:
                      'f:metadata':
                        'f:annotations':
                          'f:deployment.kubernetes.io/revision': {}
                      'f:status':
                        'f:conditions':
                          .: {}
                          'k:{"type":"Available"}':
                            .: {}
                            'f:lastTransitionTime': {}
                            'f:lastUpdateTime': {}
                            'f:message': {}
                            'f:reason': {}
                            'f:status': {}
                            'f:type': {}
                          'k:{"type":"Progressing"}':
                            .: {}
                            'f:lastTransitionTime': {}
                            'f:lastUpdateTime': {}
                            'f:message': {}
                            'f:reason': {}
                            'f:status': {}
                            'f:type': {}
                        'f:observedGeneration': {}
                        'f:replicas': {}
                        'f:unavailableReplicas': {}
                        'f:updatedReplicas': {}
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    garden.io/version: v-d2cb35f33f
                    service: frontend
                template:
                  metadata:
                    creationTimestamp: null
                    labels:
                      garden.io/version: v-d2cb35f33f
                      module: client
                      service: frontend
                  spec:
                    containers:
                      - name: frontend
                        image: 'client:v-d2cb35f33f'
                        env:
                          - name: GARDEN_VERSION
                            value: v-d2cb35f33f
                          - name: GARDEN_DEPENDENCIES
                            value: >-
                              [{"moduleName":"client","name":"client","type":"build","version":"v-d2cb35f33f"}]
                          - name: POD_HOST_IP
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: status.hostIP
                          - name: POD_IP
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: status.podIP
                          - name: POD_NAME
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.name
                          - name: POD_NAMESPACE
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.namespace
                          - name: POD_NODE_NAME
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: spec.nodeName
                          - name: POD_SERVICE_ACCOUNT
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: spec.serviceAccountName
                          - name: POD_UID
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.uid
                        resources:
                          limits:
                            cpu: '1'
                            memory: 1Gi
                          requests:
                            cpu: 10m
                            memory: 64Mi
                        terminationMessagePath: /dev/termination-log
                        terminationMessagePolicy: File
                        imagePullPolicy: IfNotPresent
                        securityContext:
                          allowPrivilegeEscalation: false
                    restartPolicy: Always
                    terminationGracePeriodSeconds: 5
                    dnsPolicy: ClusterFirst
                    securityContext: {}
                    schedulerName: default-scheduler
                strategy:
                  type: RollingUpdate
                  rollingUpdate:
                    maxUnavailable: 1
                    maxSurge: 1
                revisionHistoryLimit: 3
                progressDeadlineSeconds: 600
              status:
                observedGeneration: 1
                replicas: 1
                updatedReplicas: 1
                unavailableReplicas: 1
                conditions:
                  - type: Available
                    status: 'True'
                    lastUpdateTime: '2020-05-26T21:12:00Z'
                    lastTransitionTime: '2020-05-26T21:12:00Z'
                    reason: MinimumReplicasAvailable
                    message: Deployment has minimum availability.
                  - type: Progressing
                    status: 'True'
                    lastUpdateTime: '2020-05-26T21:12:02Z'
                    lastTransitionTime: '2020-05-26T21:12:00Z'
                    reason: NewReplicaSetAvailable
                    message: >-
                      ReplicaSet "frontend-v-d2cb35f33f-74748f9b6f" has
                      successfully progressed.
        type: deployment
      completedAt: '2020-05-26T21:12:06.440Z'
      batchId: e1da3aa4-0363-49e1-8dea-bfd9996f3b84
  restartRequired: false


[2020-05-26T21:12:06.539Z] 
See error.log for detailed error message

[2020-05-26T21:16:06.282Z] Getting status...

[2020-05-26T21:16:09.466Z] Getting status... → Done

[2020-05-26T21:16:10.674Z] Syncing module sources (16 files)...

[2020-05-26T21:16:10.678Z] Syncing module sources (5 files)...

[2020-05-26T21:16:10.760Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-26T21:16:10.763Z] Getting build status for v-56ab2b577f...

[2020-05-26T21:16:11.429Z] Syncing module sources (16 files)... → Done (took 0.8 sec)

[2020-05-26T21:16:11.431Z] Getting build status for v-6d32869129...

[2020-05-26T21:16:11.437Z] Getting build status for v-57df7df941...

[2020-05-26T21:16:11.440Z] Getting build status for v-57df7df941... → Done (took 0 sec)

[2020-05-26T21:16:11.443Z] Deploying version v-57df7df941...

[2020-05-26T21:16:11.445Z] Deploying version v-57df7df941... → Already deployed

[2020-05-26T21:16:11.632Z] Getting build status for v-56ab2b577f... → Done (took 0.9 sec)

[2020-05-26T21:16:11.635Z] Deploying version v-56ab2b577f...

[2020-05-26T21:16:11.637Z] Deploying version v-56ab2b577f... → Already deployed

[2020-05-26T21:16:11.672Z] Building version v-6d32869129...

[2020-05-26T21:16:11.741Z] Building client:v-6d32869129...

[2020-05-26T21:16:12.343Z] Building client:v-6d32869129... → Done (took 0.9 sec)

[2020-05-26T21:16:12.346Z] Deploying version v-6d32869129...

[2020-05-26T21:16:14.081Z] Waiting for resources to be ready...

[2020-05-26T21:16:16.135Z] Deployment/frontend-v-6d32869129: Started container frontend

[2020-05-26T21:16:18.688Z] Deploying version v-6d32869129...

[2020-05-26T21:16:18.700Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 10s restarting failed container=frontend pod=frontend-v-6d32869129-68cfb8d47f-m9d8s_node-microservice(a6be7697-237e-4e52-816b-6286e8283232)

━━━ Events ━━━
Deployment frontend-v-6d32869129: ScalingReplicaSet - Scaled up replica set frontend-v-6d32869129-68cfb8d47f to 1
Pod frontend-v-6d32869129-68cfb8d47f-m9d8s: Scheduled - Successfully assigned node-microservice/frontend-v-6d32869129-68cfb8d47f-m9d8s to minikube
Pod frontend-v-6d32869129-68cfb8d47f-m9d8s: Pulled - Container image "client:v-6d32869129" already present on machine
Pod frontend-v-6d32869129-68cfb8d47f-m9d8s: Created - Created container frontend
Pod frontend-v-6d32869129-68cfb8d47f-m9d8s: Started - Started container frontend
Pod frontend-v-6d32869129-68cfb8d47f-m9d8s: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-6d32869129

****** frontend-v-6d32869129-68cfb8d47f-m9d8s ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.9/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=frontend
    pod=frontend-v-6d32869129-68cfb8d47f-m9d8s_node-microservice(a6be7697-237e-4e52-816b-6286e8283232)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-6d32869129:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-6d32869129-68cfb8d47f to 1\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-6d32869129-68cfb8d47f-m9d8s to minikube\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mPulled - Container image \"client:v-6d32869129\" already present on machine\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-6d32869129\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-6d32869129-68cfb8d47f-m9d8s ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.9/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-6d32869129
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-6d32869129
      uid: 2ecd57da-5187-45ba-832c-f30dcf066ea8
      resourceVersion: '15721'
      generation: 1
      creationTimestamp: '2020-05-26T21:16:12Z'
      labels:
        garden.io/version: v-6d32869129
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d575077779fdaad309dfd582ad23a6688d7749efe82194f239abd170b299fd85
        garden.io/version: v-6d32869129
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d575077779fdaad309dfd582ad23a6688d7749efe82194f239abd170b299fd85","garden.io/version":"v-6d32869129"},"labels":{"garden.io/version":"v-6d32869129","module":"client","service":"frontend"},"name":"frontend-v-6d32869129","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-6d32869129","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-6d32869129","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-6d32869129"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-6d32869129\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-6d32869129","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-6d32869129
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-6d32869129
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-26T21:16:18.768Z] Error: 1 deploy task(s) failed!
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at Generator.next (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at new Promise (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at Object.handleProcessResults (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at DeployCommand.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
Error Details:
results:
  taskResults:
    get-service-status.frontend:
      type: get-service-status
      key: get-service-status.frontend
      name: frontend
      description: getting status for service 'frontend' (from module 'client')
      completedAt: '2020-05-26T21:16:10.741Z'
      batchId: bd861d56-7f05-428b-9741-93117c6a5724
      output:
        forwardablePorts: []
        ingresses: []
        state: missing
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: frontend-v-6d32869129
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-6d32869129
              namespace: node-microservice
              labels:
                module: client
                service: frontend
                garden.io/version: v-6d32869129
            spec:
              selector:
                matchLabels:
                  service: frontend
                  garden.io/version: v-6d32869129
              template:
                metadata:
                  labels:
                    module: client
                    service: frontend
                    garden.io/version: v-6d32869129
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults: {}
    stage-build.client:
      type: stage-build
      key: stage-build.client
      name: client
      description: staging build for client
      completedAt: '2020-05-26T21:16:11.429Z'
      batchId: bd861d56-7f05-428b-9741-93117c6a5724
      output: {}
      dependencyResults: {}
    build.client:
      type: build
      key: build.client
      name: client
      description: building client
      completedAt: '2020-05-26T21:16:12.343Z'
      batchId: bd861d56-7f05-428b-9741-93117c6a5724
      output:
        fresh: true
        buildLog: "Sending build context to Docker daemon  607.7kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\n ---> Using cache\n ---> b3f9eb30a186\nStep 4/7 : RUN npm install\n ---> Using cache\n ---> 4dcd77c86b94\nStep 5/7 : COPY . .\n ---> 72cbf10f321a\nStep 6/7 : EXPOSE 5000\n ---> Running in dc919c368976\nRemoving intermediate container dc919c368976\n ---> 039587c8db81\nStep 7/7 : CMD [\"npm\", \"start\"]\n ---> Running in ce6a90167988\nRemoving intermediate container ce6a90167988\n ---> a3b8d562ae25\nSuccessfully built a3b8d562ae25\nSuccessfully tagged client:v-6d32869129\n"
        details:
          identifier: 'client:v-6d32869129'
      dependencyResults:
        stage-build.client:
          type: stage-build
          key: stage-build.client
          name: client
          description: staging build for client
          completedAt: '2020-05-26T21:16:11.429Z'
          batchId: bd861d56-7f05-428b-9741-93117c6a5724
          output: {}
          dependencyResults: {}
    deploy.frontend:
      type: deploy
      description: deploying service 'frontend' (from module 'client')
      key: deploy.frontend
      name: frontend
      error:
        detail:
          serviceName: frontend
          status:
            state: unhealthy
            lastMessage: >-
              CrashLoopBackOff - back-off 10s restarting failed
              container=frontend
              pod=frontend-v-6d32869129-68cfb8d47f-m9d8s_node-microservice(a6be7697-237e-4e52-816b-6286e8283232)
            logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-6d32869129:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-6d32869129-68cfb8d47f to 1\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-6d32869129-68cfb8d47f-m9d8s to minikube\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mPulled - Container image \"client:v-6d32869129\" already present on machine\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-6d32869129\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-6d32869129-68cfb8d47f-m9d8s ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.9/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
            resource:
              kind: Deployment
              apiVersion: apps/v1
              metadata:
                name: frontend-v-6d32869129
                namespace: node-microservice
                selfLink: >-
                  /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-6d32869129
                uid: 2ecd57da-5187-45ba-832c-f30dcf066ea8
                resourceVersion: '15721'
                generation: 1
                creationTimestamp: '2020-05-26T21:16:12Z'
                labels:
                  garden.io/version: v-6d32869129
                  module: client
                  service: frontend
                annotations:
                  deployment.kubernetes.io/revision: '1'
                  garden.io/configured.replicas: '1'
                  garden.io/generated: 'true'
                  garden.io/manifest-hash: >-
                    d575077779fdaad309dfd582ad23a6688d7749efe82194f239abd170b299fd85
                  garden.io/version: v-6d32869129
                  kubectl.kubernetes.io/last-applied-configuration: >
                    {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d575077779fdaad309dfd582ad23a6688d7749efe82194f239abd170b299fd85","garden.io/version":"v-6d32869129"},"labels":{"garden.io/version":"v-6d32869129","module":"client","service":"frontend"},"name":"frontend-v-6d32869129","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-6d32869129","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-6d32869129","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-6d32869129"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-6d32869129\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-6d32869129","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
                managedFields:
                  - manager: kubectl
                    operation: Update
                    apiVersion: apps/v1
                    time: '2020-05-26T21:16:12Z'
                    fieldsType: FieldsV1
                    fieldsV1:
                      'f:metadata':
                        'f:annotations':
                          .: {}
                          'f:garden.io/configured.replicas': {}
                          'f:garden.io/generated': {}
                          'f:garden.io/manifest-hash': {}
                          'f:garden.io/version': {}
                          'f:kubectl.kubernetes.io/last-applied-configuration': {}
                        'f:labels':
                          .: {}
                          'f:garden.io/version': {}
                          'f:module': {}
                          'f:service': {}
                      'f:spec':
                        'f:progressDeadlineSeconds': {}
                        'f:replicas': {}
                        'f:revisionHistoryLimit': {}
                        'f:selector':
                          'f:matchLabels':
                            .: {}
                            'f:garden.io/version': {}
                            'f:service': {}
                        'f:strategy':
                          'f:rollingUpdate':
                            .: {}
                            'f:maxSurge': {}
                            'f:maxUnavailable': {}
                          'f:type': {}
                        'f:template':
                          'f:metadata':
                            'f:labels':
                              .: {}
                              'f:garden.io/version': {}
                              'f:module': {}
                              'f:service': {}
                          'f:spec':
                            'f:containers':
                              'k:{"name":"frontend"}':
                                .: {}
                                'f:env':
                                  .: {}
                                  'k:{"name":"GARDEN_DEPENDENCIES"}':
                                    .: {}
                                    'f:name': {}
                                    'f:value': {}
                                  'k:{"name":"GARDEN_VERSION"}':
                                    .: {}
                                    'f:name': {}
                                    'f:value': {}
                                  'k:{"name":"POD_HOST_IP"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_IP"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NAME"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NAMESPACE"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NODE_NAME"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_SERVICE_ACCOUNT"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_UID"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                'f:image': {}
                                'f:imagePullPolicy': {}
                                'f:name': {}
                                'f:resources':
                                  .: {}
                                  'f:limits':
                                    .: {}
                                    'f:cpu': {}
                                    'f:memory': {}
                                  'f:requests':
                                    .: {}
                                    'f:cpu': {}
                                    'f:memory': {}
                                'f:securityContext':
                                  .: {}
                                  'f:allowPrivilegeEscalation': {}
                                'f:terminationMessagePath': {}
                                'f:terminationMessagePolicy': {}
                            'f:dnsPolicy': {}
                            'f:restartPolicy': {}
                            'f:schedulerName': {}
                            'f:securityContext': {}
                            'f:terminationGracePeriodSeconds': {}
                  - manager: kube-controller-manager
                    operation: Update
                    apiVersion: apps/v1
                    time: '2020-05-26T21:16:17Z'
                    fieldsType: FieldsV1
                    fieldsV1:
                      'f:metadata':
                        'f:annotations':
                          'f:deployment.kubernetes.io/revision': {}
                      'f:status':
                        'f:conditions':
                          .: {}
                          'k:{"type":"Available"}':
                            .: {}
                            'f:lastTransitionTime': {}
                            'f:lastUpdateTime': {}
                            'f:message': {}
                            'f:reason': {}
                            'f:status': {}
                            'f:type': {}
                          'k:{"type":"Progressing"}':
                            .: {}
                            'f:lastTransitionTime': {}
                            'f:lastUpdateTime': {}
                            'f:message': {}
                            'f:reason': {}
                            'f:status': {}
                            'f:type': {}
                        'f:observedGeneration': {}
                        'f:replicas': {}
                        'f:unavailableReplicas': {}
                        'f:updatedReplicas': {}
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    garden.io/version: v-6d32869129
                    service: frontend
                template:
                  metadata:
                    creationTimestamp: null
                    labels:
                      garden.io/version: v-6d32869129
                      module: client
                      service: frontend
                  spec:
                    containers:
                      - name: frontend
                        image: 'client:v-6d32869129'
                        env:
                          - name: GARDEN_VERSION
                            value: v-6d32869129
                          - name: GARDEN_DEPENDENCIES
                            value: >-
                              [{"moduleName":"client","name":"client","type":"build","version":"v-6d32869129"}]
                          - name: POD_HOST_IP
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: status.hostIP
                          - name: POD_IP
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: status.podIP
                          - name: POD_NAME
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.name
                          - name: POD_NAMESPACE
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.namespace
                          - name: POD_NODE_NAME
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: spec.nodeName
                          - name: POD_SERVICE_ACCOUNT
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: spec.serviceAccountName
                          - name: POD_UID
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.uid
                        resources:
                          limits:
                            cpu: '1'
                            memory: 1Gi
                          requests:
                            cpu: 10m
                            memory: 64Mi
                        terminationMessagePath: /dev/termination-log
                        terminationMessagePolicy: File
                        imagePullPolicy: IfNotPresent
                        securityContext:
                          allowPrivilegeEscalation: false
                    restartPolicy: Always
                    terminationGracePeriodSeconds: 5
                    dnsPolicy: ClusterFirst
                    securityContext: {}
                    schedulerName: default-scheduler
                strategy:
                  type: RollingUpdate
                  rollingUpdate:
                    maxUnavailable: 1
                    maxSurge: 1
                revisionHistoryLimit: 3
                progressDeadlineSeconds: 600
              status:
                observedGeneration: 1
                replicas: 1
                updatedReplicas: 1
                unavailableReplicas: 1
                conditions:
                  - type: Available
                    status: 'True'
                    lastUpdateTime: '2020-05-26T21:16:12Z'
                    lastTransitionTime: '2020-05-26T21:16:12Z'
                    reason: MinimumReplicasAvailable
                    message: Deployment has minimum availability.
                  - type: Progressing
                    status: 'True'
                    lastUpdateTime: '2020-05-26T21:16:14Z'
                    lastTransitionTime: '2020-05-26T21:16:12Z'
                    reason: NewReplicaSetAvailable
                    message: >-
                      ReplicaSet "frontend-v-6d32869129-68cfb8d47f" has
                      successfully progressed.
        type: deployment
      completedAt: '2020-05-26T21:16:18.688Z'
      batchId: bd861d56-7f05-428b-9741-93117c6a5724
    get-service-status.db:
      type: get-service-status
      key: get-service-status.db
      name: db
      description: getting status for service 'db' (from module 'db')
      completedAt: '2020-05-26T21:16:10.750Z'
      batchId: 15f7485f-2290-4fe7-9424-107b40883a45
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-57df7df941
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: db-v-57df7df941
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-57df7df941
              namespace: node-microservice
              labels:
                module: db
                service: db
                garden.io/version: v-57df7df941
            spec:
              selector:
                matchLabels:
                  service: db
                  garden.io/version: v-57df7df941
              template:
                metadata:
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults: {}
    stage-build.server:
      type: stage-build
      key: stage-build.server
      name: server
      description: staging build for server
      completedAt: '2020-05-26T21:16:10.761Z'
      batchId: 15f7485f-2290-4fe7-9424-107b40883a45
      output: {}
      dependencyResults: {}
    stage-build.db:
      type: stage-build
      key: stage-build.db
      name: db
      description: staging build for db
      completedAt: '2020-05-26T21:16:11.432Z'
      batchId: 15f7485f-2290-4fe7-9424-107b40883a45
      output: {}
      dependencyResults: {}
    build.db:
      type: build
      key: build.db
      name: db
      description: building db
      completedAt: '2020-05-26T21:16:11.440Z'
      batchId: 15f7485f-2290-4fe7-9424-107b40883a45
      output:
        fresh: false
      dependencyResults:
        stage-build.db:
          type: stage-build
          key: stage-build.db
          name: db
          description: staging build for db
          completedAt: '2020-05-26T21:16:11.432Z'
          batchId: 15f7485f-2290-4fe7-9424-107b40883a45
          output: {}
          dependencyResults: {}
    deploy.db:
      type: deploy
      key: deploy.db
      name: db
      description: deploying service 'db' (from module 'db')
      completedAt: '2020-05-26T21:16:11.445Z'
      batchId: 15f7485f-2290-4fe7-9424-107b40883a45
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-57df7df941
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: db-v-57df7df941
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-57df7df941
              namespace: node-microservice
              labels:
                module: db
                service: db
                garden.io/version: v-57df7df941
            spec:
              selector:
                matchLabels:
                  service: db
                  garden.io/version: v-57df7df941
              template:
                metadata:
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.db:
          type: get-service-status
          key: get-service-status.db
          name: db
          description: getting status for service 'db' (from module 'db')
          completedAt: '2020-05-26T21:16:10.750Z'
          batchId: 15f7485f-2290-4fe7-9424-107b40883a45
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults: {}
        build.db:
          type: build
          key: build.db
          name: db
          description: building db
          completedAt: '2020-05-26T21:16:11.440Z'
          batchId: 15f7485f-2290-4fe7-9424-107b40883a45
          output:
            fresh: false
          dependencyResults:
            stage-build.db:
              type: stage-build
              key: stage-build.db
              name: db
              description: staging build for db
              completedAt: '2020-05-26T21:16:11.432Z'
              batchId: 15f7485f-2290-4fe7-9424-107b40883a45
              output: {}
              dependencyResults: {}
    get-service-status.backend:
      type: get-service-status
      key: get-service-status.backend
      name: backend
      description: getting status for service 'backend' (from module 'server')
      completedAt: '2020-05-26T21:16:11.563Z'
      batchId: 15f7485f-2290-4fe7-9424-107b40883a45
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-56ab2b577f
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: backend-v-56ab2b577f
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-56ab2b577f
              namespace: node-microservice
              labels:
                module: server
                service: backend
                garden.io/version: v-56ab2b577f
            spec:
              selector:
                matchLabels:
                  service: backend
                  garden.io/version: v-56ab2b577f
              template:
                metadata:
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-56ab2b577f
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.db:
          type: get-service-status
          key: get-service-status.db
          name: db
          description: getting status for service 'db' (from module 'db')
          completedAt: '2020-05-26T21:16:10.750Z'
          batchId: 15f7485f-2290-4fe7-9424-107b40883a45
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults: {}
    build.server:
      type: build
      key: build.server
      name: server
      description: building server
      completedAt: '2020-05-26T21:16:11.632Z'
      batchId: 15f7485f-2290-4fe7-9424-107b40883a45
      output:
        fresh: false
      dependencyResults:
        stage-build.server:
          type: stage-build
          key: stage-build.server
          name: server
          description: staging build for server
          completedAt: '2020-05-26T21:16:10.761Z'
          batchId: 15f7485f-2290-4fe7-9424-107b40883a45
          output: {}
          dependencyResults: {}
    deploy.backend:
      type: deploy
      key: deploy.backend
      name: backend
      description: deploying service 'backend' (from module 'server')
      completedAt: '2020-05-26T21:16:11.637Z'
      batchId: 15f7485f-2290-4fe7-9424-107b40883a45
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-56ab2b577f
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: backend-v-56ab2b577f
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-56ab2b577f
              namespace: node-microservice
              labels:
                module: server
                service: backend
                garden.io/version: v-56ab2b577f
            spec:
              selector:
                matchLabels:
                  service: backend
                  garden.io/version: v-56ab2b577f
              template:
                metadata:
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-56ab2b577f
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.backend:
          type: get-service-status
          key: get-service-status.backend
          name: backend
          description: getting status for service 'backend' (from module 'server')
          completedAt: '2020-05-26T21:16:11.563Z'
          batchId: 15f7485f-2290-4fe7-9424-107b40883a45
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-56ab2b577f
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: backend-v-56ab2b577f
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-56ab2b577f
                  namespace: node-microservice
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-56ab2b577f
                spec:
                  selector:
                    matchLabels:
                      service: backend
                      garden.io/version: v-56ab2b577f
                  template:
                    metadata:
                      labels:
                        module: server
                        service: backend
                        garden.io/version: v-56ab2b577f
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults:
            get-service-status.db:
              type: get-service-status
              key: get-service-status.db
              name: db
              description: getting status for service 'db' (from module 'db')
              completedAt: '2020-05-26T21:16:10.750Z'
              batchId: 15f7485f-2290-4fe7-9424-107b40883a45
              output:
                forwardablePorts: []
                ingresses: []
                state: ready
                version: v-57df7df941
                detail:
                  remoteResources: []
                  workload:
                    kind: Deployment
                    apiVersion: apps/v1
                    metadata:
                      name: db-v-57df7df941
                      annotations:
                        garden.io/configured.replicas: '1'
                        garden.io/generated: 'true'
                        garden.io/version: v-57df7df941
                      namespace: node-microservice
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      selector:
                        matchLabels:
                          service: db
                          garden.io/version: v-57df7df941
                      template:
                        metadata:
                          labels:
                            module: db
                            service: db
                            garden.io/version: v-57df7df941
                        spec:
                          containers: []
                          restartPolicy: Always
                          terminationGracePeriodSeconds: 5
                          dnsPolicy: ClusterFirst
                      replicas: 1
                      strategy:
                        type: RollingUpdate
                        rollingUpdate:
                          maxUnavailable: 1
                          maxSurge: 1
                      revisionHistoryLimit: 3
              dependencyResults: {}
        deploy.db:
          type: deploy
          key: deploy.db
          name: db
          description: deploying service 'db' (from module 'db')
          completedAt: '2020-05-26T21:16:11.445Z'
          batchId: 15f7485f-2290-4fe7-9424-107b40883a45
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults:
            get-service-status.db:
              type: get-service-status
              key: get-service-status.db
              name: db
              description: getting status for service 'db' (from module 'db')
              completedAt: '2020-05-26T21:16:10.750Z'
              batchId: 15f7485f-2290-4fe7-9424-107b40883a45
              output:
                forwardablePorts: []
                ingresses: []
                state: ready
                version: v-57df7df941
                detail:
                  remoteResources: []
                  workload:
                    kind: Deployment
                    apiVersion: apps/v1
                    metadata:
                      name: db-v-57df7df941
                      annotations:
                        garden.io/configured.replicas: '1'
                        garden.io/generated: 'true'
                        garden.io/version: v-57df7df941
                      namespace: node-microservice
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      selector:
                        matchLabels:
                          service: db
                          garden.io/version: v-57df7df941
                      template:
                        metadata:
                          labels:
                            module: db
                            service: db
                            garden.io/version: v-57df7df941
                        spec:
                          containers: []
                          restartPolicy: Always
                          terminationGracePeriodSeconds: 5
                          dnsPolicy: ClusterFirst
                      replicas: 1
                      strategy:
                        type: RollingUpdate
                        rollingUpdate:
                          maxUnavailable: 1
                          maxSurge: 1
                      revisionHistoryLimit: 3
              dependencyResults: {}
            build.db:
              type: build
              key: build.db
              name: db
              description: building db
              completedAt: '2020-05-26T21:16:11.440Z'
              batchId: 15f7485f-2290-4fe7-9424-107b40883a45
              output:
                fresh: false
              dependencyResults:
                stage-build.db:
                  type: stage-build
                  key: stage-build.db
                  name: db
                  description: staging build for db
                  completedAt: '2020-05-26T21:16:11.432Z'
                  batchId: 15f7485f-2290-4fe7-9424-107b40883a45
                  output: {}
                  dependencyResults: {}
        build.server:
          type: build
          key: build.server
          name: server
          description: building server
          completedAt: '2020-05-26T21:16:11.632Z'
          batchId: 15f7485f-2290-4fe7-9424-107b40883a45
          output:
            fresh: false
          dependencyResults:
            stage-build.server:
              type: stage-build
              key: stage-build.server
              name: server
              description: staging build for server
              completedAt: '2020-05-26T21:16:10.761Z'
              batchId: 15f7485f-2290-4fe7-9424-107b40883a45
              output: {}
              dependencyResults: {}
  restartRequired: false


[2020-05-26T21:16:18.779Z] 
See error.log for detailed error message

[2020-05-26T21:20:57.104Z] Getting status...

[2020-05-26T21:21:00.269Z] Getting status... → Done

[2020-05-26T21:21:01.514Z] Syncing module sources (16 files)...

[2020-05-26T21:21:01.517Z] Syncing module sources (5 files)...

[2020-05-26T21:21:01.596Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-26T21:21:01.599Z] Getting build status for v-56ab2b577f...

[2020-05-26T21:21:02.282Z] Syncing module sources (16 files)... → Done (took 0.8 sec)

[2020-05-26T21:21:02.284Z] Getting build status for v-6d32869129...

[2020-05-26T21:21:02.289Z] Getting build status for v-57df7df941...

[2020-05-26T21:21:02.292Z] Getting build status for v-57df7df941... → Done (took 0 sec)

[2020-05-26T21:21:02.295Z] Deploying version v-57df7df941...

[2020-05-26T21:21:02.297Z] Deploying version v-57df7df941... → Already deployed

[2020-05-26T21:21:02.436Z] Getting build status for v-56ab2b577f... → Done (took 0.8 sec)

[2020-05-26T21:21:02.439Z] Deploying version v-56ab2b577f...

[2020-05-26T21:21:02.440Z] Deploying version v-56ab2b577f... → Already deployed

[2020-05-26T21:21:02.478Z] Getting build status for v-6d32869129... → Done (took 0.2 sec)

[2020-05-26T21:21:02.480Z] Deploying version v-6d32869129...

[2020-05-26T21:21:04.683Z] Waiting for resources to be ready...

[2020-05-26T21:21:06.744Z] Deploying version v-6d32869129...

[2020-05-26T21:21:06.759Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 2m40s restarting failed container=frontend pod=frontend-v-6d32869129-68cfb8d47f-m9d8s_node-microservice(a6be7697-237e-4e52-816b-6286e8283232)

━━━ Events ━━━
Deployment frontend-v-6d32869129: ScalingReplicaSet - Scaled up replica set frontend-v-6d32869129-68cfb8d47f to 1
Pod frontend-v-6d32869129-68cfb8d47f-m9d8s: Scheduled - Successfully assigned node-microservice/frontend-v-6d32869129-68cfb8d47f-m9d8s to minikube
Pod frontend-v-6d32869129-68cfb8d47f-m9d8s: Pulled - Container image "client:v-6d32869129" already present on machine
Pod frontend-v-6d32869129-68cfb8d47f-m9d8s: Created - Created container frontend
Pod frontend-v-6d32869129-68cfb8d47f-m9d8s: Started - Started container frontend
Pod frontend-v-6d32869129-68cfb8d47f-m9d8s: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-6d32869129

****** frontend-v-6d32869129-68cfb8d47f-m9d8s ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.9/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 2m40s restarting failed container=frontend
    pod=frontend-v-6d32869129-68cfb8d47f-m9d8s_node-microservice(a6be7697-237e-4e52-816b-6286e8283232)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-6d32869129:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-6d32869129-68cfb8d47f to 1\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-6d32869129-68cfb8d47f-m9d8s to minikube\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mPulled - Container image \"client:v-6d32869129\" already present on machine\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-6d32869129\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-6d32869129-68cfb8d47f-m9d8s ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.9/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-6d32869129
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-6d32869129
      uid: 2ecd57da-5187-45ba-832c-f30dcf066ea8
      resourceVersion: '16196'
      generation: 1
      creationTimestamp: '2020-05-26T21:16:12Z'
      labels:
        garden.io/version: v-6d32869129
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d575077779fdaad309dfd582ad23a6688d7749efe82194f239abd170b299fd85
        garden.io/version: v-6d32869129
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d575077779fdaad309dfd582ad23a6688d7749efe82194f239abd170b299fd85","garden.io/version":"v-6d32869129"},"labels":{"garden.io/version":"v-6d32869129","module":"client","service":"frontend"},"name":"frontend-v-6d32869129","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-6d32869129","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-6d32869129","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-6d32869129"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-6d32869129\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-6d32869129","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-6d32869129
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-6d32869129
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-26T21:21:06.823Z] Error: 1 deploy task(s) failed!
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at Generator.next (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at new Promise (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at Object.handleProcessResults (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at DeployCommand.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
Error Details:
results:
  taskResults:
    stage-build.client:
      type: stage-build
      key: stage-build.client
      name: client
      description: staging build for client
      completedAt: '2020-05-26T21:21:02.282Z'
      batchId: dbc29a27-1ea2-4b0d-8c61-ec235ddd898b
      output: {}
      dependencyResults: {}
    get-service-status.frontend:
      type: get-service-status
      key: get-service-status.frontend
      name: frontend
      description: getting status for service 'frontend' (from module 'client')
      completedAt: '2020-05-26T21:21:02.423Z'
      batchId: dbc29a27-1ea2-4b0d-8c61-ec235ddd898b
      output:
        forwardablePorts: []
        ingresses: []
        state: unhealthy
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: frontend-v-6d32869129
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-6d32869129
              namespace: node-microservice
              labels:
                module: client
                service: frontend
                garden.io/version: v-6d32869129
            spec:
              selector:
                matchLabels:
                  service: frontend
                  garden.io/version: v-6d32869129
              template:
                metadata:
                  labels:
                    module: client
                    service: frontend
                    garden.io/version: v-6d32869129
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults: {}
    build.client:
      type: build
      key: build.client
      name: client
      description: building client
      completedAt: '2020-05-26T21:21:02.478Z'
      batchId: dbc29a27-1ea2-4b0d-8c61-ec235ddd898b
      output:
        fresh: false
      dependencyResults:
        stage-build.client:
          type: stage-build
          key: stage-build.client
          name: client
          description: staging build for client
          completedAt: '2020-05-26T21:21:02.282Z'
          batchId: dbc29a27-1ea2-4b0d-8c61-ec235ddd898b
          output: {}
          dependencyResults: {}
    deploy.frontend:
      type: deploy
      description: deploying service 'frontend' (from module 'client')
      key: deploy.frontend
      name: frontend
      error:
        detail:
          serviceName: frontend
          status:
            state: unhealthy
            lastMessage: >-
              CrashLoopBackOff - back-off 2m40s restarting failed
              container=frontend
              pod=frontend-v-6d32869129-68cfb8d47f-m9d8s_node-microservice(a6be7697-237e-4e52-816b-6286e8283232)
            logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-6d32869129:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-6d32869129-68cfb8d47f to 1\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-6d32869129-68cfb8d47f-m9d8s to minikube\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mPulled - Container image \"client:v-6d32869129\" already present on machine\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-6d32869129\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-6d32869129-68cfb8d47f-m9d8s ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.9/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
            resource:
              kind: Deployment
              apiVersion: apps/v1
              metadata:
                name: frontend-v-6d32869129
                namespace: node-microservice
                selfLink: >-
                  /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-6d32869129
                uid: 2ecd57da-5187-45ba-832c-f30dcf066ea8
                resourceVersion: '16196'
                generation: 1
                creationTimestamp: '2020-05-26T21:16:12Z'
                labels:
                  garden.io/version: v-6d32869129
                  module: client
                  service: frontend
                annotations:
                  deployment.kubernetes.io/revision: '1'
                  garden.io/configured.replicas: '1'
                  garden.io/generated: 'true'
                  garden.io/manifest-hash: >-
                    d575077779fdaad309dfd582ad23a6688d7749efe82194f239abd170b299fd85
                  garden.io/version: v-6d32869129
                  kubectl.kubernetes.io/last-applied-configuration: >
                    {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d575077779fdaad309dfd582ad23a6688d7749efe82194f239abd170b299fd85","garden.io/version":"v-6d32869129"},"labels":{"garden.io/version":"v-6d32869129","module":"client","service":"frontend"},"name":"frontend-v-6d32869129","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-6d32869129","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-6d32869129","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-6d32869129"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-6d32869129\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-6d32869129","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
                managedFields:
                  - manager: kubectl
                    operation: Update
                    apiVersion: apps/v1
                    time: '2020-05-26T21:16:12Z'
                    fieldsType: FieldsV1
                    fieldsV1:
                      'f:metadata':
                        'f:annotations':
                          .: {}
                          'f:garden.io/configured.replicas': {}
                          'f:garden.io/generated': {}
                          'f:garden.io/manifest-hash': {}
                          'f:garden.io/version': {}
                          'f:kubectl.kubernetes.io/last-applied-configuration': {}
                        'f:labels':
                          .: {}
                          'f:garden.io/version': {}
                          'f:module': {}
                          'f:service': {}
                      'f:spec':
                        'f:progressDeadlineSeconds': {}
                        'f:replicas': {}
                        'f:revisionHistoryLimit': {}
                        'f:selector':
                          'f:matchLabels':
                            .: {}
                            'f:garden.io/version': {}
                            'f:service': {}
                        'f:strategy':
                          'f:rollingUpdate':
                            .: {}
                            'f:maxSurge': {}
                            'f:maxUnavailable': {}
                          'f:type': {}
                        'f:template':
                          'f:metadata':
                            'f:labels':
                              .: {}
                              'f:garden.io/version': {}
                              'f:module': {}
                              'f:service': {}
                          'f:spec':
                            'f:containers':
                              'k:{"name":"frontend"}':
                                .: {}
                                'f:env':
                                  .: {}
                                  'k:{"name":"GARDEN_DEPENDENCIES"}':
                                    .: {}
                                    'f:name': {}
                                    'f:value': {}
                                  'k:{"name":"GARDEN_VERSION"}':
                                    .: {}
                                    'f:name': {}
                                    'f:value': {}
                                  'k:{"name":"POD_HOST_IP"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_IP"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NAME"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NAMESPACE"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NODE_NAME"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_SERVICE_ACCOUNT"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_UID"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                'f:image': {}
                                'f:imagePullPolicy': {}
                                'f:name': {}
                                'f:resources':
                                  .: {}
                                  'f:limits':
                                    .: {}
                                    'f:cpu': {}
                                    'f:memory': {}
                                  'f:requests':
                                    .: {}
                                    'f:cpu': {}
                                    'f:memory': {}
                                'f:securityContext':
                                  .: {}
                                  'f:allowPrivilegeEscalation': {}
                                'f:terminationMessagePath': {}
                                'f:terminationMessagePolicy': {}
                            'f:dnsPolicy': {}
                            'f:restartPolicy': {}
                            'f:schedulerName': {}
                            'f:securityContext': {}
                            'f:terminationGracePeriodSeconds': {}
                  - manager: kube-controller-manager
                    operation: Update
                    apiVersion: apps/v1
                    time: '2020-05-26T21:19:17Z'
                    fieldsType: FieldsV1
                    fieldsV1:
                      'f:metadata':
                        'f:annotations':
                          'f:deployment.kubernetes.io/revision': {}
                      'f:status':
                        'f:conditions':
                          .: {}
                          'k:{"type":"Available"}':
                            .: {}
                            'f:lastTransitionTime': {}
                            'f:lastUpdateTime': {}
                            'f:message': {}
                            'f:reason': {}
                            'f:status': {}
                            'f:type': {}
                          'k:{"type":"Progressing"}':
                            .: {}
                            'f:lastTransitionTime': {}
                            'f:lastUpdateTime': {}
                            'f:message': {}
                            'f:reason': {}
                            'f:status': {}
                            'f:type': {}
                        'f:observedGeneration': {}
                        'f:replicas': {}
                        'f:unavailableReplicas': {}
                        'f:updatedReplicas': {}
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    garden.io/version: v-6d32869129
                    service: frontend
                template:
                  metadata:
                    creationTimestamp: null
                    labels:
                      garden.io/version: v-6d32869129
                      module: client
                      service: frontend
                  spec:
                    containers:
                      - name: frontend
                        image: 'client:v-6d32869129'
                        env:
                          - name: GARDEN_VERSION
                            value: v-6d32869129
                          - name: GARDEN_DEPENDENCIES
                            value: >-
                              [{"moduleName":"client","name":"client","type":"build","version":"v-6d32869129"}]
                          - name: POD_HOST_IP
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: status.hostIP
                          - name: POD_IP
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: status.podIP
                          - name: POD_NAME
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.name
                          - name: POD_NAMESPACE
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.namespace
                          - name: POD_NODE_NAME
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: spec.nodeName
                          - name: POD_SERVICE_ACCOUNT
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: spec.serviceAccountName
                          - name: POD_UID
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.uid
                        resources:
                          limits:
                            cpu: '1'
                            memory: 1Gi
                          requests:
                            cpu: 10m
                            memory: 64Mi
                        terminationMessagePath: /dev/termination-log
                        terminationMessagePolicy: File
                        imagePullPolicy: IfNotPresent
                        securityContext:
                          allowPrivilegeEscalation: false
                    restartPolicy: Always
                    terminationGracePeriodSeconds: 5
                    dnsPolicy: ClusterFirst
                    securityContext: {}
                    schedulerName: default-scheduler
                strategy:
                  type: RollingUpdate
                  rollingUpdate:
                    maxUnavailable: 1
                    maxSurge: 1
                revisionHistoryLimit: 3
                progressDeadlineSeconds: 600
              status:
                observedGeneration: 1
                replicas: 1
                updatedReplicas: 1
                unavailableReplicas: 1
                conditions:
                  - type: Available
                    status: 'True'
                    lastUpdateTime: '2020-05-26T21:16:12Z'
                    lastTransitionTime: '2020-05-26T21:16:12Z'
                    reason: MinimumReplicasAvailable
                    message: Deployment has minimum availability.
                  - type: Progressing
                    status: 'True'
                    lastUpdateTime: '2020-05-26T21:16:14Z'
                    lastTransitionTime: '2020-05-26T21:16:12Z'
                    reason: NewReplicaSetAvailable
                    message: >-
                      ReplicaSet "frontend-v-6d32869129-68cfb8d47f" has
                      successfully progressed.
        type: deployment
      completedAt: '2020-05-26T21:21:06.744Z'
      batchId: dbc29a27-1ea2-4b0d-8c61-ec235ddd898b
    get-service-status.db:
      type: get-service-status
      key: get-service-status.db
      name: db
      description: getting status for service 'db' (from module 'db')
      completedAt: '2020-05-26T21:21:01.585Z'
      batchId: f40ce512-248e-4458-9739-2751f15895bd
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-57df7df941
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: db-v-57df7df941
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-57df7df941
              namespace: node-microservice
              labels:
                module: db
                service: db
                garden.io/version: v-57df7df941
            spec:
              selector:
                matchLabels:
                  service: db
                  garden.io/version: v-57df7df941
              template:
                metadata:
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults: {}
    stage-build.server:
      type: stage-build
      key: stage-build.server
      name: server
      description: staging build for server
      completedAt: '2020-05-26T21:21:01.597Z'
      batchId: f40ce512-248e-4458-9739-2751f15895bd
      output: {}
      dependencyResults: {}
    stage-build.db:
      type: stage-build
      key: stage-build.db
      name: db
      description: staging build for db
      completedAt: '2020-05-26T21:21:02.285Z'
      batchId: f40ce512-248e-4458-9739-2751f15895bd
      output: {}
      dependencyResults: {}
    build.db:
      type: build
      key: build.db
      name: db
      description: building db
      completedAt: '2020-05-26T21:21:02.292Z'
      batchId: f40ce512-248e-4458-9739-2751f15895bd
      output:
        fresh: false
      dependencyResults:
        stage-build.db:
          type: stage-build
          key: stage-build.db
          name: db
          description: staging build for db
          completedAt: '2020-05-26T21:21:02.285Z'
          batchId: f40ce512-248e-4458-9739-2751f15895bd
          output: {}
          dependencyResults: {}
    deploy.db:
      type: deploy
      key: deploy.db
      name: db
      description: deploying service 'db' (from module 'db')
      completedAt: '2020-05-26T21:21:02.297Z'
      batchId: f40ce512-248e-4458-9739-2751f15895bd
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-57df7df941
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: db-v-57df7df941
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-57df7df941
              namespace: node-microservice
              labels:
                module: db
                service: db
                garden.io/version: v-57df7df941
            spec:
              selector:
                matchLabels:
                  service: db
                  garden.io/version: v-57df7df941
              template:
                metadata:
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.db:
          type: get-service-status
          key: get-service-status.db
          name: db
          description: getting status for service 'db' (from module 'db')
          completedAt: '2020-05-26T21:21:01.585Z'
          batchId: f40ce512-248e-4458-9739-2751f15895bd
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults: {}
        build.db:
          type: build
          key: build.db
          name: db
          description: building db
          completedAt: '2020-05-26T21:21:02.292Z'
          batchId: f40ce512-248e-4458-9739-2751f15895bd
          output:
            fresh: false
          dependencyResults:
            stage-build.db:
              type: stage-build
              key: stage-build.db
              name: db
              description: staging build for db
              completedAt: '2020-05-26T21:21:02.285Z'
              batchId: f40ce512-248e-4458-9739-2751f15895bd
              output: {}
              dependencyResults: {}
    get-service-status.backend:
      type: get-service-status
      key: get-service-status.backend
      name: backend
      description: getting status for service 'backend' (from module 'server')
      completedAt: '2020-05-26T21:21:02.351Z'
      batchId: f40ce512-248e-4458-9739-2751f15895bd
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-56ab2b577f
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: backend-v-56ab2b577f
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-56ab2b577f
              namespace: node-microservice
              labels:
                module: server
                service: backend
                garden.io/version: v-56ab2b577f
            spec:
              selector:
                matchLabels:
                  service: backend
                  garden.io/version: v-56ab2b577f
              template:
                metadata:
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-56ab2b577f
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.db:
          type: get-service-status
          key: get-service-status.db
          name: db
          description: getting status for service 'db' (from module 'db')
          completedAt: '2020-05-26T21:21:01.585Z'
          batchId: f40ce512-248e-4458-9739-2751f15895bd
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults: {}
    build.server:
      type: build
      key: build.server
      name: server
      description: building server
      completedAt: '2020-05-26T21:21:02.436Z'
      batchId: f40ce512-248e-4458-9739-2751f15895bd
      output:
        fresh: false
      dependencyResults:
        stage-build.server:
          type: stage-build
          key: stage-build.server
          name: server
          description: staging build for server
          completedAt: '2020-05-26T21:21:01.597Z'
          batchId: f40ce512-248e-4458-9739-2751f15895bd
          output: {}
          dependencyResults: {}
    deploy.backend:
      type: deploy
      key: deploy.backend
      name: backend
      description: deploying service 'backend' (from module 'server')
      completedAt: '2020-05-26T21:21:02.441Z'
      batchId: f40ce512-248e-4458-9739-2751f15895bd
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-56ab2b577f
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: backend-v-56ab2b577f
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-56ab2b577f
              namespace: node-microservice
              labels:
                module: server
                service: backend
                garden.io/version: v-56ab2b577f
            spec:
              selector:
                matchLabels:
                  service: backend
                  garden.io/version: v-56ab2b577f
              template:
                metadata:
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-56ab2b577f
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.backend:
          type: get-service-status
          key: get-service-status.backend
          name: backend
          description: getting status for service 'backend' (from module 'server')
          completedAt: '2020-05-26T21:21:02.351Z'
          batchId: f40ce512-248e-4458-9739-2751f15895bd
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-56ab2b577f
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: backend-v-56ab2b577f
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-56ab2b577f
                  namespace: node-microservice
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-56ab2b577f
                spec:
                  selector:
                    matchLabels:
                      service: backend
                      garden.io/version: v-56ab2b577f
                  template:
                    metadata:
                      labels:
                        module: server
                        service: backend
                        garden.io/version: v-56ab2b577f
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults:
            get-service-status.db:
              type: get-service-status
              key: get-service-status.db
              name: db
              description: getting status for service 'db' (from module 'db')
              completedAt: '2020-05-26T21:21:01.585Z'
              batchId: f40ce512-248e-4458-9739-2751f15895bd
              output:
                forwardablePorts: []
                ingresses: []
                state: ready
                version: v-57df7df941
                detail:
                  remoteResources: []
                  workload:
                    kind: Deployment
                    apiVersion: apps/v1
                    metadata:
                      name: db-v-57df7df941
                      annotations:
                        garden.io/configured.replicas: '1'
                        garden.io/generated: 'true'
                        garden.io/version: v-57df7df941
                      namespace: node-microservice
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      selector:
                        matchLabels:
                          service: db
                          garden.io/version: v-57df7df941
                      template:
                        metadata:
                          labels:
                            module: db
                            service: db
                            garden.io/version: v-57df7df941
                        spec:
                          containers: []
                          restartPolicy: Always
                          terminationGracePeriodSeconds: 5
                          dnsPolicy: ClusterFirst
                      replicas: 1
                      strategy:
                        type: RollingUpdate
                        rollingUpdate:
                          maxUnavailable: 1
                          maxSurge: 1
                      revisionHistoryLimit: 3
              dependencyResults: {}
        deploy.db:
          type: deploy
          key: deploy.db
          name: db
          description: deploying service 'db' (from module 'db')
          completedAt: '2020-05-26T21:21:02.297Z'
          batchId: f40ce512-248e-4458-9739-2751f15895bd
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults:
            get-service-status.db:
              type: get-service-status
              key: get-service-status.db
              name: db
              description: getting status for service 'db' (from module 'db')
              completedAt: '2020-05-26T21:21:01.585Z'
              batchId: f40ce512-248e-4458-9739-2751f15895bd
              output:
                forwardablePorts: []
                ingresses: []
                state: ready
                version: v-57df7df941
                detail:
                  remoteResources: []
                  workload:
                    kind: Deployment
                    apiVersion: apps/v1
                    metadata:
                      name: db-v-57df7df941
                      annotations:
                        garden.io/configured.replicas: '1'
                        garden.io/generated: 'true'
                        garden.io/version: v-57df7df941
                      namespace: node-microservice
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      selector:
                        matchLabels:
                          service: db
                          garden.io/version: v-57df7df941
                      template:
                        metadata:
                          labels:
                            module: db
                            service: db
                            garden.io/version: v-57df7df941
                        spec:
                          containers: []
                          restartPolicy: Always
                          terminationGracePeriodSeconds: 5
                          dnsPolicy: ClusterFirst
                      replicas: 1
                      strategy:
                        type: RollingUpdate
                        rollingUpdate:
                          maxUnavailable: 1
                          maxSurge: 1
                      revisionHistoryLimit: 3
              dependencyResults: {}
            build.db:
              type: build
              key: build.db
              name: db
              description: building db
              completedAt: '2020-05-26T21:21:02.292Z'
              batchId: f40ce512-248e-4458-9739-2751f15895bd
              output:
                fresh: false
              dependencyResults:
                stage-build.db:
                  type: stage-build
                  key: stage-build.db
                  name: db
                  description: staging build for db
                  completedAt: '2020-05-26T21:21:02.285Z'
                  batchId: f40ce512-248e-4458-9739-2751f15895bd
                  output: {}
                  dependencyResults: {}
        build.server:
          type: build
          key: build.server
          name: server
          description: building server
          completedAt: '2020-05-26T21:21:02.436Z'
          batchId: f40ce512-248e-4458-9739-2751f15895bd
          output:
            fresh: false
          dependencyResults:
            stage-build.server:
              type: stage-build
              key: stage-build.server
              name: server
              description: staging build for server
              completedAt: '2020-05-26T21:21:01.597Z'
              batchId: f40ce512-248e-4458-9739-2751f15895bd
              output: {}
              dependencyResults: {}
  restartRequired: false


[2020-05-26T21:21:06.837Z] 
See error.log for detailed error message

[2020-05-26T21:22:16.818Z] Getting status...

[2020-05-26T21:22:19.976Z] Getting status... → Done

[2020-05-26T21:22:21.273Z] Syncing module sources (5 files)...

[2020-05-26T21:22:21.277Z] Syncing module sources (16 files)...

[2020-05-26T21:22:21.342Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-26T21:22:21.344Z] Getting build status for v-56ab2b577f...

[2020-05-26T21:22:21.730Z] Getting build status for v-57df7df941...

[2020-05-26T21:22:21.733Z] Getting build status for v-57df7df941... → Done (took 0 sec)

[2020-05-26T21:22:21.737Z] Syncing module sources (16 files)... → Done (took 0.5 sec)

[2020-05-26T21:22:21.740Z] Getting build status for v-6edac0350c...

[2020-05-26T21:22:21.764Z] Deploying version v-57df7df941...

[2020-05-26T21:22:21.766Z] Deploying version v-57df7df941... → Already deployed

[2020-05-26T21:22:21.853Z] Getting build status for v-56ab2b577f... → Done (took 0.5 sec)

[2020-05-26T21:22:21.856Z] Deploying version v-56ab2b577f...

[2020-05-26T21:22:21.858Z] Deploying version v-56ab2b577f... → Already deployed

[2020-05-26T21:22:21.878Z] Building version v-6edac0350c...

[2020-05-26T21:22:21.948Z] Building client:v-6edac0350c...

[2020-05-26T21:22:22.337Z] Building client:v-6edac0350c... → Done (took 0.6 sec)

[2020-05-26T21:22:22.340Z] Deploying version v-6edac0350c...

[2020-05-26T21:22:24.071Z] Waiting for resources to be ready...

[2020-05-26T21:22:26.128Z] Deploying version v-6edac0350c...

[2020-05-26T21:22:26.142Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 10s restarting failed container=frontend pod=frontend-v-6edac0350c-64cd778595-b5wfx_node-microservice(989e2070-3440-43c1-a47a-8f13f0e27b7e)

━━━ Events ━━━
Deployment frontend-v-6edac0350c: ScalingReplicaSet - Scaled up replica set frontend-v-6edac0350c-64cd778595 to 1
Pod frontend-v-6edac0350c-64cd778595-b5wfx: Scheduled - Successfully assigned node-microservice/frontend-v-6edac0350c-64cd778595-b5wfx to minikube
Pod frontend-v-6edac0350c-64cd778595-b5wfx: Pulled - Container image "client:v-6edac0350c" already present on machine
Pod frontend-v-6edac0350c-64cd778595-b5wfx: Created - Created container frontend
Pod frontend-v-6edac0350c-64cd778595-b5wfx: Started - Started container frontend
Pod frontend-v-6edac0350c-64cd778595-b5wfx: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-6edac0350c

****** frontend-v-6edac0350c-64cd778595-b5wfx ******
------ frontend ------<no logs>
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=frontend
    pod=frontend-v-6edac0350c-64cd778595-b5wfx_node-microservice(989e2070-3440-43c1-a47a-8f13f0e27b7e)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-6edac0350c:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-6edac0350c-64cd778595 to 1\e[39m\n\e[94mPod frontend-v-6edac0350c-64cd778595-b5wfx:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-6edac0350c-64cd778595-b5wfx to minikube\e[39m\n\e[94mPod frontend-v-6edac0350c-64cd778595-b5wfx:\e[39m \e[37mPulled - Container image \"client:v-6edac0350c\" already present on machine\e[39m\n\e[94mPod frontend-v-6edac0350c-64cd778595-b5wfx:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-6edac0350c-64cd778595-b5wfx:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-6edac0350c-64cd778595-b5wfx:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-6edac0350c\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-6edac0350c-64cd778595-b5wfx ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m<no logs>"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-6edac0350c
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-6edac0350c
      uid: 88da003a-0ddc-46a2-adaf-9eb613aef16d
      resourceVersion: '16644'
      generation: 1
      creationTimestamp: '2020-05-26T21:22:22Z'
      labels:
        garden.io/version: v-6edac0350c
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: ba30a38b2f1535e1684ee508e6e691920c7d36c648df419e89c199a58163b9e2
        garden.io/version: v-6edac0350c
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"ba30a38b2f1535e1684ee508e6e691920c7d36c648df419e89c199a58163b9e2","garden.io/version":"v-6edac0350c"},"labels":{"garden.io/version":"v-6edac0350c","module":"client","service":"frontend"},"name":"frontend-v-6edac0350c","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-6edac0350c","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-6edac0350c","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-6edac0350c"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-6edac0350c\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-6edac0350c","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-6edac0350c
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-6edac0350c
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-26T21:22:26.199Z] Error: 1 deploy task(s) failed!
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at Generator.next (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at new Promise (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at Object.handleProcessResults (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at DeployCommand.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
Error Details:
results:
  taskResults:
    stage-build.server:
      type: stage-build
      key: stage-build.server
      name: server
      description: staging build for server
      completedAt: '2020-05-26T21:22:21.342Z'
      batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
      output: {}
      dependencyResults: {}
    stage-build.db:
      type: stage-build
      key: stage-build.db
      name: db
      description: staging build for db
      completedAt: '2020-05-26T21:22:21.728Z'
      batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
      output: {}
      dependencyResults: {}
    build.db:
      type: build
      key: build.db
      name: db
      description: building db
      completedAt: '2020-05-26T21:22:21.733Z'
      batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
      output:
        fresh: false
      dependencyResults:
        stage-build.db:
          type: stage-build
          key: stage-build.db
          name: db
          description: staging build for db
          completedAt: '2020-05-26T21:22:21.728Z'
          batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
          output: {}
          dependencyResults: {}
    get-service-status.db:
      type: get-service-status
      key: get-service-status.db
      name: db
      description: getting status for service 'db' (from module 'db')
      completedAt: '2020-05-26T21:22:21.758Z'
      batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-57df7df941
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: db-v-57df7df941
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-57df7df941
              namespace: node-microservice
              labels:
                module: db
                service: db
                garden.io/version: v-57df7df941
            spec:
              selector:
                matchLabels:
                  service: db
                  garden.io/version: v-57df7df941
              template:
                metadata:
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults: {}
    deploy.db:
      type: deploy
      key: deploy.db
      name: db
      description: deploying service 'db' (from module 'db')
      completedAt: '2020-05-26T21:22:21.766Z'
      batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-57df7df941
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: db-v-57df7df941
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-57df7df941
              namespace: node-microservice
              labels:
                module: db
                service: db
                garden.io/version: v-57df7df941
            spec:
              selector:
                matchLabels:
                  service: db
                  garden.io/version: v-57df7df941
              template:
                metadata:
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.db:
          type: get-service-status
          key: get-service-status.db
          name: db
          description: getting status for service 'db' (from module 'db')
          completedAt: '2020-05-26T21:22:21.758Z'
          batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults: {}
        build.db:
          type: build
          key: build.db
          name: db
          description: building db
          completedAt: '2020-05-26T21:22:21.733Z'
          batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
          output:
            fresh: false
          dependencyResults:
            stage-build.db:
              type: stage-build
              key: stage-build.db
              name: db
              description: staging build for db
              completedAt: '2020-05-26T21:22:21.728Z'
              batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
              output: {}
              dependencyResults: {}
    get-service-status.backend:
      type: get-service-status
      key: get-service-status.backend
      name: backend
      description: getting status for service 'backend' (from module 'server')
      completedAt: '2020-05-26T21:22:21.806Z'
      batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-56ab2b577f
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: backend-v-56ab2b577f
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-56ab2b577f
              namespace: node-microservice
              labels:
                module: server
                service: backend
                garden.io/version: v-56ab2b577f
            spec:
              selector:
                matchLabels:
                  service: backend
                  garden.io/version: v-56ab2b577f
              template:
                metadata:
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-56ab2b577f
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.db:
          type: get-service-status
          key: get-service-status.db
          name: db
          description: getting status for service 'db' (from module 'db')
          completedAt: '2020-05-26T21:22:21.758Z'
          batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults: {}
    build.server:
      type: build
      key: build.server
      name: server
      description: building server
      completedAt: '2020-05-26T21:22:21.853Z'
      batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
      output:
        fresh: false
      dependencyResults:
        stage-build.server:
          type: stage-build
          key: stage-build.server
          name: server
          description: staging build for server
          completedAt: '2020-05-26T21:22:21.342Z'
          batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
          output: {}
          dependencyResults: {}
    deploy.backend:
      type: deploy
      key: deploy.backend
      name: backend
      description: deploying service 'backend' (from module 'server')
      completedAt: '2020-05-26T21:22:21.858Z'
      batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-56ab2b577f
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: backend-v-56ab2b577f
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-56ab2b577f
              namespace: node-microservice
              labels:
                module: server
                service: backend
                garden.io/version: v-56ab2b577f
            spec:
              selector:
                matchLabels:
                  service: backend
                  garden.io/version: v-56ab2b577f
              template:
                metadata:
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-56ab2b577f
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.backend:
          type: get-service-status
          key: get-service-status.backend
          name: backend
          description: getting status for service 'backend' (from module 'server')
          completedAt: '2020-05-26T21:22:21.806Z'
          batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-56ab2b577f
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: backend-v-56ab2b577f
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-56ab2b577f
                  namespace: node-microservice
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-56ab2b577f
                spec:
                  selector:
                    matchLabels:
                      service: backend
                      garden.io/version: v-56ab2b577f
                  template:
                    metadata:
                      labels:
                        module: server
                        service: backend
                        garden.io/version: v-56ab2b577f
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults:
            get-service-status.db:
              type: get-service-status
              key: get-service-status.db
              name: db
              description: getting status for service 'db' (from module 'db')
              completedAt: '2020-05-26T21:22:21.758Z'
              batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
              output:
                forwardablePorts: []
                ingresses: []
                state: ready
                version: v-57df7df941
                detail:
                  remoteResources: []
                  workload:
                    kind: Deployment
                    apiVersion: apps/v1
                    metadata:
                      name: db-v-57df7df941
                      annotations:
                        garden.io/configured.replicas: '1'
                        garden.io/generated: 'true'
                        garden.io/version: v-57df7df941
                      namespace: node-microservice
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      selector:
                        matchLabels:
                          service: db
                          garden.io/version: v-57df7df941
                      template:
                        metadata:
                          labels:
                            module: db
                            service: db
                            garden.io/version: v-57df7df941
                        spec:
                          containers: []
                          restartPolicy: Always
                          terminationGracePeriodSeconds: 5
                          dnsPolicy: ClusterFirst
                      replicas: 1
                      strategy:
                        type: RollingUpdate
                        rollingUpdate:
                          maxUnavailable: 1
                          maxSurge: 1
                      revisionHistoryLimit: 3
              dependencyResults: {}
        deploy.db:
          type: deploy
          key: deploy.db
          name: db
          description: deploying service 'db' (from module 'db')
          completedAt: '2020-05-26T21:22:21.766Z'
          batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults:
            get-service-status.db:
              type: get-service-status
              key: get-service-status.db
              name: db
              description: getting status for service 'db' (from module 'db')
              completedAt: '2020-05-26T21:22:21.758Z'
              batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
              output:
                forwardablePorts: []
                ingresses: []
                state: ready
                version: v-57df7df941
                detail:
                  remoteResources: []
                  workload:
                    kind: Deployment
                    apiVersion: apps/v1
                    metadata:
                      name: db-v-57df7df941
                      annotations:
                        garden.io/configured.replicas: '1'
                        garden.io/generated: 'true'
                        garden.io/version: v-57df7df941
                      namespace: node-microservice
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      selector:
                        matchLabels:
                          service: db
                          garden.io/version: v-57df7df941
                      template:
                        metadata:
                          labels:
                            module: db
                            service: db
                            garden.io/version: v-57df7df941
                        spec:
                          containers: []
                          restartPolicy: Always
                          terminationGracePeriodSeconds: 5
                          dnsPolicy: ClusterFirst
                      replicas: 1
                      strategy:
                        type: RollingUpdate
                        rollingUpdate:
                          maxUnavailable: 1
                          maxSurge: 1
                      revisionHistoryLimit: 3
              dependencyResults: {}
            build.db:
              type: build
              key: build.db
              name: db
              description: building db
              completedAt: '2020-05-26T21:22:21.733Z'
              batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
              output:
                fresh: false
              dependencyResults:
                stage-build.db:
                  type: stage-build
                  key: stage-build.db
                  name: db
                  description: staging build for db
                  completedAt: '2020-05-26T21:22:21.728Z'
                  batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
                  output: {}
                  dependencyResults: {}
        build.server:
          type: build
          key: build.server
          name: server
          description: building server
          completedAt: '2020-05-26T21:22:21.853Z'
          batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
          output:
            fresh: false
          dependencyResults:
            stage-build.server:
              type: stage-build
              key: stage-build.server
              name: server
              description: staging build for server
              completedAt: '2020-05-26T21:22:21.342Z'
              batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
              output: {}
              dependencyResults: {}
    get-service-status.frontend:
      type: get-service-status
      key: get-service-status.frontend
      name: frontend
      description: getting status for service 'frontend' (from module 'client')
      completedAt: '2020-05-26T21:22:21.334Z'
      batchId: 891aa412-803d-4b9a-8d6d-81f077f96c58
      output:
        forwardablePorts: []
        ingresses: []
        state: missing
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: frontend-v-6edac0350c
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-6edac0350c
              namespace: node-microservice
              labels:
                module: client
                service: frontend
                garden.io/version: v-6edac0350c
            spec:
              selector:
                matchLabels:
                  service: frontend
                  garden.io/version: v-6edac0350c
              template:
                metadata:
                  labels:
                    module: client
                    service: frontend
                    garden.io/version: v-6edac0350c
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults: {}
    stage-build.client:
      type: stage-build
      key: stage-build.client
      name: client
      description: staging build for client
      completedAt: '2020-05-26T21:22:21.737Z'
      batchId: 891aa412-803d-4b9a-8d6d-81f077f96c58
      output: {}
      dependencyResults: {}
    build.client:
      type: build
      key: build.client
      name: client
      description: building client
      completedAt: '2020-05-26T21:22:22.337Z'
      batchId: 891aa412-803d-4b9a-8d6d-81f077f96c58
      output:
        fresh: true
        buildLog: "Sending build context to Docker daemon  607.7kB\r\r\nStep 1/5 : FROM node:12\n ---> bdca973cfa07\nStep 2/5 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/5 : COPY package*.json ./\n ---> Using cache\n ---> b3f9eb30a186\nStep 4/5 : RUN npm install\n ---> Using cache\n ---> 4dcd77c86b94\nStep 5/5 : COPY . .\n ---> fb26cb170372\nSuccessfully built fb26cb170372\nSuccessfully tagged client:v-6edac0350c\n"
        details:
          identifier: 'client:v-6edac0350c'
      dependencyResults:
        stage-build.client:
          type: stage-build
          key: stage-build.client
          name: client
          description: staging build for client
          completedAt: '2020-05-26T21:22:21.737Z'
          batchId: 891aa412-803d-4b9a-8d6d-81f077f96c58
          output: {}
          dependencyResults: {}
    deploy.frontend:
      type: deploy
      description: deploying service 'frontend' (from module 'client')
      key: deploy.frontend
      name: frontend
      error:
        detail:
          serviceName: frontend
          status:
            state: unhealthy
            lastMessage: >-
              CrashLoopBackOff - back-off 10s restarting failed
              container=frontend
              pod=frontend-v-6edac0350c-64cd778595-b5wfx_node-microservice(989e2070-3440-43c1-a47a-8f13f0e27b7e)
            logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-6edac0350c:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-6edac0350c-64cd778595 to 1\e[39m\n\e[94mPod frontend-v-6edac0350c-64cd778595-b5wfx:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-6edac0350c-64cd778595-b5wfx to minikube\e[39m\n\e[94mPod frontend-v-6edac0350c-64cd778595-b5wfx:\e[39m \e[37mPulled - Container image \"client:v-6edac0350c\" already present on machine\e[39m\n\e[94mPod frontend-v-6edac0350c-64cd778595-b5wfx:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-6edac0350c-64cd778595-b5wfx:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-6edac0350c-64cd778595-b5wfx:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-6edac0350c\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-6edac0350c-64cd778595-b5wfx ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m<no logs>"
            resource:
              kind: Deployment
              apiVersion: apps/v1
              metadata:
                name: frontend-v-6edac0350c
                namespace: node-microservice
                selfLink: >-
                  /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-6edac0350c
                uid: 88da003a-0ddc-46a2-adaf-9eb613aef16d
                resourceVersion: '16644'
                generation: 1
                creationTimestamp: '2020-05-26T21:22:22Z'
                labels:
                  garden.io/version: v-6edac0350c
                  module: client
                  service: frontend
                annotations:
                  deployment.kubernetes.io/revision: '1'
                  garden.io/configured.replicas: '1'
                  garden.io/generated: 'true'
                  garden.io/manifest-hash: >-
                    ba30a38b2f1535e1684ee508e6e691920c7d36c648df419e89c199a58163b9e2
                  garden.io/version: v-6edac0350c
                  kubectl.kubernetes.io/last-applied-configuration: >
                    {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"ba30a38b2f1535e1684ee508e6e691920c7d36c648df419e89c199a58163b9e2","garden.io/version":"v-6edac0350c"},"labels":{"garden.io/version":"v-6edac0350c","module":"client","service":"frontend"},"name":"frontend-v-6edac0350c","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-6edac0350c","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-6edac0350c","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-6edac0350c"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-6edac0350c\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-6edac0350c","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
                managedFields:
                  - manager: kube-controller-manager
                    operation: Update
                    apiVersion: apps/v1
                    time: '2020-05-26T21:22:22Z'
                    fieldsType: FieldsV1
                    fieldsV1:
                      'f:metadata':
                        'f:annotations':
                          'f:deployment.kubernetes.io/revision': {}
                      'f:status':
                        'f:conditions':
                          .: {}
                          'k:{"type":"Available"}':
                            .: {}
                            'f:lastTransitionTime': {}
                            'f:lastUpdateTime': {}
                            'f:message': {}
                            'f:reason': {}
                            'f:status': {}
                            'f:type': {}
                          'k:{"type":"Progressing"}':
                            .: {}
                            'f:lastTransitionTime': {}
                            'f:lastUpdateTime': {}
                            'f:message': {}
                            'f:reason': {}
                            'f:status': {}
                            'f:type': {}
                        'f:observedGeneration': {}
                        'f:replicas': {}
                        'f:unavailableReplicas': {}
                        'f:updatedReplicas': {}
                  - manager: kubectl
                    operation: Update
                    apiVersion: apps/v1
                    time: '2020-05-26T21:22:22Z'
                    fieldsType: FieldsV1
                    fieldsV1:
                      'f:metadata':
                        'f:annotations':
                          .: {}
                          'f:garden.io/configured.replicas': {}
                          'f:garden.io/generated': {}
                          'f:garden.io/manifest-hash': {}
                          'f:garden.io/version': {}
                          'f:kubectl.kubernetes.io/last-applied-configuration': {}
                        'f:labels':
                          .: {}
                          'f:garden.io/version': {}
                          'f:module': {}
                          'f:service': {}
                      'f:spec':
                        'f:progressDeadlineSeconds': {}
                        'f:replicas': {}
                        'f:revisionHistoryLimit': {}
                        'f:selector':
                          'f:matchLabels':
                            .: {}
                            'f:garden.io/version': {}
                            'f:service': {}
                        'f:strategy':
                          'f:rollingUpdate':
                            .: {}
                            'f:maxSurge': {}
                            'f:maxUnavailable': {}
                          'f:type': {}
                        'f:template':
                          'f:metadata':
                            'f:labels':
                              .: {}
                              'f:garden.io/version': {}
                              'f:module': {}
                              'f:service': {}
                          'f:spec':
                            'f:containers':
                              'k:{"name":"frontend"}':
                                .: {}
                                'f:env':
                                  .: {}
                                  'k:{"name":"GARDEN_DEPENDENCIES"}':
                                    .: {}
                                    'f:name': {}
                                    'f:value': {}
                                  'k:{"name":"GARDEN_VERSION"}':
                                    .: {}
                                    'f:name': {}
                                    'f:value': {}
                                  'k:{"name":"POD_HOST_IP"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_IP"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NAME"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NAMESPACE"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NODE_NAME"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_SERVICE_ACCOUNT"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_UID"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                'f:image': {}
                                'f:imagePullPolicy': {}
                                'f:name': {}
                                'f:resources':
                                  .: {}
                                  'f:limits':
                                    .: {}
                                    'f:cpu': {}
                                    'f:memory': {}
                                  'f:requests':
                                    .: {}
                                    'f:cpu': {}
                                    'f:memory': {}
                                'f:securityContext':
                                  .: {}
                                  'f:allowPrivilegeEscalation': {}
                                'f:terminationMessagePath': {}
                                'f:terminationMessagePolicy': {}
                            'f:dnsPolicy': {}
                            'f:restartPolicy': {}
                            'f:schedulerName': {}
                            'f:securityContext': {}
                            'f:terminationGracePeriodSeconds': {}
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    garden.io/version: v-6edac0350c
                    service: frontend
                template:
                  metadata:
                    creationTimestamp: null
                    labels:
                      garden.io/version: v-6edac0350c
                      module: client
                      service: frontend
                  spec:
                    containers:
                      - name: frontend
                        image: 'client:v-6edac0350c'
                        env:
                          - name: GARDEN_VERSION
                            value: v-6edac0350c
                          - name: GARDEN_DEPENDENCIES
                            value: >-
                              [{"moduleName":"client","name":"client","type":"build","version":"v-6edac0350c"}]
                          - name: POD_HOST_IP
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: status.hostIP
                          - name: POD_IP
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: status.podIP
                          - name: POD_NAME
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.name
                          - name: POD_NAMESPACE
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.namespace
                          - name: POD_NODE_NAME
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: spec.nodeName
                          - name: POD_SERVICE_ACCOUNT
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: spec.serviceAccountName
                          - name: POD_UID
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.uid
                        resources:
                          limits:
                            cpu: '1'
                            memory: 1Gi
                          requests:
                            cpu: 10m
                            memory: 64Mi
                        terminationMessagePath: /dev/termination-log
                        terminationMessagePolicy: File
                        imagePullPolicy: IfNotPresent
                        securityContext:
                          allowPrivilegeEscalation: false
                    restartPolicy: Always
                    terminationGracePeriodSeconds: 5
                    dnsPolicy: ClusterFirst
                    securityContext: {}
                    schedulerName: default-scheduler
                strategy:
                  type: RollingUpdate
                  rollingUpdate:
                    maxUnavailable: 1
                    maxSurge: 1
                revisionHistoryLimit: 3
                progressDeadlineSeconds: 600
              status:
                observedGeneration: 1
                replicas: 1
                updatedReplicas: 1
                unavailableReplicas: 1
                conditions:
                  - type: Available
                    status: 'True'
                    lastUpdateTime: '2020-05-26T21:22:22Z'
                    lastTransitionTime: '2020-05-26T21:22:22Z'
                    reason: MinimumReplicasAvailable
                    message: Deployment has minimum availability.
                  - type: Progressing
                    status: 'True'
                    lastUpdateTime: '2020-05-26T21:22:22Z'
                    lastTransitionTime: '2020-05-26T21:22:22Z'
                    reason: ReplicaSetUpdated
                    message: >-
                      ReplicaSet "frontend-v-6edac0350c-64cd778595" is
                      progressing.
        type: deployment
      completedAt: '2020-05-26T21:22:26.128Z'
      batchId: 891aa412-803d-4b9a-8d6d-81f077f96c58
  restartRequired: false


[2020-05-26T21:22:26.214Z] 
See error.log for detailed error message

[2020-05-26T21:29:48.618Z] Getting status...

[2020-05-26T21:29:51.764Z] Getting status... → Done

[2020-05-26T21:29:52.951Z] Syncing module sources (1 file)...

[2020-05-26T21:29:52.956Z] Syncing module sources (5 files)...

[2020-05-26T21:29:53.009Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-26T21:29:53.011Z] Getting build status for v-56ab2b577f...

[2020-05-26T21:29:53.664Z] Getting build status for v-57df7df941...

[2020-05-26T21:29:53.666Z] Getting build status for v-57df7df941... → Done (took 0 sec)

[2020-05-26T21:29:53.671Z] Syncing module sources (1 file)... → Done (took 0.7 sec)

[2020-05-26T21:29:53.673Z] Getting build status for v-2c7b9b23bc...

[2020-05-26T21:29:53.698Z] Deploying version v-57df7df941...

[2020-05-26T21:29:53.701Z] Deploying version v-57df7df941... → Already deployed

[2020-05-26T21:29:53.809Z] Getting build status for v-56ab2b577f... → Done (took 0.8 sec)

[2020-05-26T21:29:53.812Z] Deploying version v-56ab2b577f...

[2020-05-26T21:29:53.814Z] Deploying version v-56ab2b577f... → Already deployed

[2020-05-26T21:29:53.817Z] Building version v-2c7b9b23bc...

[2020-05-26T21:29:53.883Z] Building client:v-2c7b9b23bc...

[2020-05-26T21:30:07.065Z] Building client:v-2c7b9b23bc...

[2020-05-26T21:30:07.089Z] Error: Unable to run docker command: Command "docker build -t client:v-2c7b9b23bc /Users/emilwils/Documents/node-microservice/.garden/build/client" failed with code 127:

The command '/bin/sh -c npm run build' returned a non-zero code: 127

Here's the full output:

Sending build context to Docker daemon  2.048kB
Step 1/3 : FROM nginx
latest: Pulling from library/nginx
afb6ec6fdc1c: Pulling fs layer
b90c53a0b692: Pulling fs layer
11fa52a0fdc0: Pulling fs layer
11fa52a0fdc0: Verifying Checksum
11fa52a0fdc0: Download complete
b90c53a0b692: Verifying Checksum
b90c53a0b692: Download complete
afb6ec6fdc1c: Download complete
afb6ec6fdc1c: Pull complete
b90c53a0b692: Pull complete
11fa52a0fdc0: Pull complete
Digest: sha256:30dfa439718a17baafefadf16c5e7c9d0a1cde97b4fd84f63b69e13513be7097
Status: Downloaded newer image for nginx:latest
 ---> 9beeba249f3e
Step 2/3 : RUN npm run build
 ---> Running in d982275b72ce
/bin/sh: 1: npm: not found
The command '/bin/sh -c npm run build' returned a non-zero code: 127
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
    at Generator.throw (<anonymous>)
    at rejected (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
    at processTicksAndRejections (internal/process/task_queues.js:93:5)
Error Details:
err:
  detail:
    cmd: docker
    args:
      - build
      - '-t'
      - 'client:v-2c7b9b23bc'
      - /Users/emilwils/Documents/node-microservice/.garden/build/client
    opts:
      cwd: /Users/emilwils/Documents/node-microservice/.garden/build/client
      ignoreError: false
      stdout:
        _readableState:
          objectMode: true
          highWaterMark: 16
          buffer:
            head: null
            tail: null
            length: 0
          length: 0
          pipes: null
          pipesCount: 0
          flowing: true
          ended: true
          endEmitted: true
          reading: false
          sync: false
          needReadable: false
          emittedReadable: false
          readableListening: false
          resumeScheduled: false
          paused: false
          emitClose: true
          destroyed: false
          defaultEncoding: utf8
          awaitDrain: 0
          readingMore: false
          decoder: null
          encoding: null
        readable: false
        _events: {}
        _eventsCount: 3
        _writableState:
          objectMode: false
          highWaterMark: 16384
          finalCalled: false
          needDrain: false
          ending: true
          ended: true
          finished: true
          destroyed: false
          decodeStrings: true
          defaultEncoding: utf8
          length: 0
          writing: false
          corked: 0
          sync: false
          bufferProcessing: false
          writecb: null
          writelen: 0
          bufferedRequest: null
          lastBufferedRequest: null
          pendingcb: 0
          prefinished: true
          errorEmitted: false
          emitClose: true
          bufferedRequestCount: 0
          corkedRequestsFree:
            next: null
            entry: null
        writable: false
        allowHalfOpen: true
        _transformState:
          needTransform: false
          transforming: false
          writecb: null
          writechunk: null
          writeencoding: buffer
        matcher: {}
        overflow: false
      timeout: 1200
      env:
        TERM_PROGRAM: Apple_Terminal
        SHELL: /bin/zsh
        TERM: xterm-256color
        TMPDIR: /var/folders/nr/97f582w94rl7snqc5h3ldwqh0000gn/T/
        TERM_PROGRAM_VERSION: '433'
        TERM_SESSION_ID: A6BD6B7C-14CE-4383-8F6D-D382816C6EE9
        USER: emilwils
        SSH_AUTH_SOCK: /private/tmp/com.apple.launchd.3ygVNIh0vg/Listeners
        PATH: >-
          /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware
          Fusion.app/Contents/Public
        LaunchInstanceID: DD0DB73A-B855-43F4-B00C-C5EFD5F0D6A8
        PWD: /Users/emilwils/Documents/node-microservice
        LANG: en_US.UTF-8
        XPC_FLAGS: '0x0'
        XPC_SERVICE_NAME: '0'
        SHLVL: '1'
        HOME: /Users/emilwils
        LOGNAME: emilwils
        SECURITYSESSIONID: 186a6
        _: /usr/local/bin/garden
        __CF_USER_TEXT_ENCODING: '0x1F5:0x0:0x0'
        DOCKER_TLS_VERIFY: '1'
        DOCKER_HOST: 'tcp://192.168.99.108:2376'
        DOCKER_CERT_PATH: /Users/emilwils/.minikube/certs
        MINIKUBE_ACTIVE_DOCKERD: minikube
        DOCKER_CLI_EXPERIMENTAL: enabled
        PKG_EXECPATH: /usr/local/Cellar/garden-cli/0.11.14/libexec/garden
    result:
      code: 127
      all: "Sending build context to Docker daemon  2.048kB\r\r\nStep 1/3 : FROM nginx\nlatest: Pulling from library/nginx\nafb6ec6fdc1c: Pulling fs layer\nb90c53a0b692: Pulling fs layer\n11fa52a0fdc0: Pulling fs layer\n11fa52a0fdc0: Verifying Checksum\n11fa52a0fdc0: Download complete\nb90c53a0b692: Verifying Checksum\nb90c53a0b692: Download complete\nafb6ec6fdc1c: Download complete\nafb6ec6fdc1c: Pull complete\nb90c53a0b692: Pull complete\n11fa52a0fdc0: Pull complete\nDigest: sha256:30dfa439718a17baafefadf16c5e7c9d0a1cde97b4fd84f63b69e13513be7097\nStatus: Downloaded newer image for nginx:latest\n ---> 9beeba249f3e\nStep 2/3 : RUN npm run build\n ---> Running in d982275b72ce\n\e[91m/bin/sh: 1: npm: not found\n\e[0mThe command '/bin/sh -c npm run build' returned a non-zero code: 127\n"
      stdout: "Sending build context to Docker daemon  2.048kB\r\r\nStep 1/3 : FROM nginx\nlatest: Pulling from library/nginx\nafb6ec6fdc1c: Pulling fs layer\nb90c53a0b692: Pulling fs layer\n11fa52a0fdc0: Pulling fs layer\n11fa52a0fdc0: Verifying Checksum\n11fa52a0fdc0: Download complete\nb90c53a0b692: Verifying Checksum\nb90c53a0b692: Download complete\nafb6ec6fdc1c: Download complete\nafb6ec6fdc1c: Pull complete\nb90c53a0b692: Pull complete\n11fa52a0fdc0: Pull complete\nDigest: sha256:30dfa439718a17baafefadf16c5e7c9d0a1cde97b4fd84f63b69e13513be7097\nStatus: Downloaded newer image for nginx:latest\n ---> 9beeba249f3e\nStep 2/3 : RUN npm run build\n ---> Running in d982275b72ce\n\e[91m/bin/sh: 1: npm: not found\n\e[0m"
      stderr: |
        The command '/bin/sh -c npm run build' returned a non-zero code: 127
      proc:
        _events: {}
        _eventsCount: 2
        _closesNeeded: 3
        _closesGot: 3
        connected: false
        signalCode: null
        exitCode: 127
        killed: false
        spawnfile: docker
        _handle: null
        spawnargs:
          - docker
          - build
          - '-t'
          - 'client:v-2c7b9b23bc'
          - /Users/emilwils/Documents/node-microservice/.garden/build/client
        pid: 24424
        stdin:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: null
            ended: false
            endEmitted: false
            reading: false
            sync: true
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: true
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 1
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stdout:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: false
            ended: true
            endEmitted: true
            reading: false
            sync: false
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: false
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 3
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stderr:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: true
            ended: true
            endEmitted: true
            reading: false
            sync: false
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: false
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 3
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stdio:
          - ~err~detail~result~proc~stdin
          - ~err~detail~result~proc~stdout
          - ~err~detail~result~proc~stderr
    code: 127
    all: "Sending build context to Docker daemon  2.048kB\r\r\nStep 1/3 : FROM nginx\nlatest: Pulling from library/nginx\nafb6ec6fdc1c: Pulling fs layer\nb90c53a0b692: Pulling fs layer\n11fa52a0fdc0: Pulling fs layer\n11fa52a0fdc0: Verifying Checksum\n11fa52a0fdc0: Download complete\nb90c53a0b692: Verifying Checksum\nb90c53a0b692: Download complete\nafb6ec6fdc1c: Download complete\nafb6ec6fdc1c: Pull complete\nb90c53a0b692: Pull complete\n11fa52a0fdc0: Pull complete\nDigest: sha256:30dfa439718a17baafefadf16c5e7c9d0a1cde97b4fd84f63b69e13513be7097\nStatus: Downloaded newer image for nginx:latest\n ---> 9beeba249f3e\nStep 2/3 : RUN npm run build\n ---> Running in d982275b72ce\n\e[91m/bin/sh: 1: npm: not found\n\e[0mThe command '/bin/sh -c npm run build' returned a non-zero code: 127\n"
    stdout: "Sending build context to Docker daemon  2.048kB\r\r\nStep 1/3 : FROM nginx\nlatest: Pulling from library/nginx\nafb6ec6fdc1c: Pulling fs layer\nb90c53a0b692: Pulling fs layer\n11fa52a0fdc0: Pulling fs layer\n11fa52a0fdc0: Verifying Checksum\n11fa52a0fdc0: Download complete\nb90c53a0b692: Verifying Checksum\nb90c53a0b692: Download complete\nafb6ec6fdc1c: Download complete\nafb6ec6fdc1c: Pull complete\nb90c53a0b692: Pull complete\n11fa52a0fdc0: Pull complete\nDigest: sha256:30dfa439718a17baafefadf16c5e7c9d0a1cde97b4fd84f63b69e13513be7097\nStatus: Downloaded newer image for nginx:latest\n ---> 9beeba249f3e\nStep 2/3 : RUN npm run build\n ---> Running in d982275b72ce\n\e[91m/bin/sh: 1: npm: not found\n\e[0m"
    stderr: |
      The command '/bin/sh -c npm run build' returned a non-zero code: 127
    proc: ~err~detail~result~proc
  type: runtime
args: []
cwd: /Users/emilwils/Documents/node-microservice/.garden/build/client


[2020-05-26T21:30:07.171Z] Error: 1 deploy task(s) failed!
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at Generator.next (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at new Promise (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at Object.handleProcessResults (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at DeployCommand.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
Error Details:
results:
  taskResults:
    get-service-status.frontend:
      type: get-service-status
      key: get-service-status.frontend
      name: frontend
      description: getting status for service 'frontend' (from module 'client')
      completedAt: '2020-05-26T21:29:52.998Z'
      batchId: c56466f3-6d55-4cee-94de-c47338a0fcd6
      output:
        forwardablePorts: []
        ingresses: []
        state: missing
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: frontend-v-2c7b9b23bc
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-2c7b9b23bc
              namespace: node-microservice
              labels:
                module: client
                service: frontend
                garden.io/version: v-2c7b9b23bc
            spec:
              selector:
                matchLabels:
                  service: frontend
                  garden.io/version: v-2c7b9b23bc
              template:
                metadata:
                  labels:
                    module: client
                    service: frontend
                    garden.io/version: v-2c7b9b23bc
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults: {}
    stage-build.client:
      type: stage-build
      key: stage-build.client
      name: client
      description: staging build for client
      completedAt: '2020-05-26T21:29:53.671Z'
      batchId: c56466f3-6d55-4cee-94de-c47338a0fcd6
      output: {}
      dependencyResults: {}
    build.client:
      type: build
      description: building client
      key: build.client
      name: client
      error:
        detail:
          err:
            detail:
              cmd: docker
              args:
                - build
                - '-t'
                - 'client:v-2c7b9b23bc'
                - >-
                  /Users/emilwils/Documents/node-microservice/.garden/build/client
              opts:
                cwd: >-
                  /Users/emilwils/Documents/node-microservice/.garden/build/client
                ignoreError: false
                stdout:
                  _readableState:
                    objectMode: true
                    highWaterMark: 16
                    buffer:
                      head: null
                      tail: null
                      length: 0
                    length: 0
                    pipes: null
                    pipesCount: 0
                    flowing: true
                    ended: true
                    endEmitted: true
                    reading: false
                    sync: false
                    needReadable: false
                    emittedReadable: false
                    readableListening: false
                    resumeScheduled: false
                    paused: false
                    emitClose: true
                    destroyed: false
                    defaultEncoding: utf8
                    awaitDrain: 0
                    readingMore: false
                    decoder: null
                    encoding: null
                  readable: false
                  _events: {}
                  _eventsCount: 3
                  _writableState:
                    objectMode: false
                    highWaterMark: 16384
                    finalCalled: false
                    needDrain: false
                    ending: true
                    ended: true
                    finished: true
                    destroyed: false
                    decodeStrings: true
                    defaultEncoding: utf8
                    length: 0
                    writing: false
                    corked: 0
                    sync: false
                    bufferProcessing: false
                    writecb: null
                    writelen: 0
                    bufferedRequest: null
                    lastBufferedRequest: null
                    pendingcb: 0
                    prefinished: true
                    errorEmitted: false
                    emitClose: true
                    bufferedRequestCount: 0
                    corkedRequestsFree:
                      next: null
                      entry: null
                  writable: false
                  allowHalfOpen: true
                  _transformState:
                    needTransform: false
                    transforming: false
                    writecb: null
                    writechunk: null
                    writeencoding: buffer
                  matcher: {}
                  overflow: false
                timeout: 1200
                env:
                  TERM_PROGRAM: Apple_Terminal
                  SHELL: /bin/zsh
                  TERM: xterm-256color
                  TMPDIR: /var/folders/nr/97f582w94rl7snqc5h3ldwqh0000gn/T/
                  TERM_PROGRAM_VERSION: '433'
                  TERM_SESSION_ID: A6BD6B7C-14CE-4383-8F6D-D382816C6EE9
                  USER: emilwils
                  SSH_AUTH_SOCK: /private/tmp/com.apple.launchd.3ygVNIh0vg/Listeners
                  PATH: >-
                    /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware
                    Fusion.app/Contents/Public
                  LaunchInstanceID: DD0DB73A-B855-43F4-B00C-C5EFD5F0D6A8
                  PWD: /Users/emilwils/Documents/node-microservice
                  LANG: en_US.UTF-8
                  XPC_FLAGS: '0x0'
                  XPC_SERVICE_NAME: '0'
                  SHLVL: '1'
                  HOME: /Users/emilwils
                  LOGNAME: emilwils
                  SECURITYSESSIONID: 186a6
                  _: /usr/local/bin/garden
                  __CF_USER_TEXT_ENCODING: '0x1F5:0x0:0x0'
                  DOCKER_TLS_VERIFY: '1'
                  DOCKER_HOST: 'tcp://192.168.99.108:2376'
                  DOCKER_CERT_PATH: /Users/emilwils/.minikube/certs
                  MINIKUBE_ACTIVE_DOCKERD: minikube
                  DOCKER_CLI_EXPERIMENTAL: enabled
                  PKG_EXECPATH: /usr/local/Cellar/garden-cli/0.11.14/libexec/garden
              result:
                code: 127
                all: "Sending build context to Docker daemon  2.048kB\r\r\nStep 1/3 : FROM nginx\nlatest: Pulling from library/nginx\nafb6ec6fdc1c: Pulling fs layer\nb90c53a0b692: Pulling fs layer\n11fa52a0fdc0: Pulling fs layer\n11fa52a0fdc0: Verifying Checksum\n11fa52a0fdc0: Download complete\nb90c53a0b692: Verifying Checksum\nb90c53a0b692: Download complete\nafb6ec6fdc1c: Download complete\nafb6ec6fdc1c: Pull complete\nb90c53a0b692: Pull complete\n11fa52a0fdc0: Pull complete\nDigest: sha256:30dfa439718a17baafefadf16c5e7c9d0a1cde97b4fd84f63b69e13513be7097\nStatus: Downloaded newer image for nginx:latest\n ---> 9beeba249f3e\nStep 2/3 : RUN npm run build\n ---> Running in d982275b72ce\n\e[91m/bin/sh: 1: npm: not found\n\e[0mThe command '/bin/sh -c npm run build' returned a non-zero code: 127\n"
                stdout: "Sending build context to Docker daemon  2.048kB\r\r\nStep 1/3 : FROM nginx\nlatest: Pulling from library/nginx\nafb6ec6fdc1c: Pulling fs layer\nb90c53a0b692: Pulling fs layer\n11fa52a0fdc0: Pulling fs layer\n11fa52a0fdc0: Verifying Checksum\n11fa52a0fdc0: Download complete\nb90c53a0b692: Verifying Checksum\nb90c53a0b692: Download complete\nafb6ec6fdc1c: Download complete\nafb6ec6fdc1c: Pull complete\nb90c53a0b692: Pull complete\n11fa52a0fdc0: Pull complete\nDigest: sha256:30dfa439718a17baafefadf16c5e7c9d0a1cde97b4fd84f63b69e13513be7097\nStatus: Downloaded newer image for nginx:latest\n ---> 9beeba249f3e\nStep 2/3 : RUN npm run build\n ---> Running in d982275b72ce\n\e[91m/bin/sh: 1: npm: not found\n\e[0m"
                stderr: >
                  The command '/bin/sh -c npm run build' returned a non-zero
                  code: 127
                proc:
                  _events: {}
                  _eventsCount: 2
                  _closesNeeded: 3
                  _closesGot: 3
                  connected: false
                  signalCode: null
                  exitCode: 127
                  killed: false
                  spawnfile: docker
                  _handle: null
                  spawnargs:
                    - docker
                    - build
                    - '-t'
                    - 'client:v-2c7b9b23bc'
                    - >-
                      /Users/emilwils/Documents/node-microservice/.garden/build/client
                  pid: 24424
                  stdin:
                    connecting: false
                    _hadError: false
                    _parent: null
                    _host: null
                    _readableState:
                      objectMode: false
                      highWaterMark: 16384
                      buffer:
                        head: null
                        tail: null
                        length: 0
                      length: 0
                      pipes: null
                      pipesCount: 0
                      flowing: null
                      ended: false
                      endEmitted: false
                      reading: false
                      sync: true
                      needReadable: false
                      emittedReadable: false
                      readableListening: false
                      resumeScheduled: false
                      paused: true
                      emitClose: false
                      autoDestroy: false
                      destroyed: true
                      defaultEncoding: utf8
                      awaitDrain: 0
                      readingMore: false
                      decoder: null
                      encoding: null
                    readable: false
                    _events: {}
                    _eventsCount: 1
                    _writableState:
                      objectMode: false
                      highWaterMark: 16384
                      finalCalled: false
                      needDrain: false
                      ending: false
                      ended: false
                      finished: false
                      destroyed: true
                      decodeStrings: false
                      defaultEncoding: utf8
                      length: 0
                      writing: false
                      corked: 0
                      sync: true
                      bufferProcessing: false
                      writecb: null
                      writelen: 0
                      bufferedRequest: null
                      lastBufferedRequest: null
                      pendingcb: 0
                      prefinished: false
                      errorEmitted: false
                      emitClose: false
                      autoDestroy: false
                      bufferedRequestCount: 0
                      corkedRequestsFree:
                        next: null
                        entry: null
                    writable: false
                    allowHalfOpen: false
                    _sockname: null
                    _pendingData: null
                    _pendingEncoding: ''
                    server: null
                    _server: null
                  stdout:
                    connecting: false
                    _hadError: false
                    _parent: null
                    _host: null
                    _readableState:
                      objectMode: false
                      highWaterMark: 16384
                      buffer:
                        head: null
                        tail: null
                        length: 0
                      length: 0
                      pipes: null
                      pipesCount: 0
                      flowing: false
                      ended: true
                      endEmitted: true
                      reading: false
                      sync: false
                      needReadable: false
                      emittedReadable: false
                      readableListening: false
                      resumeScheduled: false
                      paused: false
                      emitClose: false
                      autoDestroy: false
                      destroyed: true
                      defaultEncoding: utf8
                      awaitDrain: 0
                      readingMore: false
                      decoder: null
                      encoding: null
                    readable: false
                    _events: {}
                    _eventsCount: 3
                    _writableState:
                      objectMode: false
                      highWaterMark: 16384
                      finalCalled: false
                      needDrain: false
                      ending: false
                      ended: false
                      finished: false
                      destroyed: true
                      decodeStrings: false
                      defaultEncoding: utf8
                      length: 0
                      writing: false
                      corked: 0
                      sync: true
                      bufferProcessing: false
                      writecb: null
                      writelen: 0
                      bufferedRequest: null
                      lastBufferedRequest: null
                      pendingcb: 0
                      prefinished: false
                      errorEmitted: false
                      emitClose: false
                      autoDestroy: false
                      bufferedRequestCount: 0
                      corkedRequestsFree:
                        next: null
                        entry: null
                    writable: false
                    allowHalfOpen: false
                    _sockname: null
                    _pendingData: null
                    _pendingEncoding: ''
                    server: null
                    _server: null
                  stderr:
                    connecting: false
                    _hadError: false
                    _parent: null
                    _host: null
                    _readableState:
                      objectMode: false
                      highWaterMark: 16384
                      buffer:
                        head: null
                        tail: null
                        length: 0
                      length: 0
                      pipes: null
                      pipesCount: 0
                      flowing: true
                      ended: true
                      endEmitted: true
                      reading: false
                      sync: false
                      needReadable: false
                      emittedReadable: false
                      readableListening: false
                      resumeScheduled: false
                      paused: false
                      emitClose: false
                      autoDestroy: false
                      destroyed: true
                      defaultEncoding: utf8
                      awaitDrain: 0
                      readingMore: false
                      decoder: null
                      encoding: null
                    readable: false
                    _events: {}
                    _eventsCount: 3
                    _writableState:
                      objectMode: false
                      highWaterMark: 16384
                      finalCalled: false
                      needDrain: false
                      ending: false
                      ended: false
                      finished: false
                      destroyed: true
                      decodeStrings: false
                      defaultEncoding: utf8
                      length: 0
                      writing: false
                      corked: 0
                      sync: true
                      bufferProcessing: false
                      writecb: null
                      writelen: 0
                      bufferedRequest: null
                      lastBufferedRequest: null
                      pendingcb: 0
                      prefinished: false
                      errorEmitted: false
                      emitClose: false
                      autoDestroy: false
                      bufferedRequestCount: 0
                      corkedRequestsFree:
                        next: null
                        entry: null
                    writable: false
                    allowHalfOpen: false
                    _sockname: null
                    _pendingData: null
                    _pendingEncoding: ''
                    server: null
                    _server: null
                  stdio:
                    - >-
                      ~results~taskResults~build.client~error~detail~err~detail~result~proc~stdin
                    - >-
                      ~results~taskResults~build.client~error~detail~err~detail~result~proc~stdout
                    - >-
                      ~results~taskResults~build.client~error~detail~err~detail~result~proc~stderr
              code: 127
              all: "Sending build context to Docker daemon  2.048kB\r\r\nStep 1/3 : FROM nginx\nlatest: Pulling from library/nginx\nafb6ec6fdc1c: Pulling fs layer\nb90c53a0b692: Pulling fs layer\n11fa52a0fdc0: Pulling fs layer\n11fa52a0fdc0: Verifying Checksum\n11fa52a0fdc0: Download complete\nb90c53a0b692: Verifying Checksum\nb90c53a0b692: Download complete\nafb6ec6fdc1c: Download complete\nafb6ec6fdc1c: Pull complete\nb90c53a0b692: Pull complete\n11fa52a0fdc0: Pull complete\nDigest: sha256:30dfa439718a17baafefadf16c5e7c9d0a1cde97b4fd84f63b69e13513be7097\nStatus: Downloaded newer image for nginx:latest\n ---> 9beeba249f3e\nStep 2/3 : RUN npm run build\n ---> Running in d982275b72ce\n\e[91m/bin/sh: 1: npm: not found\n\e[0mThe command '/bin/sh -c npm run build' returned a non-zero code: 127\n"
              stdout: "Sending build context to Docker daemon  2.048kB\r\r\nStep 1/3 : FROM nginx\nlatest: Pulling from library/nginx\nafb6ec6fdc1c: Pulling fs layer\nb90c53a0b692: Pulling fs layer\n11fa52a0fdc0: Pulling fs layer\n11fa52a0fdc0: Verifying Checksum\n11fa52a0fdc0: Download complete\nb90c53a0b692: Verifying Checksum\nb90c53a0b692: Download complete\nafb6ec6fdc1c: Download complete\nafb6ec6fdc1c: Pull complete\nb90c53a0b692: Pull complete\n11fa52a0fdc0: Pull complete\nDigest: sha256:30dfa439718a17baafefadf16c5e7c9d0a1cde97b4fd84f63b69e13513be7097\nStatus: Downloaded newer image for nginx:latest\n ---> 9beeba249f3e\nStep 2/3 : RUN npm run build\n ---> Running in d982275b72ce\n\e[91m/bin/sh: 1: npm: not found\n\e[0m"
              stderr: >
                The command '/bin/sh -c npm run build' returned a non-zero code:
                127
              proc: >-
                ~results~taskResults~build.client~error~detail~err~detail~result~proc
            type: runtime
          args: ~results~taskResults~build.client~error~detail~err~detail~args
          cwd: /Users/emilwils/Documents/node-microservice/.garden/build/client
        type: runtime
      completedAt: '2020-05-26T21:30:07.065Z'
      batchId: c56466f3-6d55-4cee-94de-c47338a0fcd6
    stage-build.server:
      type: stage-build
      key: stage-build.server
      name: server
      description: staging build for server
      completedAt: '2020-05-26T21:29:53.009Z'
      batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
      output: {}
      dependencyResults: {}
    stage-build.db:
      type: stage-build
      key: stage-build.db
      name: db
      description: staging build for db
      completedAt: '2020-05-26T21:29:53.662Z'
      batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
      output: {}
      dependencyResults: {}
    build.db:
      type: build
      key: build.db
      name: db
      description: building db
      completedAt: '2020-05-26T21:29:53.667Z'
      batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
      output:
        fresh: false
      dependencyResults:
        stage-build.db:
          type: stage-build
          key: stage-build.db
          name: db
          description: staging build for db
          completedAt: '2020-05-26T21:29:53.662Z'
          batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
          output: {}
          dependencyResults: {}
    get-service-status.db:
      type: get-service-status
      key: get-service-status.db
      name: db
      description: getting status for service 'db' (from module 'db')
      completedAt: '2020-05-26T21:29:53.691Z'
      batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-57df7df941
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: db-v-57df7df941
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-57df7df941
              namespace: node-microservice
              labels:
                module: db
                service: db
                garden.io/version: v-57df7df941
            spec:
              selector:
                matchLabels:
                  service: db
                  garden.io/version: v-57df7df941
              template:
                metadata:
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults: {}
    deploy.db:
      type: deploy
      key: deploy.db
      name: db
      description: deploying service 'db' (from module 'db')
      completedAt: '2020-05-26T21:29:53.701Z'
      batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-57df7df941
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: db-v-57df7df941
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-57df7df941
              namespace: node-microservice
              labels:
                module: db
                service: db
                garden.io/version: v-57df7df941
            spec:
              selector:
                matchLabels:
                  service: db
                  garden.io/version: v-57df7df941
              template:
                metadata:
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.db:
          type: get-service-status
          key: get-service-status.db
          name: db
          description: getting status for service 'db' (from module 'db')
          completedAt: '2020-05-26T21:29:53.691Z'
          batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults: {}
        build.db:
          type: build
          key: build.db
          name: db
          description: building db
          completedAt: '2020-05-26T21:29:53.667Z'
          batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
          output:
            fresh: false
          dependencyResults:
            stage-build.db:
              type: stage-build
              key: stage-build.db
              name: db
              description: staging build for db
              completedAt: '2020-05-26T21:29:53.662Z'
              batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
              output: {}
              dependencyResults: {}
    get-service-status.backend:
      type: get-service-status
      key: get-service-status.backend
      name: backend
      description: getting status for service 'backend' (from module 'server')
      completedAt: '2020-05-26T21:29:53.728Z'
      batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-56ab2b577f
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: backend-v-56ab2b577f
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-56ab2b577f
              namespace: node-microservice
              labels:
                module: server
                service: backend
                garden.io/version: v-56ab2b577f
            spec:
              selector:
                matchLabels:
                  service: backend
                  garden.io/version: v-56ab2b577f
              template:
                metadata:
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-56ab2b577f
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.db:
          type: get-service-status
          key: get-service-status.db
          name: db
          description: getting status for service 'db' (from module 'db')
          completedAt: '2020-05-26T21:29:53.691Z'
          batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults: {}
    build.server:
      type: build
      key: build.server
      name: server
      description: building server
      completedAt: '2020-05-26T21:29:53.809Z'
      batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
      output:
        fresh: false
      dependencyResults:
        stage-build.server:
          type: stage-build
          key: stage-build.server
          name: server
          description: staging build for server
          completedAt: '2020-05-26T21:29:53.009Z'
          batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
          output: {}
          dependencyResults: {}
    deploy.backend:
      type: deploy
      key: deploy.backend
      name: backend
      description: deploying service 'backend' (from module 'server')
      completedAt: '2020-05-26T21:29:53.814Z'
      batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-56ab2b577f
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: backend-v-56ab2b577f
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-56ab2b577f
              namespace: node-microservice
              labels:
                module: server
                service: backend
                garden.io/version: v-56ab2b577f
            spec:
              selector:
                matchLabels:
                  service: backend
                  garden.io/version: v-56ab2b577f
              template:
                metadata:
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-56ab2b577f
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.backend:
          type: get-service-status
          key: get-service-status.backend
          name: backend
          description: getting status for service 'backend' (from module 'server')
          completedAt: '2020-05-26T21:29:53.728Z'
          batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-56ab2b577f
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: backend-v-56ab2b577f
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-56ab2b577f
                  namespace: node-microservice
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-56ab2b577f
                spec:
                  selector:
                    matchLabels:
                      service: backend
                      garden.io/version: v-56ab2b577f
                  template:
                    metadata:
                      labels:
                        module: server
                        service: backend
                        garden.io/version: v-56ab2b577f
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults:
            get-service-status.db:
              type: get-service-status
              key: get-service-status.db
              name: db
              description: getting status for service 'db' (from module 'db')
              completedAt: '2020-05-26T21:29:53.691Z'
              batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
              output:
                forwardablePorts: []
                ingresses: []
                state: ready
                version: v-57df7df941
                detail:
                  remoteResources: []
                  workload:
                    kind: Deployment
                    apiVersion: apps/v1
                    metadata:
                      name: db-v-57df7df941
                      annotations:
                        garden.io/configured.replicas: '1'
                        garden.io/generated: 'true'
                        garden.io/version: v-57df7df941
                      namespace: node-microservice
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      selector:
                        matchLabels:
                          service: db
                          garden.io/version: v-57df7df941
                      template:
                        metadata:
                          labels:
                            module: db
                            service: db
                            garden.io/version: v-57df7df941
                        spec:
                          containers: []
                          restartPolicy: Always
                          terminationGracePeriodSeconds: 5
                          dnsPolicy: ClusterFirst
                      replicas: 1
                      strategy:
                        type: RollingUpdate
                        rollingUpdate:
                          maxUnavailable: 1
                          maxSurge: 1
                      revisionHistoryLimit: 3
              dependencyResults: {}
        deploy.db:
          type: deploy
          key: deploy.db
          name: db
          description: deploying service 'db' (from module 'db')
          completedAt: '2020-05-26T21:29:53.701Z'
          batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults:
            get-service-status.db:
              type: get-service-status
              key: get-service-status.db
              name: db
              description: getting status for service 'db' (from module 'db')
              completedAt: '2020-05-26T21:29:53.691Z'
              batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
              output:
                forwardablePorts: []
                ingresses: []
                state: ready
                version: v-57df7df941
                detail:
                  remoteResources: []
                  workload:
                    kind: Deployment
                    apiVersion: apps/v1
                    metadata:
                      name: db-v-57df7df941
                      annotations:
                        garden.io/configured.replicas: '1'
                        garden.io/generated: 'true'
                        garden.io/version: v-57df7df941
                      namespace: node-microservice
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      selector:
                        matchLabels:
                          service: db
                          garden.io/version: v-57df7df941
                      template:
                        metadata:
                          labels:
                            module: db
                            service: db
                            garden.io/version: v-57df7df941
                        spec:
                          containers: []
                          restartPolicy: Always
                          terminationGracePeriodSeconds: 5
                          dnsPolicy: ClusterFirst
                      replicas: 1
                      strategy:
                        type: RollingUpdate
                        rollingUpdate:
                          maxUnavailable: 1
                          maxSurge: 1
                      revisionHistoryLimit: 3
              dependencyResults: {}
            build.db:
              type: build
              key: build.db
              name: db
              description: building db
              completedAt: '2020-05-26T21:29:53.667Z'
              batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
              output:
                fresh: false
              dependencyResults:
                stage-build.db:
                  type: stage-build
                  key: stage-build.db
                  name: db
                  description: staging build for db
                  completedAt: '2020-05-26T21:29:53.662Z'
                  batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
                  output: {}
                  dependencyResults: {}
        build.server:
          type: build
          key: build.server
          name: server
          description: building server
          completedAt: '2020-05-26T21:29:53.809Z'
          batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
          output:
            fresh: false
          dependencyResults:
            stage-build.server:
              type: stage-build
              key: stage-build.server
              name: server
              description: staging build for server
              completedAt: '2020-05-26T21:29:53.009Z'
              batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
              output: {}
              dependencyResults: {}
  restartRequired: false


[2020-05-26T21:30:07.182Z] 
See error.log for detailed error message

[2020-05-26T21:33:15.537Z] Getting status...

[2020-05-26T21:33:18.683Z] Getting status... → Done

[2020-05-26T21:33:19.852Z] Running task build 🏃‍♂️ 

[2020-05-26T21:33:19.858Z] Syncing module sources (1 file)...

[2020-05-26T21:33:19.861Z] Checking result...

[2020-05-26T21:33:19.880Z] Checking result... → Done

[2020-05-26T21:33:20.335Z] Syncing module sources (1 file)... → Done (took 0.5 sec)

[2020-05-26T21:33:20.337Z] Getting build status for v-761a7001ea...

[2020-05-26T21:33:20.847Z] Building version v-761a7001ea...

[2020-05-26T21:33:20.913Z] Building client:v-761a7001ea...

[2020-05-26T21:33:21.174Z] Building client:v-761a7001ea...

[2020-05-26T21:33:21.191Z] Error: Unable to run docker command: Command "docker build -t client:v-761a7001ea /Users/emilwils/Documents/node-microservice/.garden/build/client" failed with code 1:

COPY failed: stat /var/lib/docker/tmp/docker-builder055147431/build: no such file or directory

Here's the full output:

Sending build context to Docker daemon  2.048kB
Step 1/2 : FROM nginx
 ---> 9beeba249f3e
Step 2/2 : COPY build/ /usr/share/nginx/html
COPY failed: stat /var/lib/docker/tmp/docker-builder055147431/build: no such file or directory
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
    at Generator.throw (<anonymous>)
    at rejected (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
    at processTicksAndRejections (internal/process/task_queues.js:93:5)
Error Details:
err:
  detail:
    cmd: docker
    args:
      - build
      - '-t'
      - 'client:v-761a7001ea'
      - /Users/emilwils/Documents/node-microservice/.garden/build/client
    opts:
      cwd: /Users/emilwils/Documents/node-microservice/.garden/build/client
      ignoreError: false
      stdout:
        _readableState:
          objectMode: true
          highWaterMark: 16
          buffer:
            head: null
            tail: null
            length: 0
          length: 0
          pipes: null
          pipesCount: 0
          flowing: true
          ended: true
          endEmitted: true
          reading: false
          sync: false
          needReadable: false
          emittedReadable: false
          readableListening: false
          resumeScheduled: false
          paused: false
          emitClose: true
          destroyed: false
          defaultEncoding: utf8
          awaitDrain: 0
          readingMore: false
          decoder: null
          encoding: null
        readable: false
        _events: {}
        _eventsCount: 3
        _writableState:
          objectMode: false
          highWaterMark: 16384
          finalCalled: false
          needDrain: false
          ending: true
          ended: true
          finished: true
          destroyed: false
          decodeStrings: true
          defaultEncoding: utf8
          length: 0
          writing: false
          corked: 0
          sync: false
          bufferProcessing: false
          writecb: null
          writelen: 0
          bufferedRequest: null
          lastBufferedRequest: null
          pendingcb: 0
          prefinished: true
          errorEmitted: false
          emitClose: true
          bufferedRequestCount: 0
          corkedRequestsFree:
            next: null
            entry: null
        writable: false
        allowHalfOpen: true
        _transformState:
          needTransform: false
          transforming: false
          writecb: null
          writechunk: null
          writeencoding: buffer
        matcher: {}
        overflow: false
      timeout: 1200
      env:
        TERM_PROGRAM: Apple_Terminal
        SHELL: /bin/zsh
        TERM: xterm-256color
        TMPDIR: /var/folders/nr/97f582w94rl7snqc5h3ldwqh0000gn/T/
        TERM_PROGRAM_VERSION: '433'
        TERM_SESSION_ID: A6BD6B7C-14CE-4383-8F6D-D382816C6EE9
        USER: emilwils
        SSH_AUTH_SOCK: /private/tmp/com.apple.launchd.3ygVNIh0vg/Listeners
        PATH: >-
          /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware
          Fusion.app/Contents/Public
        LaunchInstanceID: DD0DB73A-B855-43F4-B00C-C5EFD5F0D6A8
        PWD: /Users/emilwils/Documents/node-microservice/client
        LANG: en_US.UTF-8
        XPC_FLAGS: '0x0'
        XPC_SERVICE_NAME: '0'
        SHLVL: '1'
        HOME: /Users/emilwils
        LOGNAME: emilwils
        SECURITYSESSIONID: 186a6
        _: /usr/local/bin/garden
        __CF_USER_TEXT_ENCODING: '0x1F5:0x0:0x0'
        DOCKER_TLS_VERIFY: '1'
        DOCKER_HOST: 'tcp://192.168.99.108:2376'
        DOCKER_CERT_PATH: /Users/emilwils/.minikube/certs
        MINIKUBE_ACTIVE_DOCKERD: minikube
        DOCKER_CLI_EXPERIMENTAL: enabled
        PKG_EXECPATH: /usr/local/Cellar/garden-cli/0.11.14/libexec/garden
    result:
      code: 1
      all: "Sending build context to Docker daemon  2.048kB\r\r\nStep 1/2 : FROM nginx\n ---> 9beeba249f3e\nStep 2/2 : COPY build/ /usr/share/nginx/html\nCOPY failed: stat /var/lib/docker/tmp/docker-builder055147431/build: no such file or directory\n"
      stdout: "Sending build context to Docker daemon  2.048kB\r\r\nStep 1/2 : FROM nginx\n ---> 9beeba249f3e\nStep 2/2 : COPY build/ /usr/share/nginx/html\n"
      stderr: >
        COPY failed: stat /var/lib/docker/tmp/docker-builder055147431/build: no
        such file or directory
      proc:
        _events: {}
        _eventsCount: 2
        _closesNeeded: 3
        _closesGot: 3
        connected: false
        signalCode: null
        exitCode: 1
        killed: false
        spawnfile: docker
        _handle: null
        spawnargs:
          - docker
          - build
          - '-t'
          - 'client:v-761a7001ea'
          - /Users/emilwils/Documents/node-microservice/.garden/build/client
        pid: 24925
        stdin:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: null
            ended: false
            endEmitted: false
            reading: false
            sync: true
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: true
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 1
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stdout:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: false
            ended: true
            endEmitted: true
            reading: false
            sync: false
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: false
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 3
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stderr:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: true
            ended: true
            endEmitted: true
            reading: false
            sync: false
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: false
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 3
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stdio:
          - ~err~detail~result~proc~stdin
          - ~err~detail~result~proc~stdout
          - ~err~detail~result~proc~stderr
    code: 1
    all: "Sending build context to Docker daemon  2.048kB\r\r\nStep 1/2 : FROM nginx\n ---> 9beeba249f3e\nStep 2/2 : COPY build/ /usr/share/nginx/html\nCOPY failed: stat /var/lib/docker/tmp/docker-builder055147431/build: no such file or directory\n"
    stdout: "Sending build context to Docker daemon  2.048kB\r\r\nStep 1/2 : FROM nginx\n ---> 9beeba249f3e\nStep 2/2 : COPY build/ /usr/share/nginx/html\n"
    stderr: >
      COPY failed: stat /var/lib/docker/tmp/docker-builder055147431/build: no
      such file or directory
    proc: ~err~detail~result~proc
  type: runtime
args: []
cwd: /Users/emilwils/Documents/node-microservice/.garden/build/client


[2020-05-26T21:33:21.197Z] TypeError: Cannot read property 'error' of undefined
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at Generator.next (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at new Promise (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at Object.handleTaskResult (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at RunTaskCommand.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/run/task.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/commands/run/task.js:0)

[2020-05-26T21:33:21.200Z] 
See error.log for detailed error message

[2020-05-27T16:15:01.937Z] Getting status...

[2020-05-27T16:15:05.091Z] Getting status... → Done

[2020-05-27T16:15:06.311Z] Syncing module sources (5 files)...

[2020-05-27T16:15:06.365Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-27T16:15:06.370Z] Getting build status for v-56ab2b577f...

[2020-05-27T16:15:07.023Z] Getting build status for v-57df7df941...

[2020-05-27T16:15:07.025Z] Getting build status for v-57df7df941... → Done (took 0 sec)

[2020-05-27T16:15:07.029Z] Deploying version v-57df7df941...

[2020-05-27T16:15:07.031Z] Deploying version v-57df7df941... → Already deployed

[2020-05-27T16:15:07.132Z] Getting build status for v-56ab2b577f... → Done (took 0.8 sec)

[2020-05-27T16:15:07.134Z] Deploying version v-56ab2b577f...

[2020-05-27T16:15:07.136Z] Deploying version v-56ab2b577f... → Already deployed

[2020-05-27T16:15:07.154Z] Done! ✔️ 

[2020-05-27T16:15:21.428Z] Getting status...

[2020-05-27T16:15:24.529Z] Getting status... → Done

[2020-05-27T16:15:25.693Z] Syncing module sources (5 files)...

[2020-05-27T16:15:25.731Z] Syncing module sources (5 files)... → Done (took 0 sec)

[2020-05-27T16:15:25.734Z] Getting build status for v-56ab2b577f...

[2020-05-27T16:15:26.112Z] Getting build status for v-57df7df941...

[2020-05-27T16:15:26.117Z] Getting build status for v-57df7df941... → Done (took 0 sec)

[2020-05-27T16:15:26.124Z] Deploying version v-57df7df941...

[2020-05-27T16:15:26.125Z] Deploying version v-57df7df941... → Already deployed

[2020-05-27T16:15:26.218Z] Getting build status for v-56ab2b577f... → Done (took 0.5 sec)

[2020-05-27T16:15:26.222Z] Deploying version v-56ab2b577f...

[2020-05-27T16:15:26.225Z] Deploying version v-56ab2b577f... → Already deployed

[2020-05-27T16:15:26.245Z] Done! ✔️ 

[2020-05-27T16:16:10.321Z] Getting status...

[2020-05-27T16:16:13.414Z] Getting status... → Done

[2020-05-27T16:16:14.691Z] modules:
  - allowPublish: true
    apiVersion: garden.io/v0
    build:
      dependencies: []
    buildDependencies: {}
    buildMetadataPath: /Users/emilwils/Documents/node-microservice/.garden/build-metadata/client
    buildPath: /Users/emilwils/Documents/node-microservice/.garden/build/client
    compatibleTypes:
      - container
    configPath: /Users/emilwils/Documents/node-microservice/client/garden.yml
    description: Frontend container
    disabled: false
    kind: Module
    name: client
    needsBuild: true
    outputs:
      deployment-image-name: client
      local-image-name: client
    path: /Users/emilwils/Documents/node-microservice/client
    serviceConfigs: []
    serviceDependencyNames: []
    taskConfigs: []
    taskDependencyNames: []
    testConfigs: []
    type: container
    version:
      dependencyVersions: {}
      files:
        - /Users/emilwils/Documents/node-microservice/client/.dockerignore
        - /Users/emilwils/Documents/node-microservice/client/.gitignore
        - /Users/emilwils/Documents/node-microservice/client/Dockerfile
        - /Users/emilwils/Documents/node-microservice/client/package-lock.json
        - /Users/emilwils/Documents/node-microservice/client/package.json
        - /Users/emilwils/Documents/node-microservice/client/public/favicon.ico
        - /Users/emilwils/Documents/node-microservice/client/public/index.html
        - /Users/emilwils/Documents/node-microservice/client/public/logo192.png
        - /Users/emilwils/Documents/node-microservice/client/public/logo512.png
        - >-
          /Users/emilwils/Documents/node-microservice/client/public/manifest.json
        - /Users/emilwils/Documents/node-microservice/client/public/robots.txt
        - /Users/emilwils/Documents/node-microservice/client/src/App.css
        - /Users/emilwils/Documents/node-microservice/client/src/App.js
        - /Users/emilwils/Documents/node-microservice/client/src/index.css
        - /Users/emilwils/Documents/node-microservice/client/src/index.js
        - >-
          /Users/emilwils/Documents/node-microservice/client/src/serviceWorker.js
      versionString: v-94eed36afe
  - allowPublish: true
    apiVersion: garden.io/v0
    build:
      dependencies: []
    buildDependencies: {}
    buildMetadataPath: /Users/emilwils/Documents/node-microservice/.garden/build-metadata/server
    buildPath: /Users/emilwils/Documents/node-microservice/.garden/build/server
    compatibleTypes:
      - container
    configPath: /Users/emilwils/Documents/node-microservice/server/garden.yml
    description: Backend container
    disabled: false
    kind: Module
    name: server
    needsBuild: true
    outputs:
      deployment-image-name: server
      local-image-name: server
    path: /Users/emilwils/Documents/node-microservice/server
    serviceConfigs:
      - dependencies:
          - db
        disabled: false
        hotReloadable: false
        name: backend
    serviceDependencyNames:
      - db
    taskConfigs: []
    taskDependencyNames: []
    testConfigs: []
    type: container
    version:
      dependencyVersions: {}
      files:
        - /Users/emilwils/Documents/node-microservice/server/.dockerignore
        - /Users/emilwils/Documents/node-microservice/server/Dockerfile
        - /Users/emilwils/Documents/node-microservice/server/app.js
        - /Users/emilwils/Documents/node-microservice/server/package-lock.json
        - /Users/emilwils/Documents/node-microservice/server/package.json
      versionString: v-56ab2b577f
  - allowPublish: true
    apiVersion: garden.io/v0
    build:
      dependencies: []
    buildDependencies: {}
    buildMetadataPath: /Users/emilwils/Documents/node-microservice/.garden/build-metadata/db
    buildPath: /Users/emilwils/Documents/node-microservice/.garden/build/db
    compatibleTypes:
      - container
    configPath: /Users/emilwils/Documents/node-microservice/garden.yml
    description: Database container
    disabled: false
    include: []
    kind: Module
    name: db
    needsBuild: true
    outputs:
      deployment-image-name: mysql
      local-image-name: mysql
    path: /Users/emilwils/Documents/node-microservice
    serviceConfigs:
      - dependencies: []
        disabled: false
        hotReloadable: false
        name: db
    serviceDependencyNames: []
    taskConfigs: []
    taskDependencyNames: []
    testConfigs: []
    type: container
    version:
      dependencyVersions: {}
      files: []
      versionString: v-57df7df941


[2020-05-27T16:16:38.046Z] Getting status...

[2020-05-27T16:16:41.133Z] Getting status... → Done

[2020-05-27T16:16:42.293Z] Syncing module sources (5 files)...

[2020-05-27T16:16:42.336Z] Syncing module sources (5 files)... → Done (took 0 sec)

[2020-05-27T16:16:42.338Z] Getting build status for v-56ab2b577f...

[2020-05-27T16:16:42.707Z] Getting build status for v-57df7df941...

[2020-05-27T16:16:42.709Z] Getting build status for v-57df7df941... → Done (took 0 sec)

[2020-05-27T16:16:42.714Z] Deploying version v-57df7df941...

[2020-05-27T16:16:42.716Z] Deploying version v-57df7df941... → Already deployed

[2020-05-27T16:16:42.813Z] Getting build status for v-56ab2b577f... → Done (took 0.5 sec)

[2020-05-27T16:16:42.818Z] Deploying version v-56ab2b577f...

[2020-05-27T16:16:42.820Z] Deploying version v-56ab2b577f... → Already deployed

[2020-05-27T16:16:42.840Z] Done! ✔️ 

[2020-05-27T16:17:28.384Z] Getting status...

[2020-05-27T16:17:31.474Z] Getting status... → Done

[2020-05-27T16:17:32.645Z] Error: Could not find module(s): node-microservice
    at Object.pickKeys (/snapshot/project/garden-service/tmp/dist/build/src/util/util.js:0)
    at ConfigGraph.getModules (/snapshot/project/garden-service/tmp/dist/build/src/config-graph.js:0)
    at BuildCommand.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/build.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/commands/build.js:0)
Error Details:
missing: []
available: []


[2020-05-27T16:17:32.646Z] 
See error.log for detailed error message

[2020-05-27T16:18:04.586Z] Getting status...

[2020-05-27T16:18:07.695Z] Getting status... → Done

[2020-05-27T16:18:08.937Z] ⏳  Processing...

[2020-05-27T16:18:08.945Z] Syncing module sources (5 files)...

[2020-05-27T16:18:08.947Z] Syncing module sources (16 files)...

[2020-05-27T16:18:09.002Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-27T16:18:09.005Z] Getting build status for v-56ab2b577f...

[2020-05-27T16:18:09.411Z] Getting build status for v-57df7df941...

[2020-05-27T16:18:09.415Z] Getting build status for v-57df7df941... → Done (took 0 sec)

[2020-05-27T16:18:09.419Z] Deploying version v-57df7df941...

[2020-05-27T16:18:09.422Z] Deploying version v-57df7df941... → Already deployed

[2020-05-27T16:18:09.428Z] Syncing module sources (16 files)... → Done (took 0.5 sec)

[2020-05-27T16:18:09.431Z] Getting build status for v-94eed36afe...

[2020-05-27T16:18:09.547Z] Getting build status for v-56ab2b577f... → Done (took 0.5 sec)

[2020-05-27T16:18:09.551Z] Deploying version v-56ab2b577f...

[2020-05-27T16:18:09.554Z] Deploying version v-56ab2b577f... → Already deployed

[2020-05-27T16:18:09.564Z] → Forward: http://127.0.0.1:8080 → backend:8080 (http)

[2020-05-27T16:18:09.578Z] Building version v-94eed36afe...

[2020-05-27T16:18:09.647Z] Building client:v-94eed36afe...

[2020-05-27T16:19:08.670Z] Building client:v-94eed36afe... → Done (took 59.2 sec)

[2020-05-27T16:19:08.702Z] Waiting for code changes...

[2020-05-27T16:19:54.748Z] ⏳  Processing...

[2020-05-27T16:19:54.815Z] Waiting for code changes...

[2020-05-27T16:19:54.823Z] ⏳  Processing...

[2020-05-27T16:19:54.876Z] Waiting for code changes...

[2020-05-27T16:19:54.886Z] ⏳  Processing...

[2020-05-27T16:19:54.916Z] Waiting for code changes...

[2020-05-27T16:20:01.659Z] ⏳  Processing...

[2020-05-27T16:20:01.686Z] Waiting for code changes...

[2020-05-27T16:20:44.228Z] ⏳  Processing...

[2020-05-27T16:20:44.259Z] Waiting for code changes...

[2020-05-27T16:21:40.774Z] Getting status...

[2020-05-27T16:21:42.930Z] Getting status... → Done

[2020-05-27T16:21:43.636Z] Module configuration changed, reloading...

[2020-05-27T16:21:44.324Z] Getting status...

[2020-05-27T16:21:45.496Z] Getting status... → Done

[2020-05-27T16:21:46.017Z] ⏳  Processing...

[2020-05-27T16:21:46.021Z] Syncing module sources (5 files)...

[2020-05-27T16:21:46.029Z] Syncing module sources (16 files)...

[2020-05-27T16:21:46.092Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-27T16:21:46.096Z] Getting build status for v-56ab2b577f...

[2020-05-27T16:21:46.502Z] Getting build status for v-57df7df941...

[2020-05-27T16:21:46.508Z] Getting build status for v-57df7df941... → Done (took 0 sec)

[2020-05-27T16:21:46.513Z] Deploying version v-57df7df941...

[2020-05-27T16:21:46.518Z] Deploying version v-57df7df941... → Already deployed

[2020-05-27T16:21:46.523Z] Syncing module sources (16 files)... → Done (took 0.5 sec)

[2020-05-27T16:21:46.531Z] Getting build status for v-dd379d9320...

[2020-05-27T16:21:46.627Z] Getting build status for v-56ab2b577f... → Done (took 0.5 sec)

[2020-05-27T16:21:46.633Z] Deploying version v-56ab2b577f...

[2020-05-27T16:21:46.638Z] Deploying version v-56ab2b577f... → Already deployed

[2020-05-27T16:21:46.644Z] → Forward: http://127.0.0.1:8080 → backend:8080 (http)

[2020-05-27T16:21:46.679Z] Building version v-dd379d9320...

[2020-05-27T16:21:46.757Z] Building client:v-dd379d9320...

[2020-05-27T16:21:47.048Z] Building client:v-dd379d9320... → Done (took 0.5 sec)

[2020-05-27T16:21:47.054Z] Deploying version v-dd379d9320...

[2020-05-27T16:21:48.775Z] Waiting for resources to be ready...

[2020-05-27T16:21:50.816Z] Deployment/frontend-v-dd379d9320: Started container frontend

[2020-05-27T16:21:53.385Z] Deploying version v-dd379d9320...

[2020-05-27T16:21:53.405Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-dd379d9320: ScalingReplicaSet - Scaled up replica set frontend-v-dd379d9320-657944d865 to 1
Pod frontend-v-dd379d9320-657944d865-cd7kt: Scheduled - Successfully assigned node-microservice/frontend-v-dd379d9320-657944d865-cd7kt to minikube
Pod frontend-v-dd379d9320-657944d865-cd7kt: Pulled - Container image "client:v-dd379d9320" already present on machine
Pod frontend-v-dd379d9320-657944d865-cd7kt: Created - Created container frontend
Pod frontend-v-dd379d9320-657944d865-cd7kt: Started - Started container frontend
Pod frontend-v-dd379d9320-657944d865-cd7kt: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-dd379d9320

****** frontend-v-dd379d9320-657944d865-cd7kt ******
------ frontend ------
> client@0.1.0 start /client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.9/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-dd379d9320:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-dd379d9320-657944d865 to 1\e[39m\n\e[94mPod frontend-v-dd379d9320-657944d865-cd7kt:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-dd379d9320-657944d865-cd7kt to minikube\e[39m\n\e[94mPod frontend-v-dd379d9320-657944d865-cd7kt:\e[39m \e[37mPulled - Container image \"client:v-dd379d9320\" already present on machine\e[39m\n\e[94mPod frontend-v-dd379d9320-657944d865-cd7kt:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-dd379d9320-657944d865-cd7kt:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-dd379d9320-657944d865-cd7kt:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-dd379d9320\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-dd379d9320-657944d865-cd7kt ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.9/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-dd379d9320
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-dd379d9320
      uid: a42f0167-7936-4799-b8b4-a9d8d8de84d7
      resourceVersion: '35695'
      generation: 1
      creationTimestamp: '2020-05-27T16:21:47Z'
      labels:
        garden.io/version: v-dd379d9320
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 9f66f130de687826bdc6cdbf8030ac8d424888e7610eb13ec9107484307b6e8f
        garden.io/version: v-dd379d9320
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"9f66f130de687826bdc6cdbf8030ac8d424888e7610eb13ec9107484307b6e8f","garden.io/version":"v-dd379d9320"},"labels":{"garden.io/version":"v-dd379d9320","module":"client","service":"frontend"},"name":"frontend-v-dd379d9320","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-dd379d9320","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-dd379d9320","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-dd379d9320"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-dd379d9320\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-dd379d9320","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-dd379d9320
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-dd379d9320
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T16:21:53.429Z] Waiting for code changes...

[2020-05-27T16:22:02.723Z] ⏳  Processing...

[2020-05-27T16:22:02.774Z] ⏳  Processing...

[2020-05-27T16:22:02.791Z] Waiting for code changes...

[2020-05-27T16:22:02.801Z] ⏳  Processing...

[2020-05-27T16:22:02.891Z] Waiting for code changes...

[2020-05-27T16:22:02.903Z] ⏳  Processing...

[2020-05-27T16:22:02.928Z] Waiting for code changes...

[2020-05-27T16:22:05.721Z] ⏳  Processing...

[2020-05-27T16:22:05.744Z] Waiting for code changes...

[2020-05-27T16:22:40.330Z] ⏳  Processing...

[2020-05-27T16:22:40.367Z] Waiting for code changes...

[2020-05-27T16:24:31.699Z] ⏳  Processing...

[2020-05-27T16:24:31.864Z] Waiting for code changes...

[2020-05-27T16:24:31.879Z] ⏳  Processing...

[2020-05-27T16:24:32.007Z] Waiting for code changes...

[2020-05-27T16:24:32.019Z] ⏳  Processing...

[2020-05-27T16:24:32.027Z] Syncing module sources (17 files)...

[2020-05-27T16:24:32.397Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-27T16:24:32.404Z] Building version v-c6aa67d3aa...

[2020-05-27T16:24:32.850Z] Building client:v-c6aa67d3aa...

[2020-05-27T16:24:33.354Z] Building client:v-c6aa67d3aa... → Done (took 0.9 sec)

[2020-05-27T16:24:33.362Z] Deploying version v-c6aa67d3aa...

[2020-05-27T16:24:35.116Z] Waiting for resources to be ready...

[2020-05-27T16:24:37.167Z] Deployment/frontend-v-c6aa67d3aa: Started container frontend

[2020-05-27T16:24:39.735Z] Deploying version v-c6aa67d3aa...

[2020-05-27T16:24:39.749Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 10s restarting failed container=frontend pod=frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg_node-microservice(8619ded7-a031-4d7b-ae79-f4337ce57914)

━━━ Events ━━━
Deployment frontend-v-c6aa67d3aa: ScalingReplicaSet - Scaled up replica set frontend-v-c6aa67d3aa-d4fb6dcbf to 1
Pod frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg: Scheduled - Successfully assigned node-microservice/frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg to minikube
Pod frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg: Pulled - Container image "client:v-c6aa67d3aa" already present on machine
Pod frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg: Created - Created container frontend
Pod frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg: Started - Started container frontend
Pod frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-c6aa67d3aa

****** frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg ******
------ frontend ------
> client@0.1.0 start /client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=frontend
    pod=frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg_node-microservice(8619ded7-a031-4d7b-ae79-f4337ce57914)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-c6aa67d3aa:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-c6aa67d3aa-d4fb6dcbf to 1\e[39m\n\e[94mPod frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg to minikube\e[39m\n\e[94mPod frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg:\e[39m \e[37mPulled - Container image \"client:v-c6aa67d3aa\" already present on machine\e[39m\n\e[94mPod frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-c6aa67d3aa\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-c6aa67d3aa
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-c6aa67d3aa
      uid: 02fed957-6481-44f7-9b6d-a29caedb9bac
      resourceVersion: '36166'
      generation: 1
      creationTimestamp: '2020-05-27T16:24:33Z'
      labels:
        garden.io/version: v-c6aa67d3aa
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: cae1fa2ec05b0a24ef2abf7afe947753a4a8222facc5214634faed032a1ec001
        garden.io/version: v-c6aa67d3aa
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"cae1fa2ec05b0a24ef2abf7afe947753a4a8222facc5214634faed032a1ec001","garden.io/version":"v-c6aa67d3aa"},"labels":{"garden.io/version":"v-c6aa67d3aa","module":"client","service":"frontend"},"name":"frontend-v-c6aa67d3aa","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-c6aa67d3aa","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-c6aa67d3aa","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-c6aa67d3aa"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-c6aa67d3aa\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-c6aa67d3aa","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-c6aa67d3aa
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-c6aa67d3aa
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T16:24:39.760Z] Waiting for code changes...

[2020-05-27T16:26:03.622Z] ⏳  Processing...

[2020-05-27T16:26:03.790Z] Waiting for code changes...

[2020-05-27T16:26:03.804Z] ⏳  Processing...

[2020-05-27T16:26:03.814Z] Syncing module sources (17 files)...

[2020-05-27T16:26:04.313Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-27T16:26:04.324Z] Building version v-58e85129af...

[2020-05-27T16:26:04.773Z] Building client:v-58e85129af...

[2020-05-27T16:26:05.290Z] Building client:v-58e85129af... → Done (took 1 sec)

[2020-05-27T16:26:05.301Z] Deploying version v-58e85129af...

[2020-05-27T16:26:07.058Z] Waiting for resources to be ready...

[2020-05-27T16:26:09.120Z] Deployment/frontend-v-58e85129af: Started container frontend

[2020-05-27T16:26:11.687Z] Deploying version v-58e85129af...

[2020-05-27T16:26:11.705Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-58e85129af: ScalingReplicaSet - Scaled up replica set frontend-v-58e85129af-cf44bfb7f to 1
Pod frontend-v-58e85129af-cf44bfb7f-zc2bh: Scheduled - Successfully assigned node-microservice/frontend-v-58e85129af-cf44bfb7f-zc2bh to minikube
Pod frontend-v-58e85129af-cf44bfb7f-zc2bh: Pulled - Container image "client:v-58e85129af" already present on machine
Pod frontend-v-58e85129af-cf44bfb7f-zc2bh: Created - Created container frontend
Pod frontend-v-58e85129af-cf44bfb7f-zc2bh: Started - Started container frontend
Pod frontend-v-58e85129af-cf44bfb7f-zc2bh: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-58e85129af

****** frontend-v-58e85129af-cf44bfb7f-zc2bh ******
------ frontend ------
> client@0.1.0 start /client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.9/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-58e85129af:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-58e85129af-cf44bfb7f to 1\e[39m\n\e[94mPod frontend-v-58e85129af-cf44bfb7f-zc2bh:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-58e85129af-cf44bfb7f-zc2bh to minikube\e[39m\n\e[94mPod frontend-v-58e85129af-cf44bfb7f-zc2bh:\e[39m \e[37mPulled - Container image \"client:v-58e85129af\" already present on machine\e[39m\n\e[94mPod frontend-v-58e85129af-cf44bfb7f-zc2bh:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-58e85129af-cf44bfb7f-zc2bh:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-58e85129af-cf44bfb7f-zc2bh:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-58e85129af\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-58e85129af-cf44bfb7f-zc2bh ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.9/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-58e85129af
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-58e85129af
      uid: edb6c217-6053-4036-aa67-f2aa818224fc
      resourceVersion: '36455'
      generation: 1
      creationTimestamp: '2020-05-27T16:26:05Z'
      labels:
        garden.io/version: v-58e85129af
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 50ff583d44e297a50c8e7756be3bf6d8c7b0d3e72622422915194441bbf4ae4c
        garden.io/version: v-58e85129af
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"50ff583d44e297a50c8e7756be3bf6d8c7b0d3e72622422915194441bbf4ae4c","garden.io/version":"v-58e85129af"},"labels":{"garden.io/version":"v-58e85129af","module":"client","service":"frontend"},"name":"frontend-v-58e85129af","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-58e85129af","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-58e85129af","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-58e85129af"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-58e85129af\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-58e85129af","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-58e85129af
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-58e85129af
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T16:26:11.717Z] Waiting for code changes...

[2020-05-27T16:28:39.374Z] ⏳  Processing...

[2020-05-27T16:28:39.544Z] Waiting for code changes...

[2020-05-27T16:28:39.560Z] ⏳  Processing...

[2020-05-27T16:28:39.572Z] Syncing module sources (17 files)...

[2020-05-27T16:28:39.872Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-27T16:28:39.885Z] Building version v-e50057b7a1...

[2020-05-27T16:28:40.343Z] Building client:v-e50057b7a1...

[2020-05-27T16:28:40.842Z] Building client:v-e50057b7a1... → Done (took 1 sec)

[2020-05-27T16:28:40.855Z] Deploying version v-e50057b7a1...

[2020-05-27T16:28:42.591Z] Waiting for resources to be ready...

[2020-05-27T16:28:44.640Z] Deployment/frontend-v-e50057b7a1: Started container frontend

[2020-05-27T16:28:47.212Z] Deploying version v-e50057b7a1...

[2020-05-27T16:28:47.228Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 10s restarting failed container=frontend pod=frontend-v-e50057b7a1-bfd4c7bf-4pc5g_node-microservice(c72ee8bb-faa3-4950-9795-d9d8c13de46f)

━━━ Events ━━━
Deployment frontend-v-e50057b7a1: ScalingReplicaSet - Scaled up replica set frontend-v-e50057b7a1-bfd4c7bf to 1
Pod frontend-v-e50057b7a1-bfd4c7bf-4pc5g: Scheduled - Successfully assigned node-microservice/frontend-v-e50057b7a1-bfd4c7bf-4pc5g to minikube
Pod frontend-v-e50057b7a1-bfd4c7bf-4pc5g: Pulled - Container image "client:v-e50057b7a1" already present on machine
Pod frontend-v-e50057b7a1-bfd4c7bf-4pc5g: Created - Created container frontend
Pod frontend-v-e50057b7a1-bfd4c7bf-4pc5g: Started - Started container frontend
Pod frontend-v-e50057b7a1-bfd4c7bf-4pc5g: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-e50057b7a1

****** frontend-v-e50057b7a1-bfd4c7bf-4pc5g ******
------ frontend ------
> client@0.1.0 start /client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=frontend
    pod=frontend-v-e50057b7a1-bfd4c7bf-4pc5g_node-microservice(c72ee8bb-faa3-4950-9795-d9d8c13de46f)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-e50057b7a1:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-e50057b7a1-bfd4c7bf to 1\e[39m\n\e[94mPod frontend-v-e50057b7a1-bfd4c7bf-4pc5g:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-e50057b7a1-bfd4c7bf-4pc5g to minikube\e[39m\n\e[94mPod frontend-v-e50057b7a1-bfd4c7bf-4pc5g:\e[39m \e[37mPulled - Container image \"client:v-e50057b7a1\" already present on machine\e[39m\n\e[94mPod frontend-v-e50057b7a1-bfd4c7bf-4pc5g:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-e50057b7a1-bfd4c7bf-4pc5g:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-e50057b7a1-bfd4c7bf-4pc5g:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-e50057b7a1\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-e50057b7a1-bfd4c7bf-4pc5g ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-e50057b7a1
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-e50057b7a1
      uid: 2fda685f-f99a-457f-9281-9833395303c4
      resourceVersion: '36896'
      generation: 1
      creationTimestamp: '2020-05-27T16:28:41Z'
      labels:
        garden.io/version: v-e50057b7a1
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 274aa061853b7da8b3101872421832ee0ce155d11e48e9117823ad0ec73166d8
        garden.io/version: v-e50057b7a1
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"274aa061853b7da8b3101872421832ee0ce155d11e48e9117823ad0ec73166d8","garden.io/version":"v-e50057b7a1"},"labels":{"garden.io/version":"v-e50057b7a1","module":"client","service":"frontend"},"name":"frontend-v-e50057b7a1","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-e50057b7a1","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-e50057b7a1","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-e50057b7a1"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-e50057b7a1\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-e50057b7a1","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-e50057b7a1
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-e50057b7a1
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T16:28:47.241Z] ⏳  Processing...

[2020-05-27T16:28:47.253Z] Syncing module sources (17 files)...

[2020-05-27T16:28:47.536Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-27T16:28:47.551Z] Building version v-a9e68860e7...

[2020-05-27T16:28:47.824Z] Building client:v-a9e68860e7...

[2020-05-27T16:28:48.293Z] Building client:v-a9e68860e7... → Done (took 0.7 sec)

[2020-05-27T16:28:48.307Z] Deploying version v-a9e68860e7...

[2020-05-27T16:28:50.234Z] Waiting for resources to be ready...

[2020-05-27T16:28:52.287Z] Deployment/frontend-v-a9e68860e7: Started container frontend

[2020-05-27T16:28:54.850Z] Deploying version v-a9e68860e7...

[2020-05-27T16:28:54.868Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-a9e68860e7: ScalingReplicaSet - Scaled up replica set frontend-v-a9e68860e7-565574677c to 1
Pod frontend-v-a9e68860e7-565574677c-vv7jf: Scheduled - Successfully assigned node-microservice/frontend-v-a9e68860e7-565574677c-vv7jf to minikube
Pod frontend-v-a9e68860e7-565574677c-vv7jf: Pulled - Container image "client:v-a9e68860e7" already present on machine
Pod frontend-v-a9e68860e7-565574677c-vv7jf: Created - Created container frontend
Pod frontend-v-a9e68860e7-565574677c-vv7jf: Started - Started container frontend
Pod frontend-v-a9e68860e7-565574677c-vv7jf: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-a9e68860e7

****** frontend-v-a9e68860e7-565574677c-vv7jf ******
------ frontend ------
> client@0.1.0 start /client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.9/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-a9e68860e7:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-a9e68860e7-565574677c to 1\e[39m\n\e[94mPod frontend-v-a9e68860e7-565574677c-vv7jf:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-a9e68860e7-565574677c-vv7jf to minikube\e[39m\n\e[94mPod frontend-v-a9e68860e7-565574677c-vv7jf:\e[39m \e[37mPulled - Container image \"client:v-a9e68860e7\" already present on machine\e[39m\n\e[94mPod frontend-v-a9e68860e7-565574677c-vv7jf:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-a9e68860e7-565574677c-vv7jf:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-a9e68860e7-565574677c-vv7jf:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-a9e68860e7\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-a9e68860e7-565574677c-vv7jf ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.9/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-a9e68860e7
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-a9e68860e7
      uid: 3c168879-bdee-4d05-bd40-9eb73459f9b9
      resourceVersion: '36961'
      generation: 1
      creationTimestamp: '2020-05-27T16:28:48Z'
      labels:
        garden.io/version: v-a9e68860e7
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: e3cafda182842f145d6c76f0398b2aad0f6aba4d0723ab9160f18f69ae7b2afb
        garden.io/version: v-a9e68860e7
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"e3cafda182842f145d6c76f0398b2aad0f6aba4d0723ab9160f18f69ae7b2afb","garden.io/version":"v-a9e68860e7"},"labels":{"garden.io/version":"v-a9e68860e7","module":"client","service":"frontend"},"name":"frontend-v-a9e68860e7","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-a9e68860e7","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-a9e68860e7","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-a9e68860e7"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-a9e68860e7\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-a9e68860e7","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-a9e68860e7
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-a9e68860e7
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T16:28:54.884Z] Waiting for code changes...

[2020-05-27T16:37:59.641Z] ⏳  Processing...

[2020-05-27T16:37:59.798Z] Waiting for code changes...

[2020-05-27T16:37:59.816Z] ⏳  Processing...

[2020-05-27T16:37:59.830Z] Syncing module sources (17 files)...

[2020-05-27T16:38:00.401Z] Syncing module sources (17 files)... → Done (took 0.6 sec)

[2020-05-27T16:38:00.418Z] Building version v-b17b93eeb9...

[2020-05-27T16:38:00.876Z] Building client:v-b17b93eeb9...

[2020-05-27T16:38:01.381Z] Building client:v-b17b93eeb9... → Done (took 1 sec)

[2020-05-27T16:38:01.396Z] Deploying version v-b17b93eeb9...

[2020-05-27T16:38:03.131Z] Waiting for resources to be ready...

[2020-05-27T16:38:05.199Z] Deployment/frontend-v-b17b93eeb9: Started container frontend

[2020-05-27T16:38:07.779Z] Deploying version v-b17b93eeb9...

[2020-05-27T16:38:07.798Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-b17b93eeb9: ScalingReplicaSet - Scaled up replica set frontend-v-b17b93eeb9-65d559c49c to 1
Pod frontend-v-b17b93eeb9-65d559c49c-sq5gv: Scheduled - Successfully assigned node-microservice/frontend-v-b17b93eeb9-65d559c49c-sq5gv to minikube
Pod frontend-v-b17b93eeb9-65d559c49c-sq5gv: Pulled - Container image "client:v-b17b93eeb9" already present on machine
Pod frontend-v-b17b93eeb9-65d559c49c-sq5gv: Created - Created container frontend
Pod frontend-v-b17b93eeb9-65d559c49c-sq5gv: Started - Started container frontend
Pod frontend-v-b17b93eeb9-65d559c49c-sq5gv: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-b17b93eeb9

****** frontend-v-b17b93eeb9-65d559c49c-sq5gv ******
------ frontend ------
> client@0.1.0 start /client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.3/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-b17b93eeb9:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-b17b93eeb9-65d559c49c to 1\e[39m\n\e[94mPod frontend-v-b17b93eeb9-65d559c49c-sq5gv:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-b17b93eeb9-65d559c49c-sq5gv to minikube\e[39m\n\e[94mPod frontend-v-b17b93eeb9-65d559c49c-sq5gv:\e[39m \e[37mPulled - Container image \"client:v-b17b93eeb9\" already present on machine\e[39m\n\e[94mPod frontend-v-b17b93eeb9-65d559c49c-sq5gv:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-b17b93eeb9-65d559c49c-sq5gv:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-b17b93eeb9-65d559c49c-sq5gv:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-b17b93eeb9\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-b17b93eeb9-65d559c49c-sq5gv ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.3/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-b17b93eeb9
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-b17b93eeb9
      uid: f7630866-37d8-4be4-9ee0-1660de048a51
      resourceVersion: '38560'
      generation: 1
      creationTimestamp: '2020-05-27T16:38:01Z'
      labels:
        garden.io/version: v-b17b93eeb9
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: c986a35b6d00b1f8edf247a9450c231701bb21be2b974026648e4e6f3cb5e1cd
        garden.io/version: v-b17b93eeb9
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"c986a35b6d00b1f8edf247a9450c231701bb21be2b974026648e4e6f3cb5e1cd","garden.io/version":"v-b17b93eeb9"},"labels":{"garden.io/version":"v-b17b93eeb9","module":"client","service":"frontend"},"name":"frontend-v-b17b93eeb9","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-b17b93eeb9","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-b17b93eeb9","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-b17b93eeb9"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-b17b93eeb9\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-b17b93eeb9","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-b17b93eeb9
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-b17b93eeb9
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T16:38:07.817Z] Waiting for code changes...

[2020-05-27T16:38:19.836Z] ⏳  Processing...

[2020-05-27T16:38:19.989Z] Waiting for code changes...

[2020-05-27T16:38:20.010Z] ⏳  Processing...

[2020-05-27T16:38:20.027Z] Syncing module sources (17 files)...

[2020-05-27T16:38:20.361Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-27T16:38:20.380Z] Building version v-892795808e...

[2020-05-27T16:38:20.851Z] Building client:v-892795808e...

[2020-05-27T16:38:21.425Z] Building client:v-892795808e... → Done (took 1 sec)

[2020-05-27T16:38:21.443Z] Deploying version v-892795808e...

[2020-05-27T16:38:23.153Z] Waiting for resources to be ready...

[2020-05-27T16:38:25.204Z] Deployment/frontend-v-892795808e: Started container frontend

[2020-05-27T16:38:27.787Z] Deploying version v-892795808e...

[2020-05-27T16:38:27.806Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 10s restarting failed container=frontend pod=frontend-v-892795808e-699fb6f79c-7sjv9_node-microservice(21addf22-279a-49e6-991a-7d0d376dfc5e)

━━━ Events ━━━
Deployment frontend-v-892795808e: ScalingReplicaSet - Scaled up replica set frontend-v-892795808e-699fb6f79c to 1
Pod frontend-v-892795808e-699fb6f79c-7sjv9: Scheduled - Successfully assigned node-microservice/frontend-v-892795808e-699fb6f79c-7sjv9 to minikube
Pod frontend-v-892795808e-699fb6f79c-7sjv9: Pulled - Container image "client:v-892795808e" already present on machine
Pod frontend-v-892795808e-699fb6f79c-7sjv9: Created - Created container frontend
Pod frontend-v-892795808e-699fb6f79c-7sjv9: Started - Started container frontend
Pod frontend-v-892795808e-699fb6f79c-7sjv9: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-892795808e

****** frontend-v-892795808e-699fb6f79c-7sjv9 ******
------ frontend ------
> client@0.1.0 start /client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=frontend
    pod=frontend-v-892795808e-699fb6f79c-7sjv9_node-microservice(21addf22-279a-49e6-991a-7d0d376dfc5e)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-892795808e:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-892795808e-699fb6f79c to 1\e[39m\n\e[94mPod frontend-v-892795808e-699fb6f79c-7sjv9:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-892795808e-699fb6f79c-7sjv9 to minikube\e[39m\n\e[94mPod frontend-v-892795808e-699fb6f79c-7sjv9:\e[39m \e[37mPulled - Container image \"client:v-892795808e\" already present on machine\e[39m\n\e[94mPod frontend-v-892795808e-699fb6f79c-7sjv9:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-892795808e-699fb6f79c-7sjv9:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-892795808e-699fb6f79c-7sjv9:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-892795808e\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-892795808e-699fb6f79c-7sjv9 ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-892795808e
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-892795808e
      uid: 5249ffcc-2110-4a6c-a27f-dcbdf8d4fa3f
      resourceVersion: '38655'
      generation: 1
      creationTimestamp: '2020-05-27T16:38:21Z'
      labels:
        garden.io/version: v-892795808e
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 2ab1133e5c983fe3e9dc23e84ee4a8fc1097eabd58f2afa73f66f700674433a6
        garden.io/version: v-892795808e
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"2ab1133e5c983fe3e9dc23e84ee4a8fc1097eabd58f2afa73f66f700674433a6","garden.io/version":"v-892795808e"},"labels":{"garden.io/version":"v-892795808e","module":"client","service":"frontend"},"name":"frontend-v-892795808e","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-892795808e","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-892795808e","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-892795808e"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-892795808e\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-892795808e","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-892795808e
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-892795808e
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T16:38:27.824Z] ⏳  Processing...

[2020-05-27T16:38:27.840Z] Syncing module sources (17 files)...

[2020-05-27T16:38:28.123Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-27T16:38:28.142Z] Building version v-f8e05f103e...

[2020-05-27T16:38:28.409Z] Building client:v-f8e05f103e...

[2020-05-27T16:38:28.676Z] Building client:v-f8e05f103e... → Done (took 0.5 sec)

[2020-05-27T16:38:28.696Z] Deploying version v-f8e05f103e...

[2020-05-27T16:38:30.431Z] Waiting for resources to be ready...

[2020-05-27T16:38:32.487Z] Deployment/frontend-v-f8e05f103e: Started container frontend

[2020-05-27T16:38:35.057Z] Deploying version v-f8e05f103e...

[2020-05-27T16:38:35.078Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 10s restarting failed container=frontend pod=frontend-v-f8e05f103e-8444f4fbc7-dh497_node-microservice(9b81a085-335d-40de-8fd4-306dee620cfc)

━━━ Events ━━━
Deployment frontend-v-f8e05f103e: ScalingReplicaSet - Scaled up replica set frontend-v-f8e05f103e-8444f4fbc7 to 1
Pod frontend-v-f8e05f103e-8444f4fbc7-dh497: Scheduled - Successfully assigned node-microservice/frontend-v-f8e05f103e-8444f4fbc7-dh497 to minikube
Pod frontend-v-f8e05f103e-8444f4fbc7-dh497: Pulled - Container image "client:v-f8e05f103e" already present on machine
Pod frontend-v-f8e05f103e-8444f4fbc7-dh497: Created - Created container frontend
Pod frontend-v-f8e05f103e-8444f4fbc7-dh497: Started - Started container frontend
Pod frontend-v-f8e05f103e-8444f4fbc7-dh497: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-f8e05f103e

****** frontend-v-f8e05f103e-8444f4fbc7-dh497 ******
------ frontend ------
> client@0.1.0 start /client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.3/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=frontend
    pod=frontend-v-f8e05f103e-8444f4fbc7-dh497_node-microservice(9b81a085-335d-40de-8fd4-306dee620cfc)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-f8e05f103e:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-f8e05f103e-8444f4fbc7 to 1\e[39m\n\e[94mPod frontend-v-f8e05f103e-8444f4fbc7-dh497:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-f8e05f103e-8444f4fbc7-dh497 to minikube\e[39m\n\e[94mPod frontend-v-f8e05f103e-8444f4fbc7-dh497:\e[39m \e[37mPulled - Container image \"client:v-f8e05f103e\" already present on machine\e[39m\n\e[94mPod frontend-v-f8e05f103e-8444f4fbc7-dh497:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-f8e05f103e-8444f4fbc7-dh497:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-f8e05f103e-8444f4fbc7-dh497:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-f8e05f103e\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-f8e05f103e-8444f4fbc7-dh497 ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.3/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-f8e05f103e
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-f8e05f103e
      uid: 674039fe-516f-49ea-a547-ed08ab317018
      resourceVersion: '38719'
      generation: 1
      creationTimestamp: '2020-05-27T16:38:29Z'
      labels:
        garden.io/version: v-f8e05f103e
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: da9217c1aa3530c9a48e90b39e90db2c1dd89302f99173b0f53baf5708049299
        garden.io/version: v-f8e05f103e
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"da9217c1aa3530c9a48e90b39e90db2c1dd89302f99173b0f53baf5708049299","garden.io/version":"v-f8e05f103e"},"labels":{"garden.io/version":"v-f8e05f103e","module":"client","service":"frontend"},"name":"frontend-v-f8e05f103e","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-f8e05f103e","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-f8e05f103e","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-f8e05f103e"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-f8e05f103e\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-f8e05f103e","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-f8e05f103e
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-f8e05f103e
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T16:38:35.096Z] Waiting for code changes...

[2020-05-27T16:43:03.656Z] ⏳  Processing...

[2020-05-27T16:43:03.834Z] Waiting for code changes...

[2020-05-27T16:43:03.857Z] ⏳  Processing...

[2020-05-27T16:43:03.876Z] Syncing module sources (17 files)...

[2020-05-27T16:43:04.241Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-27T16:43:04.261Z] Building version v-ed5f9cd88c...

[2020-05-27T16:43:04.726Z] Building client:v-ed5f9cd88c...

[2020-05-27T16:44:01.137Z] Building client:v-ed5f9cd88c... → Done (took 56.9 sec)

[2020-05-27T16:44:01.160Z] Deploying version v-ed5f9cd88c...

[2020-05-27T16:44:03.842Z] Waiting for resources to be ready...

[2020-05-27T16:44:05.941Z] Deployment/frontend-v-ed5f9cd88c: Started container frontend

[2020-05-27T16:44:08.526Z] Deploying version v-ed5f9cd88c...

[2020-05-27T16:44:08.549Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-ed5f9cd88c: ScalingReplicaSet - Scaled up replica set frontend-v-ed5f9cd88c-978478d4f to 1
Pod frontend-v-ed5f9cd88c-978478d4f-tmccc: Scheduled - Successfully assigned node-microservice/frontend-v-ed5f9cd88c-978478d4f-tmccc to minikube
Pod frontend-v-ed5f9cd88c-978478d4f-tmccc: Pulled - Container image "client:v-ed5f9cd88c" already present on machine
Pod frontend-v-ed5f9cd88c-978478d4f-tmccc: Created - Created container frontend
Pod frontend-v-ed5f9cd88c-978478d4f-tmccc: Started - Started container frontend
Pod frontend-v-ed5f9cd88c-978478d4f-tmccc: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-ed5f9cd88c

****** frontend-v-ed5f9cd88c-978478d4f-tmccc ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-ed5f9cd88c:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-ed5f9cd88c-978478d4f to 1\e[39m\n\e[94mPod frontend-v-ed5f9cd88c-978478d4f-tmccc:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-ed5f9cd88c-978478d4f-tmccc to minikube\e[39m\n\e[94mPod frontend-v-ed5f9cd88c-978478d4f-tmccc:\e[39m \e[37mPulled - Container image \"client:v-ed5f9cd88c\" already present on machine\e[39m\n\e[94mPod frontend-v-ed5f9cd88c-978478d4f-tmccc:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-ed5f9cd88c-978478d4f-tmccc:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-ed5f9cd88c-978478d4f-tmccc:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-ed5f9cd88c\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-ed5f9cd88c-978478d4f-tmccc ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-ed5f9cd88c
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-ed5f9cd88c
      uid: 3b8db9a2-832d-4c60-bbfd-23c2b76e5dc0
      resourceVersion: '39647'
      generation: 1
      creationTimestamp: '2020-05-27T16:44:02Z'
      labels:
        garden.io/version: v-ed5f9cd88c
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 48961e33f91128db6f5da6241c3ed4cfd939ba736bd01319b0c0db569f5a9379
        garden.io/version: v-ed5f9cd88c
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"48961e33f91128db6f5da6241c3ed4cfd939ba736bd01319b0c0db569f5a9379","garden.io/version":"v-ed5f9cd88c"},"labels":{"garden.io/version":"v-ed5f9cd88c","module":"client","service":"frontend"},"name":"frontend-v-ed5f9cd88c","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-ed5f9cd88c","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-ed5f9cd88c","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-ed5f9cd88c"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-ed5f9cd88c\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-ed5f9cd88c","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-ed5f9cd88c
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-ed5f9cd88c
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T16:44:08.571Z] ⏳  Processing...

[2020-05-27T16:44:08.590Z] Syncing module sources (17 files)...

[2020-05-27T16:44:08.999Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-27T16:44:09.021Z] Building version v-eee65a97ae...

[2020-05-27T16:44:09.479Z] Building client:v-eee65a97ae...

[2020-05-27T16:44:10.107Z] Building client:v-eee65a97ae... → Done (took 1.1 sec)

[2020-05-27T16:44:10.129Z] Deploying version v-eee65a97ae...

[2020-05-27T16:44:11.893Z] Waiting for resources to be ready...

[2020-05-27T16:44:13.978Z] Deployment/frontend-v-eee65a97ae: Started container frontend

[2020-05-27T16:44:16.553Z] Deploying version v-eee65a97ae...

[2020-05-27T16:44:16.581Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-eee65a97ae: ScalingReplicaSet - Scaled up replica set frontend-v-eee65a97ae-577d898f77 to 1
Pod frontend-v-eee65a97ae-577d898f77-hwkn5: Scheduled - Successfully assigned node-microservice/frontend-v-eee65a97ae-577d898f77-hwkn5 to minikube
Pod frontend-v-eee65a97ae-577d898f77-hwkn5: Pulled - Container image "client:v-eee65a97ae" already present on machine
Pod frontend-v-eee65a97ae-577d898f77-hwkn5: Created - Created container frontend
Pod frontend-v-eee65a97ae-577d898f77-hwkn5: Started - Started container frontend
Pod frontend-v-eee65a97ae-577d898f77-hwkn5: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-eee65a97ae

****** frontend-v-eee65a97ae-577d898f77-hwkn5 ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.3/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-eee65a97ae:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-eee65a97ae-577d898f77 to 1\e[39m\n\e[94mPod frontend-v-eee65a97ae-577d898f77-hwkn5:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-eee65a97ae-577d898f77-hwkn5 to minikube\e[39m\n\e[94mPod frontend-v-eee65a97ae-577d898f77-hwkn5:\e[39m \e[37mPulled - Container image \"client:v-eee65a97ae\" already present on machine\e[39m\n\e[94mPod frontend-v-eee65a97ae-577d898f77-hwkn5:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-eee65a97ae-577d898f77-hwkn5:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-eee65a97ae-577d898f77-hwkn5:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-eee65a97ae\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-eee65a97ae-577d898f77-hwkn5 ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.3/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-eee65a97ae
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-eee65a97ae
      uid: 5e62849a-74c5-472a-ad1e-d7ab834744df
      resourceVersion: '39709'
      generation: 1
      creationTimestamp: '2020-05-27T16:44:10Z'
      labels:
        garden.io/version: v-eee65a97ae
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 38f87bc1e73c332c3d6761897da477c7ea0326e2937bd58820f36eb29db12901
        garden.io/version: v-eee65a97ae
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"38f87bc1e73c332c3d6761897da477c7ea0326e2937bd58820f36eb29db12901","garden.io/version":"v-eee65a97ae"},"labels":{"garden.io/version":"v-eee65a97ae","module":"client","service":"frontend"},"name":"frontend-v-eee65a97ae","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-eee65a97ae","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-eee65a97ae","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-eee65a97ae"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-eee65a97ae\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-eee65a97ae","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-eee65a97ae
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-eee65a97ae
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T16:44:16.604Z] Waiting for code changes...

[2020-05-27T16:55:53.921Z] ⏳  Processing...

[2020-05-27T16:55:54.103Z] Waiting for code changes...

[2020-05-27T16:55:54.129Z] ⏳  Processing...

[2020-05-27T16:55:54.153Z] Syncing module sources (17 files)...

[2020-05-27T16:55:54.770Z] Syncing module sources (17 files)... → Done (took 0.6 sec)

[2020-05-27T16:55:54.792Z] Building version v-d6ea7b5b29...

[2020-05-27T16:55:55.256Z] Building client:v-d6ea7b5b29...

[2020-05-27T16:57:36.377Z] Building client:v-d6ea7b5b29... → Done (took 101.6 sec)

[2020-05-27T16:57:36.412Z] Deploying version v-d6ea7b5b29...

[2020-05-27T16:57:39.106Z] Waiting for resources to be ready...

[2020-05-27T16:57:41.163Z] Resources ready

[2020-05-27T16:57:41.210Z] Deploying version v-d6ea7b5b29... → Done (took 4.8 sec)

[2020-05-27T16:57:41.239Z] ⏳  Processing...

[2020-05-27T16:57:41.269Z] Syncing module sources (16 files)...

[2020-05-27T16:57:41.953Z] Syncing module sources (16 files)... → Done (took 0.7 sec)

[2020-05-27T16:57:41.983Z] Building version v-41b18b5223...

[2020-05-27T16:57:42.693Z] Building client:v-41b18b5223...

[2020-05-27T16:58:57.763Z] Building client:v-41b18b5223... → Done (took 75.8 sec)

[2020-05-27T16:58:57.790Z] Deploying version v-41b18b5223...

[2020-05-27T16:58:59.588Z] Waiting for resources to be ready...

[2020-05-27T16:59:01.626Z] Resources ready

[2020-05-27T16:59:01.668Z] Deploying version v-41b18b5223... → Done (took 3.9 sec)

[2020-05-27T16:59:01.697Z] ⏳  Processing...

[2020-05-27T16:59:01.723Z] Syncing module sources (16 files)...

[2020-05-27T16:59:02.425Z] Syncing module sources (16 files)... → Done (took 0.7 sec)

[2020-05-27T16:59:02.450Z] Building version v-41b18b5223...

[2020-05-27T16:59:02.923Z] Building client:v-41b18b5223...

[2020-05-27T16:59:03.270Z] Building client:v-41b18b5223... → Done (took 0.8 sec)

[2020-05-27T16:59:03.297Z] Deploying version v-41b18b5223...

[2020-05-27T16:59:04.850Z] Waiting for resources to be ready...

[2020-05-27T16:59:06.883Z] Resources ready

[2020-05-27T16:59:06.925Z] Deploying version v-41b18b5223... → Done (took 3.6 sec)

[2020-05-27T16:59:06.953Z] Waiting for code changes...

[2020-05-27T17:01:24.948Z] ⏳  Processing...

[2020-05-27T17:01:25.040Z] Waiting for code changes...

[2020-05-27T17:01:25.077Z] ⏳  Processing...

[2020-05-27T17:01:25.215Z] Waiting for code changes...

[2020-05-27T17:01:25.246Z] ⏳  Processing...

[2020-05-27T17:01:25.289Z] Waiting for code changes...

[2020-05-27T17:01:59.309Z] ⏳  Processing...

[2020-05-27T17:01:59.366Z] Waiting for code changes...

[2020-05-27T17:02:01.843Z] ⏳  Processing...

[2020-05-27T17:02:01.892Z] Waiting for code changes...

[2020-05-27T17:04:15.749Z] Getting status...

[2020-05-27T17:04:18.182Z] Getting status... → Done

[2020-05-27T17:04:19.010Z] Module configuration changed, reloading...

[2020-05-27T17:04:19.748Z] Getting status...

[2020-05-27T17:04:20.994Z] Getting status... → Done

[2020-05-27T17:04:21.624Z] ⏳  Processing...

[2020-05-27T17:04:21.674Z] Syncing module sources (5 files)...

[2020-05-27T17:04:21.698Z] Syncing module sources (17 files)...

[2020-05-27T17:04:21.837Z] Syncing module sources (5 files)... → Done (took 0.2 sec)

[2020-05-27T17:04:21.865Z] Getting build status for v-56ab2b577f...

[2020-05-27T17:04:22.483Z] Getting build status for v-57df7df941...

[2020-05-27T17:04:22.515Z] Getting build status for v-57df7df941... → Done (took 0 sec)

[2020-05-27T17:04:22.547Z] Deploying version v-57df7df941...

[2020-05-27T17:04:22.574Z] Deploying version v-57df7df941... → Already deployed

[2020-05-27T17:04:22.601Z] Syncing module sources (17 files)... → Done (took 0.9 sec)

[2020-05-27T17:04:22.625Z] Getting build status for v-bed8c69c81...

[2020-05-27T17:04:22.800Z] Getting build status for v-56ab2b577f... → Done (took 0.9 sec)

[2020-05-27T17:04:22.833Z] Deploying version v-56ab2b577f...

[2020-05-27T17:04:23.036Z] Building version v-bed8c69c81...

[2020-05-27T17:04:23.151Z] Building client:v-bed8c69c81...

[2020-05-27T17:04:24.410Z] Waiting for resources to be ready...

[2020-05-27T17:04:26.491Z] Deploying version v-56ab2b577f...

[2020-05-27T17:04:26.527Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Pulled - Container image "server:v-56ab2b577f" already present on machine
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Created - Created container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Started - Started container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mPulled - Container image \"server:v-56ab2b577f\" already present on machine\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '42272'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:05:07.979Z] Building client:v-bed8c69c81... → Done (took 45.3 sec)

[2020-05-27T17:05:08.020Z] Deploying version v-bed8c69c81...

[2020-05-27T17:05:10.155Z] Waiting for resources to be ready...

[2020-05-27T17:05:12.203Z] Resources ready

[2020-05-27T17:05:12.273Z] Deploying version v-bed8c69c81... → Done (took 4.3 sec)

[2020-05-27T17:05:12.304Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T17:05:12.347Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T17:05:12.386Z] Waiting for code changes...

[2020-05-27T17:10:23.210Z] ⏳  Processing...

[2020-05-27T17:10:23.405Z] Waiting for code changes...

[2020-05-27T17:10:23.437Z] ⏳  Processing...

[2020-05-27T17:10:23.467Z] Syncing module sources (17 files)...

[2020-05-27T17:10:23.941Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-27T17:10:23.976Z] Building version v-2bdbac3599...

[2020-05-27T17:10:24.435Z] Building client:v-2bdbac3599...

[2020-05-27T17:10:32.538Z] Error: Command "rsync --recursive --times --owner --group --perms --links --safe-links --ignore-missing-args --temp-dir /Users/emilwils/Documents/node-microservice/.garden/build/db.tmp --prune-empty-dirs --include-from=- --exclude=* --delete-excluded /Users/emilwils/Documents/node-microservice/ /Users/emilwils/Documents/node-microservice/.garden/build/db" failed with code 24:

directory has vanished: "/Users/emilwils/Documents/node-microservice/client/node_modules/resolve"
directory has vanished: "/Users/emilwils/Documents/node-microservice/client/node_modules/bytes"
rsync warning: some files vanished before they could be transferred (code 24) at main.c(1209) [sender=3.1.3]
    at makeError (/snapshot/project/garden-service/tmp/dist/node_modules/execa/lib/error.js:58:11)
    at handlePromise (/snapshot/project/garden-service/tmp/dist/node_modules/execa/index.js:114:26)
    at processTicksAndRejections (internal/process/task_queues.js:93:5)
Error Details:
shortMessage: >-
  Command failed with exit code 24: rsync --recursive --times --owner --group
  --perms --links --safe-links --ignore-missing-args --temp-dir
  /Users/emilwils/Documents/node-microservice/.garden/build/db.tmp
  --prune-empty-dirs --include-from=- --exclude=* --delete-excluded
  /Users/emilwils/Documents/node-microservice/
  /Users/emilwils/Documents/node-microservice/.garden/build/db
command: >-
  rsync --recursive --times --owner --group --perms --links --safe-links
  --ignore-missing-args --temp-dir
  /Users/emilwils/Documents/node-microservice/.garden/build/db.tmp
  --prune-empty-dirs --include-from=- --exclude=* --delete-excluded
  /Users/emilwils/Documents/node-microservice/
  /Users/emilwils/Documents/node-microservice/.garden/build/db
exitCode: 24
stdout: ''
stderr: >-
  directory has vanished:
  "/Users/emilwils/Documents/node-microservice/client/node_modules/resolve"

  directory has vanished:
  "/Users/emilwils/Documents/node-microservice/client/node_modules/bytes"

  rsync warning: some files vanished before they could be transferred (code 24)
  at main.c(1209) [sender=3.1.3]
all: >-
  directory has vanished:
  "/Users/emilwils/Documents/node-microservice/client/node_modules/resolve"

  directory has vanished:
  "/Users/emilwils/Documents/node-microservice/client/node_modules/bytes"

  rsync warning: some files vanished before they could be transferred (code 24)
  at main.c(1209) [sender=3.1.3]
failed: true
timedOut: false
isCanceled: false
killed: false


[2020-05-27T17:10:33.766Z] Building version v-57df7df941...

[2020-05-27T17:10:35.114Z] Building version v-57df7df941... → Done (took 1.4 sec)

[2020-05-27T17:10:35.181Z] Deploying version v-57df7df941...

[2020-05-27T17:10:38.408Z] Waiting for resources to be ready...

[2020-05-27T17:10:40.490Z] Resources ready

[2020-05-27T17:10:40.594Z] Deploying version v-57df7df941... → Done (took 5.4 sec)

[2020-05-27T17:10:40.635Z] Deploying version v-56ab2b577f...

[2020-05-27T17:10:42.267Z] Waiting for resources to be ready...

[2020-05-27T17:10:44.400Z] Deploying version v-56ab2b577f...

[2020-05-27T17:10:44.450Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Pulled - Container image "server:v-56ab2b577f" already present on machine
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Created - Created container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Started - Started container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mPulled - Container image \"server:v-56ab2b577f\" already present on machine\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '42272'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:10:44.556Z] Building version v-57df7df941...

[2020-05-27T17:10:45.460Z] Building version v-57df7df941... → Done (took 0.9 sec)

[2020-05-27T17:10:45.511Z] Deploying version v-57df7df941...

[2020-05-27T17:10:47.146Z] Waiting for resources to be ready...

[2020-05-27T17:10:49.203Z] Resources ready

[2020-05-27T17:10:49.260Z] Deploying version v-57df7df941... → Done (took 3.8 sec)

[2020-05-27T17:10:49.302Z] Deploying version v-56ab2b577f...

[2020-05-27T17:10:50.936Z] Waiting for resources to be ready...

[2020-05-27T17:10:53.067Z] Deploying version v-56ab2b577f...

[2020-05-27T17:10:53.128Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Pulled - Container image "server:v-56ab2b577f" already present on machine
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Created - Created container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Started - Started container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mPulled - Container image \"server:v-56ab2b577f\" already present on machine\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '42272'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:10:53.233Z] Building version v-57df7df941...

[2020-05-27T17:10:53.850Z] Building version v-57df7df941... → Done (took 0.6 sec)

[2020-05-27T17:10:53.899Z] Deploying version v-57df7df941...

[2020-05-27T17:10:55.536Z] Waiting for resources to be ready...

[2020-05-27T17:10:57.594Z] Resources ready

[2020-05-27T17:10:57.680Z] Deploying version v-57df7df941... → Done (took 3.8 sec)

[2020-05-27T17:10:57.722Z] Deploying version v-56ab2b577f...

[2020-05-27T17:10:59.343Z] Waiting for resources to be ready...

[2020-05-27T17:11:01.460Z] Deploying version v-56ab2b577f...

[2020-05-27T17:11:01.516Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Pulled - Container image "server:v-56ab2b577f" already present on machine
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Created - Created container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Started - Started container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mPulled - Container image \"server:v-56ab2b577f\" already present on machine\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '42272'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:11:01.629Z] Building version v-57df7df941...

[2020-05-27T17:11:02.371Z] Building version v-57df7df941... → Done (took 0.7 sec)

[2020-05-27T17:11:02.423Z] Deploying version v-57df7df941...

[2020-05-27T17:11:03.879Z] Waiting for resources to be ready...

[2020-05-27T17:11:05.944Z] Resources ready

[2020-05-27T17:11:06.003Z] Deploying version v-57df7df941... → Done (took 3.6 sec)

[2020-05-27T17:11:06.049Z] Deploying version v-56ab2b577f...

[2020-05-27T17:11:07.691Z] Waiting for resources to be ready...

[2020-05-27T17:11:09.799Z] Deploying version v-56ab2b577f...

[2020-05-27T17:11:09.853Z] Error: Error deploying backend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Pulled - Container image "server:v-56ab2b577f" already present on machine
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Created - Created container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Started - Started container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mPulled - Container image \"server:v-56ab2b577f\" already present on machine\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '43778'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:11:09.988Z] Building version v-57df7df941...

[2020-05-27T17:11:10.565Z] Building version v-57df7df941... → Done (took 0.6 sec)

[2020-05-27T17:11:10.622Z] Deploying version v-57df7df941...

[2020-05-27T17:11:16.515Z] Waiting for resources to be ready...

[2020-05-27T17:11:29.678Z] Resources ready

[2020-05-27T17:11:29.941Z] Deploying version v-57df7df941... → Done (took 19.3 sec)

[2020-05-27T17:11:30.043Z] Deploying version v-56ab2b577f...

[2020-05-27T17:11:32.222Z] Waiting for resources to be ready...

[2020-05-27T17:11:34.412Z] Deploying version v-56ab2b577f...

[2020-05-27T17:11:34.468Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Pulled - Container image "server:v-56ab2b577f" already present on machine
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Created - Created container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Started - Started container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mPulled - Container image \"server:v-56ab2b577f\" already present on machine\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '43778'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:11:35.246Z] Building version v-57df7df941...

[2020-05-27T17:11:36.425Z] Building version v-57df7df941... → Done (took 1.2 sec)

[2020-05-27T17:11:36.489Z] Deploying version v-57df7df941...

[2020-05-27T17:11:38.576Z] Waiting for resources to be ready...

[2020-05-27T17:11:41.800Z] Resources ready

[2020-05-27T17:11:43.428Z] Deploying version v-57df7df941... → Done (took 6.9 sec)

[2020-05-27T17:11:43.603Z] Deploying version v-56ab2b577f...

[2020-05-27T17:11:46.011Z] Waiting for resources to be ready...

[2020-05-27T17:11:51.881Z] Deploying version v-56ab2b577f...

[2020-05-27T17:11:51.968Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Pulled - Container image "server:v-56ab2b577f" already present on machine
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Created - Created container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Started - Started container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mPulled - Container image \"server:v-56ab2b577f\" already present on machine\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '43778'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:11:53.242Z] Building version v-57df7df941...

[2020-05-27T17:11:55.462Z] Building version v-57df7df941... → Done (took 2.2 sec)

[2020-05-27T17:11:55.567Z] Deploying version v-57df7df941...

[2020-05-27T17:11:57.728Z] Waiting for resources to be ready...

[2020-05-27T17:12:00.061Z] Resources ready

[2020-05-27T17:12:00.402Z] Deploying version v-57df7df941... → Done (took 4.9 sec)

[2020-05-27T17:12:00.479Z] Deploying version v-56ab2b577f...

[2020-05-27T17:12:02.207Z] Waiting for resources to be ready...

[2020-05-27T17:12:04.332Z] Deploying version v-56ab2b577f...

[2020-05-27T17:12:04.399Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Pulled - Container image "server:v-56ab2b577f" already present on machine
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Created - Created container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Started - Started container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mPulled - Container image \"server:v-56ab2b577f\" already present on machine\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '43778'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:12:04.856Z] Building version v-57df7df941...

[2020-05-27T17:12:05.699Z] Building version v-57df7df941... → Done (took 0.8 sec)

[2020-05-27T17:12:05.770Z] Deploying version v-57df7df941...

[2020-05-27T17:12:07.432Z] Waiting for resources to be ready...

[2020-05-27T17:12:09.509Z] Resources ready

[2020-05-27T17:12:09.585Z] Deploying version v-57df7df941... → Done (took 3.8 sec)

[2020-05-27T17:12:09.648Z] Deploying version v-56ab2b577f...

[2020-05-27T17:12:11.312Z] Waiting for resources to be ready...

[2020-05-27T17:12:13.441Z] Deploying version v-56ab2b577f...

[2020-05-27T17:12:13.510Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Pulled - Container image "server:v-56ab2b577f" already present on machine
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Created - Created container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Started - Started container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mPulled - Container image \"server:v-56ab2b577f\" already present on machine\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '43778'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:12:14.081Z] Building version v-57df7df941...

[2020-05-27T17:12:14.704Z] Building version v-57df7df941... → Done (took 0.6 sec)

[2020-05-27T17:12:14.778Z] Deploying version v-57df7df941...

[2020-05-27T17:12:16.463Z] Waiting for resources to be ready...

[2020-05-27T17:12:18.541Z] Resources ready

[2020-05-27T17:12:18.623Z] Deploying version v-57df7df941... → Done (took 3.9 sec)

[2020-05-27T17:12:18.688Z] Deploying version v-56ab2b577f...

[2020-05-27T17:12:20.186Z] Waiting for resources to be ready...

[2020-05-27T17:12:22.334Z] Deploying version v-56ab2b577f...

[2020-05-27T17:12:22.400Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Pulled - Container image "server:v-56ab2b577f" already present on machine
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Created - Created container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Started - Started container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mPulled - Container image \"server:v-56ab2b577f\" already present on machine\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '43778'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:12:22.919Z] Building version v-57df7df941...

[2020-05-27T17:12:23.760Z] Building version v-57df7df941... → Done (took 0.8 sec)

[2020-05-27T17:12:23.838Z] Deploying version v-57df7df941...

[2020-05-27T17:12:25.728Z] Waiting for resources to be ready...

[2020-05-27T17:12:27.829Z] Resources ready

[2020-05-27T17:12:27.915Z] Deploying version v-57df7df941... → Done (took 4.1 sec)

[2020-05-27T17:12:27.984Z] Deploying version v-56ab2b577f...

[2020-05-27T17:12:29.637Z] Waiting for resources to be ready...

[2020-05-27T17:12:31.777Z] Deploying version v-56ab2b577f...

[2020-05-27T17:12:31.846Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Pulled - Container image "server:v-56ab2b577f" already present on machine
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Created - Created container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Started - Started container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mPulled - Container image \"server:v-56ab2b577f\" already present on machine\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '43778'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:12:35.230Z] Building client:v-2bdbac3599... → Done (took 131.2 sec)

[2020-05-27T17:12:35.295Z] Deploying version v-2bdbac3599...

[2020-05-27T17:12:37.367Z] Waiting for resources to be ready...

[2020-05-27T17:12:39.484Z] Deployment/frontend-v-2bdbac3599: Started container frontend

[2020-05-27T17:12:42.112Z] Deploying version v-2bdbac3599...

[2020-05-27T17:12:42.182Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-2bdbac3599: ScalingReplicaSet - Scaled up replica set frontend-v-2bdbac3599-57b68b89bc to 1
Pod frontend-v-2bdbac3599-57b68b89bc-dmqhs: Scheduled - Successfully assigned node-microservice/frontend-v-2bdbac3599-57b68b89bc-dmqhs to minikube
Pod frontend-v-2bdbac3599-57b68b89bc-dmqhs: Pulled - Container image "client:v-2bdbac3599" already present on machine
Pod frontend-v-2bdbac3599-57b68b89bc-dmqhs: Created - Created container frontend
Pod frontend-v-2bdbac3599-57b68b89bc-dmqhs: Started - Started container frontend
Pod frontend-v-2bdbac3599-57b68b89bc-dmqhs: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-2bdbac3599

****** frontend-v-2bdbac3599-57b68b89bc-dmqhs ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.3/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-2bdbac3599:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-2bdbac3599-57b68b89bc to 1\e[39m\n\e[94mPod frontend-v-2bdbac3599-57b68b89bc-dmqhs:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-2bdbac3599-57b68b89bc-dmqhs to minikube\e[39m\n\e[94mPod frontend-v-2bdbac3599-57b68b89bc-dmqhs:\e[39m \e[37mPulled - Container image \"client:v-2bdbac3599\" already present on machine\e[39m\n\e[94mPod frontend-v-2bdbac3599-57b68b89bc-dmqhs:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-2bdbac3599-57b68b89bc-dmqhs:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-2bdbac3599-57b68b89bc-dmqhs:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-2bdbac3599\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-2bdbac3599-57b68b89bc-dmqhs ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.3/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-2bdbac3599
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-2bdbac3599
      uid: b04f5328-9964-4d46-a5cf-ae7a09c1fe0d
      resourceVersion: '44054'
      generation: 1
      creationTimestamp: '2020-05-27T17:12:35Z'
      labels:
        garden.io/version: v-2bdbac3599
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 9f39ef0f56aa3158e20cededf34598157a2eda29f06497dbd4f55818787a3684
        garden.io/version: v-2bdbac3599
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"9f39ef0f56aa3158e20cededf34598157a2eda29f06497dbd4f55818787a3684","garden.io/version":"v-2bdbac3599"},"labels":{"garden.io/version":"v-2bdbac3599","module":"client","service":"frontend"},"name":"frontend-v-2bdbac3599","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-2bdbac3599","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-2bdbac3599","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-2bdbac3599"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-2bdbac3599\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-2bdbac3599","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-2bdbac3599
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-2bdbac3599
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:12:42.248Z] ⏳  Processing...

[2020-05-27T17:12:42.314Z] Syncing module sources (17 files)...

[2020-05-27T17:12:42.800Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-27T17:12:42.872Z] Building version v-8c957a01c7...

[2020-05-27T17:12:43.493Z] Building client:v-8c957a01c7...

[2020-05-27T17:13:30.872Z] Building client:v-8c957a01c7... → Done (took 48 sec)

[2020-05-27T17:13:30.957Z] Deploying version v-8c957a01c7...

[2020-05-27T17:13:32.990Z] Waiting for resources to be ready...

[2020-05-27T17:13:35.140Z] Deployment/frontend-v-8c957a01c7: Started container frontend

[2020-05-27T17:13:37.725Z] Resources ready

[2020-05-27T17:13:37.847Z] Deploying version v-8c957a01c7... → Done (took 6.9 sec)

[2020-05-27T17:13:37.919Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T17:13:37.991Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T17:13:38.063Z] ⏳  Processing...

[2020-05-27T17:13:38.134Z] Syncing module sources (17 files)...

[2020-05-27T17:13:38.691Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-27T17:13:38.764Z] Building version v-8c957a01c7...

[2020-05-27T17:13:39.475Z] Building client:v-8c957a01c7...

[2020-05-27T17:13:39.932Z] Building client:v-8c957a01c7... → Done (took 1.2 sec)

[2020-05-27T17:13:40.005Z] Deploying version v-8c957a01c7...

[2020-05-27T17:13:41.819Z] Waiting for resources to be ready...

[2020-05-27T17:13:43.947Z] Deploying version v-8c957a01c7...

[2020-05-27T17:13:44.027Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-8c957a01c7: ScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Scheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Pulled - Container image "client:v-8c957a01c7" already present on machine
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Created - Created container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Started - Started container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7

****** frontend-v-8c957a01c7-df79896dc-7gzlr ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-8c957a01c7:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mPulled - Container image \"client:v-8c957a01c7\" already present on machine\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-8c957a01c7-df79896dc-7gzlr ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-8c957a01c7
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-8c957a01c7
      uid: f3ce89ff-8ab0-42a9-8b20-3d099892701d
      resourceVersion: '44275'
      generation: 1
      creationTimestamp: '2020-05-27T17:13:31Z'
      labels:
        garden.io/version: v-8c957a01c7
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839
        garden.io/version: v-8c957a01c7
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839","garden.io/version":"v-8c957a01c7"},"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"},"name":"frontend-v-8c957a01c7","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-8c957a01c7","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-8c957a01c7"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-8c957a01c7\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-8c957a01c7","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-8c957a01c7
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-8c957a01c7
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:13:44.098Z] ⏳  Processing...

[2020-05-27T17:13:44.173Z] Syncing module sources (17 files)...

[2020-05-27T17:13:44.596Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-27T17:13:44.676Z] Building version v-8c957a01c7...

[2020-05-27T17:13:45.063Z] Building client:v-8c957a01c7...

[2020-05-27T17:13:45.485Z] Building client:v-8c957a01c7... → Done (took 0.8 sec)

[2020-05-27T17:13:45.565Z] Deploying version v-8c957a01c7...

[2020-05-27T17:13:47.360Z] Waiting for resources to be ready...

[2020-05-27T17:13:49.506Z] Deploying version v-8c957a01c7...

[2020-05-27T17:13:49.586Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-8c957a01c7: ScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Scheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Pulled - Container image "client:v-8c957a01c7" already present on machine
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Created - Created container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Started - Started container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7

****** frontend-v-8c957a01c7-df79896dc-7gzlr ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-8c957a01c7:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mPulled - Container image \"client:v-8c957a01c7\" already present on machine\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-8c957a01c7-df79896dc-7gzlr ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-8c957a01c7
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-8c957a01c7
      uid: f3ce89ff-8ab0-42a9-8b20-3d099892701d
      resourceVersion: '44275'
      generation: 1
      creationTimestamp: '2020-05-27T17:13:31Z'
      labels:
        garden.io/version: v-8c957a01c7
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839
        garden.io/version: v-8c957a01c7
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839","garden.io/version":"v-8c957a01c7"},"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"},"name":"frontend-v-8c957a01c7","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-8c957a01c7","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-8c957a01c7"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-8c957a01c7\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-8c957a01c7","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-8c957a01c7
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-8c957a01c7
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:13:49.658Z] ⏳  Processing...

[2020-05-27T17:13:49.731Z] Syncing module sources (17 files)...

[2020-05-27T17:13:50.168Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-27T17:13:50.244Z] Building version v-8c957a01c7...

[2020-05-27T17:13:50.417Z] Building client:v-8c957a01c7...

[2020-05-27T17:13:50.819Z] Building client:v-8c957a01c7... → Done (took 0.6 sec)

[2020-05-27T17:13:50.897Z] Deploying version v-8c957a01c7...

[2020-05-27T17:13:52.643Z] Waiting for resources to be ready...

[2020-05-27T17:13:54.747Z] Resources ready

[2020-05-27T17:13:54.849Z] Deploying version v-8c957a01c7... → Done (took 4 sec)

[2020-05-27T17:13:54.920Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T17:13:54.994Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T17:13:55.069Z] ⏳  Processing...

[2020-05-27T17:13:55.142Z] Syncing module sources (17 files)...

[2020-05-27T17:13:55.546Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-27T17:13:55.622Z] Building version v-8c957a01c7...

[2020-05-27T17:13:56.296Z] Building client:v-8c957a01c7...

[2020-05-27T17:13:56.736Z] Building client:v-8c957a01c7... → Done (took 1.1 sec)

[2020-05-27T17:13:56.819Z] Deploying version v-8c957a01c7...

[2020-05-27T17:13:58.549Z] Waiting for resources to be ready...

[2020-05-27T17:14:00.696Z] Deploying version v-8c957a01c7...

[2020-05-27T17:14:00.775Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-8c957a01c7: ScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Scheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Pulled - Container image "client:v-8c957a01c7" already present on machine
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Created - Created container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Started - Started container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7

****** frontend-v-8c957a01c7-df79896dc-7gzlr ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-8c957a01c7:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mPulled - Container image \"client:v-8c957a01c7\" already present on machine\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-8c957a01c7-df79896dc-7gzlr ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-8c957a01c7
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-8c957a01c7
      uid: f3ce89ff-8ab0-42a9-8b20-3d099892701d
      resourceVersion: '44336'
      generation: 1
      creationTimestamp: '2020-05-27T17:13:31Z'
      labels:
        garden.io/version: v-8c957a01c7
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839
        garden.io/version: v-8c957a01c7
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839","garden.io/version":"v-8c957a01c7"},"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"},"name":"frontend-v-8c957a01c7","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-8c957a01c7","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-8c957a01c7"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-8c957a01c7\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-8c957a01c7","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-8c957a01c7
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-8c957a01c7
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:14:00.852Z] ⏳  Processing...

[2020-05-27T17:14:00.926Z] Syncing module sources (17 files)...

[2020-05-27T17:14:01.326Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-27T17:14:01.406Z] Building version v-8c957a01c7...

[2020-05-27T17:14:01.579Z] Building client:v-8c957a01c7...

[2020-05-27T17:14:02.266Z] Building client:v-8c957a01c7... → Done (took 0.9 sec)

[2020-05-27T17:14:02.346Z] Deploying version v-8c957a01c7...

[2020-05-27T17:14:04.096Z] Waiting for resources to be ready...

[2020-05-27T17:14:06.255Z] Deploying version v-8c957a01c7...

[2020-05-27T17:14:06.333Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-8c957a01c7: ScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Scheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Pulled - Container image "client:v-8c957a01c7" already present on machine
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Created - Created container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Started - Started container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7

****** frontend-v-8c957a01c7-df79896dc-7gzlr ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-8c957a01c7:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mPulled - Container image \"client:v-8c957a01c7\" already present on machine\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-8c957a01c7-df79896dc-7gzlr ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-8c957a01c7
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-8c957a01c7
      uid: f3ce89ff-8ab0-42a9-8b20-3d099892701d
      resourceVersion: '44336'
      generation: 1
      creationTimestamp: '2020-05-27T17:13:31Z'
      labels:
        garden.io/version: v-8c957a01c7
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839
        garden.io/version: v-8c957a01c7
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839","garden.io/version":"v-8c957a01c7"},"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"},"name":"frontend-v-8c957a01c7","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-8c957a01c7","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-8c957a01c7"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-8c957a01c7\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-8c957a01c7","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-8c957a01c7
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-8c957a01c7
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:14:06.410Z] ⏳  Processing...

[2020-05-27T17:14:06.486Z] Syncing module sources (17 files)...

[2020-05-27T17:14:06.897Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-27T17:14:06.979Z] Building version v-8c957a01c7...

[2020-05-27T17:14:07.156Z] Building client:v-8c957a01c7...

[2020-05-27T17:14:07.560Z] Building client:v-8c957a01c7... → Done (took 0.6 sec)

[2020-05-27T17:14:07.646Z] Deploying version v-8c957a01c7...

[2020-05-27T17:14:09.404Z] Waiting for resources to be ready...

[2020-05-27T17:14:11.651Z] Deploying version v-8c957a01c7...

[2020-05-27T17:14:11.735Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 20s restarting failed container=frontend pod=frontend-v-8c957a01c7-df79896dc-7gzlr_node-microservice(4a865141-3b34-44ca-9b17-428af8beeb4c)

━━━ Events ━━━
Deployment frontend-v-8c957a01c7: ScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Scheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Pulled - Container image "client:v-8c957a01c7" already present on machine
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Created - Created container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Started - Started container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7

****** frontend-v-8c957a01c7-df79896dc-7gzlr ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 20s restarting failed container=frontend
    pod=frontend-v-8c957a01c7-df79896dc-7gzlr_node-microservice(4a865141-3b34-44ca-9b17-428af8beeb4c)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-8c957a01c7:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mPulled - Container image \"client:v-8c957a01c7\" already present on machine\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-8c957a01c7-df79896dc-7gzlr ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-8c957a01c7
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-8c957a01c7
      uid: f3ce89ff-8ab0-42a9-8b20-3d099892701d
      resourceVersion: '44336'
      generation: 1
      creationTimestamp: '2020-05-27T17:13:31Z'
      labels:
        garden.io/version: v-8c957a01c7
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839
        garden.io/version: v-8c957a01c7
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839","garden.io/version":"v-8c957a01c7"},"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"},"name":"frontend-v-8c957a01c7","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-8c957a01c7","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-8c957a01c7"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-8c957a01c7\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-8c957a01c7","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-8c957a01c7
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-8c957a01c7
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:14:11.812Z] ⏳  Processing...

[2020-05-27T17:14:11.891Z] Syncing module sources (17 files)...

[2020-05-27T17:14:12.306Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-27T17:14:12.387Z] Building version v-8c957a01c7...

[2020-05-27T17:14:12.897Z] Building client:v-8c957a01c7...

[2020-05-27T17:14:13.322Z] Building client:v-8c957a01c7... → Done (took 0.9 sec)

[2020-05-27T17:14:13.406Z] Deploying version v-8c957a01c7...

[2020-05-27T17:14:15.152Z] Waiting for resources to be ready...

[2020-05-27T17:14:17.305Z] Deploying version v-8c957a01c7...

[2020-05-27T17:14:17.387Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 20s restarting failed container=frontend pod=frontend-v-8c957a01c7-df79896dc-7gzlr_node-microservice(4a865141-3b34-44ca-9b17-428af8beeb4c)

━━━ Events ━━━
Deployment frontend-v-8c957a01c7: ScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Scheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Pulled - Container image "client:v-8c957a01c7" already present on machine
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Created - Created container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Started - Started container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7

****** frontend-v-8c957a01c7-df79896dc-7gzlr ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 20s restarting failed container=frontend
    pod=frontend-v-8c957a01c7-df79896dc-7gzlr_node-microservice(4a865141-3b34-44ca-9b17-428af8beeb4c)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-8c957a01c7:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mPulled - Container image \"client:v-8c957a01c7\" already present on machine\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-8c957a01c7-df79896dc-7gzlr ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-8c957a01c7
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-8c957a01c7
      uid: f3ce89ff-8ab0-42a9-8b20-3d099892701d
      resourceVersion: '44336'
      generation: 1
      creationTimestamp: '2020-05-27T17:13:31Z'
      labels:
        garden.io/version: v-8c957a01c7
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839
        garden.io/version: v-8c957a01c7
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839","garden.io/version":"v-8c957a01c7"},"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"},"name":"frontend-v-8c957a01c7","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-8c957a01c7","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-8c957a01c7"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-8c957a01c7\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-8c957a01c7","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-8c957a01c7
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-8c957a01c7
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:14:17.462Z] ⏳  Processing...

[2020-05-27T17:14:17.543Z] Syncing module sources (17 files)...

[2020-05-27T17:14:17.951Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-27T17:14:18.037Z] Building version v-8c957a01c7...

[2020-05-27T17:14:18.453Z] Building client:v-8c957a01c7...

[2020-05-27T17:14:18.856Z] Building client:v-8c957a01c7... → Done (took 0.8 sec)

[2020-05-27T17:14:18.940Z] Deploying version v-8c957a01c7...

[2020-05-27T17:14:20.655Z] Waiting for resources to be ready...

[2020-05-27T17:14:22.807Z] Deploying version v-8c957a01c7...

[2020-05-27T17:14:22.894Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 20s restarting failed container=frontend pod=frontend-v-8c957a01c7-df79896dc-7gzlr_node-microservice(4a865141-3b34-44ca-9b17-428af8beeb4c)

━━━ Events ━━━
Deployment frontend-v-8c957a01c7: ScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Scheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Pulled - Container image "client:v-8c957a01c7" already present on machine
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Created - Created container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Started - Started container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7

****** frontend-v-8c957a01c7-df79896dc-7gzlr ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 20s restarting failed container=frontend
    pod=frontend-v-8c957a01c7-df79896dc-7gzlr_node-microservice(4a865141-3b34-44ca-9b17-428af8beeb4c)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-8c957a01c7:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mPulled - Container image \"client:v-8c957a01c7\" already present on machine\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-8c957a01c7-df79896dc-7gzlr ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-8c957a01c7
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-8c957a01c7
      uid: f3ce89ff-8ab0-42a9-8b20-3d099892701d
      resourceVersion: '44336'
      generation: 1
      creationTimestamp: '2020-05-27T17:13:31Z'
      labels:
        garden.io/version: v-8c957a01c7
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839
        garden.io/version: v-8c957a01c7
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839","garden.io/version":"v-8c957a01c7"},"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"},"name":"frontend-v-8c957a01c7","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-8c957a01c7","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-8c957a01c7"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-8c957a01c7\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-8c957a01c7","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-8c957a01c7
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-8c957a01c7
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:14:22.974Z] ⏳  Processing...

[2020-05-27T17:14:23.053Z] Syncing module sources (17 files)...

[2020-05-27T17:14:23.455Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-27T17:14:23.540Z] Building version v-8c957a01c7...

[2020-05-27T17:14:23.900Z] Building client:v-8c957a01c7...

[2020-05-27T17:14:24.325Z] Building client:v-8c957a01c7... → Done (took 0.8 sec)

[2020-05-27T17:14:24.411Z] Deploying version v-8c957a01c7...

[2020-05-27T17:14:26.121Z] Waiting for resources to be ready...

[2020-05-27T17:14:28.269Z] Deploying version v-8c957a01c7...

[2020-05-27T17:14:28.353Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-8c957a01c7: ScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Scheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Pulled - Container image "client:v-8c957a01c7" already present on machine
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Created - Created container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Started - Started container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7

****** frontend-v-8c957a01c7-df79896dc-7gzlr ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-8c957a01c7:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mPulled - Container image \"client:v-8c957a01c7\" already present on machine\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-8c957a01c7-df79896dc-7gzlr ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-8c957a01c7
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-8c957a01c7
      uid: f3ce89ff-8ab0-42a9-8b20-3d099892701d
      resourceVersion: '44422'
      generation: 1
      creationTimestamp: '2020-05-27T17:13:31Z'
      labels:
        garden.io/version: v-8c957a01c7
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839
        garden.io/version: v-8c957a01c7
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839","garden.io/version":"v-8c957a01c7"},"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"},"name":"frontend-v-8c957a01c7","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-8c957a01c7","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-8c957a01c7"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-8c957a01c7\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-8c957a01c7","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-8c957a01c7
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-8c957a01c7
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:14:28.439Z] ⏳  Processing...

[2020-05-27T17:14:28.522Z] Syncing module sources (17 files)...

[2020-05-27T17:14:28.936Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-27T17:14:29.023Z] Building version v-8c957a01c7...

[2020-05-27T17:14:29.482Z] Building client:v-8c957a01c7...

[2020-05-27T17:14:29.885Z] Building client:v-8c957a01c7... → Done (took 0.9 sec)

[2020-05-27T17:14:29.974Z] Deploying version v-8c957a01c7...

[2020-05-27T17:14:31.742Z] Waiting for resources to be ready...

[2020-05-27T17:14:33.904Z] Deploying version v-8c957a01c7...

[2020-05-27T17:14:33.992Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-8c957a01c7: ScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Scheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Pulled - Container image "client:v-8c957a01c7" already present on machine
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Created - Created container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Started - Started container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7

****** frontend-v-8c957a01c7-df79896dc-7gzlr ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-8c957a01c7:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mPulled - Container image \"client:v-8c957a01c7\" already present on machine\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-8c957a01c7-df79896dc-7gzlr ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-8c957a01c7
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-8c957a01c7
      uid: f3ce89ff-8ab0-42a9-8b20-3d099892701d
      resourceVersion: '44422'
      generation: 1
      creationTimestamp: '2020-05-27T17:13:31Z'
      labels:
        garden.io/version: v-8c957a01c7
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839
        garden.io/version: v-8c957a01c7
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839","garden.io/version":"v-8c957a01c7"},"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"},"name":"frontend-v-8c957a01c7","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-8c957a01c7","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-8c957a01c7"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-8c957a01c7\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-8c957a01c7","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-8c957a01c7
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-8c957a01c7
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:14:34.079Z] ⏳  Processing...

[2020-05-27T17:14:34.166Z] Syncing module sources (17 files)...

[2020-05-27T17:14:34.637Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-27T17:14:34.729Z] Building version v-8c957a01c7...

[2020-05-27T17:14:35.172Z] Building client:v-8c957a01c7...

[2020-05-27T17:14:35.606Z] Building client:v-8c957a01c7... → Done (took 0.9 sec)

[2020-05-27T17:14:35.699Z] Deploying version v-8c957a01c7...

[2020-05-27T17:14:37.484Z] Waiting for resources to be ready...

[2020-05-27T17:14:39.657Z] Deploying version v-8c957a01c7...

[2020-05-27T17:14:39.747Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 40s restarting failed container=frontend pod=frontend-v-8c957a01c7-df79896dc-7gzlr_node-microservice(4a865141-3b34-44ca-9b17-428af8beeb4c)

━━━ Events ━━━
Deployment frontend-v-8c957a01c7: ScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Scheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Pulled - Container image "client:v-8c957a01c7" already present on machine
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Created - Created container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Started - Started container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7

****** frontend-v-8c957a01c7-df79896dc-7gzlr ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 40s restarting failed container=frontend
    pod=frontend-v-8c957a01c7-df79896dc-7gzlr_node-microservice(4a865141-3b34-44ca-9b17-428af8beeb4c)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-8c957a01c7:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mPulled - Container image \"client:v-8c957a01c7\" already present on machine\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-8c957a01c7-df79896dc-7gzlr ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-8c957a01c7
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-8c957a01c7
      uid: f3ce89ff-8ab0-42a9-8b20-3d099892701d
      resourceVersion: '44422'
      generation: 1
      creationTimestamp: '2020-05-27T17:13:31Z'
      labels:
        garden.io/version: v-8c957a01c7
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839
        garden.io/version: v-8c957a01c7
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839","garden.io/version":"v-8c957a01c7"},"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"},"name":"frontend-v-8c957a01c7","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-8c957a01c7","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-8c957a01c7"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-8c957a01c7\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-8c957a01c7","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-8c957a01c7
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-8c957a01c7
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:14:39.841Z] Waiting for code changes...

[2020-05-27T17:25:37.280Z] Getting status...

[2020-05-27T17:25:40.526Z] Getting status... → Done

[2020-05-27T17:25:42.665Z] Module configuration changed, reloading...

[2020-05-27T17:25:44.168Z] Getting status...

[2020-05-27T17:25:51.625Z] Getting status... → Done

[2020-05-27T17:25:54.035Z] ⏳  Processing...

[2020-05-27T17:25:54.198Z] Syncing module sources (17 files)...

[2020-05-27T17:25:54.577Z] Syncing module sources (5 files)...

[2020-05-27T17:25:55.207Z] Syncing module sources (5 files)... → Done (took 0.6 sec)

[2020-05-27T17:25:55.392Z] Getting build status for v-56ab2b577f...

[2020-05-27T17:25:56.724Z] Syncing module sources (17 files)... → Done (took 2.5 sec)

[2020-05-27T17:25:56.927Z] Getting build status for v-8c957a01c7...

[2020-05-27T17:25:57.122Z] Getting build status for v-57df7df941...

[2020-05-27T17:25:57.292Z] Getting build status for v-57df7df941... → Done (took 0.2 sec)

[2020-05-27T17:25:57.781Z] Deploying version v-57df7df941...

[2020-05-27T17:25:57.923Z] Deploying version v-57df7df941... → Already deployed

[2020-05-27T17:25:58.385Z] Getting build status for v-56ab2b577f... → Done (took 3 sec)

[2020-05-27T17:25:58.522Z] Deploying version v-56ab2b577f...

[2020-05-27T17:25:58.937Z] Getting build status for v-8c957a01c7... → Done (took 2.1 sec)

[2020-05-27T17:25:59.072Z] Deploying version v-8c957a01c7...

[2020-05-27T17:26:02.199Z] Waiting for resources to be ready...

[2020-05-27T17:26:02.533Z] Waiting for resources to be ready...

[2020-05-27T17:26:04.384Z] Deploying version v-56ab2b577f...

[2020-05-27T17:26:04.513Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Pulled - Container image "server:v-56ab2b577f" already present on machine
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Created - Created container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Started - Started container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mPulled - Container image \"server:v-56ab2b577f\" already present on machine\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '43778'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:26:04.716Z] Deploying version v-8c957a01c7...

[2020-05-27T17:26:04.843Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 5m0s restarting failed container=frontend pod=frontend-v-8c957a01c7-df79896dc-7gzlr_node-microservice(4a865141-3b34-44ca-9b17-428af8beeb4c)

━━━ Events ━━━
Deployment frontend-v-8c957a01c7: ScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Scheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Pulled - Container image "client:v-8c957a01c7" already present on machine
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Created - Created container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Started - Started container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7

****** frontend-v-8c957a01c7-df79896dc-7gzlr ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=frontend
    pod=frontend-v-8c957a01c7-df79896dc-7gzlr_node-microservice(4a865141-3b34-44ca-9b17-428af8beeb4c)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-8c957a01c7:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mPulled - Container image \"client:v-8c957a01c7\" already present on machine\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-8c957a01c7-df79896dc-7gzlr ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-8c957a01c7
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-8c957a01c7
      uid: f3ce89ff-8ab0-42a9-8b20-3d099892701d
      resourceVersion: '45921'
      generation: 1
      creationTimestamp: '2020-05-27T17:13:31Z'
      labels:
        garden.io/version: v-8c957a01c7
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839
        garden.io/version: v-8c957a01c7
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839","garden.io/version":"v-8c957a01c7"},"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"},"name":"frontend-v-8c957a01c7","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-8c957a01c7","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-8c957a01c7"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-8c957a01c7\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-8c957a01c7","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-8c957a01c7
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-8c957a01c7
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:26:04.979Z] Waiting for code changes...

[2020-05-27T17:30:19.633Z] Getting status...

[2020-05-27T17:30:22.557Z] Getting status... → Done

[2020-05-27T17:30:23.165Z] Project configuration changed, reloading...

[2020-05-27T17:30:24.330Z] Getting status...

[2020-05-27T17:30:26.394Z] Getting status... → Done

[2020-05-27T17:30:27.130Z] ⏳  Processing...

[2020-05-27T17:30:27.386Z] Syncing module sources (5 files)...

[2020-05-27T17:30:27.509Z] Syncing module sources (17 files)...

[2020-05-27T17:30:27.877Z] Syncing module sources (5 files)... → Done (took 0.5 sec)

[2020-05-27T17:30:28.002Z] Getting build status for v-56ab2b577f...

[2020-05-27T17:30:28.888Z] Getting build status for v-57df7df941...

[2020-05-27T17:30:29.013Z] Getting build status for v-57df7df941... → Done (took 0.1 sec)

[2020-05-27T17:30:29.141Z] Syncing module sources (17 files)... → Done (took 1.6 sec)

[2020-05-27T17:30:29.265Z] Getting build status for v-8c957a01c7...

[2020-05-27T17:30:29.571Z] Deploying version v-57df7df941...

[2020-05-27T17:30:29.696Z] Deploying version v-57df7df941... → Already deployed

[2020-05-27T17:30:30.035Z] Getting build status for v-56ab2b577f... → Done (took 2 sec)

[2020-05-27T17:30:30.164Z] Deploying version v-56ab2b577f...

[2020-05-27T17:30:30.294Z] Getting build status for v-8c957a01c7... → Done (took 1 sec)

[2020-05-27T17:30:30.424Z] Deploying version v-8c957a01c7...

[2020-05-27T17:30:32.003Z] Waiting for resources to be ready...

[2020-05-27T17:30:32.125Z] Waiting for resources to be ready...

[2020-05-27T17:30:34.249Z] Deploying version v-56ab2b577f...

[2020-05-27T17:30:34.380Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Pulled - Container image "server:v-56ab2b577f" already present on machine
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Created - Created container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Started - Started container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mPulled - Container image \"server:v-56ab2b577f\" already present on machine\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '46196'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:30:34.566Z] Deploying version v-8c957a01c7...

[2020-05-27T17:30:34.696Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 5m0s restarting failed container=frontend pod=frontend-v-8c957a01c7-df79896dc-7gzlr_node-microservice(4a865141-3b34-44ca-9b17-428af8beeb4c)

━━━ Events ━━━
Deployment frontend-v-8c957a01c7: ScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Scheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Pulled - Container image "client:v-8c957a01c7" already present on machine
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Created - Created container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Started - Started container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7

****** frontend-v-8c957a01c7-df79896dc-7gzlr ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=frontend
    pod=frontend-v-8c957a01c7-df79896dc-7gzlr_node-microservice(4a865141-3b34-44ca-9b17-428af8beeb4c)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-8c957a01c7:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mPulled - Container image \"client:v-8c957a01c7\" already present on machine\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-8c957a01c7-df79896dc-7gzlr ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-8c957a01c7
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-8c957a01c7
      uid: f3ce89ff-8ab0-42a9-8b20-3d099892701d
      resourceVersion: '46672'
      generation: 1
      creationTimestamp: '2020-05-27T17:13:31Z'
      labels:
        garden.io/version: v-8c957a01c7
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839
        garden.io/version: v-8c957a01c7
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839","garden.io/version":"v-8c957a01c7"},"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"},"name":"frontend-v-8c957a01c7","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-8c957a01c7","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-8c957a01c7"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-8c957a01c7\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-8c957a01c7","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-8c957a01c7
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-8c957a01c7
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:30:34.830Z] Waiting for code changes...

[2020-05-27T17:30:50.777Z] Getting status...

[2020-05-27T17:30:53.635Z] Getting status... → Done

[2020-05-27T17:30:54.203Z] Project configuration changed, reloading...

[2020-05-27T17:30:55.364Z] Getting status...

[2020-05-27T17:30:57.346Z] Getting status... → Done

[2020-05-27T17:30:58.000Z] ⏳  Processing...

[2020-05-27T17:30:58.131Z] Syncing module sources (17 files)...

[2020-05-27T17:30:58.505Z] Syncing module sources (5 files)...

[2020-05-27T17:30:58.734Z] Syncing module sources (5 files)... → Done (took 0.2 sec)

[2020-05-27T17:30:58.872Z] Getting build status for v-56ab2b577f...

[2020-05-27T17:30:59.694Z] Syncing module sources (17 files)... → Done (took 1.5 sec)

[2020-05-27T17:30:59.843Z] Getting build status for v-8c957a01c7...

[2020-05-27T17:30:59.991Z] Getting build status for v-57df7df941...

[2020-05-27T17:31:00.133Z] Getting build status for v-57df7df941... → Done (took 0.1 sec)

[2020-05-27T17:31:00.509Z] Deploying version v-57df7df941...

[2020-05-27T17:31:00.654Z] Deploying version v-57df7df941... → Already deployed

[2020-05-27T17:31:00.799Z] Getting build status for v-56ab2b577f... → Done (took 1.9 sec)

[2020-05-27T17:31:01.109Z] Deploying version v-56ab2b577f...

[2020-05-27T17:31:01.329Z] Getting build status for v-8c957a01c7... → Done (took 1.4 sec)

[2020-05-27T17:31:01.468Z] Deploying version v-8c957a01c7...

[2020-05-27T17:31:02.874Z] Waiting for resources to be ready...

[2020-05-27T17:31:03.092Z] Waiting for resources to be ready...

[2020-05-27T17:31:05.060Z] Deploying version v-56ab2b577f...

[2020-05-27T17:31:05.187Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Pulled - Container image "server:v-56ab2b577f" already present on machine
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Created - Created container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Started - Started container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mPulled - Container image \"server:v-56ab2b577f\" already present on machine\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '46196'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:31:05.367Z] Deploying version v-8c957a01c7...

[2020-05-27T17:31:05.521Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 5m0s restarting failed container=frontend pod=frontend-v-8c957a01c7-df79896dc-7gzlr_node-microservice(4a865141-3b34-44ca-9b17-428af8beeb4c)

━━━ Events ━━━
Deployment frontend-v-8c957a01c7: ScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Scheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Pulled - Container image "client:v-8c957a01c7" already present on machine
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Created - Created container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Started - Started container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7

****** frontend-v-8c957a01c7-df79896dc-7gzlr ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=frontend
    pod=frontend-v-8c957a01c7-df79896dc-7gzlr_node-microservice(4a865141-3b34-44ca-9b17-428af8beeb4c)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-8c957a01c7:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mPulled - Container image \"client:v-8c957a01c7\" already present on machine\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-8c957a01c7-df79896dc-7gzlr ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-8c957a01c7
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-8c957a01c7
      uid: f3ce89ff-8ab0-42a9-8b20-3d099892701d
      resourceVersion: '46672'
      generation: 1
      creationTimestamp: '2020-05-27T17:13:31Z'
      labels:
        garden.io/version: v-8c957a01c7
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839
        garden.io/version: v-8c957a01c7
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839","garden.io/version":"v-8c957a01c7"},"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"},"name":"frontend-v-8c957a01c7","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-8c957a01c7","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-8c957a01c7"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-8c957a01c7\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-8c957a01c7","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-8c957a01c7
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-8c957a01c7
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:31:05.657Z] Waiting for code changes...

[2020-05-27T17:32:26.919Z] ⏳  Processing...

[2020-05-27T17:32:27.842Z] ⏳  Processing...

[2020-05-27T17:32:27.996Z] Syncing module sources (29 files)...

[2020-05-27T17:32:28.840Z] Syncing module sources (29 files)... → Done (took 0.8 sec)

[2020-05-27T17:32:28.973Z] Building version v-8b758c3624...

[2020-05-27T17:32:29.110Z] Building version v-57df7df941...

[2020-05-27T17:32:29.875Z] Building client:v-8b758c3624...

[2020-05-27T17:32:30.510Z] Building version v-57df7df941... → Done (took 1.4 sec)

[2020-05-27T17:32:30.659Z] Deploying version v-57df7df941...

[2020-05-27T17:32:32.502Z] Waiting for resources to be ready...

[2020-05-27T17:32:34.657Z] Resources ready

[2020-05-27T17:32:34.804Z] Deploying version v-57df7df941... → Done (took 4.2 sec)

[2020-05-27T17:32:34.936Z] Deploying version v-56ab2b577f...

[2020-05-27T17:32:36.625Z] Waiting for resources to be ready...

[2020-05-27T17:32:38.858Z] Deploying version v-56ab2b577f...

[2020-05-27T17:32:38.995Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '46196'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:32:39.493Z] Building version v-57df7df941...

[2020-05-27T17:32:40.130Z] Building version v-57df7df941... → Done (took 0.6 sec)

[2020-05-27T17:32:40.264Z] Deploying version v-57df7df941...

[2020-05-27T17:32:41.933Z] Waiting for resources to be ready...

[2020-05-27T17:32:44.063Z] Resources ready

[2020-05-27T17:32:44.211Z] Deploying version v-57df7df941... → Done (took 3.9 sec)

[2020-05-27T17:32:44.370Z] Deploying version v-56ab2b577f...

[2020-05-27T17:32:46.112Z] Waiting for resources to be ready...

[2020-05-27T17:32:48.318Z] Deploying version v-56ab2b577f...

[2020-05-27T17:32:48.506Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '46196'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:33:21.895Z] Building client:v-8b758c3624... → Done (took 52.9 sec)

[2020-05-27T17:33:22.062Z] Deploying version v-8b758c3624...

[2020-05-27T17:33:24.657Z] Waiting for resources to be ready...

[2020-05-27T17:33:26.860Z] Deployment/frontend-v-8b758c3624: Started container frontend

[2020-05-27T17:33:29.512Z] Resources ready

[2020-05-27T17:33:29.697Z] Deploying version v-8b758c3624... → Done (took 7.7 sec)

[2020-05-27T17:33:29.831Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T17:33:29.962Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T17:33:30.096Z] ⏳  Processing...

[2020-05-27T17:33:30.227Z] Syncing module sources (29 files)...

[2020-05-27T17:33:30.827Z] Syncing module sources (29 files)... → Done (took 0.6 sec)

[2020-05-27T17:33:30.958Z] Building version v-ac4d21986e...

[2020-05-27T17:33:31.565Z] Building client:v-ac4d21986e...

[2020-05-27T17:34:23.900Z] Building client:v-ac4d21986e... → Done (took 52.9 sec)

[2020-05-27T17:34:24.057Z] Deploying version v-ac4d21986e...

[2020-05-27T17:34:26.143Z] Waiting for resources to be ready...

[2020-05-27T17:34:28.333Z] Deployment/frontend-v-ac4d21986e: Started container frontend

[2020-05-27T17:34:31.067Z] Deploying version v-ac4d21986e...

[2020-05-27T17:34:31.198Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-ac4d21986e: ScalingReplicaSet - Scaled up replica set frontend-v-ac4d21986e-6db9c6fb97 to 1
Pod frontend-v-ac4d21986e-6db9c6fb97-bc88s: Scheduled - Successfully assigned node-microservice/frontend-v-ac4d21986e-6db9c6fb97-bc88s to minikube
Pod frontend-v-ac4d21986e-6db9c6fb97-bc88s: Pulled - Container image "client:v-ac4d21986e" already present on machine
Pod frontend-v-ac4d21986e-6db9c6fb97-bc88s: Created - Created container frontend
Pod frontend-v-ac4d21986e-6db9c6fb97-bc88s: Started - Started container frontend
Pod frontend-v-ac4d21986e-6db9c6fb97-bc88s: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-ac4d21986e

****** frontend-v-ac4d21986e-6db9c6fb97-bc88s ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> node scripts/start.js

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-ac4d21986e:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-ac4d21986e-6db9c6fb97 to 1\e[39m\n\e[94mPod frontend-v-ac4d21986e-6db9c6fb97-bc88s:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-ac4d21986e-6db9c6fb97-bc88s to minikube\e[39m\n\e[94mPod frontend-v-ac4d21986e-6db9c6fb97-bc88s:\e[39m \e[37mPulled - Container image \"client:v-ac4d21986e\" already present on machine\e[39m\n\e[94mPod frontend-v-ac4d21986e-6db9c6fb97-bc88s:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-ac4d21986e-6db9c6fb97-bc88s:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-ac4d21986e-6db9c6fb97-bc88s:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-ac4d21986e\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-ac4d21986e-6db9c6fb97-bc88s ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> node scripts/start.js\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-ac4d21986e
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-ac4d21986e
      uid: 8338b7d3-5f89-429e-930a-5adbbd826328
      resourceVersion: '47501'
      generation: 1
      creationTimestamp: '2020-05-27T17:34:24Z'
      labels:
        garden.io/version: v-ac4d21986e
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: ce492d9e63f41625308a7519f7bbb67d9ca05e38544e7e83ebc938240073defe
        garden.io/version: v-ac4d21986e
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"ce492d9e63f41625308a7519f7bbb67d9ca05e38544e7e83ebc938240073defe","garden.io/version":"v-ac4d21986e"},"labels":{"garden.io/version":"v-ac4d21986e","module":"client","service":"frontend"},"name":"frontend-v-ac4d21986e","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-ac4d21986e","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-ac4d21986e","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-ac4d21986e"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-ac4d21986e\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-ac4d21986e","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-ac4d21986e
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-ac4d21986e
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:34:31.325Z] ⏳  Processing...

[2020-05-27T17:34:31.456Z] Syncing module sources (29 files)...

[2020-05-27T17:34:32.412Z] Syncing module sources (29 files)... → Done (took 0.9 sec)

[2020-05-27T17:34:32.552Z] Building version v-ac4d21986e...

[2020-05-27T17:34:33.156Z] Building client:v-ac4d21986e...

[2020-05-27T17:34:33.619Z] Building client:v-ac4d21986e... → Done (took 1.1 sec)

[2020-05-27T17:34:33.752Z] Deploying version v-ac4d21986e...

[2020-05-27T17:34:35.512Z] Waiting for resources to be ready...

[2020-05-27T17:34:37.703Z] Deploying version v-ac4d21986e...

[2020-05-27T17:34:37.847Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-ac4d21986e: ScalingReplicaSet - Scaled up replica set frontend-v-ac4d21986e-6db9c6fb97 to 1
Pod frontend-v-ac4d21986e-6db9c6fb97-bc88s: Scheduled - Successfully assigned node-microservice/frontend-v-ac4d21986e-6db9c6fb97-bc88s to minikube
Pod frontend-v-ac4d21986e-6db9c6fb97-bc88s: Pulled - Container image "client:v-ac4d21986e" already present on machine
Pod frontend-v-ac4d21986e-6db9c6fb97-bc88s: Created - Created container frontend
Pod frontend-v-ac4d21986e-6db9c6fb97-bc88s: Started - Started container frontend
Pod frontend-v-ac4d21986e-6db9c6fb97-bc88s: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-ac4d21986e

****** frontend-v-ac4d21986e-6db9c6fb97-bc88s ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> node scripts/start.js

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-ac4d21986e:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-ac4d21986e-6db9c6fb97 to 1\e[39m\n\e[94mPod frontend-v-ac4d21986e-6db9c6fb97-bc88s:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-ac4d21986e-6db9c6fb97-bc88s to minikube\e[39m\n\e[94mPod frontend-v-ac4d21986e-6db9c6fb97-bc88s:\e[39m \e[37mPulled - Container image \"client:v-ac4d21986e\" already present on machine\e[39m\n\e[94mPod frontend-v-ac4d21986e-6db9c6fb97-bc88s:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-ac4d21986e-6db9c6fb97-bc88s:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-ac4d21986e-6db9c6fb97-bc88s:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-ac4d21986e\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-ac4d21986e-6db9c6fb97-bc88s ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> node scripts/start.js\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-ac4d21986e
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-ac4d21986e
      uid: 8338b7d3-5f89-429e-930a-5adbbd826328
      resourceVersion: '47501'
      generation: 1
      creationTimestamp: '2020-05-27T17:34:24Z'
      labels:
        garden.io/version: v-ac4d21986e
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: ce492d9e63f41625308a7519f7bbb67d9ca05e38544e7e83ebc938240073defe
        garden.io/version: v-ac4d21986e
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"ce492d9e63f41625308a7519f7bbb67d9ca05e38544e7e83ebc938240073defe","garden.io/version":"v-ac4d21986e"},"labels":{"garden.io/version":"v-ac4d21986e","module":"client","service":"frontend"},"name":"frontend-v-ac4d21986e","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-ac4d21986e","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-ac4d21986e","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-ac4d21986e"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-ac4d21986e\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-ac4d21986e","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-ac4d21986e
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-ac4d21986e
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:34:37.984Z] ⏳  Processing...

[2020-05-27T17:34:38.119Z] Syncing module sources (29 files)...

[2020-05-27T17:34:38.563Z] Syncing module sources (29 files)... → Done (took 0.4 sec)

[2020-05-27T17:34:38.700Z] Building version v-ac4d21986e...

[2020-05-27T17:34:39.154Z] Building client:v-ac4d21986e...

[2020-05-27T17:34:39.617Z] Building client:v-ac4d21986e... → Done (took 0.9 sec)

[2020-05-27T17:34:39.754Z] Deploying version v-ac4d21986e...

[2020-05-27T17:34:41.508Z] Waiting for resources to be ready...

[2020-05-27T17:34:43.663Z] Resources ready

[2020-05-27T17:34:43.868Z] Deploying version v-ac4d21986e... → Done (took 4.1 sec)

[2020-05-27T17:34:44.006Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T17:34:44.147Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T17:34:44.283Z] ⏳  Processing...

[2020-05-27T17:34:44.419Z] Syncing module sources (29 files)...

[2020-05-27T17:34:44.881Z] Syncing module sources (29 files)... → Done (took 0.4 sec)

[2020-05-27T17:34:45.015Z] Building version v-ac4d21986e...

[2020-05-27T17:34:45.450Z] Building client:v-ac4d21986e...

[2020-05-27T17:34:45.899Z] Building client:v-ac4d21986e... → Done (took 0.9 sec)

[2020-05-27T17:34:46.042Z] Deploying version v-ac4d21986e...

[2020-05-27T17:34:47.810Z] Waiting for resources to be ready...

[2020-05-27T17:34:50.011Z] Deploying version v-ac4d21986e...

[2020-05-27T17:34:50.157Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-ac4d21986e: ScalingReplicaSet - Scaled up replica set frontend-v-ac4d21986e-6db9c6fb97 to 1
Pod frontend-v-ac4d21986e-6db9c6fb97-bc88s: Scheduled - Successfully assigned node-microservice/frontend-v-ac4d21986e-6db9c6fb97-bc88s to minikube
Pod frontend-v-ac4d21986e-6db9c6fb97-bc88s: Pulled - Container image "client:v-ac4d21986e" already present on machine
Pod frontend-v-ac4d21986e-6db9c6fb97-bc88s: Created - Created container frontend
Pod frontend-v-ac4d21986e-6db9c6fb97-bc88s: Started - Started container frontend
Pod frontend-v-ac4d21986e-6db9c6fb97-bc88s: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-ac4d21986e

****** frontend-v-ac4d21986e-6db9c6fb97-bc88s ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> node scripts/start.js

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-ac4d21986e:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-ac4d21986e-6db9c6fb97 to 1\e[39m\n\e[94mPod frontend-v-ac4d21986e-6db9c6fb97-bc88s:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-ac4d21986e-6db9c6fb97-bc88s to minikube\e[39m\n\e[94mPod frontend-v-ac4d21986e-6db9c6fb97-bc88s:\e[39m \e[37mPulled - Container image \"client:v-ac4d21986e\" already present on machine\e[39m\n\e[94mPod frontend-v-ac4d21986e-6db9c6fb97-bc88s:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-ac4d21986e-6db9c6fb97-bc88s:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-ac4d21986e-6db9c6fb97-bc88s:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-ac4d21986e\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-ac4d21986e-6db9c6fb97-bc88s ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> node scripts/start.js\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-ac4d21986e
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-ac4d21986e
      uid: 8338b7d3-5f89-429e-930a-5adbbd826328
      resourceVersion: '47548'
      generation: 1
      creationTimestamp: '2020-05-27T17:34:24Z'
      labels:
        garden.io/version: v-ac4d21986e
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: ce492d9e63f41625308a7519f7bbb67d9ca05e38544e7e83ebc938240073defe
        garden.io/version: v-ac4d21986e
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"ce492d9e63f41625308a7519f7bbb67d9ca05e38544e7e83ebc938240073defe","garden.io/version":"v-ac4d21986e"},"labels":{"garden.io/version":"v-ac4d21986e","module":"client","service":"frontend"},"name":"frontend-v-ac4d21986e","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-ac4d21986e","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-ac4d21986e","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-ac4d21986e"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-ac4d21986e\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-ac4d21986e","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-ac4d21986e
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-ac4d21986e
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:34:50.299Z] Waiting for code changes...

[2020-05-27T17:36:19.024Z] ⏳  Processing...

[2020-05-27T17:36:19.555Z] Waiting for code changes...

[2020-05-27T17:36:19.703Z] ⏳  Processing...

[2020-05-27T17:36:19.839Z] Syncing module sources (29 files)...

[2020-05-27T17:36:20.724Z] Syncing module sources (29 files)... → Done (took 0.9 sec)

[2020-05-27T17:36:20.858Z] Building version v-b3a988f971...

[2020-05-27T17:36:21.469Z] Building client:v-b3a988f971...

[2020-05-27T17:37:10.403Z] Building client:v-b3a988f971... → Done (took 49.5 sec)

[2020-05-27T17:37:10.577Z] Deploying version v-b3a988f971...

[2020-05-27T17:37:13.894Z] Waiting for resources to be ready...

[2020-05-27T17:37:16.077Z] Deployment/frontend-v-b3a988f971: Started container frontend

[2020-05-27T17:37:18.781Z] Deploying version v-b3a988f971...

[2020-05-27T17:37:18.919Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-b3a988f971: ScalingReplicaSet - Scaled up replica set frontend-v-b3a988f971-5bbdc477ff to 1
Pod frontend-v-b3a988f971-5bbdc477ff-sznrv: Scheduled - Successfully assigned node-microservice/frontend-v-b3a988f971-5bbdc477ff-sznrv to minikube
Pod frontend-v-b3a988f971-5bbdc477ff-sznrv: Pulled - Container image "client:v-b3a988f971" already present on machine
Pod frontend-v-b3a988f971-5bbdc477ff-sznrv: Created - Created container frontend
Pod frontend-v-b3a988f971-5bbdc477ff-sznrv: Started - Started container frontend
Pod frontend-v-b3a988f971-5bbdc477ff-sznrv: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-b3a988f971

****** frontend-v-b3a988f971-5bbdc477ff-sznrv ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> node scripts/start.js

ℹ ｢wds｣: Project is running at http://172.17.0.3/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-b3a988f971:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-b3a988f971-5bbdc477ff to 1\e[39m\n\e[94mPod frontend-v-b3a988f971-5bbdc477ff-sznrv:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-b3a988f971-5bbdc477ff-sznrv to minikube\e[39m\n\e[94mPod frontend-v-b3a988f971-5bbdc477ff-sznrv:\e[39m \e[37mPulled - Container image \"client:v-b3a988f971\" already present on machine\e[39m\n\e[94mPod frontend-v-b3a988f971-5bbdc477ff-sznrv:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-b3a988f971-5bbdc477ff-sznrv:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-b3a988f971-5bbdc477ff-sznrv:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-b3a988f971\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-b3a988f971-5bbdc477ff-sznrv ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> node scripts/start.js\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.3/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-b3a988f971
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-b3a988f971
      uid: ee8951f0-959f-4faf-afa5-186346f79baa
      resourceVersion: '48009'
      generation: 1
      creationTimestamp: '2020-05-27T17:37:12Z'
      labels:
        garden.io/version: v-b3a988f971
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: cc5cf2ed668abb9ba639d71ab914629365f51a60d84a0bc59b100fa642b881fd
        garden.io/version: v-b3a988f971
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"cc5cf2ed668abb9ba639d71ab914629365f51a60d84a0bc59b100fa642b881fd","garden.io/version":"v-b3a988f971"},"labels":{"garden.io/version":"v-b3a988f971","module":"client","service":"frontend"},"name":"frontend-v-b3a988f971","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-b3a988f971","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-b3a988f971","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-b3a988f971"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-b3a988f971\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-b3a988f971","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-b3a988f971
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-b3a988f971
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:37:19.056Z] Waiting for code changes...

[2020-05-27T17:46:14.935Z] Getting status...

[2020-05-27T17:46:17.436Z] Getting status... → Done

[2020-05-27T17:46:18.018Z] Module configuration changed, reloading...

[2020-05-27T17:46:19.225Z] Getting status...

[2020-05-27T17:46:20.656Z] Getting status... → Done

[2020-05-27T17:46:21.418Z] ⏳  Processing...

[2020-05-27T17:46:21.626Z] Syncing module sources (29 files)...

[2020-05-27T17:46:22.087Z] Syncing module sources (5 files)...

[2020-05-27T17:46:22.334Z] Syncing module sources (5 files)... → Done (took 0.2 sec)

[2020-05-27T17:46:22.467Z] Getting build status for v-56ab2b577f...

[2020-05-27T17:46:23.301Z] Syncing module sources (29 files)... → Done (took 1.7 sec)

[2020-05-27T17:46:23.437Z] Getting build status for v-44b4f4b14f...

[2020-05-27T17:46:23.573Z] Getting build status for v-57df7df941...

[2020-05-27T17:46:23.708Z] Getting build status for v-57df7df941... → Done (took 0.1 sec)

[2020-05-27T17:46:24.039Z] Deploying version v-57df7df941...

[2020-05-27T17:46:24.172Z] Deploying version v-57df7df941... → Already deployed

[2020-05-27T17:46:24.457Z] Getting build status for v-56ab2b577f... → Done (took 2 sec)

[2020-05-27T17:46:24.592Z] Deploying version v-56ab2b577f...

[2020-05-27T17:46:24.939Z] Building version v-44b4f4b14f...

[2020-05-27T17:46:25.187Z] Building client:v-44b4f4b14f...

[2020-05-27T17:46:25.742Z] Building client:v-44b4f4b14f... → Done (took 2.3 sec)

[2020-05-27T17:46:25.878Z] Deploying version v-44b4f4b14f...

[2020-05-27T17:46:26.343Z] Waiting for resources to be ready...

[2020-05-27T17:46:27.722Z] Waiting for resources to be ready...

[2020-05-27T17:46:28.537Z] Deploying version v-56ab2b577f...

[2020-05-27T17:46:28.681Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '48705'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:46:29.923Z] Deploying version v-44b4f4b14f...

[2020-05-27T17:46:30.069Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-44b4f4b14f: ScalingReplicaSet - Scaled up replica set frontend-v-44b4f4b14f-74c9b879b6 to 1
Pod frontend-v-44b4f4b14f-74c9b879b6-2b6rv: Scheduled - Successfully assigned node-microservice/frontend-v-44b4f4b14f-74c9b879b6-2b6rv to minikube
Pod frontend-v-44b4f4b14f-74c9b879b6-2b6rv: Pulled - Container image "client:v-44b4f4b14f" already present on machine
Pod frontend-v-44b4f4b14f-74c9b879b6-2b6rv: Created - Created container frontend
Pod frontend-v-44b4f4b14f-74c9b879b6-2b6rv: Started - Started container frontend
Pod frontend-v-44b4f4b14f-74c9b879b6-2b6rv: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-44b4f4b14f

****** frontend-v-44b4f4b14f-74c9b879b6-2b6rv ******
------ frontend ------node: bad option: -it

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-44b4f4b14f:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-44b4f4b14f-74c9b879b6 to 1\e[39m\n\e[94mPod frontend-v-44b4f4b14f-74c9b879b6-2b6rv:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-44b4f4b14f-74c9b879b6-2b6rv to minikube\e[39m\n\e[94mPod frontend-v-44b4f4b14f-74c9b879b6-2b6rv:\e[39m \e[37mPulled - Container image \"client:v-44b4f4b14f\" already present on machine\e[39m\n\e[94mPod frontend-v-44b4f4b14f-74c9b879b6-2b6rv:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-44b4f4b14f-74c9b879b6-2b6rv:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-44b4f4b14f-74c9b879b6-2b6rv:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-44b4f4b14f\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-44b4f4b14f-74c9b879b6-2b6rv ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39mnode: bad option: -it\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-44b4f4b14f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-44b4f4b14f
      uid: c5d259b8-9209-42eb-a2af-3bf8888503b4
      resourceVersion: '49410'
      generation: 1
      creationTimestamp: '2020-05-27T17:46:26Z'
      labels:
        garden.io/version: v-44b4f4b14f
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 73e9d54b5149b884d00b69c8435d86d3607d895e53f95e13f2346ce3f57af5b9
        garden.io/version: v-44b4f4b14f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"73e9d54b5149b884d00b69c8435d86d3607d895e53f95e13f2346ce3f57af5b9","garden.io/version":"v-44b4f4b14f"},"labels":{"garden.io/version":"v-44b4f4b14f","module":"client","service":"frontend"},"name":"frontend-v-44b4f4b14f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-44b4f4b14f","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-44b4f4b14f","module":"client","service":"frontend"}},"spec":{"containers":[{"args":["-it"],"env":[{"name":"GARDEN_VERSION","value":"v-44b4f4b14f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-44b4f4b14f\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-44b4f4b14f","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-44b4f4b14f
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-44b4f4b14f
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:46:30.212Z] Waiting for code changes...

[2020-05-27T17:47:01.399Z] Getting status...

[2020-05-27T17:47:03.948Z] Getting status... → Done

[2020-05-27T17:47:04.486Z] Error: Error validating module 'client' (client/garden.yml): key .services[0][env] must be of type object
    at validateSchema (/snapshot/project/garden-service/tmp/dist/build/src/config/validation.js:0)
    at Object.validateWithPath (/snapshot/project/garden-service/tmp/dist/build/src/config/validation.js:0)
    at /snapshot/project/garden-service/tmp/dist/build/src/resolve-module.js:0
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/resolve-module.js:0)
Error Details:
value:
  services: []
  build:
    dependencies: []
context: module 'client' (client/garden.yml)
errorDescription: "key \e[4m.services[0][env]\e[24m must be of type object"
errorDetails: []


[2020-05-27T17:47:04.825Z] Error: Failed resolving one or more modules:

client: Error validating module 'client' (client/garden.yml): key .services[0][env] must be of type object
    at Garden.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/garden.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/garden.js:0)
Error Details:
results:
  resolve-module-config.client:
    type: resolve-module-config
    description: resolving module config client
    key: resolve-module-config.client
    name: client
    error:
      detail:
        value:
          services:
            - name: frontend
              ports:
                - name: http
                  containerPort: 3000
              ingresses:
                - path: /
                  port: http
              env:
                - tty: true
          build:
            dependencies: []
        context: module 'client' (client/garden.yml)
        errorDescription: "key \e[4m.services[0][env]\e[24m must be of type object"
        errorDetails:
          - message: "key \e[4m.services[0][env]\e[24m must be of type object"
            path:
              - services
              - 0
              - env
            type: object.base
            context:
              type: object
              label: 'services[0].env'
              value: >-
                ~results~resolve-module-config.client~error~detail~value~services~0~env
              key: env
      type: configuration
    completedAt: '2020-05-27T17:47:04.192Z'
    batchId: 4c0ce7c0-2a0e-4ff8-a11b-136173dc1d40
  resolve-module-config.db:
    type: resolve-module-config
    key: resolve-module-config.db
    name: db
    description: resolving module config db
    completedAt: '2020-05-27T17:47:04.488Z'
    batchId: 3d604584-7dbb-472f-a845-4b193b00465d
    output:
      apiVersion: garden.io/v0
      kind: Module
      allowPublish: true
      build:
        dependencies: []
      configPath: /Users/emilwils/Documents/node-microservice/garden.yml
      description: Database container
      disabled: false
      include: []
      name: db
      outputs:
        local-image-name: mysql
        deployment-image-name: mysql
      path: /Users/emilwils/Documents/node-microservice
      serviceConfigs: []
      spec:
        image: 'mysql:5.6'
        services: []
        build:
          dependencies: []
          timeout: 1200
        buildArgs: {}
        tests: []
        tasks: []
      testConfigs: []
      type: container
      taskConfigs: []
    dependencyResults: {}
  resolve-module.db:
    type: resolve-module
    key: resolve-module.db
    name: db
    description: resolving module db
    completedAt: '2020-05-27T17:47:04.641Z'
    batchId: 3d604584-7dbb-472f-a845-4b193b00465d
    output:
      apiVersion: garden.io/v0
      kind: Module
      allowPublish: true
      build:
        dependencies: []
      configPath: /Users/emilwils/Documents/node-microservice/garden.yml
      description: Database container
      disabled: false
      include: []
      name: db
      outputs:
        local-image-name: mysql
        deployment-image-name: mysql
      path: /Users/emilwils/Documents/node-microservice
      serviceConfigs: []
      spec:
        image: 'mysql:5.6'
        services: []
        build:
          dependencies: []
          timeout: 1200
        buildArgs: {}
        tests: []
        tasks: []
      testConfigs: []
      type: container
      taskConfigs: []
      buildPath: /Users/emilwils/Documents/node-microservice/.garden/build/db
      buildMetadataPath: /Users/emilwils/Documents/node-microservice/.garden/build-metadata/db
      version:
        versionString: v-57df7df941
        dependencyVersions: {}
        files: []
      needsBuild: true
      buildDependencies: {}
      serviceNames: []
      serviceDependencyNames: []
      taskNames: []
      taskDependencyNames: []
      compatibleTypes: []
    dependencyResults:
      resolve-module-config.db:
        type: resolve-module-config
        key: resolve-module-config.db
        name: db
        description: resolving module config db
        completedAt: '2020-05-27T17:47:04.488Z'
        batchId: 3d604584-7dbb-472f-a845-4b193b00465d
        output:
          apiVersion: garden.io/v0
          kind: Module
          allowPublish: true
          build:
            dependencies: []
          configPath: /Users/emilwils/Documents/node-microservice/garden.yml
          description: Database container
          disabled: false
          include: []
          name: db
          outputs:
            local-image-name: mysql
            deployment-image-name: mysql
          path: /Users/emilwils/Documents/node-microservice
          serviceConfigs: []
          spec:
            image: 'mysql:5.6'
            services: []
            build:
              dependencies: []
              timeout: 1200
            buildArgs: {}
            tests: []
            tasks: []
          testConfigs: []
          type: container
          taskConfigs: []
        dependencyResults: {}
  resolve-module-config.server:
    type: resolve-module-config
    key: resolve-module-config.server
    name: server
    description: resolving module config server
    completedAt: '2020-05-27T17:47:04.508Z'
    batchId: 479dd57c-afea-4a36-afb6-75628848602f
    output:
      apiVersion: garden.io/v0
      kind: Module
      allowPublish: true
      build:
        dependencies: []
      configPath: /Users/emilwils/Documents/node-microservice/server/garden.yml
      description: Backend container
      disabled: false
      name: server
      outputs:
        local-image-name: server
        deployment-image-name: server
      path: /Users/emilwils/Documents/node-microservice/server
      serviceConfigs: []
      spec:
        services: []
        build:
          dependencies: []
          timeout: 1200
        buildArgs: {}
        tests: []
        tasks: []
      testConfigs: []
      type: container
      taskConfigs: []
    dependencyResults: {}
  resolve-module.server:
    type: resolve-module
    key: resolve-module.server
    name: server
    description: resolving module server
    completedAt: '2020-05-27T17:47:04.653Z'
    batchId: 479dd57c-afea-4a36-afb6-75628848602f
    output:
      apiVersion: garden.io/v0
      kind: Module
      allowPublish: true
      build:
        dependencies: []
      configPath: /Users/emilwils/Documents/node-microservice/server/garden.yml
      description: Backend container
      disabled: false
      name: server
      outputs:
        local-image-name: server
        deployment-image-name: server
      path: /Users/emilwils/Documents/node-microservice/server
      serviceConfigs: []
      spec:
        services: []
        build:
          dependencies: []
          timeout: 1200
        buildArgs: {}
        tests: []
        tasks: []
      testConfigs: []
      type: container
      taskConfigs: []
      buildPath: /Users/emilwils/Documents/node-microservice/.garden/build/server
      buildMetadataPath: >-
        /Users/emilwils/Documents/node-microservice/.garden/build-metadata/server
      version:
        versionString: v-56ab2b577f
        dependencyVersions: {}
        files: []
      needsBuild: true
      buildDependencies: {}
      serviceNames: []
      serviceDependencyNames: []
      taskNames: []
      taskDependencyNames: []
      compatibleTypes: []
    dependencyResults:
      resolve-module-config.server:
        type: resolve-module-config
        key: resolve-module-config.server
        name: server
        description: resolving module config server
        completedAt: '2020-05-27T17:47:04.508Z'
        batchId: 479dd57c-afea-4a36-afb6-75628848602f
        output:
          apiVersion: garden.io/v0
          kind: Module
          allowPublish: true
          build:
            dependencies: []
          configPath: /Users/emilwils/Documents/node-microservice/server/garden.yml
          description: Backend container
          disabled: false
          name: server
          outputs:
            local-image-name: server
            deployment-image-name: server
          path: /Users/emilwils/Documents/node-microservice/server
          serviceConfigs: []
          spec:
            services: []
            build:
              dependencies: []
              timeout: 1200
            buildArgs: {}
            tests: []
            tasks: []
          testConfigs: []
          type: container
          taskConfigs: []
        dependencyResults: {}
errors: []


[2020-05-27T17:47:31.656Z] Getting status...

[2020-05-27T17:47:34.045Z] Getting status... → Done

[2020-05-27T17:47:34.596Z] Module configuration changed, reloading...

[2020-05-27T17:47:35.723Z] Getting status...

[2020-05-27T17:47:37.165Z] Getting status... → Done

[2020-05-27T17:47:37.822Z] ⏳  Processing...

[2020-05-27T17:47:37.967Z] Syncing module sources (29 files)...

[2020-05-27T17:47:38.390Z] Syncing module sources (5 files)...

[2020-05-27T17:47:38.765Z] Syncing module sources (5 files)... → Done (took 0.4 sec)

[2020-05-27T17:47:38.901Z] Getting build status for v-56ab2b577f...

[2020-05-27T17:47:39.488Z] Getting build status for v-57df7df941...

[2020-05-27T17:47:39.633Z] Getting build status for v-57df7df941... → Done (took 0.2 sec)

[2020-05-27T17:47:39.773Z] Deploying version v-57df7df941...

[2020-05-27T17:47:39.916Z] Deploying version v-57df7df941... → Already deployed

[2020-05-27T17:47:40.057Z] Syncing module sources (29 files)... → Done (took 2.1 sec)

[2020-05-27T17:47:40.198Z] Getting build status for v-a069f777f6...

[2020-05-27T17:47:40.523Z] Getting build status for v-56ab2b577f... → Done (took 1.6 sec)

[2020-05-27T17:47:40.668Z] Deploying version v-56ab2b577f...

[2020-05-27T17:47:41.000Z] Building version v-a069f777f6...

[2020-05-27T17:47:41.252Z] Building client:v-a069f777f6...

[2020-05-27T17:47:41.853Z] Building client:v-a069f777f6... → Done (took 1.6 sec)

[2020-05-27T17:47:41.995Z] Deploying version v-a069f777f6...

[2020-05-27T17:47:43.373Z] Waiting for resources to be ready...

[2020-05-27T17:47:43.859Z] Waiting for resources to be ready...

[2020-05-27T17:47:45.596Z] Deploying version v-56ab2b577f...

[2020-05-27T17:47:45.742Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '48705'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:47:46.110Z] Deployment/frontend-v-a069f777f6: Started container frontend

[2020-05-27T17:47:48.813Z] Deploying version v-a069f777f6...

[2020-05-27T17:47:48.964Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 10s restarting failed container=frontend pod=frontend-v-a069f777f6-6684994995-s8sj8_node-microservice(23289b82-1394-4927-9300-d211084aacc4)

━━━ Events ━━━
Deployment frontend-v-a069f777f6: ScalingReplicaSet - Scaled up replica set frontend-v-a069f777f6-6684994995 to 1
Pod frontend-v-a069f777f6-6684994995-s8sj8: Scheduled - Successfully assigned node-microservice/frontend-v-a069f777f6-6684994995-s8sj8 to minikube
Pod frontend-v-a069f777f6-6684994995-s8sj8: Pulled - Container image "client:v-a069f777f6" already present on machine
Pod frontend-v-a069f777f6-6684994995-s8sj8: Created - Created container frontend
Pod frontend-v-a069f777f6-6684994995-s8sj8: Started - Started container frontend
Pod frontend-v-a069f777f6-6684994995-s8sj8: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-a069f777f6

****** frontend-v-a069f777f6-6684994995-s8sj8 ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> node scripts/start.js

ℹ ｢wds｣: Project is running at http://172.17.0.3/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=frontend
    pod=frontend-v-a069f777f6-6684994995-s8sj8_node-microservice(23289b82-1394-4927-9300-d211084aacc4)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-a069f777f6:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-a069f777f6-6684994995 to 1\e[39m\n\e[94mPod frontend-v-a069f777f6-6684994995-s8sj8:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-a069f777f6-6684994995-s8sj8 to minikube\e[39m\n\e[94mPod frontend-v-a069f777f6-6684994995-s8sj8:\e[39m \e[37mPulled - Container image \"client:v-a069f777f6\" already present on machine\e[39m\n\e[94mPod frontend-v-a069f777f6-6684994995-s8sj8:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-a069f777f6-6684994995-s8sj8:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-a069f777f6-6684994995-s8sj8:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-a069f777f6\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-a069f777f6-6684994995-s8sj8 ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> node scripts/start.js\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.3/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-a069f777f6
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-a069f777f6
      uid: 1dbbd9c5-6eef-4daf-af87-c59ef6400513
      resourceVersion: '49700'
      generation: 1
      creationTimestamp: '2020-05-27T17:47:42Z'
      labels:
        garden.io/version: v-a069f777f6
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d24686dabf551050c92b943ac484be55f57d2c1dfa8493d9101ced9dfc251675
        garden.io/version: v-a069f777f6
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d24686dabf551050c92b943ac484be55f57d2c1dfa8493d9101ced9dfc251675","garden.io/version":"v-a069f777f6"},"labels":{"garden.io/version":"v-a069f777f6","module":"client","service":"frontend"},"name":"frontend-v-a069f777f6","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-a069f777f6","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-a069f777f6","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-a069f777f6"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-a069f777f6\"}]"},{"name":"tty","value":"true"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-a069f777f6","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-a069f777f6
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-a069f777f6
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:47:49.121Z] Waiting for code changes...

[2020-05-27T17:48:21.032Z] ⏳  Processing...

[2020-05-27T17:48:21.276Z] Waiting for code changes...

[2020-05-27T17:48:21.437Z] ⏳  Processing...

[2020-05-27T17:48:21.703Z] Waiting for code changes...

[2020-05-27T17:48:21.860Z] ⏳  Processing...

[2020-05-27T17:48:22.035Z] Waiting for code changes...

[2020-05-27T17:54:12.631Z] ⏳  Processing...

[2020-05-27T17:54:13.062Z] ⏳  Processing...

[2020-05-27T17:54:13.230Z] Waiting for code changes...

[2020-05-27T17:54:13.382Z] ⏳  Processing...

[2020-05-27T17:54:13.524Z] Syncing module sources (23 files)...

[2020-05-27T17:54:14.481Z] Syncing module sources (23 files)... → Done (took 0.9 sec)

[2020-05-27T17:54:14.625Z] Building version v-7eaa3a76ec...

[2020-05-27T17:54:15.250Z] Building client:v-7eaa3a76ec...

[2020-05-27T17:54:16.044Z] Building client:v-7eaa3a76ec... → Done (took 1.4 sec)

[2020-05-27T17:54:16.192Z] Deploying version v-7eaa3a76ec...

[2020-05-27T17:54:18.207Z] Waiting for resources to be ready...

[2020-05-27T17:54:20.407Z] Deployment/frontend-v-7eaa3a76ec: Started container frontend

[2020-05-27T17:54:23.134Z] Deploying version v-7eaa3a76ec...

[2020-05-27T17:54:23.301Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-7eaa3a76ec: ScalingReplicaSet - Scaled up replica set frontend-v-7eaa3a76ec-7dd9b54475 to 1
Pod frontend-v-7eaa3a76ec-7dd9b54475-ksnn5: Scheduled - Successfully assigned node-microservice/frontend-v-7eaa3a76ec-7dd9b54475-ksnn5 to minikube
Pod frontend-v-7eaa3a76ec-7dd9b54475-ksnn5: Pulled - Container image "client:v-7eaa3a76ec" already present on machine
Pod frontend-v-7eaa3a76ec-7dd9b54475-ksnn5: Created - Created container frontend
Pod frontend-v-7eaa3a76ec-7dd9b54475-ksnn5: Started - Started container frontend
Pod frontend-v-7eaa3a76ec-7dd9b54475-ksnn5: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-7eaa3a76ec

****** frontend-v-7eaa3a76ec-7dd9b54475-ksnn5 ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> node scripts/start.js

Could not find a required file.
  Name: index.html
  Searched in: /usr/src/client/public
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! client@0.1.0 start: `node scripts/start.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the client@0.1.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2020-05-27T17_54_21_000Z-debug.log

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-7eaa3a76ec:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-7eaa3a76ec-7dd9b54475 to 1\e[39m\n\e[94mPod frontend-v-7eaa3a76ec-7dd9b54475-ksnn5:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-7eaa3a76ec-7dd9b54475-ksnn5 to minikube\e[39m\n\e[94mPod frontend-v-7eaa3a76ec-7dd9b54475-ksnn5:\e[39m \e[37mPulled - Container image \"client:v-7eaa3a76ec\" already present on machine\e[39m\n\e[94mPod frontend-v-7eaa3a76ec-7dd9b54475-ksnn5:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-7eaa3a76ec-7dd9b54475-ksnn5:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-7eaa3a76ec-7dd9b54475-ksnn5:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-7eaa3a76ec\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-7eaa3a76ec-7dd9b54475-ksnn5 ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> node scripts/start.js\n\nCould not find a required file.\n  Name: index.html\n  Searched in: /usr/src/client/public\nnpm ERR! code ELIFECYCLE\nnpm ERR! errno 1\nnpm ERR! client@0.1.0 start: `node scripts/start.js`\nnpm ERR! Exit status 1\nnpm ERR! \nnpm ERR! Failed at the client@0.1.0 start script.\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\n\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     /root/.npm/_logs/2020-05-27T17_54_21_000Z-debug.log\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-7eaa3a76ec
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-7eaa3a76ec
      uid: c29069a4-5110-4659-b379-a62784880ab3
      resourceVersion: '50771'
      generation: 1
      creationTimestamp: '2020-05-27T17:54:16Z'
      labels:
        garden.io/version: v-7eaa3a76ec
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 618cfb56d68675e719b34b6326e6774d884625ed3f194465633185040d9b3b33
        garden.io/version: v-7eaa3a76ec
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"618cfb56d68675e719b34b6326e6774d884625ed3f194465633185040d9b3b33","garden.io/version":"v-7eaa3a76ec"},"labels":{"garden.io/version":"v-7eaa3a76ec","module":"client","service":"frontend"},"name":"frontend-v-7eaa3a76ec","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-7eaa3a76ec","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-7eaa3a76ec","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-7eaa3a76ec"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-7eaa3a76ec\"}]"},{"name":"tty","value":"true"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-7eaa3a76ec","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-7eaa3a76ec
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-7eaa3a76ec
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:54:23.453Z] ⏳  Processing...

[2020-05-27T17:54:23.596Z] Syncing module sources (18 files)...

[2020-05-27T17:54:24.204Z] Syncing module sources (18 files)... → Done (took 0.6 sec)

[2020-05-27T17:54:24.353Z] Building version v-2079f76da4...

[2020-05-27T17:54:24.858Z] Building client:v-2079f76da4...

[2020-05-27T17:54:25.548Z] Building client:v-2079f76da4...

[2020-05-27T17:54:25.702Z] Error: Unable to run docker command: Command "docker build -t client:v-2079f76da4 /Users/emilwils/Documents/node-microservice/.garden/build/client" failed with code 1:

COPY failed: no source files were specified

Here's the full output:

Sending build context to Docker daemon  80.38kB
Step 1/7 : FROM node:12
 ---> bdca973cfa07
Step 2/7 : WORKDIR /usr/src/client
 ---> Using cache
 ---> 70b30d82d719
Step 3/7 : COPY package*.json ./
COPY failed: no source files were specified
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
    at Generator.throw (<anonymous>)
    at rejected (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
Error Details:
err:
  detail:
    cmd: docker
    args:
      - build
      - '-t'
      - 'client:v-2079f76da4'
      - /Users/emilwils/Documents/node-microservice/.garden/build/client
    opts:
      cwd: /Users/emilwils/Documents/node-microservice/.garden/build/client
      ignoreError: false
      stdout:
        _readableState:
          objectMode: true
          highWaterMark: 16
          buffer:
            head: null
            tail: null
            length: 0
          length: 0
          pipes: null
          pipesCount: 0
          flowing: true
          ended: true
          endEmitted: true
          reading: false
          sync: false
          needReadable: false
          emittedReadable: false
          readableListening: false
          resumeScheduled: false
          paused: false
          emitClose: true
          destroyed: false
          defaultEncoding: utf8
          awaitDrain: 0
          readingMore: false
          decoder: null
          encoding: null
        readable: false
        _events: {}
        _eventsCount: 3
        _writableState:
          objectMode: false
          highWaterMark: 16384
          finalCalled: false
          needDrain: false
          ending: true
          ended: true
          finished: true
          destroyed: false
          decodeStrings: true
          defaultEncoding: utf8
          length: 0
          writing: false
          corked: 0
          sync: false
          bufferProcessing: false
          writecb: null
          writelen: 0
          bufferedRequest: null
          lastBufferedRequest: null
          pendingcb: 0
          prefinished: true
          errorEmitted: false
          emitClose: true
          bufferedRequestCount: 0
          corkedRequestsFree:
            next: null
            entry: null
        writable: false
        allowHalfOpen: true
        _transformState:
          needTransform: false
          transforming: false
          writecb: null
          writechunk: null
          writeencoding: buffer
        matcher: {}
        overflow: false
      timeout: 1200
      env:
        TERM_PROGRAM: Apple_Terminal
        SHELL: /bin/zsh
        TERM: xterm-256color
        TMPDIR: /var/folders/nr/97f582w94rl7snqc5h3ldwqh0000gn/T/
        TERM_PROGRAM_VERSION: '433'
        TERM_SESSION_ID: A6BD6B7C-14CE-4383-8F6D-D382816C6EE9
        USER: emilwils
        SSH_AUTH_SOCK: /private/tmp/com.apple.launchd.3ygVNIh0vg/Listeners
        PATH: >-
          /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware
          Fusion.app/Contents/Public
        LaunchInstanceID: DD0DB73A-B855-43F4-B00C-C5EFD5F0D6A8
        PWD: /Users/emilwils/Documents/node-microservice
        LANG: en_US.UTF-8
        XPC_FLAGS: '0x0'
        XPC_SERVICE_NAME: '0'
        SHLVL: '1'
        HOME: /Users/emilwils
        LOGNAME: emilwils
        SECURITYSESSIONID: 186a6
        _: /usr/local/bin/garden
        __CF_USER_TEXT_ENCODING: '0x1F5:0x0:0x0'
        DOCKER_TLS_VERIFY: '1'
        DOCKER_HOST: 'tcp://192.168.99.108:2376'
        DOCKER_CERT_PATH: /Users/emilwils/.minikube/certs
        MINIKUBE_ACTIVE_DOCKERD: minikube
        DOCKER_CLI_EXPERIMENTAL: enabled
        PKG_EXECPATH: /usr/local/Cellar/garden-cli/0.11.14/libexec/garden
    result:
      code: 1
      all: "Sending build context to Docker daemon  80.38kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\nCOPY failed: no source files were specified\n"
      stdout: "Sending build context to Docker daemon  80.38kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\n"
      stderr: |
        COPY failed: no source files were specified
      proc:
        _events: {}
        _eventsCount: 2
        _closesNeeded: 3
        _closesGot: 3
        connected: false
        signalCode: null
        exitCode: 1
        killed: false
        spawnfile: docker
        _handle: null
        spawnargs:
          - docker
          - build
          - '-t'
          - 'client:v-2079f76da4'
          - /Users/emilwils/Documents/node-microservice/.garden/build/client
        pid: 64170
        stdin:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: null
            ended: false
            endEmitted: false
            reading: false
            sync: true
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: true
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 1
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stdout:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: false
            ended: true
            endEmitted: true
            reading: false
            sync: false
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: false
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 3
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stderr:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: true
            ended: true
            endEmitted: true
            reading: false
            sync: false
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: false
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 3
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stdio:
          - ~err~detail~result~proc~stdin
          - ~err~detail~result~proc~stdout
          - ~err~detail~result~proc~stderr
    code: 1
    all: "Sending build context to Docker daemon  80.38kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\nCOPY failed: no source files were specified\n"
    stdout: "Sending build context to Docker daemon  80.38kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\n"
    stderr: |
      COPY failed: no source files were specified
    proc: ~err~detail~result~proc
  type: runtime
args: []
cwd: /Users/emilwils/Documents/node-microservice/.garden/build/client


[2020-05-27T17:54:25.864Z] Waiting for code changes...

[2020-05-27T17:54:26.012Z] ⏳  Processing...

[2020-05-27T17:54:26.159Z] Syncing module sources (16 files)...

[2020-05-27T17:54:26.754Z] Syncing module sources (16 files)... → Done (took 0.6 sec)

[2020-05-27T17:54:26.898Z] Building version v-8644b74aee...

[2020-05-27T17:54:27.329Z] Building client:v-8644b74aee...

[2020-05-27T17:54:27.800Z] Building client:v-8644b74aee...

[2020-05-27T17:54:27.956Z] Error: Unable to run docker command: Command "docker build -t client:v-8644b74aee /Users/emilwils/Documents/node-microservice/.garden/build/client" failed with code 1:

COPY failed: no source files were specified

Here's the full output:

Sending build context to Docker daemon  80.38kB
Step 1/7 : FROM node:12
 ---> bdca973cfa07
Step 2/7 : WORKDIR /usr/src/client
 ---> Using cache
 ---> 70b30d82d719
Step 3/7 : COPY package*.json ./
COPY failed: no source files were specified
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
    at Generator.throw (<anonymous>)
    at rejected (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
    at runMicrotasks (<anonymous>)
    at processTicksAndRejections (internal/process/task_queues.js:93:5)
Error Details:
err:
  detail:
    cmd: docker
    args:
      - build
      - '-t'
      - 'client:v-8644b74aee'
      - /Users/emilwils/Documents/node-microservice/.garden/build/client
    opts:
      cwd: /Users/emilwils/Documents/node-microservice/.garden/build/client
      ignoreError: false
      stdout:
        _readableState:
          objectMode: true
          highWaterMark: 16
          buffer:
            head: null
            tail: null
            length: 0
          length: 0
          pipes: null
          pipesCount: 0
          flowing: true
          ended: true
          endEmitted: true
          reading: false
          sync: false
          needReadable: false
          emittedReadable: false
          readableListening: false
          resumeScheduled: false
          paused: false
          emitClose: true
          destroyed: false
          defaultEncoding: utf8
          awaitDrain: 0
          readingMore: false
          decoder: null
          encoding: null
        readable: false
        _events: {}
        _eventsCount: 3
        _writableState:
          objectMode: false
          highWaterMark: 16384
          finalCalled: false
          needDrain: false
          ending: true
          ended: true
          finished: true
          destroyed: false
          decodeStrings: true
          defaultEncoding: utf8
          length: 0
          writing: false
          corked: 0
          sync: false
          bufferProcessing: false
          writecb: null
          writelen: 0
          bufferedRequest: null
          lastBufferedRequest: null
          pendingcb: 0
          prefinished: true
          errorEmitted: false
          emitClose: true
          bufferedRequestCount: 0
          corkedRequestsFree:
            next: null
            entry: null
        writable: false
        allowHalfOpen: true
        _transformState:
          needTransform: false
          transforming: false
          writecb: null
          writechunk: null
          writeencoding: buffer
        matcher: {}
        overflow: false
      timeout: 1200
      env:
        TERM_PROGRAM: Apple_Terminal
        SHELL: /bin/zsh
        TERM: xterm-256color
        TMPDIR: /var/folders/nr/97f582w94rl7snqc5h3ldwqh0000gn/T/
        TERM_PROGRAM_VERSION: '433'
        TERM_SESSION_ID: A6BD6B7C-14CE-4383-8F6D-D382816C6EE9
        USER: emilwils
        SSH_AUTH_SOCK: /private/tmp/com.apple.launchd.3ygVNIh0vg/Listeners
        PATH: >-
          /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware
          Fusion.app/Contents/Public
        LaunchInstanceID: DD0DB73A-B855-43F4-B00C-C5EFD5F0D6A8
        PWD: /Users/emilwils/Documents/node-microservice
        LANG: en_US.UTF-8
        XPC_FLAGS: '0x0'
        XPC_SERVICE_NAME: '0'
        SHLVL: '1'
        HOME: /Users/emilwils
        LOGNAME: emilwils
        SECURITYSESSIONID: 186a6
        _: /usr/local/bin/garden
        __CF_USER_TEXT_ENCODING: '0x1F5:0x0:0x0'
        DOCKER_TLS_VERIFY: '1'
        DOCKER_HOST: 'tcp://192.168.99.108:2376'
        DOCKER_CERT_PATH: /Users/emilwils/.minikube/certs
        MINIKUBE_ACTIVE_DOCKERD: minikube
        DOCKER_CLI_EXPERIMENTAL: enabled
        PKG_EXECPATH: /usr/local/Cellar/garden-cli/0.11.14/libexec/garden
    result:
      code: 1
      all: "Sending build context to Docker daemon  80.38kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\nCOPY failed: no source files were specified\n"
      stdout: "Sending build context to Docker daemon  80.38kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\n"
      stderr: |
        COPY failed: no source files were specified
      proc:
        _events: {}
        _eventsCount: 2
        _closesNeeded: 3
        _closesGot: 3
        connected: false
        signalCode: null
        exitCode: 1
        killed: false
        spawnfile: docker
        _handle: null
        spawnargs:
          - docker
          - build
          - '-t'
          - 'client:v-8644b74aee'
          - /Users/emilwils/Documents/node-microservice/.garden/build/client
        pid: 64196
        stdin:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: null
            ended: false
            endEmitted: false
            reading: false
            sync: true
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: true
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 1
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stdout:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: false
            ended: true
            endEmitted: true
            reading: false
            sync: false
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: false
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 3
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stderr:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: true
            ended: true
            endEmitted: true
            reading: false
            sync: false
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: false
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 3
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stdio:
          - ~err~detail~result~proc~stdin
          - ~err~detail~result~proc~stdout
          - ~err~detail~result~proc~stderr
    code: 1
    all: "Sending build context to Docker daemon  80.38kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\nCOPY failed: no source files were specified\n"
    stdout: "Sending build context to Docker daemon  80.38kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\n"
    stderr: |
      COPY failed: no source files were specified
    proc: ~err~detail~result~proc
  type: runtime
args: []
cwd: /Users/emilwils/Documents/node-microservice/.garden/build/client


[2020-05-27T17:54:28.107Z] Waiting for code changes...

[2020-05-27T17:54:28.674Z] ⏳  Processing...

[2020-05-27T17:54:29.094Z] Waiting for code changes...

[2020-05-27T17:54:29.242Z] ⏳  Processing...

[2020-05-27T17:54:29.396Z] Syncing module sources (13 files)...

[2020-05-27T17:54:30.022Z] Syncing module sources (13 files)... → Done (took 0.6 sec)

[2020-05-27T17:54:30.172Z] Building version v-573e8226c3...

[2020-05-27T17:54:30.324Z] Building version v-57df7df941...

[2020-05-27T17:54:30.591Z] Building client:v-573e8226c3...

[2020-05-27T17:54:30.983Z] Building version v-57df7df941... → Done (took 0.6 sec)

[2020-05-27T17:54:31.136Z] Deploying version v-57df7df941...

[2020-05-27T17:54:31.480Z] Building client:v-573e8226c3...

[2020-05-27T17:54:31.632Z] Error: Unable to run docker command: Command "docker build -t client:v-573e8226c3 /Users/emilwils/Documents/node-microservice/.garden/build/client" failed with code 1:

COPY failed: no source files were specified

Here's the full output:

Sending build context to Docker daemon     64kB
Step 1/7 : FROM node:12
 ---> bdca973cfa07
Step 2/7 : WORKDIR /usr/src/client
 ---> Using cache
 ---> 70b30d82d719
Step 3/7 : COPY package*.json ./
COPY failed: no source files were specified
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
    at Generator.throw (<anonymous>)
    at rejected (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
Error Details:
err:
  detail:
    cmd: docker
    args:
      - build
      - '-t'
      - 'client:v-573e8226c3'
      - /Users/emilwils/Documents/node-microservice/.garden/build/client
    opts:
      cwd: /Users/emilwils/Documents/node-microservice/.garden/build/client
      ignoreError: false
      stdout:
        _readableState:
          objectMode: true
          highWaterMark: 16
          buffer:
            head: null
            tail: null
            length: 0
          length: 0
          pipes: null
          pipesCount: 0
          flowing: true
          ended: true
          endEmitted: true
          reading: false
          sync: false
          needReadable: false
          emittedReadable: false
          readableListening: false
          resumeScheduled: false
          paused: false
          emitClose: true
          destroyed: false
          defaultEncoding: utf8
          awaitDrain: 0
          readingMore: false
          decoder: null
          encoding: null
        readable: false
        _events: {}
        _eventsCount: 3
        _writableState:
          objectMode: false
          highWaterMark: 16384
          finalCalled: false
          needDrain: false
          ending: true
          ended: true
          finished: true
          destroyed: false
          decodeStrings: true
          defaultEncoding: utf8
          length: 0
          writing: false
          corked: 0
          sync: false
          bufferProcessing: false
          writecb: null
          writelen: 0
          bufferedRequest: null
          lastBufferedRequest: null
          pendingcb: 0
          prefinished: true
          errorEmitted: false
          emitClose: true
          bufferedRequestCount: 0
          corkedRequestsFree:
            next: null
            entry: null
        writable: false
        allowHalfOpen: true
        _transformState:
          needTransform: false
          transforming: false
          writecb: null
          writechunk: null
          writeencoding: buffer
        matcher: {}
        overflow: false
      timeout: 1200
      env:
        TERM_PROGRAM: Apple_Terminal
        SHELL: /bin/zsh
        TERM: xterm-256color
        TMPDIR: /var/folders/nr/97f582w94rl7snqc5h3ldwqh0000gn/T/
        TERM_PROGRAM_VERSION: '433'
        TERM_SESSION_ID: A6BD6B7C-14CE-4383-8F6D-D382816C6EE9
        USER: emilwils
        SSH_AUTH_SOCK: /private/tmp/com.apple.launchd.3ygVNIh0vg/Listeners
        PATH: >-
          /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware
          Fusion.app/Contents/Public
        LaunchInstanceID: DD0DB73A-B855-43F4-B00C-C5EFD5F0D6A8
        PWD: /Users/emilwils/Documents/node-microservice
        LANG: en_US.UTF-8
        XPC_FLAGS: '0x0'
        XPC_SERVICE_NAME: '0'
        SHLVL: '1'
        HOME: /Users/emilwils
        LOGNAME: emilwils
        SECURITYSESSIONID: 186a6
        _: /usr/local/bin/garden
        __CF_USER_TEXT_ENCODING: '0x1F5:0x0:0x0'
        DOCKER_TLS_VERIFY: '1'
        DOCKER_HOST: 'tcp://192.168.99.108:2376'
        DOCKER_CERT_PATH: /Users/emilwils/.minikube/certs
        MINIKUBE_ACTIVE_DOCKERD: minikube
        DOCKER_CLI_EXPERIMENTAL: enabled
        PKG_EXECPATH: /usr/local/Cellar/garden-cli/0.11.14/libexec/garden
    result:
      code: 1
      all: "Sending build context to Docker daemon     64kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\nCOPY failed: no source files were specified\n"
      stdout: "Sending build context to Docker daemon     64kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\n"
      stderr: |
        COPY failed: no source files were specified
      proc:
        _events: {}
        _eventsCount: 2
        _closesNeeded: 3
        _closesGot: 3
        connected: false
        signalCode: null
        exitCode: 1
        killed: false
        spawnfile: docker
        _handle: null
        spawnargs:
          - docker
          - build
          - '-t'
          - 'client:v-573e8226c3'
          - /Users/emilwils/Documents/node-microservice/.garden/build/client
        pid: 64227
        stdin:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: null
            ended: false
            endEmitted: false
            reading: false
            sync: true
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: true
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 1
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stdout:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: false
            ended: true
            endEmitted: true
            reading: false
            sync: false
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: false
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 3
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stderr:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: true
            ended: true
            endEmitted: true
            reading: false
            sync: false
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: false
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 3
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stdio:
          - ~err~detail~result~proc~stdin
          - ~err~detail~result~proc~stdout
          - ~err~detail~result~proc~stderr
    code: 1
    all: "Sending build context to Docker daemon     64kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\nCOPY failed: no source files were specified\n"
    stdout: "Sending build context to Docker daemon     64kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\n"
    stderr: |
      COPY failed: no source files were specified
    proc: ~err~detail~result~proc
  type: runtime
args: []
cwd: /Users/emilwils/Documents/node-microservice/.garden/build/client


[2020-05-27T17:54:32.480Z] Syncing module sources (4 files)...

[2020-05-27T17:54:33.010Z] Waiting for resources to be ready...

[2020-05-27T17:54:33.163Z] Syncing module sources (4 files)... → Done (took 0.7 sec)

[2020-05-27T17:54:33.318Z] Building version v-a218328ea0...

[2020-05-27T17:54:33.758Z] Building client:v-a218328ea0...

[2020-05-27T17:54:34.153Z] Building client:v-a218328ea0...

[2020-05-27T17:54:34.314Z] Error: Unable to run docker command: Command "docker build -t client:v-a218328ea0 /Users/emilwils/Documents/node-microservice/.garden/build/client" failed with code 1:

COPY failed: no source files were specified

Here's the full output:

Sending build context to Docker daemon  5.632kB
Step 1/7 : FROM node:12
 ---> bdca973cfa07
Step 2/7 : WORKDIR /usr/src/client
 ---> Using cache
 ---> 70b30d82d719
Step 3/7 : COPY package*.json ./
COPY failed: no source files were specified
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
    at Generator.throw (<anonymous>)
    at rejected (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
    at runMicrotasks (<anonymous>)
    at processTicksAndRejections (internal/process/task_queues.js:93:5)
Error Details:
err:
  detail:
    cmd: docker
    args:
      - build
      - '-t'
      - 'client:v-a218328ea0'
      - /Users/emilwils/Documents/node-microservice/.garden/build/client
    opts:
      cwd: /Users/emilwils/Documents/node-microservice/.garden/build/client
      ignoreError: false
      stdout:
        _readableState:
          objectMode: true
          highWaterMark: 16
          buffer:
            head: null
            tail: null
            length: 0
          length: 0
          pipes: null
          pipesCount: 0
          flowing: true
          ended: true
          endEmitted: true
          reading: false
          sync: false
          needReadable: false
          emittedReadable: false
          readableListening: false
          resumeScheduled: false
          paused: false
          emitClose: true
          destroyed: false
          defaultEncoding: utf8
          awaitDrain: 0
          readingMore: false
          decoder: null
          encoding: null
        readable: false
        _events: {}
        _eventsCount: 3
        _writableState:
          objectMode: false
          highWaterMark: 16384
          finalCalled: false
          needDrain: false
          ending: true
          ended: true
          finished: true
          destroyed: false
          decodeStrings: true
          defaultEncoding: utf8
          length: 0
          writing: false
          corked: 0
          sync: false
          bufferProcessing: false
          writecb: null
          writelen: 0
          bufferedRequest: null
          lastBufferedRequest: null
          pendingcb: 0
          prefinished: true
          errorEmitted: false
          emitClose: true
          bufferedRequestCount: 0
          corkedRequestsFree:
            next: null
            entry: null
        writable: false
        allowHalfOpen: true
        _transformState:
          needTransform: false
          transforming: false
          writecb: null
          writechunk: null
          writeencoding: buffer
        matcher: {}
        overflow: false
      timeout: 1200
      env:
        TERM_PROGRAM: Apple_Terminal
        SHELL: /bin/zsh
        TERM: xterm-256color
        TMPDIR: /var/folders/nr/97f582w94rl7snqc5h3ldwqh0000gn/T/
        TERM_PROGRAM_VERSION: '433'
        TERM_SESSION_ID: A6BD6B7C-14CE-4383-8F6D-D382816C6EE9
        USER: emilwils
        SSH_AUTH_SOCK: /private/tmp/com.apple.launchd.3ygVNIh0vg/Listeners
        PATH: >-
          /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware
          Fusion.app/Contents/Public
        LaunchInstanceID: DD0DB73A-B855-43F4-B00C-C5EFD5F0D6A8
        PWD: /Users/emilwils/Documents/node-microservice
        LANG: en_US.UTF-8
        XPC_FLAGS: '0x0'
        XPC_SERVICE_NAME: '0'
        SHLVL: '1'
        HOME: /Users/emilwils
        LOGNAME: emilwils
        SECURITYSESSIONID: 186a6
        _: /usr/local/bin/garden
        __CF_USER_TEXT_ENCODING: '0x1F5:0x0:0x0'
        DOCKER_TLS_VERIFY: '1'
        DOCKER_HOST: 'tcp://192.168.99.108:2376'
        DOCKER_CERT_PATH: /Users/emilwils/.minikube/certs
        MINIKUBE_ACTIVE_DOCKERD: minikube
        DOCKER_CLI_EXPERIMENTAL: enabled
        PKG_EXECPATH: /usr/local/Cellar/garden-cli/0.11.14/libexec/garden
    result:
      code: 1
      all: "Sending build context to Docker daemon  5.632kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\nCOPY failed: no source files were specified\n"
      stdout: "Sending build context to Docker daemon  5.632kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\n"
      stderr: |
        COPY failed: no source files were specified
      proc:
        _events: {}
        _eventsCount: 2
        _closesNeeded: 3
        _closesGot: 3
        connected: false
        signalCode: null
        exitCode: 1
        killed: false
        spawnfile: docker
        _handle: null
        spawnargs:
          - docker
          - build
          - '-t'
          - 'client:v-a218328ea0'
          - /Users/emilwils/Documents/node-microservice/.garden/build/client
        pid: 64253
        stdin:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: null
            ended: false
            endEmitted: false
            reading: false
            sync: true
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: true
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 1
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stdout:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: false
            ended: true
            endEmitted: true
            reading: false
            sync: false
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: false
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 3
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stderr:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: true
            ended: true
            endEmitted: true
            reading: false
            sync: false
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: false
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 3
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stdio:
          - ~err~detail~result~proc~stdin
          - ~err~detail~result~proc~stdout
          - ~err~detail~result~proc~stderr
    code: 1
    all: "Sending build context to Docker daemon  5.632kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\nCOPY failed: no source files were specified\n"
    stdout: "Sending build context to Docker daemon  5.632kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\n"
    stderr: |
      COPY failed: no source files were specified
    proc: ~err~detail~result~proc
  type: runtime
args: []
cwd: /Users/emilwils/Documents/node-microservice/.garden/build/client


[2020-05-27T17:54:35.176Z] Syncing module sources (4 files)...

[2020-05-27T17:54:35.367Z] Resources ready

[2020-05-27T17:54:35.543Z] Deploying version v-57df7df941... → Done (took 4.4 sec)

[2020-05-27T17:54:35.693Z] Syncing module sources (4 files)... → Done (took 0.5 sec)

[2020-05-27T17:54:35.841Z] Building version v-a218328ea0...

[2020-05-27T17:54:35.992Z] Deploying version v-56ab2b577f...

[2020-05-27T17:54:36.436Z] Building client:v-a218328ea0...

[2020-05-27T17:54:37.004Z] Building client:v-a218328ea0...

[2020-05-27T17:54:37.155Z] Error: Unable to run docker command: Command "docker build -t client:v-a218328ea0 /Users/emilwils/Documents/node-microservice/.garden/build/client" failed with code 1:

COPY failed: no source files were specified

Here's the full output:

Sending build context to Docker daemon  5.632kB
Step 1/7 : FROM node:12
 ---> bdca973cfa07
Step 2/7 : WORKDIR /usr/src/client
 ---> Using cache
 ---> 70b30d82d719
Step 3/7 : COPY package*.json ./
COPY failed: no source files were specified
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
    at Generator.throw (<anonymous>)
    at rejected (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
    at runMicrotasks (<anonymous>)
    at processTicksAndRejections (internal/process/task_queues.js:93:5)
Error Details:
err:
  detail:
    cmd: docker
    args:
      - build
      - '-t'
      - 'client:v-a218328ea0'
      - /Users/emilwils/Documents/node-microservice/.garden/build/client
    opts:
      cwd: /Users/emilwils/Documents/node-microservice/.garden/build/client
      ignoreError: false
      stdout:
        _readableState:
          objectMode: true
          highWaterMark: 16
          buffer:
            head: null
            tail: null
            length: 0
          length: 0
          pipes: null
          pipesCount: 0
          flowing: true
          ended: true
          endEmitted: true
          reading: false
          sync: false
          needReadable: false
          emittedReadable: false
          readableListening: false
          resumeScheduled: false
          paused: false
          emitClose: true
          destroyed: false
          defaultEncoding: utf8
          awaitDrain: 0
          readingMore: false
          decoder: null
          encoding: null
        readable: false
        _events: {}
        _eventsCount: 3
        _writableState:
          objectMode: false
          highWaterMark: 16384
          finalCalled: false
          needDrain: false
          ending: true
          ended: true
          finished: true
          destroyed: false
          decodeStrings: true
          defaultEncoding: utf8
          length: 0
          writing: false
          corked: 0
          sync: false
          bufferProcessing: false
          writecb: null
          writelen: 0
          bufferedRequest: null
          lastBufferedRequest: null
          pendingcb: 0
          prefinished: true
          errorEmitted: false
          emitClose: true
          bufferedRequestCount: 0
          corkedRequestsFree:
            next: null
            entry: null
        writable: false
        allowHalfOpen: true
        _transformState:
          needTransform: false
          transforming: false
          writecb: null
          writechunk: null
          writeencoding: buffer
        matcher: {}
        overflow: false
      timeout: 1200
      env:
        TERM_PROGRAM: Apple_Terminal
        SHELL: /bin/zsh
        TERM: xterm-256color
        TMPDIR: /var/folders/nr/97f582w94rl7snqc5h3ldwqh0000gn/T/
        TERM_PROGRAM_VERSION: '433'
        TERM_SESSION_ID: A6BD6B7C-14CE-4383-8F6D-D382816C6EE9
        USER: emilwils
        SSH_AUTH_SOCK: /private/tmp/com.apple.launchd.3ygVNIh0vg/Listeners
        PATH: >-
          /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware
          Fusion.app/Contents/Public
        LaunchInstanceID: DD0DB73A-B855-43F4-B00C-C5EFD5F0D6A8
        PWD: /Users/emilwils/Documents/node-microservice
        LANG: en_US.UTF-8
        XPC_FLAGS: '0x0'
        XPC_SERVICE_NAME: '0'
        SHLVL: '1'
        HOME: /Users/emilwils
        LOGNAME: emilwils
        SECURITYSESSIONID: 186a6
        _: /usr/local/bin/garden
        __CF_USER_TEXT_ENCODING: '0x1F5:0x0:0x0'
        DOCKER_TLS_VERIFY: '1'
        DOCKER_HOST: 'tcp://192.168.99.108:2376'
        DOCKER_CERT_PATH: /Users/emilwils/.minikube/certs
        MINIKUBE_ACTIVE_DOCKERD: minikube
        DOCKER_CLI_EXPERIMENTAL: enabled
        PKG_EXECPATH: /usr/local/Cellar/garden-cli/0.11.14/libexec/garden
    result:
      code: 1
      all: "Sending build context to Docker daemon  5.632kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\nCOPY failed: no source files were specified\n"
      stdout: "Sending build context to Docker daemon  5.632kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\n"
      stderr: |
        COPY failed: no source files were specified
      proc:
        _events: {}
        _eventsCount: 2
        _closesNeeded: 3
        _closesGot: 3
        connected: false
        signalCode: null
        exitCode: 1
        killed: false
        spawnfile: docker
        _handle: null
        spawnargs:
          - docker
          - build
          - '-t'
          - 'client:v-a218328ea0'
          - /Users/emilwils/Documents/node-microservice/.garden/build/client
        pid: 64288
        stdin:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: null
            ended: false
            endEmitted: false
            reading: false
            sync: true
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: true
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 1
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stdout:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: false
            ended: true
            endEmitted: true
            reading: false
            sync: false
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: false
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 3
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stderr:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: true
            ended: true
            endEmitted: true
            reading: false
            sync: false
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: false
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 3
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stdio:
          - ~err~detail~result~proc~stdin
          - ~err~detail~result~proc~stdout
          - ~err~detail~result~proc~stderr
    code: 1
    all: "Sending build context to Docker daemon  5.632kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\nCOPY failed: no source files were specified\n"
    stdout: "Sending build context to Docker daemon  5.632kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\n"
    stderr: |
      COPY failed: no source files were specified
    proc: ~err~detail~result~proc
  type: runtime
args: []
cwd: /Users/emilwils/Documents/node-microservice/.garden/build/client


[2020-05-27T17:54:37.928Z] Waiting for resources to be ready...

[2020-05-27T17:54:41.385Z] Syncing module sources (4 files)...

[2020-05-27T17:54:41.589Z] Deploying version v-56ab2b577f...

[2020-05-27T17:54:41.753Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '48705'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:54:41.913Z] Syncing module sources (4 files)... → Done (took 0.5 sec)

[2020-05-27T17:54:42.069Z] Building version v-a218328ea0...

[2020-05-27T17:54:42.515Z] Building version v-57df7df941...

[2020-05-27T17:54:42.723Z] Building client:v-a218328ea0...

[2020-05-27T17:54:43.146Z] Building version v-57df7df941... → Done (took 0.6 sec)

[2020-05-27T17:54:43.307Z] Deploying version v-57df7df941...

[2020-05-27T17:54:43.665Z] Building client:v-a218328ea0...

[2020-05-27T17:54:43.831Z] Error: Unable to run docker command: Command "docker build -t client:v-a218328ea0 /Users/emilwils/Documents/node-microservice/.garden/build/client" failed with code 1:

COPY failed: no source files were specified

Here's the full output:

Sending build context to Docker daemon  5.632kB
Step 1/7 : FROM node:12
 ---> bdca973cfa07
Step 2/7 : WORKDIR /usr/src/client
 ---> Using cache
 ---> 70b30d82d719
Step 3/7 : COPY package*.json ./
COPY failed: no source files were specified
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
    at Generator.throw (<anonymous>)
    at rejected (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
Error Details:
err:
  detail:
    cmd: docker
    args:
      - build
      - '-t'
      - 'client:v-a218328ea0'
      - /Users/emilwils/Documents/node-microservice/.garden/build/client
    opts:
      cwd: /Users/emilwils/Documents/node-microservice/.garden/build/client
      ignoreError: false
      stdout:
        _readableState:
          objectMode: true
          highWaterMark: 16
          buffer:
            head: null
            tail: null
            length: 0
          length: 0
          pipes: null
          pipesCount: 0
          flowing: true
          ended: true
          endEmitted: true
          reading: false
          sync: false
          needReadable: false
          emittedReadable: false
          readableListening: false
          resumeScheduled: false
          paused: false
          emitClose: true
          destroyed: false
          defaultEncoding: utf8
          awaitDrain: 0
          readingMore: false
          decoder: null
          encoding: null
        readable: false
        _events: {}
        _eventsCount: 3
        _writableState:
          objectMode: false
          highWaterMark: 16384
          finalCalled: false
          needDrain: false
          ending: true
          ended: true
          finished: true
          destroyed: false
          decodeStrings: true
          defaultEncoding: utf8
          length: 0
          writing: false
          corked: 0
          sync: false
          bufferProcessing: false
          writecb: null
          writelen: 0
          bufferedRequest: null
          lastBufferedRequest: null
          pendingcb: 0
          prefinished: true
          errorEmitted: false
          emitClose: true
          bufferedRequestCount: 0
          corkedRequestsFree:
            next: null
            entry: null
        writable: false
        allowHalfOpen: true
        _transformState:
          needTransform: false
          transforming: false
          writecb: null
          writechunk: null
          writeencoding: buffer
        matcher: {}
        overflow: false
      timeout: 1200
      env:
        TERM_PROGRAM: Apple_Terminal
        SHELL: /bin/zsh
        TERM: xterm-256color
        TMPDIR: /var/folders/nr/97f582w94rl7snqc5h3ldwqh0000gn/T/
        TERM_PROGRAM_VERSION: '433'
        TERM_SESSION_ID: A6BD6B7C-14CE-4383-8F6D-D382816C6EE9
        USER: emilwils
        SSH_AUTH_SOCK: /private/tmp/com.apple.launchd.3ygVNIh0vg/Listeners
        PATH: >-
          /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware
          Fusion.app/Contents/Public
        LaunchInstanceID: DD0DB73A-B855-43F4-B00C-C5EFD5F0D6A8
        PWD: /Users/emilwils/Documents/node-microservice
        LANG: en_US.UTF-8
        XPC_FLAGS: '0x0'
        XPC_SERVICE_NAME: '0'
        SHLVL: '1'
        HOME: /Users/emilwils
        LOGNAME: emilwils
        SECURITYSESSIONID: 186a6
        _: /usr/local/bin/garden
        __CF_USER_TEXT_ENCODING: '0x1F5:0x0:0x0'
        DOCKER_TLS_VERIFY: '1'
        DOCKER_HOST: 'tcp://192.168.99.108:2376'
        DOCKER_CERT_PATH: /Users/emilwils/.minikube/certs
        MINIKUBE_ACTIVE_DOCKERD: minikube
        DOCKER_CLI_EXPERIMENTAL: enabled
        PKG_EXECPATH: /usr/local/Cellar/garden-cli/0.11.14/libexec/garden
    result:
      code: 1
      all: "Sending build context to Docker daemon  5.632kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\nCOPY failed: no source files were specified\n"
      stdout: "Sending build context to Docker daemon  5.632kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\n"
      stderr: |
        COPY failed: no source files were specified
      proc:
        _events: {}
        _eventsCount: 2
        _closesNeeded: 3
        _closesGot: 3
        connected: false
        signalCode: null
        exitCode: 1
        killed: false
        spawnfile: docker
        _handle: null
        spawnargs:
          - docker
          - build
          - '-t'
          - 'client:v-a218328ea0'
          - /Users/emilwils/Documents/node-microservice/.garden/build/client
        pid: 64401
        stdin:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: null
            ended: false
            endEmitted: false
            reading: false
            sync: true
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: true
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 1
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stdout:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: false
            ended: true
            endEmitted: true
            reading: false
            sync: false
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: false
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 3
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stderr:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: true
            ended: true
            endEmitted: true
            reading: false
            sync: false
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: false
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 3
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stdio:
          - ~err~detail~result~proc~stdin
          - ~err~detail~result~proc~stdout
          - ~err~detail~result~proc~stderr
    code: 1
    all: "Sending build context to Docker daemon  5.632kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\nCOPY failed: no source files were specified\n"
    stdout: "Sending build context to Docker daemon  5.632kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\n"
    stderr: |
      COPY failed: no source files were specified
    proc: ~err~detail~result~proc
  type: runtime
args: []
cwd: /Users/emilwils/Documents/node-microservice/.garden/build/client


[2020-05-27T17:54:45.215Z] Waiting for resources to be ready...

[2020-05-27T17:54:47.387Z] Resources ready

[2020-05-27T17:54:47.562Z] Deploying version v-57df7df941... → Done (took 4.3 sec)

[2020-05-27T17:54:47.719Z] Deploying version v-56ab2b577f...

[2020-05-27T17:54:49.439Z] Waiting for resources to be ready...

[2020-05-27T17:54:50.677Z] Syncing module sources (5 files)...

[2020-05-27T17:54:51.041Z] Syncing module sources (5 files)... → Done (took 0.4 sec)

[2020-05-27T17:54:51.203Z] Building version v-813020aad6...

[2020-05-27T17:54:51.934Z] Building client:v-813020aad6...

[2020-05-27T17:54:52.161Z] Deploying version v-56ab2b577f...

[2020-05-27T17:54:52.327Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '48705'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:54:52.583Z] Building version v-57df7df941...

[2020-05-27T17:54:52.747Z] Building client:v-813020aad6...

[2020-05-27T17:54:52.922Z] Error: Unable to run docker command: Command "docker build -t client:v-813020aad6 /Users/emilwils/Documents/node-microservice/.garden/build/client" failed with code 1:

COPY failed: no source files were specified

Here's the full output:

Sending build context to Docker daemon  6.656kB
Step 1/7 : FROM node:12
 ---> bdca973cfa07
Step 2/7 : WORKDIR /usr/src/client
 ---> Using cache
 ---> 70b30d82d719
Step 3/7 : COPY package*.json ./
COPY failed: no source files were specified
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
    at Generator.throw (<anonymous>)
    at rejected (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
Error Details:
err:
  detail:
    cmd: docker
    args:
      - build
      - '-t'
      - 'client:v-813020aad6'
      - /Users/emilwils/Documents/node-microservice/.garden/build/client
    opts:
      cwd: /Users/emilwils/Documents/node-microservice/.garden/build/client
      ignoreError: false
      stdout:
        _readableState:
          objectMode: true
          highWaterMark: 16
          buffer:
            head: null
            tail: null
            length: 0
          length: 0
          pipes: null
          pipesCount: 0
          flowing: true
          ended: true
          endEmitted: true
          reading: false
          sync: false
          needReadable: false
          emittedReadable: false
          readableListening: false
          resumeScheduled: false
          paused: false
          emitClose: true
          destroyed: false
          defaultEncoding: utf8
          awaitDrain: 0
          readingMore: false
          decoder: null
          encoding: null
        readable: false
        _events: {}
        _eventsCount: 3
        _writableState:
          objectMode: false
          highWaterMark: 16384
          finalCalled: false
          needDrain: false
          ending: true
          ended: true
          finished: true
          destroyed: false
          decodeStrings: true
          defaultEncoding: utf8
          length: 0
          writing: false
          corked: 0
          sync: false
          bufferProcessing: false
          writecb: null
          writelen: 0
          bufferedRequest: null
          lastBufferedRequest: null
          pendingcb: 0
          prefinished: true
          errorEmitted: false
          emitClose: true
          bufferedRequestCount: 0
          corkedRequestsFree:
            next: null
            entry: null
        writable: false
        allowHalfOpen: true
        _transformState:
          needTransform: false
          transforming: false
          writecb: null
          writechunk: null
          writeencoding: buffer
        matcher: {}
        overflow: false
      timeout: 1200
      env:
        TERM_PROGRAM: Apple_Terminal
        SHELL: /bin/zsh
        TERM: xterm-256color
        TMPDIR: /var/folders/nr/97f582w94rl7snqc5h3ldwqh0000gn/T/
        TERM_PROGRAM_VERSION: '433'
        TERM_SESSION_ID: A6BD6B7C-14CE-4383-8F6D-D382816C6EE9
        USER: emilwils
        SSH_AUTH_SOCK: /private/tmp/com.apple.launchd.3ygVNIh0vg/Listeners
        PATH: >-
          /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware
          Fusion.app/Contents/Public
        LaunchInstanceID: DD0DB73A-B855-43F4-B00C-C5EFD5F0D6A8
        PWD: /Users/emilwils/Documents/node-microservice
        LANG: en_US.UTF-8
        XPC_FLAGS: '0x0'
        XPC_SERVICE_NAME: '0'
        SHLVL: '1'
        HOME: /Users/emilwils
        LOGNAME: emilwils
        SECURITYSESSIONID: 186a6
        _: /usr/local/bin/garden
        __CF_USER_TEXT_ENCODING: '0x1F5:0x0:0x0'
        DOCKER_TLS_VERIFY: '1'
        DOCKER_HOST: 'tcp://192.168.99.108:2376'
        DOCKER_CERT_PATH: /Users/emilwils/.minikube/certs
        MINIKUBE_ACTIVE_DOCKERD: minikube
        DOCKER_CLI_EXPERIMENTAL: enabled
        PKG_EXECPATH: /usr/local/Cellar/garden-cli/0.11.14/libexec/garden
    result:
      code: 1
      all: "Sending build context to Docker daemon  6.656kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\nCOPY failed: no source files were specified\n"
      stdout: "Sending build context to Docker daemon  6.656kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\n"
      stderr: |
        COPY failed: no source files were specified
      proc:
        _events: {}
        _eventsCount: 2
        _closesNeeded: 3
        _closesGot: 3
        connected: false
        signalCode: null
        exitCode: 1
        killed: false
        spawnfile: docker
        _handle: null
        spawnargs:
          - docker
          - build
          - '-t'
          - 'client:v-813020aad6'
          - /Users/emilwils/Documents/node-microservice/.garden/build/client
        pid: 64457
        stdin:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: null
            ended: false
            endEmitted: false
            reading: false
            sync: true
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: true
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 1
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stdout:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: false
            ended: true
            endEmitted: true
            reading: false
            sync: false
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: false
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 3
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stderr:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: true
            ended: true
            endEmitted: true
            reading: false
            sync: false
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: false
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 3
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stdio:
          - ~err~detail~result~proc~stdin
          - ~err~detail~result~proc~stdout
          - ~err~detail~result~proc~stderr
    code: 1
    all: "Sending build context to Docker daemon  6.656kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\nCOPY failed: no source files were specified\n"
    stdout: "Sending build context to Docker daemon  6.656kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\n"
    stderr: |
      COPY failed: no source files were specified
    proc: ~err~detail~result~proc
  type: runtime
args: []
cwd: /Users/emilwils/Documents/node-microservice/.garden/build/client


[2020-05-27T17:54:53.376Z] Building version v-57df7df941... → Done (took 0.8 sec)

[2020-05-27T17:54:53.540Z] Deploying version v-57df7df941...

[2020-05-27T17:54:55.252Z] Waiting for resources to be ready...

[2020-05-27T17:54:57.425Z] Resources ready

[2020-05-27T17:54:57.606Z] Deploying version v-57df7df941... → Done (took 4.1 sec)

[2020-05-27T17:54:57.770Z] Deploying version v-56ab2b577f...

[2020-05-27T17:54:59.472Z] Waiting for resources to be ready...

[2020-05-27T17:55:01.689Z] Deploying version v-56ab2b577f...

[2020-05-27T17:55:01.855Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '48705'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:55:02.025Z] ⏳  Processing...

[2020-05-27T17:55:02.266Z] Building version v-57df7df941...

[2020-05-27T17:55:03.082Z] Building version v-57df7df941... → Done (took 0.8 sec)

[2020-05-27T17:55:03.249Z] Deploying version v-57df7df941...

[2020-05-27T17:55:04.954Z] Waiting for resources to be ready...

[2020-05-27T17:55:07.135Z] Resources ready

[2020-05-27T17:55:07.319Z] Deploying version v-57df7df941... → Done (took 4.1 sec)

[2020-05-27T17:55:07.482Z] Deploying version v-56ab2b577f...

[2020-05-27T17:55:09.181Z] Waiting for resources to be ready...

[2020-05-27T17:55:11.410Z] Deploying version v-56ab2b577f...

[2020-05-27T17:55:11.585Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '48705'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:55:11.751Z] Waiting for code changes...

[2020-05-27T17:58:01.332Z] ⏳  Processing...

[2020-05-27T17:58:01.790Z] Waiting for code changes...

[2020-05-27T17:58:01.968Z] ⏳  Processing...

[2020-05-27T17:58:02.133Z] Syncing module sources (5 files)...

[2020-05-27T17:58:02.509Z] Syncing module sources (5 files)... → Done (took 0.4 sec)

[2020-05-27T17:58:02.674Z] Building version v-d28576095e...

[2020-05-27T17:58:03.295Z] Building client:v-d28576095e...

[2020-05-27T17:58:03.736Z] Building client:v-d28576095e...

[2020-05-27T17:58:03.902Z] Error: Unable to run docker command: Command "docker build -t client:v-d28576095e /Users/emilwils/Documents/node-microservice/.garden/build/client" failed with code 1:

COPY failed: no source files were specified

Here's the full output:

Sending build context to Docker daemon  7.168kB
Step 1/7 : FROM node:12
 ---> bdca973cfa07
Step 2/7 : WORKDIR /usr/src/client
 ---> Using cache
 ---> 70b30d82d719
Step 3/7 : COPY package*.json ./
COPY failed: no source files were specified
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
    at Generator.throw (<anonymous>)
    at rejected (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
    at runMicrotasks (<anonymous>)
    at processTicksAndRejections (internal/process/task_queues.js:93:5)
Error Details:
err:
  detail:
    cmd: docker
    args:
      - build
      - '-t'
      - 'client:v-d28576095e'
      - /Users/emilwils/Documents/node-microservice/.garden/build/client
    opts:
      cwd: /Users/emilwils/Documents/node-microservice/.garden/build/client
      ignoreError: false
      stdout:
        _readableState:
          objectMode: true
          highWaterMark: 16
          buffer:
            head: null
            tail: null
            length: 0
          length: 0
          pipes: null
          pipesCount: 0
          flowing: true
          ended: true
          endEmitted: true
          reading: false
          sync: false
          needReadable: false
          emittedReadable: false
          readableListening: false
          resumeScheduled: false
          paused: false
          emitClose: true
          destroyed: false
          defaultEncoding: utf8
          awaitDrain: 0
          readingMore: false
          decoder: null
          encoding: null
        readable: false
        _events: {}
        _eventsCount: 3
        _writableState:
          objectMode: false
          highWaterMark: 16384
          finalCalled: false
          needDrain: false
          ending: true
          ended: true
          finished: true
          destroyed: false
          decodeStrings: true
          defaultEncoding: utf8
          length: 0
          writing: false
          corked: 0
          sync: false
          bufferProcessing: false
          writecb: null
          writelen: 0
          bufferedRequest: null
          lastBufferedRequest: null
          pendingcb: 0
          prefinished: true
          errorEmitted: false
          emitClose: true
          bufferedRequestCount: 0
          corkedRequestsFree:
            next: null
            entry: null
        writable: false
        allowHalfOpen: true
        _transformState:
          needTransform: false
          transforming: false
          writecb: null
          writechunk: null
          writeencoding: buffer
        matcher: {}
        overflow: false
      timeout: 1200
      env:
        TERM_PROGRAM: Apple_Terminal
        SHELL: /bin/zsh
        TERM: xterm-256color
        TMPDIR: /var/folders/nr/97f582w94rl7snqc5h3ldwqh0000gn/T/
        TERM_PROGRAM_VERSION: '433'
        TERM_SESSION_ID: A6BD6B7C-14CE-4383-8F6D-D382816C6EE9
        USER: emilwils
        SSH_AUTH_SOCK: /private/tmp/com.apple.launchd.3ygVNIh0vg/Listeners
        PATH: >-
          /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware
          Fusion.app/Contents/Public
        LaunchInstanceID: DD0DB73A-B855-43F4-B00C-C5EFD5F0D6A8
        PWD: /Users/emilwils/Documents/node-microservice
        LANG: en_US.UTF-8
        XPC_FLAGS: '0x0'
        XPC_SERVICE_NAME: '0'
        SHLVL: '1'
        HOME: /Users/emilwils
        LOGNAME: emilwils
        SECURITYSESSIONID: 186a6
        _: /usr/local/bin/garden
        __CF_USER_TEXT_ENCODING: '0x1F5:0x0:0x0'
        DOCKER_TLS_VERIFY: '1'
        DOCKER_HOST: 'tcp://192.168.99.108:2376'
        DOCKER_CERT_PATH: /Users/emilwils/.minikube/certs
        MINIKUBE_ACTIVE_DOCKERD: minikube
        DOCKER_CLI_EXPERIMENTAL: enabled
        PKG_EXECPATH: /usr/local/Cellar/garden-cli/0.11.14/libexec/garden
    result:
      code: 1
      all: "Sending build context to Docker daemon  7.168kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\nCOPY failed: no source files were specified\n"
      stdout: "Sending build context to Docker daemon  7.168kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\n"
      stderr: |
        COPY failed: no source files were specified
      proc:
        _events: {}
        _eventsCount: 2
        _closesNeeded: 3
        _closesGot: 3
        connected: false
        signalCode: null
        exitCode: 1
        killed: false
        spawnfile: docker
        _handle: null
        spawnargs:
          - docker
          - build
          - '-t'
          - 'client:v-d28576095e'
          - /Users/emilwils/Documents/node-microservice/.garden/build/client
        pid: 64889
        stdin:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: null
            ended: false
            endEmitted: false
            reading: false
            sync: true
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: true
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 1
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stdout:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: false
            ended: true
            endEmitted: true
            reading: false
            sync: false
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: false
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 3
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stderr:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: true
            ended: true
            endEmitted: true
            reading: false
            sync: false
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: false
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 3
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stdio:
          - ~err~detail~result~proc~stdin
          - ~err~detail~result~proc~stdout
          - ~err~detail~result~proc~stderr
    code: 1
    all: "Sending build context to Docker daemon  7.168kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\nCOPY failed: no source files were specified\n"
    stdout: "Sending build context to Docker daemon  7.168kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\n"
    stderr: |
      COPY failed: no source files were specified
    proc: ~err~detail~result~proc
  type: runtime
args: []
cwd: /Users/emilwils/Documents/node-microservice/.garden/build/client


[2020-05-27T17:58:04.061Z] Waiting for code changes...

[2020-05-27T18:00:36.986Z] Getting status...

[2020-05-27T18:00:39.463Z] Getting status... → Done

[2020-05-27T18:00:40.044Z] Garden config added at /Users/emilwils/Documents/node-microservice/client-app/garden.yml, reloading...

[2020-05-27T18:00:41.230Z] Getting status...

[2020-05-27T18:00:42.690Z] Getting status... → Done

[2020-05-27T18:00:43.442Z] ⏳  Processing...

[2020-05-27T18:00:43.608Z] Syncing module sources (4 files)...

[2020-05-27T18:00:43.933Z] Syncing module sources (5 files)...

[2020-05-27T18:00:44.352Z] Syncing module sources (4 files)... → Done (took 0.7 sec)

[2020-05-27T18:00:44.524Z] Getting build status for v-a218328ea0...

[2020-05-27T18:00:45.117Z] Getting build status for v-57df7df941...

[2020-05-27T18:00:45.287Z] Getting build status for v-57df7df941... → Done (took 0.2 sec)

[2020-05-27T18:00:45.462Z] Syncing module sources (5 files)... → Done (took 1.5 sec)

[2020-05-27T18:00:45.632Z] Getting build status for v-56ab2b577f...

[2020-05-27T18:00:46.161Z] Deploying version v-57df7df941...

[2020-05-27T18:00:46.329Z] Deploying version v-57df7df941... → Already deployed

[2020-05-27T18:00:46.507Z] Building version v-a218328ea0...

[2020-05-27T18:00:46.815Z] Building client:v-a218328ea0...

[2020-05-27T18:00:47.036Z] Getting build status for v-56ab2b577f... → Done (took 1.4 sec)

[2020-05-27T18:00:47.214Z] Deploying version v-56ab2b577f...

[2020-05-27T18:00:47.821Z] Building client:v-a218328ea0...

[2020-05-27T18:00:47.990Z] Error: Unable to run docker command: Command "docker build -t client:v-a218328ea0 /Users/emilwils/Documents/node-microservice/.garden/build/client" failed with code 1:

COPY failed: no source files were specified

Here's the full output:

Sending build context to Docker daemon  5.632kB
Step 1/7 : FROM node:12
 ---> bdca973cfa07
Step 2/7 : WORKDIR /usr/src/client
 ---> Using cache
 ---> 70b30d82d719
Step 3/7 : COPY package*.json ./
COPY failed: no source files were specified
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
    at Generator.throw (<anonymous>)
    at rejected (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
    at runMicrotasks (<anonymous>)
    at processTicksAndRejections (internal/process/task_queues.js:93:5)
Error Details:
err:
  detail:
    cmd: docker
    args:
      - build
      - '-t'
      - 'client:v-a218328ea0'
      - /Users/emilwils/Documents/node-microservice/.garden/build/client
    opts:
      cwd: /Users/emilwils/Documents/node-microservice/.garden/build/client
      ignoreError: false
      stdout:
        _readableState:
          objectMode: true
          highWaterMark: 16
          buffer:
            head: null
            tail: null
            length: 0
          length: 0
          pipes: null
          pipesCount: 0
          flowing: true
          ended: true
          endEmitted: true
          reading: false
          sync: false
          needReadable: false
          emittedReadable: false
          readableListening: false
          resumeScheduled: false
          paused: false
          emitClose: true
          destroyed: false
          defaultEncoding: utf8
          awaitDrain: 0
          readingMore: false
          decoder: null
          encoding: null
        readable: false
        _events: {}
        _eventsCount: 3
        _writableState:
          objectMode: false
          highWaterMark: 16384
          finalCalled: false
          needDrain: false
          ending: true
          ended: true
          finished: true
          destroyed: false
          decodeStrings: true
          defaultEncoding: utf8
          length: 0
          writing: false
          corked: 0
          sync: false
          bufferProcessing: false
          writecb: null
          writelen: 0
          bufferedRequest: null
          lastBufferedRequest: null
          pendingcb: 0
          prefinished: true
          errorEmitted: false
          emitClose: true
          bufferedRequestCount: 0
          corkedRequestsFree:
            next: null
            entry: null
        writable: false
        allowHalfOpen: true
        _transformState:
          needTransform: false
          transforming: false
          writecb: null
          writechunk: null
          writeencoding: buffer
        matcher: {}
        overflow: false
      timeout: 1200
      env:
        TERM_PROGRAM: Apple_Terminal
        SHELL: /bin/zsh
        TERM: xterm-256color
        TMPDIR: /var/folders/nr/97f582w94rl7snqc5h3ldwqh0000gn/T/
        TERM_PROGRAM_VERSION: '433'
        TERM_SESSION_ID: A6BD6B7C-14CE-4383-8F6D-D382816C6EE9
        USER: emilwils
        SSH_AUTH_SOCK: /private/tmp/com.apple.launchd.3ygVNIh0vg/Listeners
        PATH: >-
          /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware
          Fusion.app/Contents/Public
        LaunchInstanceID: DD0DB73A-B855-43F4-B00C-C5EFD5F0D6A8
        PWD: /Users/emilwils/Documents/node-microservice
        LANG: en_US.UTF-8
        XPC_FLAGS: '0x0'
        XPC_SERVICE_NAME: '0'
        SHLVL: '1'
        HOME: /Users/emilwils
        LOGNAME: emilwils
        SECURITYSESSIONID: 186a6
        _: /usr/local/bin/garden
        __CF_USER_TEXT_ENCODING: '0x1F5:0x0:0x0'
        DOCKER_TLS_VERIFY: '1'
        DOCKER_HOST: 'tcp://192.168.99.108:2376'
        DOCKER_CERT_PATH: /Users/emilwils/.minikube/certs
        MINIKUBE_ACTIVE_DOCKERD: minikube
        DOCKER_CLI_EXPERIMENTAL: enabled
        PKG_EXECPATH: /usr/local/Cellar/garden-cli/0.11.14/libexec/garden
    result:
      code: 1
      all: "Sending build context to Docker daemon  5.632kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\nCOPY failed: no source files were specified\n"
      stdout: "Sending build context to Docker daemon  5.632kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\n"
      stderr: |
        COPY failed: no source files were specified
      proc:
        _events: {}
        _eventsCount: 2
        _closesNeeded: 3
        _closesGot: 3
        connected: false
        signalCode: null
        exitCode: 1
        killed: false
        spawnfile: docker
        _handle: null
        spawnargs:
          - docker
          - build
          - '-t'
          - 'client:v-a218328ea0'
          - /Users/emilwils/Documents/node-microservice/.garden/build/client
        pid: 65375
        stdin:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: null
            ended: false
            endEmitted: false
            reading: false
            sync: true
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: true
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 1
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stdout:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: false
            ended: true
            endEmitted: true
            reading: false
            sync: false
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: false
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 3
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stderr:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: true
            ended: true
            endEmitted: true
            reading: false
            sync: false
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: false
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 3
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stdio:
          - ~err~detail~result~proc~stdin
          - ~err~detail~result~proc~stdout
          - ~err~detail~result~proc~stderr
    code: 1
    all: "Sending build context to Docker daemon  5.632kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\nCOPY failed: no source files were specified\n"
    stdout: "Sending build context to Docker daemon  5.632kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\n"
    stderr: |
      COPY failed: no source files were specified
    proc: ~err~detail~result~proc
  type: runtime
args: []
cwd: /Users/emilwils/Documents/node-microservice/.garden/build/client


[2020-05-27T18:00:49.756Z] Waiting for resources to be ready...

[2020-05-27T18:00:51.983Z] Deploying version v-56ab2b577f...

[2020-05-27T18:00:52.155Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '51182'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T18:00:52.329Z] Waiting for code changes...

[2020-05-27T18:03:35.657Z] Getting status...

[2020-05-27T18:03:39.027Z] Getting status... → Done

[2020-05-27T18:03:39.606Z] ⏳  Processing...

[2020-05-27T18:03:39.610Z] Syncing module sources (19 files)...

[2020-05-27T18:03:39.618Z] Syncing module sources (5 files)...

[2020-05-27T18:03:39.684Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-27T18:03:39.687Z] Getting build status for v-56ab2b577f...

[2020-05-27T18:03:40.170Z] Syncing module sources (19 files)... → Done (took 0.6 sec)

[2020-05-27T18:03:40.174Z] Getting build status for v-d8802a878c...

[2020-05-27T18:03:40.178Z] Getting build status for v-57df7df941...

[2020-05-27T18:03:40.181Z] Getting build status for v-57df7df941... → Done (took 0 sec)

[2020-05-27T18:03:40.212Z] Deploying version v-57df7df941...

[2020-05-27T18:03:40.215Z] Deploying version v-57df7df941... → Already deployed

[2020-05-27T18:03:40.390Z] Getting build status for v-56ab2b577f... → Done (took 0.7 sec)

[2020-05-27T18:03:40.394Z] Deploying version v-56ab2b577f...

[2020-05-27T18:03:40.413Z] Building version v-d8802a878c...

[2020-05-27T18:03:40.497Z] Building client:v-d8802a878c...

[2020-05-27T18:03:41.786Z] Waiting for resources to be ready...

[2020-05-27T18:03:43.847Z] Deploying version v-56ab2b577f...

[2020-05-27T18:03:43.864Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '51951'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T18:04:30.668Z] Building client:v-d8802a878c... → Done (took 50.5 sec)

[2020-05-27T18:04:30.678Z] Deploying version v-d8802a878c...

[2020-05-27T18:04:32.566Z] Waiting for resources to be ready...

[2020-05-27T18:04:34.623Z] Deployment/frontend-v-d8802a878c: Started container frontend

[2020-05-27T18:04:37.182Z] Deploying version v-d8802a878c...

[2020-05-27T18:04:37.192Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 10s restarting failed container=frontend pod=frontend-v-d8802a878c-7465956755-8qdl2_node-microservice(3ee331e0-eb45-4d31-a85b-1b7925d6b5c0)

━━━ Events ━━━
Deployment frontend-v-d8802a878c: ScalingReplicaSet - Scaled up replica set frontend-v-d8802a878c-7465956755 to 1
Pod frontend-v-d8802a878c-7465956755-8qdl2: Scheduled - Successfully assigned node-microservice/frontend-v-d8802a878c-7465956755-8qdl2 to minikube
Pod frontend-v-d8802a878c-7465956755-8qdl2: Pulled - Container image "client:v-d8802a878c" already present on machine
Pod frontend-v-d8802a878c-7465956755-8qdl2: Created - Created container frontend
Pod frontend-v-d8802a878c-7465956755-8qdl2: Started - Started container frontend
Pod frontend-v-d8802a878c-7465956755-8qdl2: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-d8802a878c

****** frontend-v-d8802a878c-7465956755-8qdl2 ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.3/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=frontend
    pod=frontend-v-d8802a878c-7465956755-8qdl2_node-microservice(3ee331e0-eb45-4d31-a85b-1b7925d6b5c0)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-d8802a878c:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-d8802a878c-7465956755 to 1\e[39m\n\e[94mPod frontend-v-d8802a878c-7465956755-8qdl2:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-d8802a878c-7465956755-8qdl2 to minikube\e[39m\n\e[94mPod frontend-v-d8802a878c-7465956755-8qdl2:\e[39m \e[37mPulled - Container image \"client:v-d8802a878c\" already present on machine\e[39m\n\e[94mPod frontend-v-d8802a878c-7465956755-8qdl2:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-d8802a878c-7465956755-8qdl2:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-d8802a878c-7465956755-8qdl2:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-d8802a878c\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-d8802a878c-7465956755-8qdl2 ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.3/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-d8802a878c
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-d8802a878c
      uid: e958df60-6a93-448f-9442-27aa3c744cff
      resourceVersion: '52369'
      generation: 1
      creationTimestamp: '2020-05-27T18:04:30Z'
      labels:
        garden.io/version: v-d8802a878c
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 02444f59579867079ea09cb0f670bc659777506336cb236c62b42def0d3dd9e2
        garden.io/version: v-d8802a878c
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"02444f59579867079ea09cb0f670bc659777506336cb236c62b42def0d3dd9e2","garden.io/version":"v-d8802a878c"},"labels":{"garden.io/version":"v-d8802a878c","module":"client","service":"frontend"},"name":"frontend-v-d8802a878c","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-d8802a878c","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-d8802a878c","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-d8802a878c"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-d8802a878c\"}]"},{"name":"tty","value":"true"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-d8802a878c","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-d8802a878c
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-d8802a878c
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T18:04:37.222Z] Waiting for code changes...

[2020-05-27T18:06:19.450Z] ⏳  Processing...

[2020-05-27T18:06:19.653Z] ⏳  Processing...

[2020-05-27T18:06:19.672Z] Waiting for code changes...

[2020-05-27T18:06:19.681Z] ⏳  Processing...

[2020-05-27T18:06:19.688Z] Syncing module sources (18 files)...

[2020-05-27T18:06:20.115Z] Syncing module sources (18 files)... → Done (took 0.4 sec)

[2020-05-27T18:06:20.122Z] Building version v-09cbb7c283...

[2020-05-27T18:06:20.740Z] Building client:v-09cbb7c283...

[2020-05-27T18:06:21.418Z] Building client:v-09cbb7c283... → Done (took 1.3 sec)

[2020-05-27T18:06:21.426Z] Deploying version v-09cbb7c283...

[2020-05-27T18:06:23.377Z] Waiting for resources to be ready...

[2020-05-27T18:06:25.441Z] Deployment/frontend-v-09cbb7c283: Started container frontend

[2020-05-27T18:06:27.966Z] Resources ready

[2020-05-27T18:06:28.010Z] Deploying version v-09cbb7c283... → Done (took 6.6 sec)

[2020-05-27T18:06:28.022Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T18:06:28.058Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T18:06:28.066Z] ⏳  Processing...

[2020-05-27T18:06:28.072Z] Syncing module sources (17 files)...

[2020-05-27T18:06:28.460Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-27T18:06:28.468Z] Building version v-e42abfb3f2...

[2020-05-27T18:06:28.778Z] Building client:v-e42abfb3f2...

[2020-05-27T18:06:29.481Z] Building client:v-e42abfb3f2... → Done (took 1 sec)

[2020-05-27T18:06:29.490Z] Deploying version v-e42abfb3f2...

[2020-05-27T18:06:31.425Z] Waiting for resources to be ready...

[2020-05-27T18:06:33.449Z] Resources ready

[2020-05-27T18:06:33.476Z] Deploying version v-e42abfb3f2... → Done (took 4 sec)

[2020-05-27T18:06:33.484Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T18:06:33.493Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T18:06:33.500Z] Waiting for code changes...

[2020-05-27T18:06:36.195Z] ⏳  Processing...

[2020-05-27T18:06:36.338Z] Waiting for code changes...

[2020-05-27T18:06:36.353Z] ⏳  Processing...

[2020-05-27T18:06:36.360Z] Syncing module sources (17 files)...

[2020-05-27T18:06:36.709Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-27T18:06:36.720Z] Building version v-fa83296d6c...

[2020-05-27T18:06:37.308Z] Building client:v-fa83296d6c...

[2020-05-27T18:07:34.783Z] Building client:v-fa83296d6c... → Done (took 58.1 sec)

[2020-05-27T18:07:34.792Z] Deploying version v-fa83296d6c...

[2020-05-27T18:07:36.690Z] Waiting for resources to be ready...

[2020-05-27T18:07:38.754Z] Deployment/frontend-v-fa83296d6c: Started container frontend

[2020-05-27T18:07:41.340Z] Deploying version v-fa83296d6c...

[2020-05-27T18:07:41.355Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 10s restarting failed container=frontend pod=frontend-v-fa83296d6c-74dc5c7c7c-h6qbx_node-microservice(66df6bfd-6a0b-4645-9eb3-d22e64fd26a3)

━━━ Events ━━━
Deployment frontend-v-fa83296d6c: ScalingReplicaSet - Scaled up replica set frontend-v-fa83296d6c-74dc5c7c7c to 1
Pod frontend-v-fa83296d6c-74dc5c7c7c-h6qbx: Scheduled - Successfully assigned node-microservice/frontend-v-fa83296d6c-74dc5c7c7c-h6qbx to minikube
Pod frontend-v-fa83296d6c-74dc5c7c7c-h6qbx: Pulled - Container image "client:v-fa83296d6c" already present on machine
Pod frontend-v-fa83296d6c-74dc5c7c7c-h6qbx: Created - Created container frontend
Pod frontend-v-fa83296d6c-74dc5c7c7c-h6qbx: Started - Started container frontend
Pod frontend-v-fa83296d6c-74dc5c7c7c-h6qbx: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-fa83296d6c

****** frontend-v-fa83296d6c-74dc5c7c7c-h6qbx ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=frontend
    pod=frontend-v-fa83296d6c-74dc5c7c7c-h6qbx_node-microservice(66df6bfd-6a0b-4645-9eb3-d22e64fd26a3)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-fa83296d6c:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-fa83296d6c-74dc5c7c7c to 1\e[39m\n\e[94mPod frontend-v-fa83296d6c-74dc5c7c7c-h6qbx:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-fa83296d6c-74dc5c7c7c-h6qbx to minikube\e[39m\n\e[94mPod frontend-v-fa83296d6c-74dc5c7c7c-h6qbx:\e[39m \e[37mPulled - Container image \"client:v-fa83296d6c\" already present on machine\e[39m\n\e[94mPod frontend-v-fa83296d6c-74dc5c7c7c-h6qbx:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-fa83296d6c-74dc5c7c7c-h6qbx:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-fa83296d6c-74dc5c7c7c-h6qbx:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-fa83296d6c\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-fa83296d6c-74dc5c7c7c-h6qbx ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-fa83296d6c
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-fa83296d6c
      uid: b768c765-1ee7-4ee2-906b-b886941212bc
      resourceVersion: '53062'
      generation: 1
      creationTimestamp: '2020-05-27T18:07:35Z'
      labels:
        garden.io/version: v-fa83296d6c
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 2c3cc3bf3d8779afd8ec546181cc0ce86ee7cbae55fb10e7d942b8a086e307b2
        garden.io/version: v-fa83296d6c
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"2c3cc3bf3d8779afd8ec546181cc0ce86ee7cbae55fb10e7d942b8a086e307b2","garden.io/version":"v-fa83296d6c"},"labels":{"garden.io/version":"v-fa83296d6c","module":"client","service":"frontend"},"name":"frontend-v-fa83296d6c","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-fa83296d6c","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-fa83296d6c","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-fa83296d6c"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-fa83296d6c\"}]"},{"name":"tty","value":"true"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-fa83296d6c","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-fa83296d6c
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-fa83296d6c
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T18:07:41.367Z] ⏳  Processing...

[2020-05-27T18:07:41.379Z] Syncing module sources (17 files)...

[2020-05-27T18:07:41.745Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-27T18:07:41.754Z] Building version v-b02ad6ea80...

[2020-05-27T18:07:42.271Z] Building client:v-b02ad6ea80...

[2020-05-27T18:10:06.407Z] Getting status...

[2020-05-27T18:10:10.121Z] Getting status... → Done

[2020-05-27T18:10:10.792Z] ⏳  Processing...

[2020-05-27T18:10:10.796Z] Syncing module sources (17 files)...

[2020-05-27T18:10:10.803Z] Syncing module sources (5 files)...

[2020-05-27T18:10:10.882Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-27T18:10:10.885Z] Getting build status for v-56ab2b577f...

[2020-05-27T18:10:11.378Z] Getting build status for v-57df7df941...

[2020-05-27T18:10:11.383Z] Getting build status for v-57df7df941... → Done (took 0 sec)

[2020-05-27T18:10:11.387Z] Deploying version v-57df7df941...

[2020-05-27T18:10:11.390Z] Deploying version v-57df7df941... → Already deployed

[2020-05-27T18:10:11.393Z] Syncing module sources (17 files)... → Done (took 0.6 sec)

[2020-05-27T18:10:11.397Z] Getting build status for v-e8f9aa0b68...

[2020-05-27T18:10:11.598Z] Getting build status for v-56ab2b577f... → Done (took 0.7 sec)

[2020-05-27T18:10:11.604Z] Deploying version v-56ab2b577f...

[2020-05-27T18:10:11.635Z] Building version v-e8f9aa0b68...

[2020-05-27T18:10:11.723Z] Building client:v-e8f9aa0b68...

[2020-05-27T18:10:13.011Z] Waiting for resources to be ready...

[2020-05-27T18:10:15.079Z] Deploying version v-56ab2b577f...

[2020-05-27T18:10:15.097Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '51951'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T18:11:13.383Z] Building client:v-e8f9aa0b68... → Done (took 62 sec)

[2020-05-27T18:11:13.399Z] Deploying version v-e8f9aa0b68...

[2020-05-27T18:11:16.248Z] Waiting for resources to be ready...

[2020-05-27T18:11:18.271Z] Resources ready

[2020-05-27T18:11:18.427Z] Deploying version v-e8f9aa0b68... → Done (took 5 sec)

[2020-05-27T18:11:18.435Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T18:11:18.449Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T18:11:18.455Z] ⏳  Processing...

[2020-05-27T18:11:18.491Z] Waiting for code changes...

[2020-05-27T18:11:18.548Z] Waiting for code changes...

[2020-05-27T18:11:18.564Z] ⏳  Processing...

[2020-05-27T18:11:18.612Z] Waiting for code changes...

[2020-05-27T18:25:34.373Z] ⏳  Processing...

[2020-05-27T18:25:34.551Z] Waiting for code changes...

[2020-05-27T18:25:34.564Z] ⏳  Processing...

[2020-05-27T18:25:34.570Z] Syncing module sources (17 files)...

[2020-05-27T18:25:35.297Z] Syncing module sources (17 files)... → Done (took 0.7 sec)

[2020-05-27T18:25:35.304Z] Building version v-526ef9869e...

[2020-05-27T18:25:35.753Z] Building client:v-526ef9869e...

[2020-05-27T18:25:36.992Z] Building client:v-526ef9869e... → Done (took 1.7 sec)

[2020-05-27T18:25:36.998Z] Deploying version v-526ef9869e...

[2020-05-27T18:25:39.647Z] Waiting for resources to be ready...

[2020-05-27T18:25:41.664Z] Resources ready

[2020-05-27T18:25:41.697Z] Deploying version v-526ef9869e... → Done (took 4.7 sec)

[2020-05-27T18:25:41.704Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T18:25:41.709Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T18:25:41.716Z] Waiting for code changes...

[2020-05-27T18:27:19.675Z] ⏳  Processing...

[2020-05-27T18:27:19.822Z] Waiting for code changes...

[2020-05-27T18:27:19.833Z] ⏳  Processing...

[2020-05-27T18:27:19.840Z] Syncing module sources (17 files)...

[2020-05-27T18:27:20.239Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-27T18:27:20.246Z] Building version v-0c194a35fb...

[2020-05-27T18:27:20.686Z] Building client:v-0c194a35fb...

[2020-05-27T18:28:12.448Z] Building client:v-0c194a35fb... → Done (took 52.2 sec)

[2020-05-27T18:28:12.458Z] Deploying version v-0c194a35fb...

[2020-05-27T18:28:14.390Z] Waiting for resources to be ready...

[2020-05-27T18:28:16.412Z] Resources ready

[2020-05-27T18:28:16.457Z] Deploying version v-0c194a35fb... → Done (took 4 sec)

[2020-05-27T18:28:16.464Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T18:28:16.470Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T18:28:16.478Z] Waiting for code changes...

[2020-05-27T18:28:30.757Z] Getting status...

[2020-05-27T18:28:33.545Z] Getting status... → Done

[2020-05-27T18:28:33.819Z] Module configuration changed, reloading...

[2020-05-27T18:28:34.505Z] Getting status...

[2020-05-27T18:28:35.786Z] Getting status... → Done

[2020-05-27T18:28:35.970Z] ⏳  Processing...

[2020-05-27T18:28:35.978Z] Syncing module sources (17 files)...

[2020-05-27T18:28:36.003Z] Syncing module sources (5 files)...

[2020-05-27T18:28:36.074Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-27T18:28:36.082Z] Getting build status for v-56ab2b577f...

[2020-05-27T18:28:36.510Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-27T18:28:36.521Z] Getting build status for v-36460dede0...

[2020-05-27T18:28:36.530Z] Getting build status for v-57df7df941...

[2020-05-27T18:28:36.540Z] Getting build status for v-57df7df941... → Done (took 0 sec)

[2020-05-27T18:28:36.549Z] Deploying version v-57df7df941...

[2020-05-27T18:28:36.557Z] Deploying version v-57df7df941... → Already deployed

[2020-05-27T18:28:36.724Z] Getting build status for v-56ab2b577f... → Done (took 0.6 sec)

[2020-05-27T18:28:36.734Z] Deploying version v-56ab2b577f...

[2020-05-27T18:28:36.935Z] Building version v-36460dede0...

[2020-05-27T18:28:37.023Z] Building client:v-36460dede0...

[2020-05-27T18:28:37.377Z] Building client:v-36460dede0... → Done (took 0.9 sec)

[2020-05-27T18:28:37.386Z] Deploying version v-36460dede0...

[2020-05-27T18:28:38.341Z] Waiting for resources to be ready...

[2020-05-27T18:28:39.070Z] Waiting for resources to be ready...

[2020-05-27T18:28:40.445Z] Deploying version v-56ab2b577f...

[2020-05-27T18:28:40.465Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '56074'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T18:28:41.098Z] Resources ready

[2020-05-27T18:28:41.198Z] Deploying version v-36460dede0... → Done (took 3.8 sec)

[2020-05-27T18:28:41.210Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T18:28:41.249Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T18:28:41.267Z] Waiting for code changes...

[2020-05-27T18:29:10.953Z] Getting status...

[2020-05-27T18:29:13.365Z] Getting status... → Done

[2020-05-27T18:29:13.559Z] Module configuration changed, reloading...

[2020-05-27T18:29:14.241Z] Getting status...

[2020-05-27T18:29:15.494Z] Getting status... → Done

[2020-05-27T18:29:15.688Z] ⏳  Processing...

[2020-05-27T18:29:15.698Z] Syncing module sources (17 files)...

[2020-05-27T18:29:15.730Z] Syncing module sources (5 files)...

[2020-05-27T18:29:15.812Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-27T18:29:15.833Z] Getting build status for v-56ab2b577f...

[2020-05-27T18:29:16.255Z] Syncing module sources (17 files)... → Done (took 0.6 sec)

[2020-05-27T18:29:16.269Z] Getting build status for v-36460dede0...

[2020-05-27T18:29:16.281Z] Getting build status for v-8bbe6fa30a...

[2020-05-27T18:29:16.295Z] Getting build status for v-8bbe6fa30a... → Done (took 0 sec)

[2020-05-27T18:29:16.307Z] Deploying version v-8bbe6fa30a...

[2020-05-27T18:29:16.504Z] Getting build status for v-56ab2b577f... → Done (took 0.7 sec)

[2020-05-27T18:29:16.559Z] Getting build status for v-36460dede0... → Done (took 0.3 sec)

[2020-05-27T18:29:16.571Z] Deploying version v-36460dede0...

[2020-05-27T18:29:16.582Z] Deploying version v-36460dede0... → Already deployed

[2020-05-27T18:29:16.594Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T18:29:16.607Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T18:29:18.040Z] Waiting for resources to be ready...

[2020-05-27T18:29:20.067Z] Resources ready

[2020-05-27T18:29:20.099Z] Deploying version v-8bbe6fa30a... → Done (took 3.8 sec)

[2020-05-27T18:29:20.115Z] → Forward: http://127.0.0.1:3306 → db:3306 (http)

[2020-05-27T18:29:20.127Z] Deploying version v-56ab2b577f...

[2020-05-27T18:29:21.540Z] Waiting for resources to be ready...

[2020-05-27T18:29:23.612Z] Deploying version v-56ab2b577f...

[2020-05-27T18:29:23.654Z] Error: Error deploying backend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment backend-v-56ab2b577f: ScalingReplicaSet - Scaled up replica set backend-v-56ab2b577f-588ccd7b4 to 1
Deployment backend-v-56ab2b577f: ScalingReplicaSet - Scaled down replica set backend-v-56ab2b577f-7695db79f5 to 0
Pod backend-v-56ab2b577f-588ccd7b4-tsjtb: Scheduled - Successfully assigned node-microservice/backend-v-56ab2b577f-588ccd7b4-tsjtb to minikube
Pod backend-v-56ab2b577f-588ccd7b4-tsjtb: Pulled - Container image "server:v-56ab2b577f" already present on machine
Pod backend-v-56ab2b577f-588ccd7b4-tsjtb: Created - Created container backend
Pod backend-v-56ab2b577f-588ccd7b4-tsjtb: Started - Started container backend
Pod backend-v-56ab2b577f-588ccd7b4-tsjtb: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-588ccd7b4-tsjtb ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-56ab2b577f:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-56ab2b577f-588ccd7b4 to 1\e[39m\n\e[94mDeployment backend-v-56ab2b577f:\e[39m \e[37mScalingReplicaSet - Scaled down replica set backend-v-56ab2b577f-7695db79f5 to 0\e[39m\n\e[94mPod backend-v-56ab2b577f-588ccd7b4-tsjtb:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-56ab2b577f-588ccd7b4-tsjtb to minikube\e[39m\n\e[94mPod backend-v-56ab2b577f-588ccd7b4-tsjtb:\e[39m \e[37mPulled - Container image \"server:v-56ab2b577f\" already present on machine\e[39m\n\e[94mPod backend-v-56ab2b577f-588ccd7b4-tsjtb:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-588ccd7b4-tsjtb:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-588ccd7b4-tsjtb:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-588ccd7b4-tsjtb ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '56449'
      generation: 2
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '2'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 36fb61992deecf9da03941f09e36497d253cdf3b10357b69c598ae9789e34f18
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"36fb61992deecf9da03941f09e36497d253cdf3b10357b69c598ae9789e34f18","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 2
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T18:29:23.672Z] ⏳  Processing...

[2020-05-27T18:29:23.689Z] Waiting for code changes...

[2020-05-27T18:29:31.929Z] ⏳  Processing...

[2020-05-27T18:29:31.957Z] Waiting for code changes...

[2020-05-27T18:29:38.230Z] ⏳  Processing...

[2020-05-27T18:29:38.288Z] Waiting for code changes...

[2020-05-27T18:29:38.308Z] ⏳  Processing...

[2020-05-27T18:29:38.421Z] Waiting for code changes...

[2020-05-27T18:29:38.439Z] ⏳  Processing...

[2020-05-27T18:29:38.466Z] Waiting for code changes...

[2020-05-27T18:29:38.883Z] ⏳  Processing...

[2020-05-27T18:29:38.948Z] Waiting for code changes...

[2020-05-27T18:30:09.267Z] ⏳  Processing...

[2020-05-27T18:30:09.406Z] Waiting for code changes...

[2020-05-27T18:30:09.425Z] ⏳  Processing...

[2020-05-27T18:30:09.442Z] Syncing module sources (5 files)...

[2020-05-27T18:30:09.502Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-27T18:30:09.519Z] Building version v-1072be9426...

[2020-05-27T18:30:09.960Z] Building server:v-1072be9426...

[2020-05-27T18:30:10.507Z] Building server:v-1072be9426... → Done (took 1 sec)

[2020-05-27T18:30:10.523Z] Deploying version v-1072be9426...

[2020-05-27T18:30:12.285Z] Waiting for resources to be ready...

[2020-05-27T18:30:14.359Z] Deploying version v-1072be9426...

[2020-05-27T18:30:14.379Z] Error: Error deploying backend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment backend-v-1072be9426: ScalingReplicaSet - Scaled up replica set backend-v-1072be9426-7899cb8c74 to 1
Pod backend-v-1072be9426-7899cb8c74-kvkml: Scheduled - Successfully assigned node-microservice/backend-v-1072be9426-7899cb8c74-kvkml to minikube
Pod backend-v-1072be9426-7899cb8c74-kvkml: Pulled - Container image "server:v-1072be9426" already present on machine
Pod backend-v-1072be9426-7899cb8c74-kvkml: Created - Created container backend
Pod backend-v-1072be9426-7899cb8c74-kvkml: Started - Started container backend
Pod backend-v-1072be9426-7899cb8c74-kvkml: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-1072be9426

****** backend-v-1072be9426-7899cb8c74-kvkml ******
------ backend ------    at Socket.<anonymous> (/usr/src/server/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (events.js:310:20)
    at addChunk (_stream_readable.js:286:12)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  code: 'ER_BAD_DB_ERROR',
  errno: 1049,
  sqlMessage: "Unknown database 'test'",
  sqlState: '42000',
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-1072be9426:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-1072be9426-7899cb8c74 to 1\e[39m\n\e[94mPod backend-v-1072be9426-7899cb8c74-kvkml:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-1072be9426-7899cb8c74-kvkml to minikube\e[39m\n\e[94mPod backend-v-1072be9426-7899cb8c74-kvkml:\e[39m \e[37mPulled - Container image \"server:v-1072be9426\" already present on machine\e[39m\n\e[94mPod backend-v-1072be9426-7899cb8c74-kvkml:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-1072be9426-7899cb8c74-kvkml:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-1072be9426-7899cb8c74-kvkml:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-1072be9426\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-1072be9426-7899cb8c74-kvkml ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m    at Socket.<anonymous> (/usr/src/server/node_modules/mysql/lib/Connection.js:526:10)\n    at Socket.emit (events.js:310:20)\n    at addChunk (_stream_readable.js:286:12)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  code: 'ER_BAD_DB_ERROR',\n  errno: 1049,\n  sqlMessage: \"Unknown database 'test'\",\n  sqlState: '42000',\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-1072be9426
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-1072be9426
      uid: 14631c75-c34a-40a7-a799-e6e2d586b4d1
      resourceVersion: '56644'
      generation: 1
      creationTimestamp: '2020-05-27T18:30:10Z'
      labels:
        garden.io/version: v-1072be9426
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 37dc3f592a2d36d40af5480e10be6ec0312389495954d3584068c56865ae87a7
        garden.io/version: v-1072be9426
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"37dc3f592a2d36d40af5480e10be6ec0312389495954d3584068c56865ae87a7","garden.io/version":"v-1072be9426"},"labels":{"garden.io/version":"v-1072be9426","module":"server","service":"backend"},"name":"backend-v-1072be9426","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-1072be9426","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-1072be9426","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-1072be9426"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-1072be9426\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-1072be9426","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-1072be9426
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-1072be9426
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T18:30:14.395Z] Waiting for code changes...

[2020-05-27T18:31:31.711Z] ⏳  Processing...

[2020-05-27T18:31:31.894Z] Waiting for code changes...

[2020-05-27T18:31:31.929Z] ⏳  Processing...

[2020-05-27T18:31:31.947Z] Syncing module sources (17 files)...

[2020-05-27T18:31:32.437Z] Building version v-8bbe6fa30a...

[2020-05-27T18:31:32.452Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-27T18:31:32.469Z] Building version v-36460dede0...

[2020-05-27T18:31:32.927Z] Building client:v-36460dede0...

[2020-05-27T18:31:33.146Z] Building version v-8bbe6fa30a... → Done (took 0.7 sec)

[2020-05-27T18:31:33.166Z] Deploying version v-8bbe6fa30a...

[2020-05-27T18:31:33.356Z] Building client:v-36460dede0... → Done (took 0.9 sec)

[2020-05-27T18:31:33.381Z] Deploying version v-36460dede0...

[2020-05-27T18:31:34.786Z] Waiting for resources to be ready...

[2020-05-27T18:31:34.980Z] Waiting for resources to be ready...

[2020-05-27T18:31:36.817Z] Resources ready

[2020-05-27T18:31:36.852Z] Deploying version v-8bbe6fa30a... → Done (took 3.7 sec)

[2020-05-27T18:31:36.870Z] → Forward: http://127.0.0.1:3306 → db:3306 (http)

[2020-05-27T18:31:36.888Z] Deploying version v-1072be9426...

[2020-05-27T18:31:37.011Z] Resources ready

[2020-05-27T18:31:37.058Z] Deploying version v-36460dede0... → Done (took 3.7 sec)

[2020-05-27T18:31:37.075Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T18:31:37.091Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T18:31:38.270Z] Waiting for resources to be ready...

[2020-05-27T18:31:40.351Z] Deploying version v-1072be9426...

[2020-05-27T18:31:40.373Z] Error: Error deploying backend: CrashLoopBackOff - back-off 40s restarting failed container=backend pod=backend-v-1072be9426-7899cb8c74-kvkml_node-microservice(fcfbcea2-04f5-4c36-83b9-b48ba7555419)

━━━ Events ━━━
Deployment backend-v-1072be9426: ScalingReplicaSet - Scaled up replica set backend-v-1072be9426-7899cb8c74 to 1
Pod backend-v-1072be9426-7899cb8c74-kvkml: Scheduled - Successfully assigned node-microservice/backend-v-1072be9426-7899cb8c74-kvkml to minikube
Pod backend-v-1072be9426-7899cb8c74-kvkml: Pulled - Container image "server:v-1072be9426" already present on machine
Pod backend-v-1072be9426-7899cb8c74-kvkml: Created - Created container backend
Pod backend-v-1072be9426-7899cb8c74-kvkml: Started - Started container backend
Pod backend-v-1072be9426-7899cb8c74-kvkml: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-1072be9426

****** backend-v-1072be9426-7899cb8c74-kvkml ******
------ backend ------    at Socket.<anonymous> (/usr/src/server/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (events.js:310:20)
    at addChunk (_stream_readable.js:286:12)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  code: 'ER_BAD_DB_ERROR',
  errno: 1049,
  sqlMessage: "Unknown database 'test'",
  sqlState: '42000',
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 40s restarting failed container=backend
    pod=backend-v-1072be9426-7899cb8c74-kvkml_node-microservice(fcfbcea2-04f5-4c36-83b9-b48ba7555419)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-1072be9426:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-1072be9426-7899cb8c74 to 1\e[39m\n\e[94mPod backend-v-1072be9426-7899cb8c74-kvkml:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-1072be9426-7899cb8c74-kvkml to minikube\e[39m\n\e[94mPod backend-v-1072be9426-7899cb8c74-kvkml:\e[39m \e[37mPulled - Container image \"server:v-1072be9426\" already present on machine\e[39m\n\e[94mPod backend-v-1072be9426-7899cb8c74-kvkml:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-1072be9426-7899cb8c74-kvkml:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-1072be9426-7899cb8c74-kvkml:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-1072be9426\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-1072be9426-7899cb8c74-kvkml ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m    at Socket.<anonymous> (/usr/src/server/node_modules/mysql/lib/Connection.js:526:10)\n    at Socket.emit (events.js:310:20)\n    at addChunk (_stream_readable.js:286:12)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  code: 'ER_BAD_DB_ERROR',\n  errno: 1049,\n  sqlMessage: \"Unknown database 'test'\",\n  sqlState: '42000',\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-1072be9426
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-1072be9426
      uid: 14631c75-c34a-40a7-a799-e6e2d586b4d1
      resourceVersion: '56644'
      generation: 1
      creationTimestamp: '2020-05-27T18:30:10Z'
      labels:
        garden.io/version: v-1072be9426
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 37dc3f592a2d36d40af5480e10be6ec0312389495954d3584068c56865ae87a7
        garden.io/version: v-1072be9426
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"37dc3f592a2d36d40af5480e10be6ec0312389495954d3584068c56865ae87a7","garden.io/version":"v-1072be9426"},"labels":{"garden.io/version":"v-1072be9426","module":"server","service":"backend"},"name":"backend-v-1072be9426","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-1072be9426","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-1072be9426","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-1072be9426"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-1072be9426\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-1072be9426","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-1072be9426
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-1072be9426
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T18:31:40.393Z] Waiting for code changes...

[2020-05-27T18:38:15.650Z] Getting status...

[2020-05-27T18:38:17.791Z] Getting status... → Done

[2020-05-27T18:38:17.986Z] Module configuration changed, reloading...

[2020-05-27T18:38:18.683Z] Getting status...

[2020-05-27T18:38:19.868Z] Getting status... → Done

[2020-05-27T18:38:20.126Z] ⏳  Processing...

[2020-05-27T18:38:20.145Z] Syncing module sources (17 files)...

[2020-05-27T18:38:20.198Z] Syncing module sources (5 files)...

[2020-05-27T18:38:20.280Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-27T18:38:20.300Z] Getting build status for v-1072be9426...

[2020-05-27T18:38:21.022Z] Syncing module sources (17 files)... → Done (took 0.9 sec)

[2020-05-27T18:38:21.064Z] Getting build status for v-36460dede0...

[2020-05-27T18:38:21.089Z] Getting build status for v-96f8661171...

[2020-05-27T18:38:21.114Z] Getting build status for v-96f8661171... → Done (took 0 sec)

[2020-05-27T18:38:21.136Z] Deploying version v-96f8661171...

[2020-05-27T18:38:21.503Z] Getting build status for v-1072be9426... → Done (took 1.2 sec)

[2020-05-27T18:38:21.527Z] Getting build status for v-36460dede0... → Done (took 0.5 sec)

[2020-05-27T18:38:21.552Z] Deploying version v-36460dede0...

[2020-05-27T18:38:21.574Z] Deploying version v-36460dede0... → Already deployed

[2020-05-27T18:38:21.597Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T18:38:21.616Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T18:38:23.642Z] Waiting for resources to be ready...

[2020-05-27T18:38:25.675Z] Resources ready

[2020-05-27T18:38:25.717Z] Deploying version v-96f8661171... → Done (took 4.6 sec)

[2020-05-27T18:38:25.740Z] → Forward: http://127.0.0.1:3306 → db:3306 (http)

[2020-05-27T18:38:25.760Z] Deploying version v-1072be9426...

[2020-05-27T18:38:27.489Z] Waiting for resources to be ready...

[2020-05-27T18:38:29.569Z] Deploying version v-1072be9426...

[2020-05-27T18:38:29.594Z] Error: Error deploying backend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment backend-v-1072be9426: ScalingReplicaSet - Scaled up replica set backend-v-1072be9426-7899cb8c74 to 1
Deployment backend-v-1072be9426: ScalingReplicaSet - Scaled up replica set backend-v-1072be9426-66f594f877 to 1
Deployment backend-v-1072be9426: ScalingReplicaSet - Scaled down replica set backend-v-1072be9426-7899cb8c74 to 0
Pod backend-v-1072be9426-66f594f877-79xr2: Scheduled - Successfully assigned node-microservice/backend-v-1072be9426-66f594f877-79xr2 to minikube
Pod backend-v-1072be9426-66f594f877-79xr2: Pulled - Container image "server:v-1072be9426" already present on machine
Pod backend-v-1072be9426-66f594f877-79xr2: Created - Created container backend
Pod backend-v-1072be9426-66f594f877-79xr2: Started - Started container backend
Pod backend-v-1072be9426-66f594f877-79xr2: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-1072be9426

****** backend-v-1072be9426-66f594f877-79xr2 ******
------ backend ------Error: connect ECONNREFUSED 10.97.186.228:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '10.97.186.228',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-1072be9426:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-1072be9426-7899cb8c74 to 1\e[39m\n\e[94mDeployment backend-v-1072be9426:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-1072be9426-66f594f877 to 1\e[39m\n\e[94mDeployment backend-v-1072be9426:\e[39m \e[37mScalingReplicaSet - Scaled down replica set backend-v-1072be9426-7899cb8c74 to 0\e[39m\n\e[94mPod backend-v-1072be9426-66f594f877-79xr2:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-1072be9426-66f594f877-79xr2 to minikube\e[39m\n\e[94mPod backend-v-1072be9426-66f594f877-79xr2:\e[39m \e[37mPulled - Container image \"server:v-1072be9426\" already present on machine\e[39m\n\e[94mPod backend-v-1072be9426-66f594f877-79xr2:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-1072be9426-66f594f877-79xr2:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-1072be9426-66f594f877-79xr2:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-1072be9426\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-1072be9426-66f594f877-79xr2 ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 10.97.186.228:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '10.97.186.228',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-1072be9426
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-1072be9426
      uid: 14631c75-c34a-40a7-a799-e6e2d586b4d1
      resourceVersion: '57926'
      generation: 2
      creationTimestamp: '2020-05-27T18:30:10Z'
      labels:
        garden.io/version: v-1072be9426
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '2'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: fc0e6f6826e3b76aa4e94d0eea7d2b5d33c04512cd9a29f257e2ef2c958a3221
        garden.io/version: v-1072be9426
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"fc0e6f6826e3b76aa4e94d0eea7d2b5d33c04512cd9a29f257e2ef2c958a3221","garden.io/version":"v-1072be9426"},"labels":{"garden.io/version":"v-1072be9426","module":"server","service":"backend"},"name":"backend-v-1072be9426","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-1072be9426","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-1072be9426","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-1072be9426"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-1072be9426\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-96f8661171\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-1072be9426","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-1072be9426
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-1072be9426
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 2
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T18:38:29.621Z] ⏳  Processing...

[2020-05-27T18:38:29.652Z] Waiting for code changes...

[2020-05-27T18:38:42.344Z] Getting status...

[2020-05-27T18:38:44.672Z] Getting status... → Done

[2020-05-27T18:38:44.913Z] Garden config added at /Users/emilwils/Documents/node-microservice/client/garden.yml, reloading...

[2020-05-27T18:38:45.684Z] Getting status...

[2020-05-27T18:38:47.103Z] Getting status... → Done

[2020-05-27T18:38:47.432Z] ⏳  Processing...

[2020-05-27T18:38:47.456Z] Syncing module sources (17 files)...

[2020-05-27T18:38:47.500Z] Syncing module sources (5 files)...

[2020-05-27T18:38:47.594Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-27T18:38:47.620Z] Getting build status for v-1072be9426...

[2020-05-27T18:38:48.052Z] Syncing module sources (17 files)... → Done (took 0.6 sec)

[2020-05-27T18:38:48.078Z] Getting build status for v-36460dede0...

[2020-05-27T18:38:48.105Z] Getting build status for v-96f8661171...

[2020-05-27T18:38:48.131Z] Getting build status for v-96f8661171... → Done (took 0 sec)

[2020-05-27T18:38:48.201Z] Deploying version v-96f8661171...

[2020-05-27T18:38:48.228Z] Deploying version v-96f8661171... → Already deployed

[2020-05-27T18:38:48.261Z] → Forward: http://127.0.0.1:3306 → db:3306 (http)

[2020-05-27T18:38:48.498Z] Getting build status for v-36460dede0... → Done (took 0.4 sec)

[2020-05-27T18:38:48.521Z] Deploying version v-36460dede0...

[2020-05-27T18:38:48.543Z] Deploying version v-36460dede0... → Already deployed

[2020-05-27T18:38:48.566Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T18:38:48.588Z] Getting build status for v-1072be9426... → Done (took 1 sec)

[2020-05-27T18:38:48.621Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T18:38:48.651Z] Deploying version v-1072be9426...

[2020-05-27T18:38:50.247Z] Waiting for resources to be ready...

[2020-05-27T18:38:52.338Z] Deploying version v-1072be9426...

[2020-05-27T18:38:52.365Z] Error: Error deploying backend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment backend-v-1072be9426: ScalingReplicaSet - Scaled up replica set backend-v-1072be9426-7899cb8c74 to 1
Deployment backend-v-1072be9426: ScalingReplicaSet - Scaled up replica set backend-v-1072be9426-66f594f877 to 1
Deployment backend-v-1072be9426: ScalingReplicaSet - Scaled down replica set backend-v-1072be9426-7899cb8c74 to 0
Pod backend-v-1072be9426-66f594f877-79xr2: Scheduled - Successfully assigned node-microservice/backend-v-1072be9426-66f594f877-79xr2 to minikube
Pod backend-v-1072be9426-66f594f877-79xr2: Pulled - Container image "server:v-1072be9426" already present on machine
Pod backend-v-1072be9426-66f594f877-79xr2: Created - Created container backend
Pod backend-v-1072be9426-66f594f877-79xr2: Started - Started container backend
Pod backend-v-1072be9426-66f594f877-79xr2: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-1072be9426

****** backend-v-1072be9426-66f594f877-79xr2 ******
------ backend ------    at Socket.<anonymous> (/usr/src/server/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (events.js:310:20)
    at addChunk (_stream_readable.js:286:12)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  code: 'ER_BAD_DB_ERROR',
  errno: 1049,
  sqlMessage: "Unknown database 'test'",
  sqlState: '42000',
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-1072be9426:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-1072be9426-7899cb8c74 to 1\e[39m\n\e[94mDeployment backend-v-1072be9426:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-1072be9426-66f594f877 to 1\e[39m\n\e[94mDeployment backend-v-1072be9426:\e[39m \e[37mScalingReplicaSet - Scaled down replica set backend-v-1072be9426-7899cb8c74 to 0\e[39m\n\e[94mPod backend-v-1072be9426-66f594f877-79xr2:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-1072be9426-66f594f877-79xr2 to minikube\e[39m\n\e[94mPod backend-v-1072be9426-66f594f877-79xr2:\e[39m \e[37mPulled - Container image \"server:v-1072be9426\" already present on machine\e[39m\n\e[94mPod backend-v-1072be9426-66f594f877-79xr2:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-1072be9426-66f594f877-79xr2:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-1072be9426-66f594f877-79xr2:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-1072be9426\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-1072be9426-66f594f877-79xr2 ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m    at Socket.<anonymous> (/usr/src/server/node_modules/mysql/lib/Connection.js:526:10)\n    at Socket.emit (events.js:310:20)\n    at addChunk (_stream_readable.js:286:12)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  code: 'ER_BAD_DB_ERROR',\n  errno: 1049,\n  sqlMessage: \"Unknown database 'test'\",\n  sqlState: '42000',\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-1072be9426
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-1072be9426
      uid: 14631c75-c34a-40a7-a799-e6e2d586b4d1
      resourceVersion: '57990'
      generation: 2
      creationTimestamp: '2020-05-27T18:30:10Z'
      labels:
        garden.io/version: v-1072be9426
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '2'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: fc0e6f6826e3b76aa4e94d0eea7d2b5d33c04512cd9a29f257e2ef2c958a3221
        garden.io/version: v-1072be9426
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"fc0e6f6826e3b76aa4e94d0eea7d2b5d33c04512cd9a29f257e2ef2c958a3221","garden.io/version":"v-1072be9426"},"labels":{"garden.io/version":"v-1072be9426","module":"server","service":"backend"},"name":"backend-v-1072be9426","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-1072be9426","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-1072be9426","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-1072be9426"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-1072be9426\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-96f8661171\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-1072be9426","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-1072be9426
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-1072be9426
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 2
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T18:38:52.402Z] Waiting for code changes...

[2020-05-27T18:39:28.628Z] Getting status...

[2020-05-27T18:39:30.727Z] Getting status... → Done

[2020-05-27T18:39:30.935Z] Module configuration changed, reloading...

[2020-05-27T18:39:31.650Z] Getting status...

[2020-05-27T18:39:32.830Z] Getting status... → Done

[2020-05-27T18:39:33.063Z] ⏳  Processing...

[2020-05-27T18:39:33.088Z] Syncing module sources (5 files)...

[2020-05-27T18:39:33.142Z] Syncing module sources (17 files)...

[2020-05-27T18:39:33.236Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-27T18:39:33.265Z] Getting build status for v-1072be9426...

[2020-05-27T18:39:33.666Z] Getting build status for v-98fbdeef7b...

[2020-05-27T18:39:33.700Z] Getting build status for v-98fbdeef7b... → Done (took 0 sec)

[2020-05-27T18:39:33.726Z] Syncing module sources (17 files)... → Done (took 0.6 sec)

[2020-05-27T18:39:33.755Z] Getting build status for v-36460dede0...

[2020-05-27T18:39:33.827Z] Deploying version v-98fbdeef7b...

[2020-05-27T18:39:34.056Z] Getting build status for v-36460dede0... → Done (took 0.3 sec)

[2020-05-27T18:39:34.088Z] Deploying version v-36460dede0...

[2020-05-27T18:39:34.117Z] Deploying version v-36460dede0... → Already deployed

[2020-05-27T18:39:34.146Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T18:39:34.175Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T18:39:34.203Z] Getting build status for v-1072be9426... → Done (took 0.9 sec)

[2020-05-27T18:39:35.640Z] Waiting for resources to be ready...

[2020-05-27T18:39:37.678Z] Resources ready

[2020-05-27T18:39:37.718Z] Deploying version v-98fbdeef7b... → Done (took 3.9 sec)

[2020-05-27T18:39:37.745Z] → Forward: http://127.0.0.1:3306 → db:3306 (http)

[2020-05-27T18:39:37.772Z] Deploying version v-1072be9426...

[2020-05-27T18:39:39.341Z] Waiting for resources to be ready...

[2020-05-27T18:39:41.448Z] Deploying version v-1072be9426...

[2020-05-27T18:39:41.483Z] Error: Error deploying backend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment backend-v-1072be9426: ScalingReplicaSet - Scaled up replica set backend-v-1072be9426-7899cb8c74 to 1
Deployment backend-v-1072be9426: ScalingReplicaSet - Scaled up replica set backend-v-1072be9426-66f594f877 to 1
Deployment backend-v-1072be9426: ScalingReplicaSet - Scaled down replica set backend-v-1072be9426-7899cb8c74 to 0
Deployment backend-v-1072be9426: ScalingReplicaSet - Scaled up replica set backend-v-1072be9426-57d6d6bcd to 1
Deployment backend-v-1072be9426: ScalingReplicaSet - Scaled down replica set backend-v-1072be9426-66f594f877 to 0
Pod backend-v-1072be9426-57d6d6bcd-kqfqw: Scheduled - Successfully assigned node-microservice/backend-v-1072be9426-57d6d6bcd-kqfqw to minikube
Pod backend-v-1072be9426-57d6d6bcd-kqfqw: Pulled - Container image "server:v-1072be9426" already present on machine
Pod backend-v-1072be9426-57d6d6bcd-kqfqw: Created - Created container backend
Pod backend-v-1072be9426-57d6d6bcd-kqfqw: Started - Started container backend
Pod backend-v-1072be9426-57d6d6bcd-kqfqw: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-1072be9426

****** backend-v-1072be9426-57d6d6bcd-kqfqw ******
------ backend ------Error: connect ECONNREFUSED 10.97.186.228:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '10.97.186.228',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-1072be9426:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-1072be9426-7899cb8c74 to 1\e[39m\n\e[94mDeployment backend-v-1072be9426:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-1072be9426-66f594f877 to 1\e[39m\n\e[94mDeployment backend-v-1072be9426:\e[39m \e[37mScalingReplicaSet - Scaled down replica set backend-v-1072be9426-7899cb8c74 to 0\e[39m\n\e[94mDeployment backend-v-1072be9426:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-1072be9426-57d6d6bcd to 1\e[39m\n\e[94mDeployment backend-v-1072be9426:\e[39m \e[37mScalingReplicaSet - Scaled down replica set backend-v-1072be9426-66f594f877 to 0\e[39m\n\e[94mPod backend-v-1072be9426-57d6d6bcd-kqfqw:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-1072be9426-57d6d6bcd-kqfqw to minikube\e[39m\n\e[94mPod backend-v-1072be9426-57d6d6bcd-kqfqw:\e[39m \e[37mPulled - Container image \"server:v-1072be9426\" already present on machine\e[39m\n\e[94mPod backend-v-1072be9426-57d6d6bcd-kqfqw:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-1072be9426-57d6d6bcd-kqfqw:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-1072be9426-57d6d6bcd-kqfqw:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-1072be9426\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-1072be9426-57d6d6bcd-kqfqw ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 10.97.186.228:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '10.97.186.228',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-1072be9426
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-1072be9426
      uid: 14631c75-c34a-40a7-a799-e6e2d586b4d1
      resourceVersion: '58189'
      generation: 3
      creationTimestamp: '2020-05-27T18:30:10Z'
      labels:
        garden.io/version: v-1072be9426
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '3'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 757e0f600c97aafd95d00c6a51f4c5e494ee25878ae17de43b88db24f4f8afbf
        garden.io/version: v-1072be9426
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"757e0f600c97aafd95d00c6a51f4c5e494ee25878ae17de43b88db24f4f8afbf","garden.io/version":"v-1072be9426"},"labels":{"garden.io/version":"v-1072be9426","module":"server","service":"backend"},"name":"backend-v-1072be9426","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-1072be9426","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-1072be9426","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-1072be9426"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-1072be9426\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-98fbdeef7b\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-1072be9426","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-1072be9426
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-1072be9426
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 3
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T18:39:41.518Z] Waiting for code changes...

[2020-05-27T18:40:01.817Z] ⏳  Processing...

[2020-05-27T18:40:01.910Z] Waiting for code changes...

[2020-05-27T18:40:01.944Z] ⏳  Processing...

[2020-05-27T18:40:02.082Z] Waiting for code changes...

[2020-05-27T18:40:02.118Z] ⏳  Processing...

[2020-05-27T18:40:02.167Z] Waiting for code changes...

[2020-05-27T18:40:07.044Z] ⏳  Processing...

[2020-05-27T18:40:07.099Z] Waiting for code changes...

[2020-05-27T18:40:10.178Z] ⏳  Processing...

[2020-05-27T18:40:10.226Z] Waiting for code changes...

[2020-05-27T18:40:12.181Z] ⏳  Processing...

[2020-05-27T18:40:12.228Z] Waiting for code changes...

[2020-05-27T18:40:15.692Z] ⏳  Processing...

[2020-05-27T18:40:15.759Z] Waiting for code changes...

[2020-05-27T18:40:36.661Z] ⏳  Processing...

[2020-05-27T18:40:36.719Z] Waiting for code changes...

[2020-05-27T18:40:39.337Z] ⏳  Processing...

[2020-05-27T18:40:39.389Z] Waiting for code changes...

[2020-05-27T18:41:06.155Z] ⏳  Processing...

[2020-05-27T18:41:06.215Z] Waiting for code changes...

[2020-05-27T18:42:44.303Z] ⏳  Processing...

[2020-05-27T18:42:44.462Z] Waiting for code changes...

[2020-05-27T18:42:44.499Z] ⏳  Processing...

[2020-05-27T18:42:44.532Z] Syncing module sources (5 files)...

[2020-05-27T18:42:44.629Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-27T18:42:44.662Z] Building version v-d034498c9f...

[2020-05-27T18:42:45.147Z] Building server:v-d034498c9f...

[2020-05-27T18:42:45.751Z] Building server:v-d034498c9f... → Done (took 1.1 sec)

[2020-05-27T18:42:45.784Z] Deploying version v-d034498c9f...

[2020-05-27T18:42:47.565Z] Waiting for resources to be ready...

[2020-05-27T18:42:49.670Z] Deploying version v-d034498c9f...

[2020-05-27T18:42:49.709Z] Error: Error deploying backend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment backend-v-d034498c9f: ScalingReplicaSet - Scaled up replica set backend-v-d034498c9f-6ff6986778 to 1
Pod backend-v-d034498c9f-6ff6986778-z6t76: Scheduled - Successfully assigned node-microservice/backend-v-d034498c9f-6ff6986778-z6t76 to minikube
Pod backend-v-d034498c9f-6ff6986778-z6t76: Pulled - Container image "server:v-d034498c9f" already present on machine
Pod backend-v-d034498c9f-6ff6986778-z6t76: Created - Created container backend
Pod backend-v-d034498c9f-6ff6986778-z6t76: Started - Started container backend
Pod backend-v-d034498c9f-6ff6986778-z6t76: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-d034498c9f

****** backend-v-d034498c9f-6ff6986778-z6t76 ******
------ backend ------
Error: getaddrinfo ENOTFOUND db:3306
    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:64:26)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ENOTFOUND',
  code: 'ENOTFOUND',
  syscall: 'getaddrinfo',
  hostname: 'db:3306',
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-d034498c9f:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-d034498c9f-6ff6986778 to 1\e[39m\n\e[94mPod backend-v-d034498c9f-6ff6986778-z6t76:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-d034498c9f-6ff6986778-z6t76 to minikube\e[39m\n\e[94mPod backend-v-d034498c9f-6ff6986778-z6t76:\e[39m \e[37mPulled - Container image \"server:v-d034498c9f\" already present on machine\e[39m\n\e[94mPod backend-v-d034498c9f-6ff6986778-z6t76:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-d034498c9f-6ff6986778-z6t76:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-d034498c9f-6ff6986778-z6t76:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-d034498c9f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-d034498c9f-6ff6986778-z6t76 ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m\nError: getaddrinfo ENOTFOUND db:3306\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:64:26)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ENOTFOUND',\n  code: 'ENOTFOUND',\n  syscall: 'getaddrinfo',\n  hostname: 'db:3306',\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-d034498c9f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-d034498c9f
      uid: 5df48a21-3e21-4b9f-b687-870256426757
      resourceVersion: '58708'
      generation: 1
      creationTimestamp: '2020-05-27T18:42:46Z'
      labels:
        garden.io/version: v-d034498c9f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 3298c9c735efd5bc8ae4afafe62634e0d2714fd1c4b0ab1bd27964f1fe3de7ac
        garden.io/version: v-d034498c9f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"3298c9c735efd5bc8ae4afafe62634e0d2714fd1c4b0ab1bd27964f1fe3de7ac","garden.io/version":"v-d034498c9f"},"labels":{"garden.io/version":"v-d034498c9f","module":"server","service":"backend"},"name":"backend-v-d034498c9f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-d034498c9f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-d034498c9f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-d034498c9f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-d034498c9f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-98fbdeef7b\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-d034498c9f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-d034498c9f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-d034498c9f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T18:42:49.740Z] Waiting for code changes...

[2020-05-27T18:42:58.371Z] ⏳  Processing...

[2020-05-27T18:42:58.518Z] Waiting for code changes...

[2020-05-27T18:42:58.556Z] ⏳  Processing...

[2020-05-27T18:42:58.589Z] Syncing module sources (5 files)...

[2020-05-27T18:42:58.682Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-27T18:42:58.717Z] Building version v-1072be9426...

[2020-05-27T18:42:59.211Z] Building server:v-1072be9426...

[2020-05-27T18:42:59.494Z] Building server:v-1072be9426... → Done (took 0.8 sec)

[2020-05-27T18:42:59.528Z] Deploying version v-1072be9426...

[2020-05-27T18:43:01.341Z] Waiting for resources to be ready...

[2020-05-27T18:43:03.425Z] Deploying version v-1072be9426...

[2020-05-27T18:43:03.463Z] Error: Error deploying backend: CrashLoopBackOff - back-off 10s restarting failed container=backend pod=backend-v-1072be9426-57d6d6bcd-6sqrc_node-microservice(3875141b-b827-4c3f-bbb6-6a7095fcdfe0)

━━━ Events ━━━
Deployment backend-v-1072be9426: ScalingReplicaSet - Scaled up replica set backend-v-1072be9426-7899cb8c74 to 1
Deployment backend-v-1072be9426: ScalingReplicaSet - Scaled up replica set backend-v-1072be9426-66f594f877 to 1
Deployment backend-v-1072be9426: ScalingReplicaSet - Scaled down replica set backend-v-1072be9426-7899cb8c74 to 0
Deployment backend-v-1072be9426: ScalingReplicaSet - Scaled up replica set backend-v-1072be9426-57d6d6bcd to 1
Deployment backend-v-1072be9426: ScalingReplicaSet - Scaled down replica set backend-v-1072be9426-66f594f877 to 0
Deployment backend-v-1072be9426: ScalingReplicaSet - Scaled up replica set backend-v-1072be9426-57d6d6bcd to 1
Pod backend-v-1072be9426-57d6d6bcd-6sqrc: Scheduled - Successfully assigned node-microservice/backend-v-1072be9426-57d6d6bcd-6sqrc to minikube
Pod backend-v-1072be9426-57d6d6bcd-6sqrc: Pulled - Container image "server:v-1072be9426" already present on machine
Pod backend-v-1072be9426-57d6d6bcd-6sqrc: Created - Created container backend
Pod backend-v-1072be9426-57d6d6bcd-6sqrc: Started - Started container backend
Pod backend-v-1072be9426-57d6d6bcd-6sqrc: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-1072be9426

****** backend-v-1072be9426-57d6d6bcd-6sqrc ******
------ backend ------    at Socket.<anonymous> (/usr/src/server/node_modules/mysql/lib/Connection.js:526:10)
    at Socket.emit (events.js:310:20)
    at addChunk (_stream_readable.js:286:12)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  code: 'ER_BAD_DB_ERROR',
  errno: 1049,
  sqlMessage: "Unknown database 'test'",
  sqlState: '42000',
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=backend
    pod=backend-v-1072be9426-57d6d6bcd-6sqrc_node-microservice(3875141b-b827-4c3f-bbb6-6a7095fcdfe0)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-1072be9426:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-1072be9426-7899cb8c74 to 1\e[39m\n\e[94mDeployment backend-v-1072be9426:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-1072be9426-66f594f877 to 1\e[39m\n\e[94mDeployment backend-v-1072be9426:\e[39m \e[37mScalingReplicaSet - Scaled down replica set backend-v-1072be9426-7899cb8c74 to 0\e[39m\n\e[94mDeployment backend-v-1072be9426:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-1072be9426-57d6d6bcd to 1\e[39m\n\e[94mDeployment backend-v-1072be9426:\e[39m \e[37mScalingReplicaSet - Scaled down replica set backend-v-1072be9426-66f594f877 to 0\e[39m\n\e[94mDeployment backend-v-1072be9426:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-1072be9426-57d6d6bcd to 1\e[39m\n\e[94mPod backend-v-1072be9426-57d6d6bcd-6sqrc:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-1072be9426-57d6d6bcd-6sqrc to minikube\e[39m\n\e[94mPod backend-v-1072be9426-57d6d6bcd-6sqrc:\e[39m \e[37mPulled - Container image \"server:v-1072be9426\" already present on machine\e[39m\n\e[94mPod backend-v-1072be9426-57d6d6bcd-6sqrc:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-1072be9426-57d6d6bcd-6sqrc:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-1072be9426-57d6d6bcd-6sqrc:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-1072be9426\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-1072be9426-57d6d6bcd-6sqrc ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m    at Socket.<anonymous> (/usr/src/server/node_modules/mysql/lib/Connection.js:526:10)\n    at Socket.emit (events.js:310:20)\n    at addChunk (_stream_readable.js:286:12)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  code: 'ER_BAD_DB_ERROR',\n  errno: 1049,\n  sqlMessage: \"Unknown database 'test'\",\n  sqlState: '42000',\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-1072be9426
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-1072be9426
      uid: fd1d194f-0693-47ba-a3aa-d55ac4458cb6
      resourceVersion: '58785'
      generation: 1
      creationTimestamp: '2020-05-27T18:42:59Z'
      labels:
        garden.io/version: v-1072be9426
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 757e0f600c97aafd95d00c6a51f4c5e494ee25878ae17de43b88db24f4f8afbf
        garden.io/version: v-1072be9426
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"757e0f600c97aafd95d00c6a51f4c5e494ee25878ae17de43b88db24f4f8afbf","garden.io/version":"v-1072be9426"},"labels":{"garden.io/version":"v-1072be9426","module":"server","service":"backend"},"name":"backend-v-1072be9426","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-1072be9426","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-1072be9426","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-1072be9426"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-1072be9426\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-98fbdeef7b\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-1072be9426","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-1072be9426
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-1072be9426
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T18:43:03.499Z] Waiting for code changes...

[2020-05-27T18:43:42.965Z] ⏳  Processing...

[2020-05-27T18:43:43.067Z] Waiting for code changes...

[2020-05-27T18:44:15.773Z] Getting status...

[2020-05-27T18:44:18.139Z] Getting status... → Done

[2020-05-27T18:44:18.364Z] Error: Task names must be unique - the task name 'create-db' is declared multiple times (in modules 'db' and 'server')
    at new ConfigGraph (/snapshot/project/garden-service/tmp/dist/build/src/config-graph.js:0)
    at Garden.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/garden.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/garden.js:0)
Error Details:
taskName: create-db
moduleA: db
moduleB: server


[2020-05-27T18:44:28.020Z] Getting status...

[2020-05-27T18:44:30.161Z] Getting status... → Done

[2020-05-27T18:44:30.454Z] Module configuration changed, reloading...

[2020-05-27T18:44:31.095Z] Getting status...

[2020-05-27T18:44:32.343Z] Getting status... → Done

[2020-05-27T18:44:32.620Z] ⏳  Processing...

[2020-05-27T18:44:32.692Z] Syncing module sources (5 files)...

[2020-05-27T18:44:32.728Z] Syncing module sources (17 files)...

[2020-05-27T18:44:32.897Z] Syncing module sources (5 files)... → Done (took 0.2 sec)

[2020-05-27T18:44:32.932Z] Getting build status for v-9f4fc9e4c3...

[2020-05-27T18:44:33.635Z] Syncing module sources (17 files)... → Done (took 0.9 sec)

[2020-05-27T18:44:33.673Z] Getting build status for v-36460dede0...

[2020-05-27T18:44:33.724Z] Getting build status for v-8bbe6fa30a...

[2020-05-27T18:44:33.766Z] Getting build status for v-8bbe6fa30a... → Done (took 0 sec)

[2020-05-27T18:44:33.803Z] Deploying version v-8bbe6fa30a...

[2020-05-27T18:44:34.157Z] Building version v-9f4fc9e4c3...

[2020-05-27T18:44:34.199Z] Getting build status for v-36460dede0... → Done (took 0.5 sec)

[2020-05-27T18:44:34.235Z] Deploying version v-36460dede0...

[2020-05-27T18:44:34.268Z] Deploying version v-36460dede0... → Already deployed

[2020-05-27T18:44:34.303Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T18:44:34.339Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T18:44:34.443Z] Building server:v-9f4fc9e4c3...

[2020-05-27T18:44:34.799Z] Building server:v-9f4fc9e4c3... → Done (took 1.9 sec)

[2020-05-27T18:44:35.794Z] Waiting for resources to be ready...

[2020-05-27T18:44:37.844Z] Resources ready

[2020-05-27T18:44:37.902Z] Deploying version v-8bbe6fa30a... → Done (took 4.1 sec)

[2020-05-27T18:44:37.936Z] → Forward: http://127.0.0.1:3306 → db:3306 (http)

[2020-05-27T18:44:37.972Z] Deploying version v-9f4fc9e4c3...

[2020-05-27T18:44:39.580Z] Waiting for resources to be ready...

[2020-05-27T18:44:41.683Z] Deploying version v-9f4fc9e4c3...

[2020-05-27T18:44:41.723Z] Error: Error deploying backend: CrashLoopBackOff - back-off 10s restarting failed container=backend pod=backend-v-9f4fc9e4c3-664c5c546b-drxfr_node-microservice(91ffa031-9811-4df8-ab3c-3203dac9718f)

━━━ Events ━━━
Deployment backend-v-9f4fc9e4c3: ScalingReplicaSet - Scaled up replica set backend-v-9f4fc9e4c3-664c5c546b to 1
Pod backend-v-9f4fc9e4c3-664c5c546b-drxfr: Scheduled - Successfully assigned node-microservice/backend-v-9f4fc9e4c3-664c5c546b-drxfr to minikube
Pod backend-v-9f4fc9e4c3-664c5c546b-drxfr: Pulled - Container image "server:v-9f4fc9e4c3" already present on machine
Pod backend-v-9f4fc9e4c3-664c5c546b-drxfr: Created - Created container backend
Pod backend-v-9f4fc9e4c3-664c5c546b-drxfr: Started - Started container backend
Pod backend-v-9f4fc9e4c3-664c5c546b-drxfr: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-9f4fc9e4c3

****** backend-v-9f4fc9e4c3-664c5c546b-drxfr ******
------ backend ------Error: connect ECONNREFUSED 10.97.186.228:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '10.97.186.228',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=backend
    pod=backend-v-9f4fc9e4c3-664c5c546b-drxfr_node-microservice(91ffa031-9811-4df8-ab3c-3203dac9718f)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-9f4fc9e4c3:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-9f4fc9e4c3-664c5c546b to 1\e[39m\n\e[94mPod backend-v-9f4fc9e4c3-664c5c546b-drxfr:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-9f4fc9e4c3-664c5c546b-drxfr to minikube\e[39m\n\e[94mPod backend-v-9f4fc9e4c3-664c5c546b-drxfr:\e[39m \e[37mPulled - Container image \"server:v-9f4fc9e4c3\" already present on machine\e[39m\n\e[94mPod backend-v-9f4fc9e4c3-664c5c546b-drxfr:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-9f4fc9e4c3-664c5c546b-drxfr:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-9f4fc9e4c3-664c5c546b-drxfr:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-9f4fc9e4c3\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-9f4fc9e4c3-664c5c546b-drxfr ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 10.97.186.228:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '10.97.186.228',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-9f4fc9e4c3
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-9f4fc9e4c3
      uid: 4e98d30b-723a-453c-81a6-d0b33dd85998
      resourceVersion: '59129'
      generation: 1
      creationTimestamp: '2020-05-27T18:44:38Z'
      labels:
        garden.io/version: v-9f4fc9e4c3
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 3f6358f71e9e5701a301aa59bd95b9e7d9a7f0ed31977eeaaf7112ec2c464b9e
        garden.io/version: v-9f4fc9e4c3
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"3f6358f71e9e5701a301aa59bd95b9e7d9a7f0ed31977eeaaf7112ec2c464b9e","garden.io/version":"v-9f4fc9e4c3"},"labels":{"garden.io/version":"v-9f4fc9e4c3","module":"server","service":"backend"},"name":"backend-v-9f4fc9e4c3","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-9f4fc9e4c3","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-9f4fc9e4c3","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-9f4fc9e4c3"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-9f4fc9e4c3\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-9f4fc9e4c3","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-9f4fc9e4c3
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-9f4fc9e4c3
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T18:44:41.762Z] ⏳  Processing...

[2020-05-27T18:44:41.807Z] Waiting for code changes...

[2020-05-27T18:45:52.678Z] ⏳  Processing...

[2020-05-27T18:45:52.829Z] Waiting for code changes...

[2020-05-27T18:45:52.879Z] ⏳  Processing...

[2020-05-27T18:45:52.919Z] Syncing module sources (5 files)...

[2020-05-27T18:45:53.029Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-27T18:45:53.069Z] Building version v-40ccfba838...

[2020-05-27T18:45:53.535Z] Building server:v-40ccfba838...

[2020-05-27T18:45:54.220Z] Building server:v-40ccfba838... → Done (took 1.2 sec)

[2020-05-27T18:45:54.258Z] Deploying version v-40ccfba838...

[2020-05-27T18:45:56.054Z] Waiting for resources to be ready...

[2020-05-27T18:45:58.175Z] Deploying version v-40ccfba838...

[2020-05-27T18:45:58.218Z] Error: Error deploying backend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment backend-v-40ccfba838: ScalingReplicaSet - Scaled up replica set backend-v-40ccfba838-559f54bd54 to 1
Pod backend-v-40ccfba838-559f54bd54-lc2m2: Scheduled - Successfully assigned node-microservice/backend-v-40ccfba838-559f54bd54-lc2m2 to minikube
Pod backend-v-40ccfba838-559f54bd54-lc2m2: Pulled - Container image "server:v-40ccfba838" already present on machine
Pod backend-v-40ccfba838-559f54bd54-lc2m2: Created - Created container backend
Pod backend-v-40ccfba838-559f54bd54-lc2m2: Started - Started container backend
Pod backend-v-40ccfba838-559f54bd54-lc2m2: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-40ccfba838

****** backend-v-40ccfba838-559f54bd54-lc2m2 ******
------ backend ------
Error: getaddrinfo ENOTFOUND http:/db:3306/
    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:64:26)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ENOTFOUND',
  code: 'ENOTFOUND',
  syscall: 'getaddrinfo',
  hostname: 'http:/db:3306/',
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-40ccfba838:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-40ccfba838-559f54bd54 to 1\e[39m\n\e[94mPod backend-v-40ccfba838-559f54bd54-lc2m2:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-40ccfba838-559f54bd54-lc2m2 to minikube\e[39m\n\e[94mPod backend-v-40ccfba838-559f54bd54-lc2m2:\e[39m \e[37mPulled - Container image \"server:v-40ccfba838\" already present on machine\e[39m\n\e[94mPod backend-v-40ccfba838-559f54bd54-lc2m2:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-40ccfba838-559f54bd54-lc2m2:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-40ccfba838-559f54bd54-lc2m2:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-40ccfba838\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-40ccfba838-559f54bd54-lc2m2 ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m\nError: getaddrinfo ENOTFOUND http:/db:3306/\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:64:26)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ENOTFOUND',\n  code: 'ENOTFOUND',\n  syscall: 'getaddrinfo',\n  hostname: 'http:/db:3306/',\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-40ccfba838
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-40ccfba838
      uid: c0837036-485c-46d3-bc49-d8bc581d43b9
      resourceVersion: '59373'
      generation: 1
      creationTimestamp: '2020-05-27T18:45:54Z'
      labels:
        garden.io/version: v-40ccfba838
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: e18f25a24c03f5ed8db27628b9fc506080e0b1cc01b3e7d91ef5ba7223290500
        garden.io/version: v-40ccfba838
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"e18f25a24c03f5ed8db27628b9fc506080e0b1cc01b3e7d91ef5ba7223290500","garden.io/version":"v-40ccfba838"},"labels":{"garden.io/version":"v-40ccfba838","module":"server","service":"backend"},"name":"backend-v-40ccfba838","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-40ccfba838","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-40ccfba838","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-40ccfba838"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-40ccfba838\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-40ccfba838","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-40ccfba838
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-40ccfba838
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T18:45:58.261Z] Waiting for code changes...

[2020-05-27T18:46:01.858Z] ⏳  Processing...

[2020-05-27T18:46:01.914Z] Waiting for code changes...

[2020-05-27T18:46:11.783Z] ⏳  Processing...

[2020-05-27T18:46:11.956Z] Waiting for code changes...

[2020-05-27T18:46:12.003Z] ⏳  Processing...

[2020-05-27T18:46:12.042Z] Syncing module sources (5 files)...

[2020-05-27T18:46:12.114Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-27T18:46:12.155Z] Building version v-40ccfba838...

[2020-05-27T18:46:12.609Z] Building server:v-40ccfba838...

[2020-05-27T18:46:12.905Z] Building server:v-40ccfba838... → Done (took 0.7 sec)

[2020-05-27T18:46:12.947Z] Deploying version v-40ccfba838...

[2020-05-27T18:46:14.501Z] Waiting for resources to be ready...

[2020-05-27T18:46:16.607Z] Deploying version v-40ccfba838...

[2020-05-27T18:46:16.651Z] Error: Error deploying backend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment backend-v-40ccfba838: ScalingReplicaSet - Scaled up replica set backend-v-40ccfba838-559f54bd54 to 1
Pod backend-v-40ccfba838-559f54bd54-lc2m2: Scheduled - Successfully assigned node-microservice/backend-v-40ccfba838-559f54bd54-lc2m2 to minikube
Pod backend-v-40ccfba838-559f54bd54-lc2m2: Pulled - Container image "server:v-40ccfba838" already present on machine
Pod backend-v-40ccfba838-559f54bd54-lc2m2: Created - Created container backend
Pod backend-v-40ccfba838-559f54bd54-lc2m2: Started - Started container backend
Pod backend-v-40ccfba838-559f54bd54-lc2m2: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-40ccfba838

****** backend-v-40ccfba838-559f54bd54-lc2m2 ******
------ backend ------
Error: getaddrinfo ENOTFOUND http:/db:3306/
    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:64:26)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ENOTFOUND',
  code: 'ENOTFOUND',
  syscall: 'getaddrinfo',
  hostname: 'http:/db:3306/',
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-40ccfba838:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-40ccfba838-559f54bd54 to 1\e[39m\n\e[94mPod backend-v-40ccfba838-559f54bd54-lc2m2:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-40ccfba838-559f54bd54-lc2m2 to minikube\e[39m\n\e[94mPod backend-v-40ccfba838-559f54bd54-lc2m2:\e[39m \e[37mPulled - Container image \"server:v-40ccfba838\" already present on machine\e[39m\n\e[94mPod backend-v-40ccfba838-559f54bd54-lc2m2:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-40ccfba838-559f54bd54-lc2m2:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-40ccfba838-559f54bd54-lc2m2:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-40ccfba838\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-40ccfba838-559f54bd54-lc2m2 ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m\nError: getaddrinfo ENOTFOUND http:/db:3306/\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:64:26)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ENOTFOUND',\n  code: 'ENOTFOUND',\n  syscall: 'getaddrinfo',\n  hostname: 'http:/db:3306/',\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-40ccfba838
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-40ccfba838
      uid: c0837036-485c-46d3-bc49-d8bc581d43b9
      resourceVersion: '59457'
      generation: 1
      creationTimestamp: '2020-05-27T18:45:54Z'
      labels:
        garden.io/version: v-40ccfba838
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: e18f25a24c03f5ed8db27628b9fc506080e0b1cc01b3e7d91ef5ba7223290500
        garden.io/version: v-40ccfba838
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"e18f25a24c03f5ed8db27628b9fc506080e0b1cc01b3e7d91ef5ba7223290500","garden.io/version":"v-40ccfba838"},"labels":{"garden.io/version":"v-40ccfba838","module":"server","service":"backend"},"name":"backend-v-40ccfba838","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-40ccfba838","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-40ccfba838","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-40ccfba838"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-40ccfba838\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-40ccfba838","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-40ccfba838
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-40ccfba838
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T18:46:16.691Z] Waiting for code changes...

[2020-05-27T18:47:19.444Z] ⏳  Processing...

[2020-05-27T18:47:19.614Z] Waiting for code changes...

[2020-05-27T18:47:19.664Z] ⏳  Processing...

[2020-05-27T18:47:19.704Z] Syncing module sources (5 files)...

[2020-05-27T18:47:19.821Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-27T18:47:19.864Z] Building version v-f6b27a3e61...

[2020-05-27T18:47:20.347Z] Building server:v-f6b27a3e61...

[2020-05-27T18:47:20.957Z] Building server:v-f6b27a3e61... → Done (took 1.1 sec)

[2020-05-27T18:47:21.000Z] Deploying version v-f6b27a3e61...

[2020-05-27T18:47:22.870Z] Waiting for resources to be ready...

[2020-05-27T18:47:24.973Z] Deploying version v-f6b27a3e61...

[2020-05-27T18:47:25.019Z] Error: Error deploying backend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment backend-v-f6b27a3e61: ScalingReplicaSet - Scaled up replica set backend-v-f6b27a3e61-5f6f9c4c64 to 1
Pod backend-v-f6b27a3e61-5f6f9c4c64-59z7j: Scheduled - Successfully assigned node-microservice/backend-v-f6b27a3e61-5f6f9c4c64-59z7j to minikube
Pod backend-v-f6b27a3e61-5f6f9c4c64-59z7j: Pulled - Container image "server:v-f6b27a3e61" already present on machine
Pod backend-v-f6b27a3e61-5f6f9c4c64-59z7j: Created - Created container backend
Pod backend-v-f6b27a3e61-5f6f9c4c64-59z7j: Started - Started container backend
Pod backend-v-f6b27a3e61-5f6f9c4c64-59z7j: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-f6b27a3e61

****** backend-v-f6b27a3e61-5f6f9c4c64-59z7j ******
------ backend ------
Error: getaddrinfo ENOTFOUND http://db:3306/
    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:64:26)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ENOTFOUND',
  code: 'ENOTFOUND',
  syscall: 'getaddrinfo',
  hostname: 'http://db:3306/',
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-f6b27a3e61:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-f6b27a3e61-5f6f9c4c64 to 1\e[39m\n\e[94mPod backend-v-f6b27a3e61-5f6f9c4c64-59z7j:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-f6b27a3e61-5f6f9c4c64-59z7j to minikube\e[39m\n\e[94mPod backend-v-f6b27a3e61-5f6f9c4c64-59z7j:\e[39m \e[37mPulled - Container image \"server:v-f6b27a3e61\" already present on machine\e[39m\n\e[94mPod backend-v-f6b27a3e61-5f6f9c4c64-59z7j:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-f6b27a3e61-5f6f9c4c64-59z7j:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-f6b27a3e61-5f6f9c4c64-59z7j:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-f6b27a3e61\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-f6b27a3e61-5f6f9c4c64-59z7j ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m\nError: getaddrinfo ENOTFOUND http://db:3306/\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:64:26)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ENOTFOUND',\n  code: 'ENOTFOUND',\n  syscall: 'getaddrinfo',\n  hostname: 'http://db:3306/',\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-f6b27a3e61
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-f6b27a3e61
      uid: 2a56f4b7-b602-4d76-a6b2-73da47f135eb
      resourceVersion: '59674'
      generation: 1
      creationTimestamp: '2020-05-27T18:47:21Z'
      labels:
        garden.io/version: v-f6b27a3e61
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 93a23d433eb4e64abc5d1acb8bb4bb759586028b88a26acff905346aca44c65c
        garden.io/version: v-f6b27a3e61
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"93a23d433eb4e64abc5d1acb8bb4bb759586028b88a26acff905346aca44c65c","garden.io/version":"v-f6b27a3e61"},"labels":{"garden.io/version":"v-f6b27a3e61","module":"server","service":"backend"},"name":"backend-v-f6b27a3e61","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-f6b27a3e61","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-f6b27a3e61","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-f6b27a3e61"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-f6b27a3e61\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-f6b27a3e61","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-f6b27a3e61
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-f6b27a3e61
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T18:47:25.066Z] Waiting for code changes...

[2020-05-27T18:53:29.191Z] ⏳  Processing...

[2020-05-27T18:53:29.379Z] ⏳  Processing...

[2020-05-27T18:53:29.440Z] Waiting for code changes...

[2020-05-27T18:53:29.508Z] ⏳  Processing...

[2020-05-27T18:53:29.571Z] Syncing module sources (17 files)...

[2020-05-27T18:53:30.455Z] Building version v-8bbe6fa30a...

[2020-05-27T18:53:30.508Z] Syncing module sources (17 files)... → Done (took 0.9 sec)

[2020-05-27T18:53:30.555Z] Building version v-bd7f73e9cc...

[2020-05-27T18:53:31.071Z] Building client:v-bd7f73e9cc...

[2020-05-27T18:53:31.254Z] Building version v-8bbe6fa30a... → Done (took 0.8 sec)

[2020-05-27T18:53:31.306Z] Deploying version v-8bbe6fa30a...

[2020-05-27T18:53:33.706Z] Waiting for resources to be ready...

[2020-05-27T18:53:35.768Z] Resources ready

[2020-05-27T18:53:35.828Z] Deploying version v-8bbe6fa30a... → Done (took 4.5 sec)

[2020-05-27T18:53:35.870Z] → Forward: http://127.0.0.1:3306 → db:3306 (http)

[2020-05-27T18:53:35.913Z] Deploying version v-f6b27a3e61...

[2020-05-27T18:53:37.464Z] Waiting for resources to be ready...

[2020-05-27T18:53:39.576Z] Deploying version v-f6b27a3e61...

[2020-05-27T18:53:39.620Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-f6b27a3e61-5f6f9c4c64-59z7j_node-microservice(a557c21c-e2af-4ad1-914f-a632aed86596)

━━━ Events ━━━
Deployment backend-v-f6b27a3e61: ScalingReplicaSet - Scaled up replica set backend-v-f6b27a3e61-5f6f9c4c64 to 1
Pod backend-v-f6b27a3e61-5f6f9c4c64-59z7j: Scheduled - Successfully assigned node-microservice/backend-v-f6b27a3e61-5f6f9c4c64-59z7j to minikube
Pod backend-v-f6b27a3e61-5f6f9c4c64-59z7j: Pulled - Container image "server:v-f6b27a3e61" already present on machine
Pod backend-v-f6b27a3e61-5f6f9c4c64-59z7j: Created - Created container backend
Pod backend-v-f6b27a3e61-5f6f9c4c64-59z7j: Started - Started container backend
Pod backend-v-f6b27a3e61-5f6f9c4c64-59z7j: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-f6b27a3e61

****** backend-v-f6b27a3e61-5f6f9c4c64-59z7j ******
------ backend ------
Error: getaddrinfo ENOTFOUND http://db:3306/
    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:64:26)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ENOTFOUND',
  code: 'ENOTFOUND',
  syscall: 'getaddrinfo',
  hostname: 'http://db:3306/',
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-f6b27a3e61-5f6f9c4c64-59z7j_node-microservice(a557c21c-e2af-4ad1-914f-a632aed86596)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-f6b27a3e61:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-f6b27a3e61-5f6f9c4c64 to 1\e[39m\n\e[94mPod backend-v-f6b27a3e61-5f6f9c4c64-59z7j:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-f6b27a3e61-5f6f9c4c64-59z7j to minikube\e[39m\n\e[94mPod backend-v-f6b27a3e61-5f6f9c4c64-59z7j:\e[39m \e[37mPulled - Container image \"server:v-f6b27a3e61\" already present on machine\e[39m\n\e[94mPod backend-v-f6b27a3e61-5f6f9c4c64-59z7j:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-f6b27a3e61-5f6f9c4c64-59z7j:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-f6b27a3e61-5f6f9c4c64-59z7j:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-f6b27a3e61\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-f6b27a3e61-5f6f9c4c64-59z7j ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m\nError: getaddrinfo ENOTFOUND http://db:3306/\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:64:26)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ENOTFOUND',\n  code: 'ENOTFOUND',\n  syscall: 'getaddrinfo',\n  hostname: 'http://db:3306/',\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-f6b27a3e61
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-f6b27a3e61
      uid: 2a56f4b7-b602-4d76-a6b2-73da47f135eb
      resourceVersion: '60136'
      generation: 1
      creationTimestamp: '2020-05-27T18:47:21Z'
      labels:
        garden.io/version: v-f6b27a3e61
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 93a23d433eb4e64abc5d1acb8bb4bb759586028b88a26acff905346aca44c65c
        garden.io/version: v-f6b27a3e61
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"93a23d433eb4e64abc5d1acb8bb4bb759586028b88a26acff905346aca44c65c","garden.io/version":"v-f6b27a3e61"},"labels":{"garden.io/version":"v-f6b27a3e61","module":"server","service":"backend"},"name":"backend-v-f6b27a3e61","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-f6b27a3e61","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-f6b27a3e61","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-f6b27a3e61"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-f6b27a3e61\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-f6b27a3e61","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-f6b27a3e61
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-f6b27a3e61
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T18:53:39.953Z] Building version v-8bbe6fa30a...

[2020-05-27T18:53:40.496Z] Building version v-8bbe6fa30a... → Done (took 0.5 sec)

[2020-05-27T18:53:40.547Z] Deploying version v-8bbe6fa30a...

[2020-05-27T18:53:42.103Z] Waiting for resources to be ready...

[2020-05-27T18:53:44.164Z] Resources ready

[2020-05-27T18:53:44.231Z] Deploying version v-8bbe6fa30a... → Done (took 3.7 sec)

[2020-05-27T18:53:44.276Z] → Forward: http://127.0.0.1:3306 → db:3306 (http)

[2020-05-27T18:53:44.322Z] Deploying version v-f6b27a3e61...

[2020-05-27T18:53:45.929Z] Waiting for resources to be ready...

[2020-05-27T18:53:48.045Z] Deploying version v-f6b27a3e61...

[2020-05-27T18:53:48.094Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-f6b27a3e61-5f6f9c4c64-59z7j_node-microservice(a557c21c-e2af-4ad1-914f-a632aed86596)

━━━ Events ━━━
Deployment backend-v-f6b27a3e61: ScalingReplicaSet - Scaled up replica set backend-v-f6b27a3e61-5f6f9c4c64 to 1
Pod backend-v-f6b27a3e61-5f6f9c4c64-59z7j: Scheduled - Successfully assigned node-microservice/backend-v-f6b27a3e61-5f6f9c4c64-59z7j to minikube
Pod backend-v-f6b27a3e61-5f6f9c4c64-59z7j: Pulled - Container image "server:v-f6b27a3e61" already present on machine
Pod backend-v-f6b27a3e61-5f6f9c4c64-59z7j: Created - Created container backend
Pod backend-v-f6b27a3e61-5f6f9c4c64-59z7j: Started - Started container backend
Pod backend-v-f6b27a3e61-5f6f9c4c64-59z7j: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-f6b27a3e61

****** backend-v-f6b27a3e61-5f6f9c4c64-59z7j ******
------ backend ------
Error: getaddrinfo ENOTFOUND http://db:3306/
    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:64:26)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ENOTFOUND',
  code: 'ENOTFOUND',
  syscall: 'getaddrinfo',
  hostname: 'http://db:3306/',
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-f6b27a3e61-5f6f9c4c64-59z7j_node-microservice(a557c21c-e2af-4ad1-914f-a632aed86596)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-f6b27a3e61:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-f6b27a3e61-5f6f9c4c64 to 1\e[39m\n\e[94mPod backend-v-f6b27a3e61-5f6f9c4c64-59z7j:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-f6b27a3e61-5f6f9c4c64-59z7j to minikube\e[39m\n\e[94mPod backend-v-f6b27a3e61-5f6f9c4c64-59z7j:\e[39m \e[37mPulled - Container image \"server:v-f6b27a3e61\" already present on machine\e[39m\n\e[94mPod backend-v-f6b27a3e61-5f6f9c4c64-59z7j:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-f6b27a3e61-5f6f9c4c64-59z7j:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-f6b27a3e61-5f6f9c4c64-59z7j:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-f6b27a3e61\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-f6b27a3e61-5f6f9c4c64-59z7j ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m\nError: getaddrinfo ENOTFOUND http://db:3306/\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:64:26)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ENOTFOUND',\n  code: 'ENOTFOUND',\n  syscall: 'getaddrinfo',\n  hostname: 'http://db:3306/',\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-f6b27a3e61
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-f6b27a3e61
      uid: 2a56f4b7-b602-4d76-a6b2-73da47f135eb
      resourceVersion: '60136'
      generation: 1
      creationTimestamp: '2020-05-27T18:47:21Z'
      labels:
        garden.io/version: v-f6b27a3e61
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 93a23d433eb4e64abc5d1acb8bb4bb759586028b88a26acff905346aca44c65c
        garden.io/version: v-f6b27a3e61
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"93a23d433eb4e64abc5d1acb8bb4bb759586028b88a26acff905346aca44c65c","garden.io/version":"v-f6b27a3e61"},"labels":{"garden.io/version":"v-f6b27a3e61","module":"server","service":"backend"},"name":"backend-v-f6b27a3e61","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-f6b27a3e61","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-f6b27a3e61","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-f6b27a3e61"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-f6b27a3e61\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-f6b27a3e61","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-f6b27a3e61
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-f6b27a3e61
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T18:53:48.439Z] Building version v-8bbe6fa30a...

[2020-05-27T18:53:49.105Z] Building version v-8bbe6fa30a... → Done (took 0.7 sec)

[2020-05-27T18:53:49.157Z] Deploying version v-8bbe6fa30a...

[2020-05-27T18:53:50.725Z] Waiting for resources to be ready...

[2020-05-27T18:53:52.797Z] Resources ready

[2020-05-27T18:53:52.905Z] Deploying version v-8bbe6fa30a... → Done (took 3.8 sec)

[2020-05-27T18:53:52.957Z] → Forward: http://127.0.0.1:3306 → db:3306 (http)

[2020-05-27T18:53:53.019Z] Deploying version v-f6b27a3e61...

[2020-05-27T18:53:54.527Z] Waiting for resources to be ready...

[2020-05-27T18:53:56.677Z] Deploying version v-f6b27a3e61...

[2020-05-27T18:53:56.734Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-f6b27a3e61-5f6f9c4c64-59z7j_node-microservice(a557c21c-e2af-4ad1-914f-a632aed86596)

━━━ Events ━━━
Deployment backend-v-f6b27a3e61: ScalingReplicaSet - Scaled up replica set backend-v-f6b27a3e61-5f6f9c4c64 to 1
Pod backend-v-f6b27a3e61-5f6f9c4c64-59z7j: Scheduled - Successfully assigned node-microservice/backend-v-f6b27a3e61-5f6f9c4c64-59z7j to minikube
Pod backend-v-f6b27a3e61-5f6f9c4c64-59z7j: Pulled - Container image "server:v-f6b27a3e61" already present on machine
Pod backend-v-f6b27a3e61-5f6f9c4c64-59z7j: Created - Created container backend
Pod backend-v-f6b27a3e61-5f6f9c4c64-59z7j: Started - Started container backend
Pod backend-v-f6b27a3e61-5f6f9c4c64-59z7j: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-f6b27a3e61

****** backend-v-f6b27a3e61-5f6f9c4c64-59z7j ******
------ backend ------
Error: getaddrinfo ENOTFOUND http://db:3306/
    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:64:26)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ENOTFOUND',
  code: 'ENOTFOUND',
  syscall: 'getaddrinfo',
  hostname: 'http://db:3306/',
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-f6b27a3e61-5f6f9c4c64-59z7j_node-microservice(a557c21c-e2af-4ad1-914f-a632aed86596)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-f6b27a3e61:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-f6b27a3e61-5f6f9c4c64 to 1\e[39m\n\e[94mPod backend-v-f6b27a3e61-5f6f9c4c64-59z7j:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-f6b27a3e61-5f6f9c4c64-59z7j to minikube\e[39m\n\e[94mPod backend-v-f6b27a3e61-5f6f9c4c64-59z7j:\e[39m \e[37mPulled - Container image \"server:v-f6b27a3e61\" already present on machine\e[39m\n\e[94mPod backend-v-f6b27a3e61-5f6f9c4c64-59z7j:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-f6b27a3e61-5f6f9c4c64-59z7j:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-f6b27a3e61-5f6f9c4c64-59z7j:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-f6b27a3e61\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-f6b27a3e61-5f6f9c4c64-59z7j ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m\nError: getaddrinfo ENOTFOUND http://db:3306/\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:64:26)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ENOTFOUND',\n  code: 'ENOTFOUND',\n  syscall: 'getaddrinfo',\n  hostname: 'http://db:3306/',\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-f6b27a3e61
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-f6b27a3e61
      uid: 2a56f4b7-b602-4d76-a6b2-73da47f135eb
      resourceVersion: '60136'
      generation: 1
      creationTimestamp: '2020-05-27T18:47:21Z'
      labels:
        garden.io/version: v-f6b27a3e61
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 93a23d433eb4e64abc5d1acb8bb4bb759586028b88a26acff905346aca44c65c
        garden.io/version: v-f6b27a3e61
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"93a23d433eb4e64abc5d1acb8bb4bb759586028b88a26acff905346aca44c65c","garden.io/version":"v-f6b27a3e61"},"labels":{"garden.io/version":"v-f6b27a3e61","module":"server","service":"backend"},"name":"backend-v-f6b27a3e61","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-f6b27a3e61","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-f6b27a3e61","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-f6b27a3e61"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-f6b27a3e61\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-f6b27a3e61","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-f6b27a3e61
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-f6b27a3e61
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T18:54:22.552Z] Building client:v-bd7f73e9cc... → Done (took 52 sec)

[2020-05-27T18:54:22.604Z] Deploying version v-bd7f73e9cc...

[2020-05-27T18:54:24.721Z] Waiting for resources to be ready...

[2020-05-27T18:54:26.788Z] Resources ready

[2020-05-27T18:54:26.865Z] Deploying version v-bd7f73e9cc... → Done (took 4.3 sec)

[2020-05-27T18:54:26.916Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T18:54:26.965Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T18:54:27.015Z] ⏳  Processing...

[2020-05-27T18:54:27.064Z] Syncing module sources (17 files)...

[2020-05-27T18:54:27.656Z] Syncing module sources (17 files)... → Done (took 0.6 sec)

[2020-05-27T18:54:27.708Z] Building version v-bd7f73e9cc...

[2020-05-27T18:54:28.201Z] Building client:v-bd7f73e9cc...

[2020-05-27T18:54:28.568Z] Building client:v-bd7f73e9cc... → Done (took 0.9 sec)

[2020-05-27T18:54:28.619Z] Deploying version v-bd7f73e9cc...

[2020-05-27T18:54:30.250Z] Waiting for resources to be ready...

[2020-05-27T18:54:32.317Z] Resources ready

[2020-05-27T18:54:32.397Z] Deploying version v-bd7f73e9cc... → Done (took 3.8 sec)

[2020-05-27T18:54:32.448Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T18:54:32.497Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T18:54:32.547Z] ⏳  Processing...

[2020-05-27T18:54:32.597Z] Syncing module sources (17 files)...

[2020-05-27T18:54:33.006Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-27T18:54:33.060Z] Building version v-bd7f73e9cc...

[2020-05-27T18:54:33.200Z] Building client:v-bd7f73e9cc...

[2020-05-27T18:54:33.556Z] Building client:v-bd7f73e9cc... → Done (took 0.5 sec)

[2020-05-27T18:54:33.612Z] Deploying version v-bd7f73e9cc...

[2020-05-27T18:54:35.239Z] Waiting for resources to be ready...

[2020-05-27T18:54:37.310Z] Resources ready

[2020-05-27T18:54:37.384Z] Deploying version v-bd7f73e9cc... → Done (took 3.8 sec)

[2020-05-27T18:54:37.432Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T18:54:37.482Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T18:54:37.531Z] ⏳  Processing...

[2020-05-27T18:54:37.582Z] Syncing module sources (17 files)...

[2020-05-27T18:54:37.928Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-27T18:54:37.981Z] Building version v-bd7f73e9cc...

[2020-05-27T18:54:38.382Z] Building client:v-bd7f73e9cc...

[2020-05-27T18:54:38.714Z] Building client:v-bd7f73e9cc... → Done (took 0.7 sec)

[2020-05-27T18:54:38.768Z] Deploying version v-bd7f73e9cc...

[2020-05-27T18:54:40.442Z] Waiting for resources to be ready...

[2020-05-27T18:54:42.515Z] Resources ready

[2020-05-27T18:54:42.589Z] Deploying version v-bd7f73e9cc... → Done (took 3.8 sec)

[2020-05-27T18:54:42.637Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T18:54:42.686Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T18:54:42.738Z] ⏳  Processing...

[2020-05-27T18:54:42.788Z] Syncing module sources (17 files)...

[2020-05-27T18:54:43.121Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-27T18:54:43.175Z] Building version v-bd7f73e9cc...

[2020-05-27T18:54:43.476Z] Building client:v-bd7f73e9cc...

[2020-05-27T18:54:43.808Z] Building client:v-bd7f73e9cc... → Done (took 0.6 sec)

[2020-05-27T18:54:43.865Z] Deploying version v-bd7f73e9cc...

[2020-05-27T18:54:45.589Z] Waiting for resources to be ready...

[2020-05-27T18:54:47.660Z] Resources ready

[2020-05-27T18:54:47.735Z] Deploying version v-bd7f73e9cc... → Done (took 3.9 sec)

[2020-05-27T18:54:47.786Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T18:54:47.834Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T18:54:47.886Z] Waiting for code changes...

[2020-05-27T18:56:58.921Z] ⏳  Processing...

[2020-05-27T18:56:59.101Z] Waiting for code changes...

[2020-05-27T18:56:59.161Z] ⏳  Processing...

[2020-05-27T18:56:59.214Z] Syncing module sources (5 files)...

[2020-05-27T18:56:59.368Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-27T18:56:59.424Z] Building version v-b8d748ed04...

[2020-05-27T18:56:59.944Z] Building server:v-b8d748ed04...

[2020-05-27T18:57:00.557Z] Building server:v-b8d748ed04... → Done (took 1.1 sec)

[2020-05-27T18:57:00.612Z] Deploying version v-b8d748ed04...

[2020-05-27T18:57:02.429Z] Waiting for resources to be ready...

[2020-05-27T18:57:04.563Z] Deploying version v-b8d748ed04...

[2020-05-27T18:57:04.622Z] Error: Error deploying backend: CrashLoopBackOff - back-off 10s restarting failed container=backend pod=backend-v-b8d748ed04-7cdfddfccd-5rhdm_node-microservice(a34791c8-a85e-43d5-bd11-38c335199ac6)

━━━ Events ━━━
Deployment backend-v-b8d748ed04: ScalingReplicaSet - Scaled up replica set backend-v-b8d748ed04-7cdfddfccd to 1
Pod backend-v-b8d748ed04-7cdfddfccd-5rhdm: Scheduled - Successfully assigned node-microservice/backend-v-b8d748ed04-7cdfddfccd-5rhdm to minikube
Pod backend-v-b8d748ed04-7cdfddfccd-5rhdm: Pulled - Container image "server:v-b8d748ed04" already present on machine
Pod backend-v-b8d748ed04-7cdfddfccd-5rhdm: Created - Created container backend
Pod backend-v-b8d748ed04-7cdfddfccd-5rhdm: Started - Started container backend
Pod backend-v-b8d748ed04-7cdfddfccd-5rhdm: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-b8d748ed04

****** backend-v-b8d748ed04-7cdfddfccd-5rhdm ******
------ backend ------internal/modules/cjs/loader.js:960
  throw err;
  ^

Error: Cannot find module 'pg'
Require stack:
- /usr/src/server/app.js
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:957:15)
    at Function.Module._load (internal/modules/cjs/loader.js:840:27)
    at Module.require (internal/modules/cjs/loader.js:1019:19)
    at require (internal/modules/cjs/helpers.js:77:18)
    at Object.<anonymous> (/usr/src/server/app.js:3:18)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12) {
  code: 'MODULE_NOT_FOUND',
  requireStack: [ '/usr/src/server/app.js' ]
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=backend
    pod=backend-v-b8d748ed04-7cdfddfccd-5rhdm_node-microservice(a34791c8-a85e-43d5-bd11-38c335199ac6)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-b8d748ed04:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-b8d748ed04-7cdfddfccd to 1\e[39m\n\e[94mPod backend-v-b8d748ed04-7cdfddfccd-5rhdm:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-b8d748ed04-7cdfddfccd-5rhdm to minikube\e[39m\n\e[94mPod backend-v-b8d748ed04-7cdfddfccd-5rhdm:\e[39m \e[37mPulled - Container image \"server:v-b8d748ed04\" already present on machine\e[39m\n\e[94mPod backend-v-b8d748ed04-7cdfddfccd-5rhdm:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-b8d748ed04-7cdfddfccd-5rhdm:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-b8d748ed04-7cdfddfccd-5rhdm:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-b8d748ed04\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-b8d748ed04-7cdfddfccd-5rhdm ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39minternal/modules/cjs/loader.js:960\n  throw err;\n  ^\n\nError: Cannot find module 'pg'\nRequire stack:\n- /usr/src/server/app.js\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:957:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:840:27)\n    at Module.require (internal/modules/cjs/loader.js:1019:19)\n    at require (internal/modules/cjs/helpers.js:77:18)\n    at Object.<anonymous> (/usr/src/server/app.js:3:18)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12) {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/usr/src/server/app.js' ]\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-b8d748ed04
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-b8d748ed04
      uid: 4a982e9f-b10c-4682-be67-b5078dcdd5f0
      resourceVersion: '61155'
      generation: 1
      creationTimestamp: '2020-05-27T18:57:00Z'
      labels:
        garden.io/version: v-b8d748ed04
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d9ac35ed35885affca45455ad1e6326853fda6562d3701c41cb74b0598f435f2
        garden.io/version: v-b8d748ed04
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d9ac35ed35885affca45455ad1e6326853fda6562d3701c41cb74b0598f435f2","garden.io/version":"v-b8d748ed04"},"labels":{"garden.io/version":"v-b8d748ed04","module":"server","service":"backend"},"name":"backend-v-b8d748ed04","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-b8d748ed04","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-b8d748ed04","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-b8d748ed04"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-b8d748ed04\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-b8d748ed04","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-b8d748ed04
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-b8d748ed04
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T18:57:04.683Z] Waiting for code changes...

[2020-05-27T19:04:01.107Z] ⏳  Processing...

[2020-05-27T19:04:01.274Z] Waiting for code changes...

[2020-05-27T19:04:01.339Z] ⏳  Processing...

[2020-05-27T19:04:01.486Z] Waiting for code changes...

[2020-05-27T19:04:01.545Z] ⏳  Processing...

[2020-05-27T19:04:01.598Z] Syncing module sources (6 files)...

[2020-05-27T19:04:01.767Z] Syncing module sources (6 files)... → Done (took 0.1 sec)

[2020-05-27T19:04:01.819Z] Building version v-70ffda2287...

[2020-05-27T19:04:02.309Z] Building server:v-70ffda2287...

[2020-05-27T19:04:02.929Z] Building server:v-70ffda2287... → Done (took 1.1 sec)

[2020-05-27T19:04:02.982Z] Deploying version v-70ffda2287...

[2020-05-27T19:04:05.633Z] Waiting for resources to be ready...

[2020-05-27T19:04:07.755Z] Deploying version v-70ffda2287...

[2020-05-27T19:04:07.813Z] Error: Error deploying backend: CrashLoopBackOff - back-off 10s restarting failed container=backend pod=backend-v-70ffda2287-7b54cf6864-d24ws_node-microservice(493f41e4-961b-43f4-9027-27b023acfb04)

━━━ Events ━━━
Deployment backend-v-70ffda2287: ScalingReplicaSet - Scaled up replica set backend-v-70ffda2287-7b54cf6864 to 1
Pod backend-v-70ffda2287-7b54cf6864-d24ws: Scheduled - Successfully assigned node-microservice/backend-v-70ffda2287-7b54cf6864-d24ws to minikube
Pod backend-v-70ffda2287-7b54cf6864-d24ws: Pulled - Container image "server:v-70ffda2287" already present on machine
Pod backend-v-70ffda2287-7b54cf6864-d24ws: Created - Created container backend
Pod backend-v-70ffda2287-7b54cf6864-d24ws: Started - Started container backend
Pod backend-v-70ffda2287-7b54cf6864-d24ws: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-70ffda2287

****** backend-v-70ffda2287-7b54cf6864-d24ws ******
------ backend ------internal/modules/cjs/loader.js:960
  throw err;
  ^

Error: Cannot find module 'pg'
Require stack:
- /usr/src/server/app.js
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:957:15)
    at Function.Module._load (internal/modules/cjs/loader.js:840:27)
    at Module.require (internal/modules/cjs/loader.js:1019:19)
    at require (internal/modules/cjs/helpers.js:77:18)
    at Object.<anonymous> (/usr/src/server/app.js:3:18)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12) {
  code: 'MODULE_NOT_FOUND',
  requireStack: [ '/usr/src/server/app.js' ]
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=backend
    pod=backend-v-70ffda2287-7b54cf6864-d24ws_node-microservice(493f41e4-961b-43f4-9027-27b023acfb04)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-70ffda2287:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-70ffda2287-7b54cf6864 to 1\e[39m\n\e[94mPod backend-v-70ffda2287-7b54cf6864-d24ws:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-70ffda2287-7b54cf6864-d24ws to minikube\e[39m\n\e[94mPod backend-v-70ffda2287-7b54cf6864-d24ws:\e[39m \e[37mPulled - Container image \"server:v-70ffda2287\" already present on machine\e[39m\n\e[94mPod backend-v-70ffda2287-7b54cf6864-d24ws:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-70ffda2287-7b54cf6864-d24ws:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-70ffda2287-7b54cf6864-d24ws:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-70ffda2287\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-70ffda2287-7b54cf6864-d24ws ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39minternal/modules/cjs/loader.js:960\n  throw err;\n  ^\n\nError: Cannot find module 'pg'\nRequire stack:\n- /usr/src/server/app.js\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:957:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:840:27)\n    at Module.require (internal/modules/cjs/loader.js:1019:19)\n    at require (internal/modules/cjs/helpers.js:77:18)\n    at Object.<anonymous> (/usr/src/server/app.js:3:18)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12) {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/usr/src/server/app.js' ]\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-70ffda2287
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-70ffda2287
      uid: 28ff6891-ac67-42ee-b7a4-99a622bac76c
      resourceVersion: '62232'
      generation: 1
      creationTimestamp: '2020-05-27T19:04:04Z'
      labels:
        garden.io/version: v-70ffda2287
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 07105533cb90c28ca2b6cc32de8ef85e82a4b65d999060a970b7167392817f3a
        garden.io/version: v-70ffda2287
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"07105533cb90c28ca2b6cc32de8ef85e82a4b65d999060a970b7167392817f3a","garden.io/version":"v-70ffda2287"},"labels":{"garden.io/version":"v-70ffda2287","module":"server","service":"backend"},"name":"backend-v-70ffda2287","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-70ffda2287","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-70ffda2287","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-70ffda2287"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-70ffda2287\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-70ffda2287","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-70ffda2287
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-70ffda2287
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T19:04:07.874Z] Waiting for code changes...

[2020-05-27T19:06:05.516Z] ⏳  Processing...

[2020-05-27T19:06:05.683Z] Waiting for code changes...

[2020-05-27T19:06:05.742Z] ⏳  Processing...

[2020-05-27T19:06:05.797Z] Syncing module sources (6 files)...

[2020-05-27T19:06:05.944Z] Syncing module sources (6 files)... → Done (took 0.1 sec)

[2020-05-27T19:06:05.999Z] Building version v-a9b61babc2...

[2020-05-27T19:06:06.483Z] Building server:v-a9b61babc2...

[2020-05-27T19:06:07.101Z] Building server:v-a9b61babc2... → Done (took 1.1 sec)

[2020-05-27T19:06:07.156Z] Deploying version v-a9b61babc2...

[2020-05-27T19:06:08.972Z] Waiting for resources to be ready...

[2020-05-27T19:06:11.097Z] Deploying version v-a9b61babc2...

[2020-05-27T19:06:11.156Z] Error: Error deploying backend: CrashLoopBackOff - back-off 10s restarting failed container=backend pod=backend-v-a9b61babc2-6795b99688-qs4tj_node-microservice(96a41629-4594-4979-b332-a760cfb776fa)

━━━ Events ━━━
Deployment backend-v-a9b61babc2: ScalingReplicaSet - Scaled up replica set backend-v-a9b61babc2-6795b99688 to 1
Pod backend-v-a9b61babc2-6795b99688-qs4tj: Scheduled - Successfully assigned node-microservice/backend-v-a9b61babc2-6795b99688-qs4tj to minikube
Pod backend-v-a9b61babc2-6795b99688-qs4tj: Pulled - Container image "server:v-a9b61babc2" already present on machine
Pod backend-v-a9b61babc2-6795b99688-qs4tj: Created - Created container backend
Pod backend-v-a9b61babc2-6795b99688-qs4tj: Started - Started container backend
Pod backend-v-a9b61babc2-6795b99688-qs4tj: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-a9b61babc2

****** backend-v-a9b61babc2-6795b99688-qs4tj ******
------ backend ------internal/modules/cjs/loader.js:960
  throw err;
  ^

Error: Cannot find module 'pg'
Require stack:
- /usr/src/server/app.js
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:957:15)
    at Function.Module._load (internal/modules/cjs/loader.js:840:27)
    at Module.require (internal/modules/cjs/loader.js:1019:19)
    at require (internal/modules/cjs/helpers.js:77:18)
    at Object.<anonymous> (/usr/src/server/app.js:3:18)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12) {
  code: 'MODULE_NOT_FOUND',
  requireStack: [ '/usr/src/server/app.js' ]
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=backend
    pod=backend-v-a9b61babc2-6795b99688-qs4tj_node-microservice(96a41629-4594-4979-b332-a760cfb776fa)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-a9b61babc2:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-a9b61babc2-6795b99688 to 1\e[39m\n\e[94mPod backend-v-a9b61babc2-6795b99688-qs4tj:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-a9b61babc2-6795b99688-qs4tj to minikube\e[39m\n\e[94mPod backend-v-a9b61babc2-6795b99688-qs4tj:\e[39m \e[37mPulled - Container image \"server:v-a9b61babc2\" already present on machine\e[39m\n\e[94mPod backend-v-a9b61babc2-6795b99688-qs4tj:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-a9b61babc2-6795b99688-qs4tj:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-a9b61babc2-6795b99688-qs4tj:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-a9b61babc2\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-a9b61babc2-6795b99688-qs4tj ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39minternal/modules/cjs/loader.js:960\n  throw err;\n  ^\n\nError: Cannot find module 'pg'\nRequire stack:\n- /usr/src/server/app.js\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:957:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:840:27)\n    at Module.require (internal/modules/cjs/loader.js:1019:19)\n    at require (internal/modules/cjs/helpers.js:77:18)\n    at Object.<anonymous> (/usr/src/server/app.js:3:18)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12) {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/usr/src/server/app.js' ]\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-a9b61babc2
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-a9b61babc2
      uid: 7846b61c-e434-40cf-b9f8-c3b5ee461883
      resourceVersion: '62604'
      generation: 1
      creationTimestamp: '2020-05-27T19:06:07Z'
      labels:
        garden.io/version: v-a9b61babc2
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 07dfe710fbd20496e28618d31182b6b9bf4a47ceb596942b63fb1d19c5c773a2
        garden.io/version: v-a9b61babc2
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"07dfe710fbd20496e28618d31182b6b9bf4a47ceb596942b63fb1d19c5c773a2","garden.io/version":"v-a9b61babc2"},"labels":{"garden.io/version":"v-a9b61babc2","module":"server","service":"backend"},"name":"backend-v-a9b61babc2","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-a9b61babc2","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-a9b61babc2","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-a9b61babc2"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-a9b61babc2\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-a9b61babc2","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-a9b61babc2
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-a9b61babc2
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T19:06:11.215Z] Waiting for code changes...

[2020-05-27T19:06:13.410Z] ⏳  Processing...

[2020-05-27T19:06:13.583Z] Waiting for code changes...

[2020-05-27T19:06:13.676Z] ⏳  Processing...

[2020-05-27T19:06:13.737Z] Syncing module sources (6 files)...

[2020-05-27T19:06:13.883Z] Syncing module sources (6 files)... → Done (took 0.1 sec)

[2020-05-27T19:06:13.942Z] Building version v-4ac188cc83...

[2020-05-27T19:06:14.259Z] Building server:v-4ac188cc83...

[2020-05-27T19:06:14.847Z] Building server:v-4ac188cc83... → Done (took 0.9 sec)

[2020-05-27T19:06:14.908Z] Deploying version v-4ac188cc83...

[2020-05-27T19:06:16.908Z] Waiting for resources to be ready...

[2020-05-27T19:06:19.029Z] Deploying version v-4ac188cc83...

[2020-05-27T19:06:19.090Z] Error: Error deploying backend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment backend-v-4ac188cc83: ScalingReplicaSet - Scaled up replica set backend-v-4ac188cc83-75b7fbf77d to 1
Pod backend-v-4ac188cc83-75b7fbf77d-w68kb: Scheduled - Successfully assigned node-microservice/backend-v-4ac188cc83-75b7fbf77d-w68kb to minikube
Pod backend-v-4ac188cc83-75b7fbf77d-w68kb: Pulled - Container image "server:v-4ac188cc83" already present on machine
Pod backend-v-4ac188cc83-75b7fbf77d-w68kb: Created - Created container backend
Pod backend-v-4ac188cc83-75b7fbf77d-w68kb: Started - Started container backend
Pod backend-v-4ac188cc83-75b7fbf77d-w68kb: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-4ac188cc83

****** backend-v-4ac188cc83-75b7fbf77d-w68kb ******
------ backend ------internal/modules/cjs/loader.js:960
  throw err;
  ^

Error: Cannot find module 'pg'
Require stack:
- /usr/src/server/app.js
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:957:15)
    at Function.Module._load (internal/modules/cjs/loader.js:840:27)
    at Module.require (internal/modules/cjs/loader.js:1019:19)
    at require (internal/modules/cjs/helpers.js:77:18)
    at Object.<anonymous> (/usr/src/server/app.js:3:18)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12) {
  code: 'MODULE_NOT_FOUND',
  requireStack: [ '/usr/src/server/app.js' ]
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-4ac188cc83:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-4ac188cc83-75b7fbf77d to 1\e[39m\n\e[94mPod backend-v-4ac188cc83-75b7fbf77d-w68kb:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-4ac188cc83-75b7fbf77d-w68kb to minikube\e[39m\n\e[94mPod backend-v-4ac188cc83-75b7fbf77d-w68kb:\e[39m \e[37mPulled - Container image \"server:v-4ac188cc83\" already present on machine\e[39m\n\e[94mPod backend-v-4ac188cc83-75b7fbf77d-w68kb:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-4ac188cc83-75b7fbf77d-w68kb:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-4ac188cc83-75b7fbf77d-w68kb:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-4ac188cc83\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-4ac188cc83-75b7fbf77d-w68kb ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39minternal/modules/cjs/loader.js:960\n  throw err;\n  ^\n\nError: Cannot find module 'pg'\nRequire stack:\n- /usr/src/server/app.js\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:957:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:840:27)\n    at Module.require (internal/modules/cjs/loader.js:1019:19)\n    at require (internal/modules/cjs/helpers.js:77:18)\n    at Object.<anonymous> (/usr/src/server/app.js:3:18)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12) {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/usr/src/server/app.js' ]\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-4ac188cc83
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-4ac188cc83
      uid: 220fa5c4-9fb5-496a-ac06-e4a4cdc15df0
      resourceVersion: '62659'
      generation: 1
      creationTimestamp: '2020-05-27T19:06:15Z'
      labels:
        garden.io/version: v-4ac188cc83
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 061254a0989dc4822cbf1fae12916fc4ad59b08da1df39c87a16c888d463633a
        garden.io/version: v-4ac188cc83
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"061254a0989dc4822cbf1fae12916fc4ad59b08da1df39c87a16c888d463633a","garden.io/version":"v-4ac188cc83"},"labels":{"garden.io/version":"v-4ac188cc83","module":"server","service":"backend"},"name":"backend-v-4ac188cc83","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-4ac188cc83","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-4ac188cc83","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-4ac188cc83"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-4ac188cc83\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-4ac188cc83","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-4ac188cc83
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-4ac188cc83
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T19:06:19.150Z] Waiting for code changes...

[2020-05-27T19:12:35.262Z] ⏳  Processing...

[2020-05-27T19:12:35.491Z] Waiting for code changes...

[2020-05-27T19:12:35.555Z] ⏳  Processing...

[2020-05-27T19:12:35.614Z] Syncing module sources (6 files)...

[2020-05-27T19:12:35.769Z] Syncing module sources (6 files)... → Done (took 0.2 sec)

[2020-05-27T19:12:35.833Z] Building version v-19147d999f...

[2020-05-27T19:12:36.369Z] Building server:v-19147d999f...

[2020-05-27T19:12:36.974Z] Building server:v-19147d999f... → Done (took 1.1 sec)

[2020-05-27T19:12:37.032Z] Deploying version v-19147d999f...

[2020-05-27T19:12:38.867Z] Waiting for resources to be ready...

[2020-05-27T19:12:40.994Z] Deploying version v-19147d999f...

[2020-05-27T19:12:41.055Z] Error: Error deploying backend: CrashLoopBackOff - back-off 10s restarting failed container=backend pod=backend-v-19147d999f-5b8d78f9b8-rzm8x_node-microservice(5a757741-edf2-4dd8-a2db-54ed8f28f251)

━━━ Events ━━━
Deployment backend-v-19147d999f: ScalingReplicaSet - Scaled up replica set backend-v-19147d999f-5b8d78f9b8 to 1
Pod backend-v-19147d999f-5b8d78f9b8-rzm8x: Scheduled - Successfully assigned node-microservice/backend-v-19147d999f-5b8d78f9b8-rzm8x to minikube
Pod backend-v-19147d999f-5b8d78f9b8-rzm8x: Pulled - Container image "server:v-19147d999f" already present on machine
Pod backend-v-19147d999f-5b8d78f9b8-rzm8x: Created - Created container backend
Pod backend-v-19147d999f-5b8d78f9b8-rzm8x: Started - Started container backend
Pod backend-v-19147d999f-5b8d78f9b8-rzm8x: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-19147d999f

****** backend-v-19147d999f-5b8d78f9b8-rzm8x ******
------ backend ------internal/modules/cjs/loader.js:960
  throw err;
  ^

Error: Cannot find module 'pg'
Require stack:
- /usr/src/server/app.js
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:957:15)
    at Function.Module._load (internal/modules/cjs/loader.js:840:27)
    at Module.require (internal/modules/cjs/loader.js:1019:19)
    at require (internal/modules/cjs/helpers.js:77:18)
    at Object.<anonymous> (/usr/src/server/app.js:3:18)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12) {
  code: 'MODULE_NOT_FOUND',
  requireStack: [ '/usr/src/server/app.js' ]
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=backend
    pod=backend-v-19147d999f-5b8d78f9b8-rzm8x_node-microservice(5a757741-edf2-4dd8-a2db-54ed8f28f251)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-19147d999f:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-19147d999f-5b8d78f9b8 to 1\e[39m\n\e[94mPod backend-v-19147d999f-5b8d78f9b8-rzm8x:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-19147d999f-5b8d78f9b8-rzm8x to minikube\e[39m\n\e[94mPod backend-v-19147d999f-5b8d78f9b8-rzm8x:\e[39m \e[37mPulled - Container image \"server:v-19147d999f\" already present on machine\e[39m\n\e[94mPod backend-v-19147d999f-5b8d78f9b8-rzm8x:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-19147d999f-5b8d78f9b8-rzm8x:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-19147d999f-5b8d78f9b8-rzm8x:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-19147d999f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-19147d999f-5b8d78f9b8-rzm8x ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39minternal/modules/cjs/loader.js:960\n  throw err;\n  ^\n\nError: Cannot find module 'pg'\nRequire stack:\n- /usr/src/server/app.js\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:957:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:840:27)\n    at Module.require (internal/modules/cjs/loader.js:1019:19)\n    at require (internal/modules/cjs/helpers.js:77:18)\n    at Object.<anonymous> (/usr/src/server/app.js:3:18)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12) {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/usr/src/server/app.js' ]\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-19147d999f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-19147d999f
      uid: 9d8d03e4-d2f3-41db-8e63-6910e05464dd
      resourceVersion: '63638'
      generation: 1
      creationTimestamp: '2020-05-27T19:12:37Z'
      labels:
        garden.io/version: v-19147d999f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: c19978511ede1b7dbf43a4b6fee4af297c0018afb03704d7f0f3d7c575cbd7f3
        garden.io/version: v-19147d999f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"c19978511ede1b7dbf43a4b6fee4af297c0018afb03704d7f0f3d7c575cbd7f3","garden.io/version":"v-19147d999f"},"labels":{"garden.io/version":"v-19147d999f","module":"server","service":"backend"},"name":"backend-v-19147d999f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-19147d999f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-19147d999f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-19147d999f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-19147d999f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-19147d999f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-19147d999f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-19147d999f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T19:12:41.118Z] Waiting for code changes...

[2020-05-27T19:15:54.965Z] ⏳  Processing...

[2020-05-27T19:15:55.133Z] Waiting for code changes...

[2020-05-27T19:15:55.197Z] ⏳  Processing...

[2020-05-27T19:15:55.256Z] Syncing module sources (6 files)...

[2020-05-27T19:15:55.414Z] Syncing module sources (6 files)... → Done (took 0.2 sec)

[2020-05-27T19:15:55.475Z] Building version v-c97fd71b85...

[2020-05-27T19:15:55.980Z] Building server:v-c97fd71b85...

[2020-05-27T19:15:56.568Z] Building server:v-c97fd71b85... → Done (took 1.1 sec)

[2020-05-27T19:15:56.627Z] Deploying version v-c97fd71b85...

[2020-05-27T19:15:59.384Z] Waiting for resources to be ready...

[2020-05-27T19:16:01.511Z] Deploying version v-c97fd71b85...

[2020-05-27T19:16:01.579Z] Error: Error deploying backend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment backend-v-c97fd71b85: ScalingReplicaSet - Scaled up replica set backend-v-c97fd71b85-5b5c58f77d to 1
Pod backend-v-c97fd71b85-5b5c58f77d-96jgj: Scheduled - Successfully assigned node-microservice/backend-v-c97fd71b85-5b5c58f77d-96jgj to minikube
Pod backend-v-c97fd71b85-5b5c58f77d-96jgj: Pulled - Container image "server:v-c97fd71b85" already present on machine
Pod backend-v-c97fd71b85-5b5c58f77d-96jgj: Created - Created container backend
Pod backend-v-c97fd71b85-5b5c58f77d-96jgj: Started - Started container backend
Pod backend-v-c97fd71b85-5b5c58f77d-96jgj: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-c97fd71b85

****** backend-v-c97fd71b85-5b5c58f77d-96jgj ******
------ backend ------internal/modules/cjs/loader.js:960
  throw err;
  ^

Error: Cannot find module 'pg'
Require stack:
- /usr/src/server/app.js
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:957:15)
    at Function.Module._load (internal/modules/cjs/loader.js:840:27)
    at Module.require (internal/modules/cjs/loader.js:1019:19)
    at require (internal/modules/cjs/helpers.js:77:18)
    at Object.<anonymous> (/usr/src/server/app.js:3:18)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12) {
  code: 'MODULE_NOT_FOUND',
  requireStack: [ '/usr/src/server/app.js' ]
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-c97fd71b85:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-c97fd71b85-5b5c58f77d to 1\e[39m\n\e[94mPod backend-v-c97fd71b85-5b5c58f77d-96jgj:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-c97fd71b85-5b5c58f77d-96jgj to minikube\e[39m\n\e[94mPod backend-v-c97fd71b85-5b5c58f77d-96jgj:\e[39m \e[37mPulled - Container image \"server:v-c97fd71b85\" already present on machine\e[39m\n\e[94mPod backend-v-c97fd71b85-5b5c58f77d-96jgj:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-c97fd71b85-5b5c58f77d-96jgj:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-c97fd71b85-5b5c58f77d-96jgj:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-c97fd71b85\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-c97fd71b85-5b5c58f77d-96jgj ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39minternal/modules/cjs/loader.js:960\n  throw err;\n  ^\n\nError: Cannot find module 'pg'\nRequire stack:\n- /usr/src/server/app.js\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:957:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:840:27)\n    at Module.require (internal/modules/cjs/loader.js:1019:19)\n    at require (internal/modules/cjs/helpers.js:77:18)\n    at Object.<anonymous> (/usr/src/server/app.js:3:18)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12) {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/usr/src/server/app.js' ]\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-c97fd71b85
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-c97fd71b85
      uid: 6598d98b-4abb-4d39-849f-302f5e8ff1bb
      resourceVersion: '64176'
      generation: 1
      creationTimestamp: '2020-05-27T19:15:57Z'
      labels:
        garden.io/version: v-c97fd71b85
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: c4d53fa444fb7b1a1313d2368060acb8187f00176f3b56d4c5b96cdc5089c192
        garden.io/version: v-c97fd71b85
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"c4d53fa444fb7b1a1313d2368060acb8187f00176f3b56d4c5b96cdc5089c192","garden.io/version":"v-c97fd71b85"},"labels":{"garden.io/version":"v-c97fd71b85","module":"server","service":"backend"},"name":"backend-v-c97fd71b85","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-c97fd71b85","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-c97fd71b85","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-c97fd71b85"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-c97fd71b85\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-c97fd71b85","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-c97fd71b85
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-c97fd71b85
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T19:16:01.645Z] ⏳  Processing...

[2020-05-27T19:16:01.705Z] Syncing module sources (6 files)...

[2020-05-27T19:16:01.897Z] Syncing module sources (6 files)... → Done (took 0.2 sec)

[2020-05-27T19:16:01.961Z] Building version v-8ae427e812...

[2020-05-27T19:16:02.275Z] Building server:v-8ae427e812...

[2020-05-27T19:16:02.876Z] Building server:v-8ae427e812... → Done (took 0.9 sec)

[2020-05-27T19:16:02.940Z] Deploying version v-8ae427e812...

[2020-05-27T19:16:04.990Z] Waiting for resources to be ready...

[2020-05-27T19:16:07.123Z] Deploying version v-8ae427e812...

[2020-05-27T19:16:07.188Z] Error: Error deploying backend: CrashLoopBackOff - back-off 10s restarting failed container=backend pod=backend-v-8ae427e812-58466c49f6-mjdrf_node-microservice(c72a170d-3fcc-45dd-910a-b43d3359bd3b)

━━━ Events ━━━
Deployment backend-v-8ae427e812: ScalingReplicaSet - Scaled up replica set backend-v-8ae427e812-58466c49f6 to 1
Pod backend-v-8ae427e812-58466c49f6-mjdrf: Scheduled - Successfully assigned node-microservice/backend-v-8ae427e812-58466c49f6-mjdrf to minikube
Pod backend-v-8ae427e812-58466c49f6-mjdrf: Pulled - Container image "server:v-8ae427e812" already present on machine
Pod backend-v-8ae427e812-58466c49f6-mjdrf: Created - Created container backend
Pod backend-v-8ae427e812-58466c49f6-mjdrf: Started - Started container backend
Pod backend-v-8ae427e812-58466c49f6-mjdrf: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-8ae427e812

****** backend-v-8ae427e812-58466c49f6-mjdrf ******
------ backend ------internal/modules/cjs/loader.js:960
  throw err;
  ^

Error: Cannot find module 'pg'
Require stack:
- /usr/src/server/app.js
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:957:15)
    at Function.Module._load (internal/modules/cjs/loader.js:840:27)
    at Module.require (internal/modules/cjs/loader.js:1019:19)
    at require (internal/modules/cjs/helpers.js:77:18)
    at Object.<anonymous> (/usr/src/server/app.js:3:18)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12) {
  code: 'MODULE_NOT_FOUND',
  requireStack: [ '/usr/src/server/app.js' ]
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=backend
    pod=backend-v-8ae427e812-58466c49f6-mjdrf_node-microservice(c72a170d-3fcc-45dd-910a-b43d3359bd3b)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-8ae427e812:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-8ae427e812-58466c49f6 to 1\e[39m\n\e[94mPod backend-v-8ae427e812-58466c49f6-mjdrf:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-8ae427e812-58466c49f6-mjdrf to minikube\e[39m\n\e[94mPod backend-v-8ae427e812-58466c49f6-mjdrf:\e[39m \e[37mPulled - Container image \"server:v-8ae427e812\" already present on machine\e[39m\n\e[94mPod backend-v-8ae427e812-58466c49f6-mjdrf:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-8ae427e812-58466c49f6-mjdrf:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-8ae427e812-58466c49f6-mjdrf:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-8ae427e812\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-8ae427e812-58466c49f6-mjdrf ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39minternal/modules/cjs/loader.js:960\n  throw err;\n  ^\n\nError: Cannot find module 'pg'\nRequire stack:\n- /usr/src/server/app.js\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:957:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:840:27)\n    at Module.require (internal/modules/cjs/loader.js:1019:19)\n    at require (internal/modules/cjs/helpers.js:77:18)\n    at Object.<anonymous> (/usr/src/server/app.js:3:18)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12) {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/usr/src/server/app.js' ]\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-8ae427e812
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-8ae427e812
      uid: fced38eb-3e92-4874-a1aa-c643c1fa2ebf
      resourceVersion: '64227'
      generation: 1
      creationTimestamp: '2020-05-27T19:16:03Z'
      labels:
        garden.io/version: v-8ae427e812
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: fcf1df9161cbc4d468fbbb60466c78e0e9b7685e707ec53251763b60c65885a2
        garden.io/version: v-8ae427e812
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"fcf1df9161cbc4d468fbbb60466c78e0e9b7685e707ec53251763b60c65885a2","garden.io/version":"v-8ae427e812"},"labels":{"garden.io/version":"v-8ae427e812","module":"server","service":"backend"},"name":"backend-v-8ae427e812","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-8ae427e812","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-8ae427e812","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-8ae427e812"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-8ae427e812\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-8ae427e812","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-8ae427e812
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-8ae427e812
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T19:16:07.252Z] ⏳  Processing...

[2020-05-27T19:16:07.314Z] Syncing module sources (6 files)...

[2020-05-27T19:16:07.477Z] Syncing module sources (6 files)... → Done (took 0.2 sec)

[2020-05-27T19:16:07.542Z] Building version v-5b691a2654...

[2020-05-27T19:16:07.858Z] Building server:v-5b691a2654...

[2020-05-27T19:16:08.464Z] Building server:v-5b691a2654... → Done (took 0.9 sec)

[2020-05-27T19:16:08.528Z] Deploying version v-5b691a2654...

[2020-05-27T19:16:10.356Z] Waiting for resources to be ready...

[2020-05-27T19:16:12.484Z] Deploying version v-5b691a2654...

[2020-05-27T19:16:12.552Z] Error: Error deploying backend: CrashLoopBackOff - back-off 10s restarting failed container=backend pod=backend-v-5b691a2654-5c9c49f576-dtntf_node-microservice(394047c1-3c4a-488d-a0b1-dfaf16d94078)

━━━ Events ━━━
Deployment backend-v-5b691a2654: ScalingReplicaSet - Scaled up replica set backend-v-5b691a2654-5c9c49f576 to 1
Pod backend-v-5b691a2654-5c9c49f576-dtntf: Scheduled - Successfully assigned node-microservice/backend-v-5b691a2654-5c9c49f576-dtntf to minikube
Pod backend-v-5b691a2654-5c9c49f576-dtntf: Pulled - Container image "server:v-5b691a2654" already present on machine
Pod backend-v-5b691a2654-5c9c49f576-dtntf: Created - Created container backend
Pod backend-v-5b691a2654-5c9c49f576-dtntf: Started - Started container backend
Pod backend-v-5b691a2654-5c9c49f576-dtntf: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-5b691a2654

****** backend-v-5b691a2654-5c9c49f576-dtntf ******
------ backend ------internal/modules/cjs/loader.js:960
  throw err;
  ^

Error: Cannot find module 'pg'
Require stack:
- /usr/src/server/app.js
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:957:15)
    at Function.Module._load (internal/modules/cjs/loader.js:840:27)
    at Module.require (internal/modules/cjs/loader.js:1019:19)
    at require (internal/modules/cjs/helpers.js:77:18)
    at Object.<anonymous> (/usr/src/server/app.js:3:18)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12) {
  code: 'MODULE_NOT_FOUND',
  requireStack: [ '/usr/src/server/app.js' ]
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=backend
    pod=backend-v-5b691a2654-5c9c49f576-dtntf_node-microservice(394047c1-3c4a-488d-a0b1-dfaf16d94078)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-5b691a2654:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-5b691a2654-5c9c49f576 to 1\e[39m\n\e[94mPod backend-v-5b691a2654-5c9c49f576-dtntf:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-5b691a2654-5c9c49f576-dtntf to minikube\e[39m\n\e[94mPod backend-v-5b691a2654-5c9c49f576-dtntf:\e[39m \e[37mPulled - Container image \"server:v-5b691a2654\" already present on machine\e[39m\n\e[94mPod backend-v-5b691a2654-5c9c49f576-dtntf:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-5b691a2654-5c9c49f576-dtntf:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-5b691a2654-5c9c49f576-dtntf:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-5b691a2654\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-5b691a2654-5c9c49f576-dtntf ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39minternal/modules/cjs/loader.js:960\n  throw err;\n  ^\n\nError: Cannot find module 'pg'\nRequire stack:\n- /usr/src/server/app.js\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:957:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:840:27)\n    at Module.require (internal/modules/cjs/loader.js:1019:19)\n    at require (internal/modules/cjs/helpers.js:77:18)\n    at Object.<anonymous> (/usr/src/server/app.js:3:18)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12) {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/usr/src/server/app.js' ]\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-5b691a2654
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-5b691a2654
      uid: 709b6568-6ff7-4dd7-8dc0-2c1c384c0f40
      resourceVersion: '64276'
      generation: 1
      creationTimestamp: '2020-05-27T19:16:08Z'
      labels:
        garden.io/version: v-5b691a2654
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 8502641e4d3e0a973901d94aed1d49bf4ccd2fed98174e57ddcffcd0c05afb05
        garden.io/version: v-5b691a2654
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"8502641e4d3e0a973901d94aed1d49bf4ccd2fed98174e57ddcffcd0c05afb05","garden.io/version":"v-5b691a2654"},"labels":{"garden.io/version":"v-5b691a2654","module":"server","service":"backend"},"name":"backend-v-5b691a2654","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-5b691a2654","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-5b691a2654","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-5b691a2654"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-5b691a2654\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-5b691a2654","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-5b691a2654
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-5b691a2654
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T19:16:12.618Z] Waiting for code changes...

[2020-05-27T19:16:38.666Z] ⏳  Processing...

[2020-05-27T19:16:38.886Z] Waiting for code changes...

[2020-05-27T19:16:38.956Z] ⏳  Processing...

[2020-05-27T19:16:39.026Z] Syncing module sources (17 files)...

[2020-05-27T19:16:39.622Z] Syncing module sources (17 files)... → Done (took 0.6 sec)

[2020-05-27T19:16:39.690Z] Building version v-6b5541b26a...

[2020-05-27T19:16:40.202Z] Building client:v-6b5541b26a...

[2020-05-27T19:16:52.478Z] Syncing module sources (6 files)...

[2020-05-27T19:16:52.694Z] Syncing module sources (6 files)... → Done (took 0.2 sec)

[2020-05-27T19:16:52.783Z] Building version v-d909be5c51...

[2020-05-27T19:16:53.499Z] Building server:v-d909be5c51...

[2020-05-27T19:17:01.635Z] Building server:v-d909be5c51... → Done (took 8.9 sec)

[2020-05-27T19:17:01.716Z] Deploying version v-d909be5c51...

[2020-05-27T19:17:03.783Z] Waiting for resources to be ready...

[2020-05-27T19:17:05.934Z] Deploying version v-d909be5c51...

[2020-05-27T19:17:06.017Z] Error: Error deploying backend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment backend-v-d909be5c51: ScalingReplicaSet - Scaled up replica set backend-v-d909be5c51-6b77b9879b to 1
Pod backend-v-d909be5c51-6b77b9879b-k8gvp: Scheduled - Successfully assigned node-microservice/backend-v-d909be5c51-6b77b9879b-k8gvp to minikube
Pod backend-v-d909be5c51-6b77b9879b-k8gvp: Pulled - Container image "server:v-d909be5c51" already present on machine
Pod backend-v-d909be5c51-6b77b9879b-k8gvp: Created - Created container backend
Pod backend-v-d909be5c51-6b77b9879b-k8gvp: Started - Started container backend
Pod backend-v-d909be5c51-6b77b9879b-k8gvp: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-d909be5c51

****** backend-v-d909be5c51-6b77b9879b-k8gvp ******
------ backend ------internal/modules/cjs/loader.js:960
  throw err;
  ^

Error: Cannot find module 'models'
Require stack:
- /usr/src/server/app.js
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:957:15)
    at Function.Module._load (internal/modules/cjs/loader.js:840:27)
    at Module.require (internal/modules/cjs/loader.js:1019:19)
    at require (internal/modules/cjs/helpers.js:77:18)
    at Object.<anonymous> (/usr/src/server/app.js:4:16)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12) {
  code: 'MODULE_NOT_FOUND',
  requireStack: [ '/usr/src/server/app.js' ]
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-d909be5c51:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-d909be5c51-6b77b9879b to 1\e[39m\n\e[94mPod backend-v-d909be5c51-6b77b9879b-k8gvp:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-d909be5c51-6b77b9879b-k8gvp to minikube\e[39m\n\e[94mPod backend-v-d909be5c51-6b77b9879b-k8gvp:\e[39m \e[37mPulled - Container image \"server:v-d909be5c51\" already present on machine\e[39m\n\e[94mPod backend-v-d909be5c51-6b77b9879b-k8gvp:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-d909be5c51-6b77b9879b-k8gvp:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-d909be5c51-6b77b9879b-k8gvp:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-d909be5c51\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-d909be5c51-6b77b9879b-k8gvp ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39minternal/modules/cjs/loader.js:960\n  throw err;\n  ^\n\nError: Cannot find module 'models'\nRequire stack:\n- /usr/src/server/app.js\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:957:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:840:27)\n    at Module.require (internal/modules/cjs/loader.js:1019:19)\n    at require (internal/modules/cjs/helpers.js:77:18)\n    at Object.<anonymous> (/usr/src/server/app.js:4:16)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12) {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/usr/src/server/app.js' ]\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-d909be5c51
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-d909be5c51
      uid: 364087e6-4e52-4ba4-923e-e230e5d28d56
      resourceVersion: '64473'
      generation: 1
      creationTimestamp: '2020-05-27T19:17:02Z'
      labels:
        garden.io/version: v-d909be5c51
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 990a51b8e2ed7f86de9ad21a500cb3be3fb1894a8eb3e6684b60c0a0ae02b7b1
        garden.io/version: v-d909be5c51
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"990a51b8e2ed7f86de9ad21a500cb3be3fb1894a8eb3e6684b60c0a0ae02b7b1","garden.io/version":"v-d909be5c51"},"labels":{"garden.io/version":"v-d909be5c51","module":"server","service":"backend"},"name":"backend-v-d909be5c51","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-d909be5c51","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-d909be5c51","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-d909be5c51"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-d909be5c51\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-d909be5c51","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-d909be5c51
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-d909be5c51
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T19:17:06.097Z] Syncing module sources (6 files)...

[2020-05-27T19:17:06.316Z] Syncing module sources (6 files)... → Done (took 0.2 sec)

[2020-05-27T19:17:06.397Z] Building version v-58c89c149a...

[2020-05-27T19:17:07.042Z] Building server:v-58c89c149a...

[2020-05-27T19:17:16.870Z] Building server:v-58c89c149a... → Done (took 10.5 sec)

[2020-05-27T19:17:16.947Z] Deploying version v-58c89c149a...

[2020-05-27T19:17:18.837Z] Waiting for resources to be ready...

[2020-05-27T19:17:20.974Z] Deploying version v-58c89c149a...

[2020-05-27T19:17:21.057Z] Error: Error deploying backend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment backend-v-58c89c149a: ScalingReplicaSet - Scaled up replica set backend-v-58c89c149a-59495bbb7b to 1
Pod backend-v-58c89c149a-59495bbb7b-c4fj7: Scheduled - Successfully assigned node-microservice/backend-v-58c89c149a-59495bbb7b-c4fj7 to minikube
Pod backend-v-58c89c149a-59495bbb7b-c4fj7: Pulled - Container image "server:v-58c89c149a" already present on machine
Pod backend-v-58c89c149a-59495bbb7b-c4fj7: Created - Created container backend
Pod backend-v-58c89c149a-59495bbb7b-c4fj7: Started - Started container backend
Pod backend-v-58c89c149a-59495bbb7b-c4fj7: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-58c89c149a

****** backend-v-58c89c149a-59495bbb7b-c4fj7 ******
------ backend ------internal/modules/cjs/loader.js:960
  throw err;
  ^

Error: Cannot find module 'models'
Require stack:
- /usr/src/server/app.js
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:957:15)
    at Function.Module._load (internal/modules/cjs/loader.js:840:27)
    at Module.require (internal/modules/cjs/loader.js:1019:19)
    at require (internal/modules/cjs/helpers.js:77:18)
    at Object.<anonymous> (/usr/src/server/app.js:4:16)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12) {
  code: 'MODULE_NOT_FOUND',
  requireStack: [ '/usr/src/server/app.js' ]
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-58c89c149a:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-58c89c149a-59495bbb7b to 1\e[39m\n\e[94mPod backend-v-58c89c149a-59495bbb7b-c4fj7:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-58c89c149a-59495bbb7b-c4fj7 to minikube\e[39m\n\e[94mPod backend-v-58c89c149a-59495bbb7b-c4fj7:\e[39m \e[37mPulled - Container image \"server:v-58c89c149a\" already present on machine\e[39m\n\e[94mPod backend-v-58c89c149a-59495bbb7b-c4fj7:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-58c89c149a-59495bbb7b-c4fj7:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-58c89c149a-59495bbb7b-c4fj7:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-58c89c149a\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-58c89c149a-59495bbb7b-c4fj7 ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39minternal/modules/cjs/loader.js:960\n  throw err;\n  ^\n\nError: Cannot find module 'models'\nRequire stack:\n- /usr/src/server/app.js\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:957:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:840:27)\n    at Module.require (internal/modules/cjs/loader.js:1019:19)\n    at require (internal/modules/cjs/helpers.js:77:18)\n    at Object.<anonymous> (/usr/src/server/app.js:4:16)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12) {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/usr/src/server/app.js' ]\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-58c89c149a
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-58c89c149a
      uid: 114425eb-d6d6-43e6-9aff-3e84b205c94f
      resourceVersion: '64576'
      generation: 1
      creationTimestamp: '2020-05-27T19:17:17Z'
      labels:
        garden.io/version: v-58c89c149a
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 608924038f7a7e9352b010e9fbd4a694a0be9242ebd0cda46ff07cbeedcc0649
        garden.io/version: v-58c89c149a
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"608924038f7a7e9352b010e9fbd4a694a0be9242ebd0cda46ff07cbeedcc0649","garden.io/version":"v-58c89c149a"},"labels":{"garden.io/version":"v-58c89c149a","module":"server","service":"backend"},"name":"backend-v-58c89c149a","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-58c89c149a","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-58c89c149a","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-58c89c149a"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-58c89c149a\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-58c89c149a","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-58c89c149a
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-58c89c149a
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T19:17:21.141Z] Syncing module sources (6 files)...

[2020-05-27T19:17:21.258Z] Syncing module sources (6 files)... → Done (took 0.1 sec)

[2020-05-27T19:17:21.332Z] Building version v-58c89c149a...

[2020-05-27T19:17:21.953Z] Building server:v-58c89c149a...

[2020-05-27T19:17:22.378Z] Building server:v-58c89c149a... → Done (took 1 sec)

[2020-05-27T19:17:22.457Z] Deploying version v-58c89c149a...

[2020-05-27T19:17:24.292Z] Waiting for resources to be ready...

[2020-05-27T19:17:26.434Z] Deploying version v-58c89c149a...

[2020-05-27T19:17:26.520Z] Error: Error deploying backend: CrashLoopBackOff - back-off 10s restarting failed container=backend pod=backend-v-58c89c149a-59495bbb7b-c4fj7_node-microservice(430a051e-ba14-41c6-82d4-b6ea27761bcb)

━━━ Events ━━━
Deployment backend-v-58c89c149a: ScalingReplicaSet - Scaled up replica set backend-v-58c89c149a-59495bbb7b to 1
Pod backend-v-58c89c149a-59495bbb7b-c4fj7: Scheduled - Successfully assigned node-microservice/backend-v-58c89c149a-59495bbb7b-c4fj7 to minikube
Pod backend-v-58c89c149a-59495bbb7b-c4fj7: Pulled - Container image "server:v-58c89c149a" already present on machine
Pod backend-v-58c89c149a-59495bbb7b-c4fj7: Created - Created container backend
Pod backend-v-58c89c149a-59495bbb7b-c4fj7: Started - Started container backend
Pod backend-v-58c89c149a-59495bbb7b-c4fj7: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-58c89c149a

****** backend-v-58c89c149a-59495bbb7b-c4fj7 ******
------ backend ------internal/modules/cjs/loader.js:960
  throw err;
  ^

Error: Cannot find module 'models'
Require stack:
- /usr/src/server/app.js
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:957:15)
    at Function.Module._load (internal/modules/cjs/loader.js:840:27)
    at Module.require (internal/modules/cjs/loader.js:1019:19)
    at require (internal/modules/cjs/helpers.js:77:18)
    at Object.<anonymous> (/usr/src/server/app.js:4:16)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12) {
  code: 'MODULE_NOT_FOUND',
  requireStack: [ '/usr/src/server/app.js' ]
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=backend
    pod=backend-v-58c89c149a-59495bbb7b-c4fj7_node-microservice(430a051e-ba14-41c6-82d4-b6ea27761bcb)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-58c89c149a:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-58c89c149a-59495bbb7b to 1\e[39m\n\e[94mPod backend-v-58c89c149a-59495bbb7b-c4fj7:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-58c89c149a-59495bbb7b-c4fj7 to minikube\e[39m\n\e[94mPod backend-v-58c89c149a-59495bbb7b-c4fj7:\e[39m \e[37mPulled - Container image \"server:v-58c89c149a\" already present on machine\e[39m\n\e[94mPod backend-v-58c89c149a-59495bbb7b-c4fj7:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-58c89c149a-59495bbb7b-c4fj7:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-58c89c149a-59495bbb7b-c4fj7:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-58c89c149a\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-58c89c149a-59495bbb7b-c4fj7 ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39minternal/modules/cjs/loader.js:960\n  throw err;\n  ^\n\nError: Cannot find module 'models'\nRequire stack:\n- /usr/src/server/app.js\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:957:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:840:27)\n    at Module.require (internal/modules/cjs/loader.js:1019:19)\n    at require (internal/modules/cjs/helpers.js:77:18)\n    at Object.<anonymous> (/usr/src/server/app.js:4:16)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12) {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/usr/src/server/app.js' ]\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-58c89c149a
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-58c89c149a
      uid: 114425eb-d6d6-43e6-9aff-3e84b205c94f
      resourceVersion: '64576'
      generation: 1
      creationTimestamp: '2020-05-27T19:17:17Z'
      labels:
        garden.io/version: v-58c89c149a
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 608924038f7a7e9352b010e9fbd4a694a0be9242ebd0cda46ff07cbeedcc0649
        garden.io/version: v-58c89c149a
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"608924038f7a7e9352b010e9fbd4a694a0be9242ebd0cda46ff07cbeedcc0649","garden.io/version":"v-58c89c149a"},"labels":{"garden.io/version":"v-58c89c149a","module":"server","service":"backend"},"name":"backend-v-58c89c149a","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-58c89c149a","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-58c89c149a","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-58c89c149a"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-58c89c149a\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-58c89c149a","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-58c89c149a
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-58c89c149a
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T19:17:26.601Z] Syncing module sources (6 files)...

[2020-05-27T19:17:26.733Z] Syncing module sources (6 files)... → Done (took 0.1 sec)

[2020-05-27T19:17:26.809Z] Building version v-58c89c149a...

[2020-05-27T19:17:27.135Z] Building server:v-58c89c149a...

[2020-05-27T19:17:27.528Z] Building server:v-58c89c149a... → Done (took 0.7 sec)

[2020-05-27T19:17:27.643Z] Deploying version v-58c89c149a...

[2020-05-27T19:17:29.503Z] Waiting for resources to be ready...

[2020-05-27T19:17:31.644Z] Deploying version v-58c89c149a...

[2020-05-27T19:17:31.719Z] Error: Error deploying backend: CrashLoopBackOff - back-off 10s restarting failed container=backend pod=backend-v-58c89c149a-59495bbb7b-c4fj7_node-microservice(430a051e-ba14-41c6-82d4-b6ea27761bcb)

━━━ Events ━━━
Deployment backend-v-58c89c149a: ScalingReplicaSet - Scaled up replica set backend-v-58c89c149a-59495bbb7b to 1
Pod backend-v-58c89c149a-59495bbb7b-c4fj7: Scheduled - Successfully assigned node-microservice/backend-v-58c89c149a-59495bbb7b-c4fj7 to minikube
Pod backend-v-58c89c149a-59495bbb7b-c4fj7: Pulled - Container image "server:v-58c89c149a" already present on machine
Pod backend-v-58c89c149a-59495bbb7b-c4fj7: Created - Created container backend
Pod backend-v-58c89c149a-59495bbb7b-c4fj7: Started - Started container backend
Pod backend-v-58c89c149a-59495bbb7b-c4fj7: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-58c89c149a

****** backend-v-58c89c149a-59495bbb7b-c4fj7 ******
------ backend ------internal/modules/cjs/loader.js:960
  throw err;
  ^

Error: Cannot find module 'models'
Require stack:
- /usr/src/server/app.js
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:957:15)
    at Function.Module._load (internal/modules/cjs/loader.js:840:27)
    at Module.require (internal/modules/cjs/loader.js:1019:19)
    at require (internal/modules/cjs/helpers.js:77:18)
    at Object.<anonymous> (/usr/src/server/app.js:4:16)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12) {
  code: 'MODULE_NOT_FOUND',
  requireStack: [ '/usr/src/server/app.js' ]
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=backend
    pod=backend-v-58c89c149a-59495bbb7b-c4fj7_node-microservice(430a051e-ba14-41c6-82d4-b6ea27761bcb)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-58c89c149a:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-58c89c149a-59495bbb7b to 1\e[39m\n\e[94mPod backend-v-58c89c149a-59495bbb7b-c4fj7:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-58c89c149a-59495bbb7b-c4fj7 to minikube\e[39m\n\e[94mPod backend-v-58c89c149a-59495bbb7b-c4fj7:\e[39m \e[37mPulled - Container image \"server:v-58c89c149a\" already present on machine\e[39m\n\e[94mPod backend-v-58c89c149a-59495bbb7b-c4fj7:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-58c89c149a-59495bbb7b-c4fj7:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-58c89c149a-59495bbb7b-c4fj7:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-58c89c149a\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-58c89c149a-59495bbb7b-c4fj7 ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39minternal/modules/cjs/loader.js:960\n  throw err;\n  ^\n\nError: Cannot find module 'models'\nRequire stack:\n- /usr/src/server/app.js\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:957:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:840:27)\n    at Module.require (internal/modules/cjs/loader.js:1019:19)\n    at require (internal/modules/cjs/helpers.js:77:18)\n    at Object.<anonymous> (/usr/src/server/app.js:4:16)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12) {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/usr/src/server/app.js' ]\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-58c89c149a
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-58c89c149a
      uid: 114425eb-d6d6-43e6-9aff-3e84b205c94f
      resourceVersion: '64576'
      generation: 1
      creationTimestamp: '2020-05-27T19:17:17Z'
      labels:
        garden.io/version: v-58c89c149a
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 608924038f7a7e9352b010e9fbd4a694a0be9242ebd0cda46ff07cbeedcc0649
        garden.io/version: v-58c89c149a
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"608924038f7a7e9352b010e9fbd4a694a0be9242ebd0cda46ff07cbeedcc0649","garden.io/version":"v-58c89c149a"},"labels":{"garden.io/version":"v-58c89c149a","module":"server","service":"backend"},"name":"backend-v-58c89c149a","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-58c89c149a","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-58c89c149a","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-58c89c149a"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-58c89c149a\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-58c89c149a","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-58c89c149a
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-58c89c149a
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T19:17:40.617Z] Building client:v-6b5541b26a... → Done (took 60.9 sec)

[2020-05-27T19:17:40.693Z] Deploying version v-6b5541b26a...

[2020-05-27T19:17:42.717Z] Waiting for resources to be ready...

[2020-05-27T19:17:44.815Z] Resources ready

[2020-05-27T19:17:44.917Z] Deploying version v-6b5541b26a... → Done (took 4.2 sec)

[2020-05-27T19:17:44.996Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T19:17:45.071Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T19:17:45.149Z] ⏳  Processing...

[2020-05-27T19:17:45.224Z] Syncing module sources (17 files)...

[2020-05-27T19:17:45.881Z] Syncing module sources (17 files)... → Done (took 0.6 sec)

[2020-05-27T19:17:45.960Z] Building version v-6b5541b26a...

[2020-05-27T19:17:46.475Z] Building client:v-6b5541b26a...

[2020-05-27T19:17:46.964Z] Building client:v-6b5541b26a... → Done (took 1 sec)

[2020-05-27T19:17:47.044Z] Deploying version v-6b5541b26a...

[2020-05-27T19:17:48.932Z] Waiting for resources to be ready...

[2020-05-27T19:17:51.027Z] Resources ready

[2020-05-27T19:17:51.132Z] Deploying version v-6b5541b26a... → Done (took 4.1 sec)

[2020-05-27T19:17:51.208Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T19:17:51.284Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T19:17:51.368Z] Waiting for code changes...

[2020-05-27T19:18:53.172Z] ⏳  Processing...

[2020-05-27T19:18:53.367Z] Waiting for code changes...

[2020-05-27T19:18:53.449Z] ⏳  Processing...

[2020-05-27T19:18:53.527Z] Syncing module sources (6 files)...

[2020-05-27T19:18:53.767Z] Syncing module sources (6 files)... → Done (took 0.2 sec)

[2020-05-27T19:18:53.845Z] Building version v-9dd965c548...

[2020-05-27T19:18:54.360Z] Building server:v-9dd965c548...

[2020-05-27T19:18:54.997Z] Building server:v-9dd965c548... → Done (took 1.1 sec)

[2020-05-27T19:18:55.073Z] Deploying version v-9dd965c548...

[2020-05-27T19:18:56.904Z] Waiting for resources to be ready...

[2020-05-27T19:18:59.053Z] Deploying version v-9dd965c548...

[2020-05-27T19:18:59.138Z] Error: Error deploying backend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment backend-v-9dd965c548: ScalingReplicaSet - Scaled up replica set backend-v-9dd965c548-c48ff6496 to 1
Pod backend-v-9dd965c548-c48ff6496-494nn: Scheduled - Successfully assigned node-microservice/backend-v-9dd965c548-c48ff6496-494nn to minikube
Pod backend-v-9dd965c548-c48ff6496-494nn: Pulled - Container image "server:v-9dd965c548" already present on machine
Pod backend-v-9dd965c548-c48ff6496-494nn: Created - Created container backend
Pod backend-v-9dd965c548-c48ff6496-494nn: Started - Started container backend
Pod backend-v-9dd965c548-c48ff6496-494nn: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-9dd965c548

****** backend-v-9dd965c548-c48ff6496-494nn ******
------ backend ------internal/modules/cjs/loader.js:960
  throw err;
  ^

Error: Cannot find module 'models'
Require stack:
- /usr/src/server/app.js
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:957:15)
    at Function.Module._load (internal/modules/cjs/loader.js:840:27)
    at Module.require (internal/modules/cjs/loader.js:1019:19)
    at require (internal/modules/cjs/helpers.js:77:18)
    at Object.<anonymous> (/usr/src/server/app.js:4:16)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12) {
  code: 'MODULE_NOT_FOUND',
  requireStack: [ '/usr/src/server/app.js' ]
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-9dd965c548:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-9dd965c548-c48ff6496 to 1\e[39m\n\e[94mPod backend-v-9dd965c548-c48ff6496-494nn:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-9dd965c548-c48ff6496-494nn to minikube\e[39m\n\e[94mPod backend-v-9dd965c548-c48ff6496-494nn:\e[39m \e[37mPulled - Container image \"server:v-9dd965c548\" already present on machine\e[39m\n\e[94mPod backend-v-9dd965c548-c48ff6496-494nn:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-9dd965c548-c48ff6496-494nn:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-9dd965c548-c48ff6496-494nn:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-9dd965c548\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-9dd965c548-c48ff6496-494nn ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39minternal/modules/cjs/loader.js:960\n  throw err;\n  ^\n\nError: Cannot find module 'models'\nRequire stack:\n- /usr/src/server/app.js\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:957:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:840:27)\n    at Module.require (internal/modules/cjs/loader.js:1019:19)\n    at require (internal/modules/cjs/helpers.js:77:18)\n    at Object.<anonymous> (/usr/src/server/app.js:4:16)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12) {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/usr/src/server/app.js' ]\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-9dd965c548
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-9dd965c548
      uid: 1c8aa9e5-2aaf-4a7b-bd34-2c4e7958f9ef
      resourceVersion: '64885'
      generation: 1
      creationTimestamp: '2020-05-27T19:18:55Z'
      labels:
        garden.io/version: v-9dd965c548
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 78c0ecb8197859a0e7c9141b2b5c196618f27dce7b786a9ec94389d019fcb324
        garden.io/version: v-9dd965c548
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"78c0ecb8197859a0e7c9141b2b5c196618f27dce7b786a9ec94389d019fcb324","garden.io/version":"v-9dd965c548"},"labels":{"garden.io/version":"v-9dd965c548","module":"server","service":"backend"},"name":"backend-v-9dd965c548","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-9dd965c548","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-9dd965c548","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-9dd965c548"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-9dd965c548\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-9dd965c548","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-9dd965c548
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-9dd965c548
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T19:18:59.218Z] Waiting for code changes...

[2020-05-27T19:19:02.503Z] ⏳  Processing...

[2020-05-27T19:19:02.696Z] Waiting for code changes...

[2020-05-27T19:19:02.782Z] ⏳  Processing...

[2020-05-27T19:19:02.856Z] Syncing module sources (6 files)...

[2020-05-27T19:19:03.075Z] Syncing module sources (6 files)... → Done (took 0.2 sec)

[2020-05-27T19:19:03.155Z] Building version v-7ff9caa63a...

[2020-05-27T19:19:03.484Z] Building server:v-7ff9caa63a...

[2020-05-27T19:19:04.096Z] Building server:v-7ff9caa63a... → Done (took 0.9 sec)

[2020-05-27T19:19:04.173Z] Deploying version v-7ff9caa63a...

[2020-05-27T19:19:05.988Z] Waiting for resources to be ready...

[2020-05-27T19:19:08.160Z] Deploying version v-7ff9caa63a...

[2020-05-27T19:19:08.240Z] Error: Error deploying backend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment backend-v-7ff9caa63a: ScalingReplicaSet - Scaled up replica set backend-v-7ff9caa63a-789dcb47fb to 1
Pod backend-v-7ff9caa63a-789dcb47fb-pmhp7: Scheduled - Successfully assigned node-microservice/backend-v-7ff9caa63a-789dcb47fb-pmhp7 to minikube
Pod backend-v-7ff9caa63a-789dcb47fb-pmhp7: Pulled - Container image "server:v-7ff9caa63a" already present on machine
Pod backend-v-7ff9caa63a-789dcb47fb-pmhp7: Created - Created container backend
Pod backend-v-7ff9caa63a-789dcb47fb-pmhp7: Started - Started container backend
Pod backend-v-7ff9caa63a-789dcb47fb-pmhp7: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-7ff9caa63a

****** backend-v-7ff9caa63a-789dcb47fb-pmhp7 ******
------ backend ------/usr/src/server/models.js:4
export const Task = sequelize.define('Task', {
^^^^^^

SyntaxError: Unexpected token 'export'
    at wrapSafe (internal/modules/cjs/loader.js:1047:16)
    at Module._compile (internal/modules/cjs/loader.js:1097:27)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Module.require (internal/modules/cjs/loader.js:1019:19)
    at require (internal/modules/cjs/helpers.js:77:18)
    at Object.<anonymous> (/usr/src/server/app.js:4:16)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-7ff9caa63a:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-7ff9caa63a-789dcb47fb to 1\e[39m\n\e[94mPod backend-v-7ff9caa63a-789dcb47fb-pmhp7:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-7ff9caa63a-789dcb47fb-pmhp7 to minikube\e[39m\n\e[94mPod backend-v-7ff9caa63a-789dcb47fb-pmhp7:\e[39m \e[37mPulled - Container image \"server:v-7ff9caa63a\" already present on machine\e[39m\n\e[94mPod backend-v-7ff9caa63a-789dcb47fb-pmhp7:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-7ff9caa63a-789dcb47fb-pmhp7:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-7ff9caa63a-789dcb47fb-pmhp7:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-7ff9caa63a\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-7ff9caa63a-789dcb47fb-pmhp7 ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m/usr/src/server/models.js:4\nexport const Task = sequelize.define('Task', {\n^^^^^^\n\nSyntaxError: Unexpected token 'export'\n    at wrapSafe (internal/modules/cjs/loader.js:1047:16)\n    at Module._compile (internal/modules/cjs/loader.js:1097:27)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Module.require (internal/modules/cjs/loader.js:1019:19)\n    at require (internal/modules/cjs/helpers.js:77:18)\n    at Object.<anonymous> (/usr/src/server/app.js:4:16)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-7ff9caa63a
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-7ff9caa63a
      uid: aa2544b8-2fde-48d3-ba20-2f16260eade9
      resourceVersion: '64970'
      generation: 1
      creationTimestamp: '2020-05-27T19:19:04Z'
      labels:
        garden.io/version: v-7ff9caa63a
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 54919c467ad58330ca65e33d29dde1f5215f1f3b958390bbdbe99eedc02610af
        garden.io/version: v-7ff9caa63a
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"54919c467ad58330ca65e33d29dde1f5215f1f3b958390bbdbe99eedc02610af","garden.io/version":"v-7ff9caa63a"},"labels":{"garden.io/version":"v-7ff9caa63a","module":"server","service":"backend"},"name":"backend-v-7ff9caa63a","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-7ff9caa63a","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-7ff9caa63a","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-7ff9caa63a"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-7ff9caa63a\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-7ff9caa63a","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-7ff9caa63a
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-7ff9caa63a
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T19:19:08.320Z] ⏳  Processing...

[2020-05-27T19:19:08.398Z] Syncing module sources (6 files)...

[2020-05-27T19:19:08.772Z] Syncing module sources (6 files)... → Done (took 0.3 sec)

[2020-05-27T19:19:08.855Z] Building version v-873124e439...

[2020-05-27T19:19:09.231Z] Building server:v-873124e439...

[2020-05-27T19:19:09.851Z] Building server:v-873124e439... → Done (took 1 sec)

[2020-05-27T19:19:09.936Z] Deploying version v-873124e439...

[2020-05-27T19:19:11.759Z] Waiting for resources to be ready...

[2020-05-27T19:19:13.896Z] Deploying version v-873124e439...

[2020-05-27T19:19:13.978Z] Error: Error deploying backend: CrashLoopBackOff - back-off 10s restarting failed container=backend pod=backend-v-873124e439-6946cdd58b-x8h9c_node-microservice(fa6a3bc8-27d7-49e7-bf66-44cf90e9388a)

━━━ Events ━━━
Deployment backend-v-873124e439: ScalingReplicaSet - Scaled up replica set backend-v-873124e439-6946cdd58b to 1
Pod backend-v-873124e439-6946cdd58b-x8h9c: Scheduled - Successfully assigned node-microservice/backend-v-873124e439-6946cdd58b-x8h9c to minikube
Pod backend-v-873124e439-6946cdd58b-x8h9c: Pulled - Container image "server:v-873124e439" already present on machine
Pod backend-v-873124e439-6946cdd58b-x8h9c: Created - Created container backend
Pod backend-v-873124e439-6946cdd58b-x8h9c: Started - Started container backend
Pod backend-v-873124e439-6946cdd58b-x8h9c: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-873124e439

****** backend-v-873124e439-6946cdd58b-x8h9c ******
------ backend ------/usr/src/server/models.js:4
export const Task = sequelize.define('Task', {
^^^^^^

SyntaxError: Unexpected token 'export'
    at wrapSafe (internal/modules/cjs/loader.js:1047:16)
    at Module._compile (internal/modules/cjs/loader.js:1097:27)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Module.require (internal/modules/cjs/loader.js:1019:19)
    at require (internal/modules/cjs/helpers.js:77:18)
    at Object.<anonymous> (/usr/src/server/app.js:4:12)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=backend
    pod=backend-v-873124e439-6946cdd58b-x8h9c_node-microservice(fa6a3bc8-27d7-49e7-bf66-44cf90e9388a)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-873124e439:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-873124e439-6946cdd58b to 1\e[39m\n\e[94mPod backend-v-873124e439-6946cdd58b-x8h9c:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-873124e439-6946cdd58b-x8h9c to minikube\e[39m\n\e[94mPod backend-v-873124e439-6946cdd58b-x8h9c:\e[39m \e[37mPulled - Container image \"server:v-873124e439\" already present on machine\e[39m\n\e[94mPod backend-v-873124e439-6946cdd58b-x8h9c:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-873124e439-6946cdd58b-x8h9c:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-873124e439-6946cdd58b-x8h9c:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-873124e439\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-873124e439-6946cdd58b-x8h9c ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m/usr/src/server/models.js:4\nexport const Task = sequelize.define('Task', {\n^^^^^^\n\nSyntaxError: Unexpected token 'export'\n    at wrapSafe (internal/modules/cjs/loader.js:1047:16)\n    at Module._compile (internal/modules/cjs/loader.js:1097:27)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Module.require (internal/modules/cjs/loader.js:1019:19)\n    at require (internal/modules/cjs/helpers.js:77:18)\n    at Object.<anonymous> (/usr/src/server/app.js:4:12)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-873124e439
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-873124e439
      uid: 3494a086-ddc9-4b27-b464-d0465fbf8ed7
      resourceVersion: '65006'
      generation: 1
      creationTimestamp: '2020-05-27T19:19:10Z'
      labels:
        garden.io/version: v-873124e439
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 11a28a84fdd52836711ed7d7a062dcda5d01aec286627bc54ae4d0e7bf7d3b1c
        garden.io/version: v-873124e439
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"11a28a84fdd52836711ed7d7a062dcda5d01aec286627bc54ae4d0e7bf7d3b1c","garden.io/version":"v-873124e439"},"labels":{"garden.io/version":"v-873124e439","module":"server","service":"backend"},"name":"backend-v-873124e439","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-873124e439","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-873124e439","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-873124e439"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-873124e439\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-873124e439","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-873124e439
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-873124e439
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T19:19:14.062Z] Waiting for code changes...

[2020-05-27T19:19:20.096Z] ⏳  Processing...

[2020-05-27T19:19:20.303Z] Waiting for code changes...

[2020-05-27T19:19:20.388Z] ⏳  Processing...

[2020-05-27T19:19:20.471Z] Syncing module sources (6 files)...

[2020-05-27T19:19:20.712Z] Syncing module sources (6 files)... → Done (took 0.2 sec)

[2020-05-27T19:19:20.795Z] Building version v-7c17a76d7e...

[2020-05-27T19:19:21.321Z] Building server:v-7c17a76d7e...

[2020-05-27T19:19:21.943Z] Building server:v-7c17a76d7e... → Done (took 1.1 sec)

[2020-05-27T19:19:22.023Z] Deploying version v-7c17a76d7e...

[2020-05-27T19:19:23.861Z] Waiting for resources to be ready...

[2020-05-27T19:19:25.995Z] Deploying version v-7c17a76d7e...

[2020-05-27T19:19:26.078Z] Error: Error deploying backend: CrashLoopBackOff - back-off 10s restarting failed container=backend pod=backend-v-7c17a76d7e-7f7467f558-9jspf_node-microservice(9d9e318a-d367-455d-a294-c7f0f013bf58)

━━━ Events ━━━
Deployment backend-v-7c17a76d7e: ScalingReplicaSet - Scaled up replica set backend-v-7c17a76d7e-7f7467f558 to 1
Pod backend-v-7c17a76d7e-7f7467f558-9jspf: Scheduled - Successfully assigned node-microservice/backend-v-7c17a76d7e-7f7467f558-9jspf to minikube
Pod backend-v-7c17a76d7e-7f7467f558-9jspf: Pulled - Container image "server:v-7c17a76d7e" already present on machine
Pod backend-v-7c17a76d7e-7f7467f558-9jspf: Created - Created container backend
Pod backend-v-7c17a76d7e-7f7467f558-9jspf: Started - Started container backend
Pod backend-v-7c17a76d7e-7f7467f558-9jspf: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-7c17a76d7e

****** backend-v-7c17a76d7e-7f7467f558-9jspf ******
------ backend ------/usr/src/server/node_modules/sequelize/lib/sequelize.js:265
      throw new Error('Dialect needs to be explicitly supplied as of v4.0.0');
      ^

Error: Dialect needs to be explicitly supplied as of v4.0.0
    at new Sequelize (/usr/src/server/node_modules/sequelize/lib/sequelize.js:265:13)
    at Object.<anonymous> (/usr/src/server/models.js:2:19)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Module.require (internal/modules/cjs/loader.js:1019:19)
    at require (internal/modules/cjs/helpers.js:77:18)
    at Object.<anonymous> (/usr/src/server/app.js:4:12)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=backend
    pod=backend-v-7c17a76d7e-7f7467f558-9jspf_node-microservice(9d9e318a-d367-455d-a294-c7f0f013bf58)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-7c17a76d7e:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-7c17a76d7e-7f7467f558 to 1\e[39m\n\e[94mPod backend-v-7c17a76d7e-7f7467f558-9jspf:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-7c17a76d7e-7f7467f558-9jspf to minikube\e[39m\n\e[94mPod backend-v-7c17a76d7e-7f7467f558-9jspf:\e[39m \e[37mPulled - Container image \"server:v-7c17a76d7e\" already present on machine\e[39m\n\e[94mPod backend-v-7c17a76d7e-7f7467f558-9jspf:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-7c17a76d7e-7f7467f558-9jspf:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-7c17a76d7e-7f7467f558-9jspf:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-7c17a76d7e\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-7c17a76d7e-7f7467f558-9jspf ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m/usr/src/server/node_modules/sequelize/lib/sequelize.js:265\n      throw new Error('Dialect needs to be explicitly supplied as of v4.0.0');\n      ^\n\nError: Dialect needs to be explicitly supplied as of v4.0.0\n    at new Sequelize (/usr/src/server/node_modules/sequelize/lib/sequelize.js:265:13)\n    at Object.<anonymous> (/usr/src/server/models.js:2:19)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Module.require (internal/modules/cjs/loader.js:1019:19)\n    at require (internal/modules/cjs/helpers.js:77:18)\n    at Object.<anonymous> (/usr/src/server/app.js:4:12)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-7c17a76d7e
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-7c17a76d7e
      uid: c3577d38-59f1-4781-b96d-ce215e3fc7ab
      resourceVersion: '65075'
      generation: 1
      creationTimestamp: '2020-05-27T19:19:22Z'
      labels:
        garden.io/version: v-7c17a76d7e
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: f7de6eb62abd370f5c5286ef47f163de1d45bc7cdbaf54bf4ee30042b985a2e9
        garden.io/version: v-7c17a76d7e
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"f7de6eb62abd370f5c5286ef47f163de1d45bc7cdbaf54bf4ee30042b985a2e9","garden.io/version":"v-7c17a76d7e"},"labels":{"garden.io/version":"v-7c17a76d7e","module":"server","service":"backend"},"name":"backend-v-7c17a76d7e","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-7c17a76d7e","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-7c17a76d7e","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-7c17a76d7e"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-7c17a76d7e\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-7c17a76d7e","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-7c17a76d7e
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-7c17a76d7e
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T19:19:26.163Z] Waiting for code changes...

[2020-05-27T19:22:24.560Z] Getting status...

[2020-05-27T19:22:26.887Z] Getting status... → Done

[2020-05-27T19:22:27.197Z] Module configuration changed, reloading...

[2020-05-27T19:22:27.992Z] Getting status...

[2020-05-27T19:22:29.264Z] Getting status... → Done

[2020-05-27T19:22:29.648Z] ⏳  Processing...

[2020-05-27T19:22:29.731Z] Syncing module sources (17 files)...

[2020-05-27T19:22:29.893Z] Syncing module sources (6 files)...

[2020-05-27T19:22:30.264Z] Syncing module sources (6 files)... → Done (took 0.4 sec)

[2020-05-27T19:22:30.361Z] Getting build status for v-7c17a76d7e...

[2020-05-27T19:22:31.039Z] Getting build status for v-99c8680ab9...

[2020-05-27T19:22:31.122Z] Getting build status for v-99c8680ab9... → Done (took 0.1 sec)

[2020-05-27T19:22:31.285Z] Getting build status for v-8bbe6fa30a...

[2020-05-27T19:22:31.366Z] Getting build status for v-8bbe6fa30a... → Done (took 0.1 sec)

[2020-05-27T19:22:31.448Z] Deploying version v-8bbe6fa30a...

[2020-05-27T19:22:31.528Z] Deploying version v-8bbe6fa30a... → Already deployed

[2020-05-27T19:22:31.611Z] Syncing module sources (17 files)... → Done (took 1.9 sec)

[2020-05-27T19:22:31.692Z] Getting build status for v-6b5541b26a...

[2020-05-27T19:22:31.813Z] → Forward: http://127.0.0.1:3306 → db:3306 (http)

[2020-05-27T19:22:31.933Z] Deploying version v-99c8680ab9...

[2020-05-27T19:22:32.203Z] Getting build status for v-7c17a76d7e... → Done (took 1.8 sec)

[2020-05-27T19:22:32.291Z] Getting build status for v-6b5541b26a... → Done (took 0.6 sec)

[2020-05-27T19:22:32.378Z] Deploying version v-6b5541b26a...

[2020-05-27T19:22:32.460Z] Deploying version v-6b5541b26a... → Already deployed

[2020-05-27T19:22:32.544Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T19:22:32.627Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T19:22:32.792Z] Deploying version v-7c17a76d7e...

[2020-05-27T19:22:33.949Z] Waiting for resources to be ready...

[2020-05-27T19:22:34.248Z] Waiting for resources to be ready...

[2020-05-27T19:22:36.110Z] Deployment/postgres-db-v-99c8680ab9: Pulling image "postgres"

[2020-05-27T19:22:36.400Z] Deploying version v-7c17a76d7e...

[2020-05-27T19:22:36.491Z] Error: Error deploying backend: CrashLoopBackOff - back-off 2m40s restarting failed container=backend pod=backend-v-7c17a76d7e-7f7467f558-9jspf_node-microservice(9d9e318a-d367-455d-a294-c7f0f013bf58)

━━━ Events ━━━
Deployment backend-v-7c17a76d7e: ScalingReplicaSet - Scaled up replica set backend-v-7c17a76d7e-7f7467f558 to 1
Pod backend-v-7c17a76d7e-7f7467f558-9jspf: Scheduled - Successfully assigned node-microservice/backend-v-7c17a76d7e-7f7467f558-9jspf to minikube
Pod backend-v-7c17a76d7e-7f7467f558-9jspf: Pulled - Container image "server:v-7c17a76d7e" already present on machine
Pod backend-v-7c17a76d7e-7f7467f558-9jspf: Created - Created container backend
Pod backend-v-7c17a76d7e-7f7467f558-9jspf: Started - Started container backend
Pod backend-v-7c17a76d7e-7f7467f558-9jspf: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-7c17a76d7e

****** backend-v-7c17a76d7e-7f7467f558-9jspf ******
------ backend ------/usr/src/server/node_modules/sequelize/lib/sequelize.js:265
      throw new Error('Dialect needs to be explicitly supplied as of v4.0.0');
      ^

Error: Dialect needs to be explicitly supplied as of v4.0.0
    at new Sequelize (/usr/src/server/node_modules/sequelize/lib/sequelize.js:265:13)
    at Object.<anonymous> (/usr/src/server/models.js:2:19)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Module.require (internal/modules/cjs/loader.js:1019:19)
    at require (internal/modules/cjs/helpers.js:77:18)
    at Object.<anonymous> (/usr/src/server/app.js:4:12)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 2m40s restarting failed container=backend
    pod=backend-v-7c17a76d7e-7f7467f558-9jspf_node-microservice(9d9e318a-d367-455d-a294-c7f0f013bf58)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-7c17a76d7e:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-7c17a76d7e-7f7467f558 to 1\e[39m\n\e[94mPod backend-v-7c17a76d7e-7f7467f558-9jspf:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-7c17a76d7e-7f7467f558-9jspf to minikube\e[39m\n\e[94mPod backend-v-7c17a76d7e-7f7467f558-9jspf:\e[39m \e[37mPulled - Container image \"server:v-7c17a76d7e\" already present on machine\e[39m\n\e[94mPod backend-v-7c17a76d7e-7f7467f558-9jspf:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-7c17a76d7e-7f7467f558-9jspf:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-7c17a76d7e-7f7467f558-9jspf:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-7c17a76d7e\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-7c17a76d7e-7f7467f558-9jspf ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m/usr/src/server/node_modules/sequelize/lib/sequelize.js:265\n      throw new Error('Dialect needs to be explicitly supplied as of v4.0.0');\n      ^\n\nError: Dialect needs to be explicitly supplied as of v4.0.0\n    at new Sequelize (/usr/src/server/node_modules/sequelize/lib/sequelize.js:265:13)\n    at Object.<anonymous> (/usr/src/server/models.js:2:19)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Module.require (internal/modules/cjs/loader.js:1019:19)\n    at require (internal/modules/cjs/helpers.js:77:18)\n    at Object.<anonymous> (/usr/src/server/app.js:4:12)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-7c17a76d7e
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-7c17a76d7e
      uid: c3577d38-59f1-4781-b96d-ce215e3fc7ab
      resourceVersion: '65075'
      generation: 1
      creationTimestamp: '2020-05-27T19:19:22Z'
      labels:
        garden.io/version: v-7c17a76d7e
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: f7de6eb62abd370f5c5286ef47f163de1d45bc7cdbaf54bf4ee30042b985a2e9
        garden.io/version: v-7c17a76d7e
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"f7de6eb62abd370f5c5286ef47f163de1d45bc7cdbaf54bf4ee30042b985a2e9","garden.io/version":"v-7c17a76d7e"},"labels":{"garden.io/version":"v-7c17a76d7e","module":"server","service":"backend"},"name":"backend-v-7c17a76d7e","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-7c17a76d7e","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-7c17a76d7e","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-7c17a76d7e"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-7c17a76d7e\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-7c17a76d7e","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-7c17a76d7e
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-7c17a76d7e
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T19:22:53.899Z] Resources ready

[2020-05-27T19:22:54.012Z] Deploying version v-99c8680ab9... → Done (took 22.1 sec)

[2020-05-27T19:22:54.115Z] → Forward: http://127.0.0.1:8080 → postgres-db:8080 (http)

[2020-05-27T19:22:54.209Z] ⏳  Processing...

[2020-05-27T19:22:54.312Z] Waiting for code changes...

[2020-05-27T19:22:54.438Z] Waiting for code changes...

[2020-05-27T19:22:54.535Z] ⏳  Processing...

[2020-05-27T19:22:54.655Z] Waiting for code changes...

[2020-05-27T19:25:08.735Z] ⏳  Processing...

[2020-05-27T19:25:08.971Z] Waiting for code changes...

[2020-05-27T19:25:09.063Z] ⏳  Processing...

[2020-05-27T19:25:09.155Z] Syncing module sources (6 files)...

[2020-05-27T19:25:09.404Z] Syncing module sources (6 files)... → Done (took 0.2 sec)

[2020-05-27T19:25:09.490Z] Building version v-1b404f91ad...

[2020-05-27T19:25:10.017Z] Building server:v-1b404f91ad...

[2020-05-27T19:25:10.662Z] Building server:v-1b404f91ad... → Done (took 1.2 sec)

[2020-05-27T19:25:10.748Z] Deploying version v-1b404f91ad...

[2020-05-27T19:25:12.589Z] Waiting for resources to be ready...

[2020-05-27T19:25:14.749Z] Deploying version v-1b404f91ad...

[2020-05-27T19:25:14.839Z] Error: Error deploying backend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment backend-v-1b404f91ad: ScalingReplicaSet - Scaled up replica set backend-v-1b404f91ad-56bd94d54b to 1
Pod backend-v-1b404f91ad-56bd94d54b-5wm8p: Scheduled - Successfully assigned node-microservice/backend-v-1b404f91ad-56bd94d54b-5wm8p to minikube
Pod backend-v-1b404f91ad-56bd94d54b-5wm8p: Pulled - Container image "server:v-1b404f91ad" already present on machine
Pod backend-v-1b404f91ad-56bd94d54b-5wm8p: Created - Created container backend
Pod backend-v-1b404f91ad-56bd94d54b-5wm8p: Started - Started container backend
Pod backend-v-1b404f91ad-56bd94d54b-5wm8p: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-1b404f91ad

****** backend-v-1b404f91ad-56bd94d54b-5wm8p ******
------ backend ------/usr/src/server/node_modules/sequelize/lib/sequelize.js:265
      throw new Error('Dialect needs to be explicitly supplied as of v4.0.0');
      ^

Error: Dialect needs to be explicitly supplied as of v4.0.0
    at new Sequelize (/usr/src/server/node_modules/sequelize/lib/sequelize.js:265:13)
    at Object.<anonymous> (/usr/src/server/models.js:2:19)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Module.require (internal/modules/cjs/loader.js:1019:19)
    at require (internal/modules/cjs/helpers.js:77:18)
    at Object.<anonymous> (/usr/src/server/app.js:4:12)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-1b404f91ad:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-1b404f91ad-56bd94d54b to 1\e[39m\n\e[94mPod backend-v-1b404f91ad-56bd94d54b-5wm8p:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-1b404f91ad-56bd94d54b-5wm8p to minikube\e[39m\n\e[94mPod backend-v-1b404f91ad-56bd94d54b-5wm8p:\e[39m \e[37mPulled - Container image \"server:v-1b404f91ad\" already present on machine\e[39m\n\e[94mPod backend-v-1b404f91ad-56bd94d54b-5wm8p:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-1b404f91ad-56bd94d54b-5wm8p:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-1b404f91ad-56bd94d54b-5wm8p:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-1b404f91ad\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-1b404f91ad-56bd94d54b-5wm8p ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m/usr/src/server/node_modules/sequelize/lib/sequelize.js:265\n      throw new Error('Dialect needs to be explicitly supplied as of v4.0.0');\n      ^\n\nError: Dialect needs to be explicitly supplied as of v4.0.0\n    at new Sequelize (/usr/src/server/node_modules/sequelize/lib/sequelize.js:265:13)\n    at Object.<anonymous> (/usr/src/server/models.js:2:19)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Module.require (internal/modules/cjs/loader.js:1019:19)\n    at require (internal/modules/cjs/helpers.js:77:18)\n    at Object.<anonymous> (/usr/src/server/app.js:4:12)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-1b404f91ad
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-1b404f91ad
      uid: 31513666-859b-490b-a7af-dfe0af1a1ad4
      resourceVersion: '66018'
      generation: 1
      creationTimestamp: '2020-05-27T19:25:11Z'
      labels:
        garden.io/version: v-1b404f91ad
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: b075fb6b2b8f2c9a65e362f7323830380ed91c1b583cd7aaeeeec0f8f335b67e
        garden.io/version: v-1b404f91ad
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"b075fb6b2b8f2c9a65e362f7323830380ed91c1b583cd7aaeeeec0f8f335b67e","garden.io/version":"v-1b404f91ad"},"labels":{"garden.io/version":"v-1b404f91ad","module":"server","service":"backend"},"name":"backend-v-1b404f91ad","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-1b404f91ad","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-1b404f91ad","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-1b404f91ad"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-1b404f91ad\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-1b404f91ad","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-1b404f91ad
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-1b404f91ad
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T19:25:14.927Z] Waiting for code changes...

[2020-05-27T19:35:59.096Z] ⏳  Processing...

[2020-05-27T19:35:59.347Z] Waiting for code changes...

[2020-05-27T19:35:59.441Z] ⏳  Processing...

[2020-05-27T19:35:59.534Z] Syncing module sources (6 files)...

[2020-05-27T19:35:59.781Z] Syncing module sources (6 files)... → Done (took 0.2 sec)

[2020-05-27T19:35:59.868Z] Building version v-3e304cc035...

[2020-05-27T19:36:00.400Z] Building server:v-3e304cc035...

[2020-05-27T19:36:01.043Z] Building server:v-3e304cc035... → Done (took 1.2 sec)

[2020-05-27T19:36:01.132Z] Deploying version v-3e304cc035...

[2020-05-27T19:36:03.784Z] Waiting for resources to be ready...

[2020-05-27T19:36:05.944Z] Deploying version v-3e304cc035...

[2020-05-27T19:36:06.038Z] Error: Error deploying backend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment backend-v-3e304cc035: ScalingReplicaSet - Scaled up replica set backend-v-3e304cc035-67f447c88d to 1
Pod backend-v-3e304cc035-67f447c88d-cd2m8: Scheduled - Successfully assigned node-microservice/backend-v-3e304cc035-67f447c88d-cd2m8 to minikube
Pod backend-v-3e304cc035-67f447c88d-cd2m8: Pulled - Container image "server:v-3e304cc035" already present on machine
Pod backend-v-3e304cc035-67f447c88d-cd2m8: Created - Created container backend
Pod backend-v-3e304cc035-67f447c88d-cd2m8: Started - Started container backend
Pod backend-v-3e304cc035-67f447c88d-cd2m8: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-3e304cc035

****** backend-v-3e304cc035-67f447c88d-cd2m8 ******
------ backend ------/usr/src/server/node_modules/sequelize/lib/sequelize.js:265
      throw new Error('Dialect needs to be explicitly supplied as of v4.0.0');
      ^

Error: Dialect needs to be explicitly supplied as of v4.0.0
    at new Sequelize (/usr/src/server/node_modules/sequelize/lib/sequelize.js:265:13)
    at Object.<anonymous> (/usr/src/server/models.js:2:19)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Module.require (internal/modules/cjs/loader.js:1019:19)
    at require (internal/modules/cjs/helpers.js:77:18)
    at Object.<anonymous> (/usr/src/server/app.js:4:12)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-3e304cc035:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-3e304cc035-67f447c88d to 1\e[39m\n\e[94mPod backend-v-3e304cc035-67f447c88d-cd2m8:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-3e304cc035-67f447c88d-cd2m8 to minikube\e[39m\n\e[94mPod backend-v-3e304cc035-67f447c88d-cd2m8:\e[39m \e[37mPulled - Container image \"server:v-3e304cc035\" already present on machine\e[39m\n\e[94mPod backend-v-3e304cc035-67f447c88d-cd2m8:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-3e304cc035-67f447c88d-cd2m8:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-3e304cc035-67f447c88d-cd2m8:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-3e304cc035\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-3e304cc035-67f447c88d-cd2m8 ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m/usr/src/server/node_modules/sequelize/lib/sequelize.js:265\n      throw new Error('Dialect needs to be explicitly supplied as of v4.0.0');\n      ^\n\nError: Dialect needs to be explicitly supplied as of v4.0.0\n    at new Sequelize (/usr/src/server/node_modules/sequelize/lib/sequelize.js:265:13)\n    at Object.<anonymous> (/usr/src/server/models.js:2:19)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Module.require (internal/modules/cjs/loader.js:1019:19)\n    at require (internal/modules/cjs/helpers.js:77:18)\n    at Object.<anonymous> (/usr/src/server/app.js:4:12)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-3e304cc035
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-3e304cc035
      uid: 71076f24-a45c-49dd-bd90-364267a28751
      resourceVersion: '67623'
      generation: 1
      creationTimestamp: '2020-05-27T19:36:02Z'
      labels:
        garden.io/version: v-3e304cc035
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 528a58231c6392a7169f93387b6efb8a215ddfbbfe1f37e0282dc8fcf3b7a0af
        garden.io/version: v-3e304cc035
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"528a58231c6392a7169f93387b6efb8a215ddfbbfe1f37e0282dc8fcf3b7a0af","garden.io/version":"v-3e304cc035"},"labels":{"garden.io/version":"v-3e304cc035","module":"server","service":"backend"},"name":"backend-v-3e304cc035","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-3e304cc035","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-3e304cc035","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-3e304cc035"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-3e304cc035\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-3e304cc035","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-3e304cc035
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-3e304cc035
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T19:36:06.132Z] Waiting for code changes...

[2020-05-27T19:36:47.336Z] ⏳  Processing...

[2020-05-27T19:36:47.574Z] Waiting for code changes...

[2020-05-27T19:36:47.674Z] ⏳  Processing...

[2020-05-27T19:36:47.897Z] Waiting for code changes...

[2020-05-27T19:36:48.019Z] ⏳  Processing...

[2020-05-27T19:36:48.110Z] Syncing module sources (7 files)...

[2020-05-27T19:36:48.337Z] Syncing module sources (7 files)... → Done (took 0.2 sec)

[2020-05-27T19:36:48.430Z] Building version v-cf9e1cc6d0...

[2020-05-27T19:36:48.946Z] Building server:v-cf9e1cc6d0...

[2020-05-27T19:36:49.587Z] Building server:v-cf9e1cc6d0... → Done (took 1.1 sec)

[2020-05-27T19:36:49.677Z] Deploying version v-cf9e1cc6d0...

[2020-05-27T19:36:51.518Z] Waiting for resources to be ready...

[2020-05-27T19:36:53.680Z] Deploying version v-cf9e1cc6d0...

[2020-05-27T19:36:53.777Z] Error: Error deploying backend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment backend-v-cf9e1cc6d0: ScalingReplicaSet - Scaled up replica set backend-v-cf9e1cc6d0-8497467bc8 to 1
Pod backend-v-cf9e1cc6d0-8497467bc8-srj2j: Scheduled - Successfully assigned node-microservice/backend-v-cf9e1cc6d0-8497467bc8-srj2j to minikube
Pod backend-v-cf9e1cc6d0-8497467bc8-srj2j: Pulled - Container image "server:v-cf9e1cc6d0" already present on machine
Pod backend-v-cf9e1cc6d0-8497467bc8-srj2j: Created - Created container backend
Pod backend-v-cf9e1cc6d0-8497467bc8-srj2j: Started - Started container backend
Pod backend-v-cf9e1cc6d0-8497467bc8-srj2j: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-cf9e1cc6d0

****** backend-v-cf9e1cc6d0-8497467bc8-srj2j ******
------ backend ------/usr/src/server/node_modules/sequelize/lib/sequelize.js:265
      throw new Error('Dialect needs to be explicitly supplied as of v4.0.0');
      ^

Error: Dialect needs to be explicitly supplied as of v4.0.0
    at new Sequelize (/usr/src/server/node_modules/sequelize/lib/sequelize.js:265:13)
    at Object.<anonymous> (/usr/src/server/models.js:2:19)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Module.require (internal/modules/cjs/loader.js:1019:19)
    at require (internal/modules/cjs/helpers.js:77:18)
    at Object.<anonymous> (/usr/src/server/app.js:4:12)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-cf9e1cc6d0:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-cf9e1cc6d0-8497467bc8 to 1\e[39m\n\e[94mPod backend-v-cf9e1cc6d0-8497467bc8-srj2j:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-cf9e1cc6d0-8497467bc8-srj2j to minikube\e[39m\n\e[94mPod backend-v-cf9e1cc6d0-8497467bc8-srj2j:\e[39m \e[37mPulled - Container image \"server:v-cf9e1cc6d0\" already present on machine\e[39m\n\e[94mPod backend-v-cf9e1cc6d0-8497467bc8-srj2j:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-cf9e1cc6d0-8497467bc8-srj2j:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-cf9e1cc6d0-8497467bc8-srj2j:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-cf9e1cc6d0\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-cf9e1cc6d0-8497467bc8-srj2j ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m/usr/src/server/node_modules/sequelize/lib/sequelize.js:265\n      throw new Error('Dialect needs to be explicitly supplied as of v4.0.0');\n      ^\n\nError: Dialect needs to be explicitly supplied as of v4.0.0\n    at new Sequelize (/usr/src/server/node_modules/sequelize/lib/sequelize.js:265:13)\n    at Object.<anonymous> (/usr/src/server/models.js:2:19)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Module.require (internal/modules/cjs/loader.js:1019:19)\n    at require (internal/modules/cjs/helpers.js:77:18)\n    at Object.<anonymous> (/usr/src/server/app.js:4:12)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-cf9e1cc6d0
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-cf9e1cc6d0
      uid: 910b27d6-6e7b-4740-aebe-38fa52a5f8e8
      resourceVersion: '67793'
      generation: 1
      creationTimestamp: '2020-05-27T19:36:49Z'
      labels:
        garden.io/version: v-cf9e1cc6d0
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 14ad1634e1291d9fdfb00d05b4b38fc2321340c9f36dab9f395195d95c690f82
        garden.io/version: v-cf9e1cc6d0
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"14ad1634e1291d9fdfb00d05b4b38fc2321340c9f36dab9f395195d95c690f82","garden.io/version":"v-cf9e1cc6d0"},"labels":{"garden.io/version":"v-cf9e1cc6d0","module":"server","service":"backend"},"name":"backend-v-cf9e1cc6d0","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-cf9e1cc6d0","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-cf9e1cc6d0","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-cf9e1cc6d0"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-cf9e1cc6d0\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-cf9e1cc6d0","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-cf9e1cc6d0
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-cf9e1cc6d0
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T19:36:53.866Z] Waiting for code changes...

[2020-05-27T19:37:29.997Z] ⏳  Processing...

[2020-05-27T19:37:30.249Z] Waiting for code changes...

[2020-05-27T19:37:30.346Z] ⏳  Processing...

[2020-05-27T19:37:30.441Z] Syncing module sources (7 files)...

[2020-05-27T19:37:30.674Z] Syncing module sources (7 files)... → Done (took 0.2 sec)

[2020-05-27T19:37:30.764Z] Building version v-cf75818034...

[2020-05-27T19:37:31.298Z] Building server:v-cf75818034...

[2020-05-27T19:37:31.897Z] Building server:v-cf75818034... → Done (took 1.1 sec)

[2020-05-27T19:37:31.992Z] Deploying version v-cf75818034...

[2020-05-27T19:37:33.872Z] Waiting for resources to be ready...

[2020-05-27T19:37:36.036Z] Deploying version v-cf75818034...

[2020-05-27T19:37:36.131Z] Error: Error deploying backend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment backend-v-cf75818034: ScalingReplicaSet - Scaled up replica set backend-v-cf75818034-bf5599b88 to 1
Pod backend-v-cf75818034-bf5599b88-h7whx: Scheduled - Successfully assigned node-microservice/backend-v-cf75818034-bf5599b88-h7whx to minikube
Pod backend-v-cf75818034-bf5599b88-h7whx: Pulled - Container image "server:v-cf75818034" already present on machine
Pod backend-v-cf75818034-bf5599b88-h7whx: Created - Created container backend
Pod backend-v-cf75818034-bf5599b88-h7whx: Started - Started container backend
Pod backend-v-cf75818034-bf5599b88-h7whx: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-cf75818034

****** backend-v-cf75818034-bf5599b88-h7whx ******
------ backend ------/usr/src/server/node_modules/sequelize/lib/sequelize.js:265
      throw new Error('Dialect needs to be explicitly supplied as of v4.0.0');
      ^

Error: Dialect needs to be explicitly supplied as of v4.0.0
    at new Sequelize (/usr/src/server/node_modules/sequelize/lib/sequelize.js:265:13)
    at Object.<anonymous> (/usr/src/server/models.js:2:19)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Module.require (internal/modules/cjs/loader.js:1019:19)
    at require (internal/modules/cjs/helpers.js:77:18)
    at Object.<anonymous> (/usr/src/server/app.js:4:12)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-cf75818034:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-cf75818034-bf5599b88 to 1\e[39m\n\e[94mPod backend-v-cf75818034-bf5599b88-h7whx:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-cf75818034-bf5599b88-h7whx to minikube\e[39m\n\e[94mPod backend-v-cf75818034-bf5599b88-h7whx:\e[39m \e[37mPulled - Container image \"server:v-cf75818034\" already present on machine\e[39m\n\e[94mPod backend-v-cf75818034-bf5599b88-h7whx:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-cf75818034-bf5599b88-h7whx:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-cf75818034-bf5599b88-h7whx:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-cf75818034\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-cf75818034-bf5599b88-h7whx ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m/usr/src/server/node_modules/sequelize/lib/sequelize.js:265\n      throw new Error('Dialect needs to be explicitly supplied as of v4.0.0');\n      ^\n\nError: Dialect needs to be explicitly supplied as of v4.0.0\n    at new Sequelize (/usr/src/server/node_modules/sequelize/lib/sequelize.js:265:13)\n    at Object.<anonymous> (/usr/src/server/models.js:2:19)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Module.require (internal/modules/cjs/loader.js:1019:19)\n    at require (internal/modules/cjs/helpers.js:77:18)\n    at Object.<anonymous> (/usr/src/server/app.js:4:12)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-cf75818034
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-cf75818034
      uid: a848c04b-d9a7-439d-acda-27d518e89c48
      resourceVersion: '67974'
      generation: 1
      creationTimestamp: '2020-05-27T19:37:32Z'
      labels:
        garden.io/version: v-cf75818034
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 27ad75654d4972a47c2207d3f37279b1d54f73573cdcee3595f5bab787e7d8c4
        garden.io/version: v-cf75818034
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"27ad75654d4972a47c2207d3f37279b1d54f73573cdcee3595f5bab787e7d8c4","garden.io/version":"v-cf75818034"},"labels":{"garden.io/version":"v-cf75818034","module":"server","service":"backend"},"name":"backend-v-cf75818034","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-cf75818034","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-cf75818034","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-cf75818034"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-cf75818034\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-cf75818034","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-cf75818034
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-cf75818034
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T19:37:36.224Z] Waiting for code changes...

[2020-05-27T19:37:40.915Z] ⏳  Processing...

[2020-05-27T19:37:41.146Z] Waiting for code changes...

[2020-05-27T19:37:41.241Z] ⏳  Processing...

[2020-05-27T19:37:41.337Z] Syncing module sources (7 files)...

[2020-05-27T19:37:41.569Z] Syncing module sources (7 files)... → Done (took 0.2 sec)

[2020-05-27T19:37:41.663Z] Building version v-8269494661...

[2020-05-27T19:37:42.008Z] Building server:v-8269494661...

[2020-05-27T19:37:42.668Z] Building server:v-8269494661... → Done (took 1 sec)

[2020-05-27T19:37:42.761Z] Deploying version v-8269494661...

[2020-05-27T19:37:44.642Z] Waiting for resources to be ready...

[2020-05-27T19:37:46.797Z] Deploying version v-8269494661...

[2020-05-27T19:37:46.893Z] Error: Error deploying backend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment backend-v-8269494661: ScalingReplicaSet - Scaled up replica set backend-v-8269494661-694b698648 to 1
Pod backend-v-8269494661-694b698648-kd7wx: Scheduled - Successfully assigned node-microservice/backend-v-8269494661-694b698648-kd7wx to minikube
Pod backend-v-8269494661-694b698648-kd7wx: Pulled - Container image "server:v-8269494661" already present on machine
Pod backend-v-8269494661-694b698648-kd7wx: Created - Created container backend
Pod backend-v-8269494661-694b698648-kd7wx: Started - Started container backend
Pod backend-v-8269494661-694b698648-kd7wx: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-8269494661

****** backend-v-8269494661-694b698648-kd7wx ******
------ backend ------/usr/src/server/node_modules/sequelize/lib/sequelize.js:265
      throw new Error('Dialect needs to be explicitly supplied as of v4.0.0');
      ^

Error: Dialect needs to be explicitly supplied as of v4.0.0
    at new Sequelize (/usr/src/server/node_modules/sequelize/lib/sequelize.js:265:13)
    at Object.<anonymous> (/usr/src/server/models.js:2:19)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Module.require (internal/modules/cjs/loader.js:1019:19)
    at require (internal/modules/cjs/helpers.js:77:18)
    at Object.<anonymous> (/usr/src/server/app.js:4:12)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-8269494661:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-8269494661-694b698648 to 1\e[39m\n\e[94mPod backend-v-8269494661-694b698648-kd7wx:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-8269494661-694b698648-kd7wx to minikube\e[39m\n\e[94mPod backend-v-8269494661-694b698648-kd7wx:\e[39m \e[37mPulled - Container image \"server:v-8269494661\" already present on machine\e[39m\n\e[94mPod backend-v-8269494661-694b698648-kd7wx:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-8269494661-694b698648-kd7wx:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-8269494661-694b698648-kd7wx:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-8269494661\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-8269494661-694b698648-kd7wx ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m/usr/src/server/node_modules/sequelize/lib/sequelize.js:265\n      throw new Error('Dialect needs to be explicitly supplied as of v4.0.0');\n      ^\n\nError: Dialect needs to be explicitly supplied as of v4.0.0\n    at new Sequelize (/usr/src/server/node_modules/sequelize/lib/sequelize.js:265:13)\n    at Object.<anonymous> (/usr/src/server/models.js:2:19)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Module.require (internal/modules/cjs/loader.js:1019:19)\n    at require (internal/modules/cjs/helpers.js:77:18)\n    at Object.<anonymous> (/usr/src/server/app.js:4:12)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-8269494661
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-8269494661
      uid: b5a4383d-4d2c-409c-8fa5-8edfa765bdf6
      resourceVersion: '68022'
      generation: 1
      creationTimestamp: '2020-05-27T19:37:43Z'
      labels:
        garden.io/version: v-8269494661
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: b73d5c54f234885c58ffb822124d31a1569614c14013213d21f3456fc27b3b30
        garden.io/version: v-8269494661
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"b73d5c54f234885c58ffb822124d31a1569614c14013213d21f3456fc27b3b30","garden.io/version":"v-8269494661"},"labels":{"garden.io/version":"v-8269494661","module":"server","service":"backend"},"name":"backend-v-8269494661","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-8269494661","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-8269494661","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-8269494661"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-8269494661\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-8269494661","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-8269494661
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-8269494661
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T19:37:46.987Z] Waiting for code changes...

[2020-05-27T19:37:47.983Z] ⏳  Processing...

[2020-05-27T19:37:48.215Z] Waiting for code changes...

[2020-05-27T19:37:48.313Z] ⏳  Processing...

[2020-05-27T19:37:48.409Z] Syncing module sources (7 files)...

[2020-05-27T19:37:48.645Z] Syncing module sources (7 files)... → Done (took 0.2 sec)

[2020-05-27T19:37:48.746Z] Building version v-f41ade4f9c...

[2020-05-27T19:37:49.278Z] Building server:v-f41ade4f9c...

[2020-05-27T19:37:49.925Z] Building server:v-f41ade4f9c... → Done (took 1.2 sec)

[2020-05-27T19:37:50.021Z] Deploying version v-f41ade4f9c...

[2020-05-27T19:37:51.874Z] Waiting for resources to be ready...

[2020-05-27T19:37:54.039Z] Deploying version v-f41ade4f9c...

[2020-05-27T19:37:54.141Z] Error: Error deploying backend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment backend-v-f41ade4f9c: ScalingReplicaSet - Scaled up replica set backend-v-f41ade4f9c-76f8ccf5b4 to 1
Pod backend-v-f41ade4f9c-76f8ccf5b4-fvc5h: Scheduled - Successfully assigned node-microservice/backend-v-f41ade4f9c-76f8ccf5b4-fvc5h to minikube
Pod backend-v-f41ade4f9c-76f8ccf5b4-fvc5h: Pulled - Container image "server:v-f41ade4f9c" already present on machine
Pod backend-v-f41ade4f9c-76f8ccf5b4-fvc5h: Created - Created container backend
Pod backend-v-f41ade4f9c-76f8ccf5b4-fvc5h: Started - Started container backend
Pod backend-v-f41ade4f9c-76f8ccf5b4-fvc5h: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-f41ade4f9c

****** backend-v-f41ade4f9c-76f8ccf5b4-fvc5h ******
------ backend ------/usr/src/server/node_modules/sequelize/lib/sequelize.js:265
      throw new Error('Dialect needs to be explicitly supplied as of v4.0.0');
      ^

Error: Dialect needs to be explicitly supplied as of v4.0.0
    at new Sequelize (/usr/src/server/node_modules/sequelize/lib/sequelize.js:265:13)
    at Object.<anonymous> (/usr/src/server/models.js:2:19)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Module.require (internal/modules/cjs/loader.js:1019:19)
    at require (internal/modules/cjs/helpers.js:77:18)
    at Object.<anonymous> (/usr/src/server/app.js:4:12)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-f41ade4f9c:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-f41ade4f9c-76f8ccf5b4 to 1\e[39m\n\e[94mPod backend-v-f41ade4f9c-76f8ccf5b4-fvc5h:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-f41ade4f9c-76f8ccf5b4-fvc5h to minikube\e[39m\n\e[94mPod backend-v-f41ade4f9c-76f8ccf5b4-fvc5h:\e[39m \e[37mPulled - Container image \"server:v-f41ade4f9c\" already present on machine\e[39m\n\e[94mPod backend-v-f41ade4f9c-76f8ccf5b4-fvc5h:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-f41ade4f9c-76f8ccf5b4-fvc5h:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-f41ade4f9c-76f8ccf5b4-fvc5h:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-f41ade4f9c\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-f41ade4f9c-76f8ccf5b4-fvc5h ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m/usr/src/server/node_modules/sequelize/lib/sequelize.js:265\n      throw new Error('Dialect needs to be explicitly supplied as of v4.0.0');\n      ^\n\nError: Dialect needs to be explicitly supplied as of v4.0.0\n    at new Sequelize (/usr/src/server/node_modules/sequelize/lib/sequelize.js:265:13)\n    at Object.<anonymous> (/usr/src/server/models.js:2:19)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Module.require (internal/modules/cjs/loader.js:1019:19)\n    at require (internal/modules/cjs/helpers.js:77:18)\n    at Object.<anonymous> (/usr/src/server/app.js:4:12)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-f41ade4f9c
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-f41ade4f9c
      uid: fab8ce9b-2e1f-4b24-ba20-e68c0ab5295f
      resourceVersion: '68082'
      generation: 1
      creationTimestamp: '2020-05-27T19:37:50Z'
      labels:
        garden.io/version: v-f41ade4f9c
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: fae67ff74b579bded9ba2cf6e55cc0bcbd4e853fe8f5bd7341d2d1156dd24122
        garden.io/version: v-f41ade4f9c
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"fae67ff74b579bded9ba2cf6e55cc0bcbd4e853fe8f5bd7341d2d1156dd24122","garden.io/version":"v-f41ade4f9c"},"labels":{"garden.io/version":"v-f41ade4f9c","module":"server","service":"backend"},"name":"backend-v-f41ade4f9c","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-f41ade4f9c","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-f41ade4f9c","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-f41ade4f9c"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-f41ade4f9c\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-f41ade4f9c","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-f41ade4f9c
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-f41ade4f9c
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T19:37:54.238Z] Waiting for code changes...

[2020-05-27T19:38:15.207Z] ⏳  Processing...

[2020-05-27T19:38:15.439Z] Waiting for code changes...

[2020-05-27T19:38:15.544Z] ⏳  Processing...

[2020-05-27T19:38:15.647Z] Syncing module sources (7 files)...

[2020-05-27T19:38:15.890Z] Syncing module sources (7 files)... → Done (took 0.2 sec)

[2020-05-27T19:38:15.988Z] Building version v-3f0864f45a...

[2020-05-27T19:38:16.514Z] Building server:v-3f0864f45a...

[2020-05-27T19:38:17.154Z] Building server:v-3f0864f45a... → Done (took 1.2 sec)

[2020-05-27T19:38:17.254Z] Deploying version v-3f0864f45a...

[2020-05-27T19:38:19.123Z] Waiting for resources to be ready...

[2020-05-27T19:38:21.282Z] Deploying version v-3f0864f45a...

[2020-05-27T19:38:21.382Z] Error: Error deploying backend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment backend-v-3f0864f45a: ScalingReplicaSet - Scaled up replica set backend-v-3f0864f45a-754f869fdd to 1
Pod backend-v-3f0864f45a-754f869fdd-c4x4s: Scheduled - Successfully assigned node-microservice/backend-v-3f0864f45a-754f869fdd-c4x4s to minikube
Pod backend-v-3f0864f45a-754f869fdd-c4x4s: Pulled - Container image "server:v-3f0864f45a" already present on machine
Pod backend-v-3f0864f45a-754f869fdd-c4x4s: Created - Created container backend
Pod backend-v-3f0864f45a-754f869fdd-c4x4s: Started - Started container backend
Pod backend-v-3f0864f45a-754f869fdd-c4x4s: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-3f0864f45a

****** backend-v-3f0864f45a-754f869fdd-c4x4s ******
------ backend ------    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Module.require (internal/modules/cjs/loader.js:1019:19)
    at require (internal/modules/cjs/helpers.js:77:18)
    at Object.<anonymous> (/usr/src/server/models.js:2:12)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Module.require (internal/modules/cjs/loader.js:1019:19)
    at require (internal/modules/cjs/helpers.js:77:18)
    at Object.<anonymous> (/usr/src/server/app.js:4:12)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-3f0864f45a:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-3f0864f45a-754f869fdd to 1\e[39m\n\e[94mPod backend-v-3f0864f45a-754f869fdd-c4x4s:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-3f0864f45a-754f869fdd-c4x4s to minikube\e[39m\n\e[94mPod backend-v-3f0864f45a-754f869fdd-c4x4s:\e[39m \e[37mPulled - Container image \"server:v-3f0864f45a\" already present on machine\e[39m\n\e[94mPod backend-v-3f0864f45a-754f869fdd-c4x4s:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-3f0864f45a-754f869fdd-c4x4s:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-3f0864f45a-754f869fdd-c4x4s:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-3f0864f45a\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-3f0864f45a-754f869fdd-c4x4s ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Module.require (internal/modules/cjs/loader.js:1019:19)\n    at require (internal/modules/cjs/helpers.js:77:18)\n    at Object.<anonymous> (/usr/src/server/models.js:2:12)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Module.require (internal/modules/cjs/loader.js:1019:19)\n    at require (internal/modules/cjs/helpers.js:77:18)\n    at Object.<anonymous> (/usr/src/server/app.js:4:12)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-3f0864f45a
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-3f0864f45a
      uid: e68f17e6-7a4f-4d11-80f6-e86ac3fa1c40
      resourceVersion: '68215'
      generation: 1
      creationTimestamp: '2020-05-27T19:38:17Z'
      labels:
        garden.io/version: v-3f0864f45a
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 7a1a59363e7641a422b93c9a4d7b6769255b7b465621d773c0efc08f4b3fcabd
        garden.io/version: v-3f0864f45a
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"7a1a59363e7641a422b93c9a4d7b6769255b7b465621d773c0efc08f4b3fcabd","garden.io/version":"v-3f0864f45a"},"labels":{"garden.io/version":"v-3f0864f45a","module":"server","service":"backend"},"name":"backend-v-3f0864f45a","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-3f0864f45a","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-3f0864f45a","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-3f0864f45a"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-3f0864f45a\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-3f0864f45a","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-3f0864f45a
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-3f0864f45a
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T19:38:21.480Z] Waiting for code changes...

[2020-05-27T19:39:33.849Z] ⏳  Processing...

[2020-05-27T19:39:34.092Z] Waiting for code changes...

[2020-05-27T19:39:34.200Z] ⏳  Processing...

[2020-05-27T19:39:34.302Z] Syncing module sources (7 files)...

[2020-05-27T19:39:34.577Z] Syncing module sources (7 files)... → Done (took 0.3 sec)

[2020-05-27T19:39:34.676Z] Building version v-03b39903cc...

[2020-05-27T19:39:35.227Z] Building server:v-03b39903cc...

[2020-05-27T19:39:35.905Z] Building server:v-03b39903cc... → Done (took 1.2 sec)

[2020-05-27T19:39:36.008Z] Deploying version v-03b39903cc...

[2020-05-27T19:39:37.867Z] Waiting for resources to be ready...

[2020-05-27T19:39:40.028Z] Deploying version v-03b39903cc...

[2020-05-27T19:39:40.129Z] Error: Error deploying backend: CrashLoopBackOff - back-off 10s restarting failed container=backend pod=backend-v-03b39903cc-6f8d5897fb-zj5f9_node-microservice(4550eb25-a4c4-4345-9c5b-62de9ba8a4e8)

━━━ Events ━━━
Deployment backend-v-03b39903cc: ScalingReplicaSet - Scaled up replica set backend-v-03b39903cc-6f8d5897fb to 1
Pod backend-v-03b39903cc-6f8d5897fb-zj5f9: Scheduled - Successfully assigned node-microservice/backend-v-03b39903cc-6f8d5897fb-zj5f9 to minikube
Pod backend-v-03b39903cc-6f8d5897fb-zj5f9: Pulled - Container image "server:v-03b39903cc" already present on machine
Pod backend-v-03b39903cc-6f8d5897fb-zj5f9: Created - Created container backend
Pod backend-v-03b39903cc-6f8d5897fb-zj5f9: Started - Started container backend
Pod backend-v-03b39903cc-6f8d5897fb-zj5f9: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-03b39903cc

****** backend-v-03b39903cc-6f8d5897fb-zj5f9 ******
------ backend ------/usr/src/server/app.js:15
conn.connect(err => {
     ^

TypeError: conn.connect is not a function
    at Object.<anonymous> (/usr/src/server/app.js:15:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=backend
    pod=backend-v-03b39903cc-6f8d5897fb-zj5f9_node-microservice(4550eb25-a4c4-4345-9c5b-62de9ba8a4e8)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-03b39903cc:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-03b39903cc-6f8d5897fb to 1\e[39m\n\e[94mPod backend-v-03b39903cc-6f8d5897fb-zj5f9:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-03b39903cc-6f8d5897fb-zj5f9 to minikube\e[39m\n\e[94mPod backend-v-03b39903cc-6f8d5897fb-zj5f9:\e[39m \e[37mPulled - Container image \"server:v-03b39903cc\" already present on machine\e[39m\n\e[94mPod backend-v-03b39903cc-6f8d5897fb-zj5f9:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-03b39903cc-6f8d5897fb-zj5f9:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-03b39903cc-6f8d5897fb-zj5f9:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-03b39903cc\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-03b39903cc-6f8d5897fb-zj5f9 ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m/usr/src/server/app.js:15\nconn.connect(err => {\n     ^\n\nTypeError: conn.connect is not a function\n    at Object.<anonymous> (/usr/src/server/app.js:15:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-03b39903cc
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-03b39903cc
      uid: ce328c59-a3d1-4e0c-96d9-228d317f5281
      resourceVersion: '68437'
      generation: 1
      creationTimestamp: '2020-05-27T19:39:36Z'
      labels:
        garden.io/version: v-03b39903cc
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 9c43ec7f50ccd33b8044a93c30e77b14cb79d688c66d1ff3eb46b7ef2dc08fdc
        garden.io/version: v-03b39903cc
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"9c43ec7f50ccd33b8044a93c30e77b14cb79d688c66d1ff3eb46b7ef2dc08fdc","garden.io/version":"v-03b39903cc"},"labels":{"garden.io/version":"v-03b39903cc","module":"server","service":"backend"},"name":"backend-v-03b39903cc","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-03b39903cc","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-03b39903cc","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-03b39903cc"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-03b39903cc\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-03b39903cc","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-03b39903cc
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-03b39903cc
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T19:39:40.228Z] Waiting for code changes...

[2020-05-27T19:42:32.529Z] ⏳  Processing...

[2020-05-27T19:42:32.766Z] Waiting for code changes...

[2020-05-27T19:42:32.875Z] ⏳  Processing...

[2020-05-27T19:42:32.979Z] Syncing module sources (7 files)...

[2020-05-27T19:42:33.226Z] Syncing module sources (7 files)... → Done (took 0.2 sec)

[2020-05-27T19:42:33.328Z] Building version v-2370218e24...

[2020-05-27T19:42:33.882Z] Building server:v-2370218e24...

[2020-05-27T19:42:34.591Z] Building server:v-2370218e24... → Done (took 1.3 sec)

[2020-05-27T19:42:34.692Z] Deploying version v-2370218e24...

[2020-05-27T19:42:36.544Z] Waiting for resources to be ready...

[2020-05-27T19:42:38.712Z] Deploying version v-2370218e24...

[2020-05-27T19:42:38.816Z] Error: Error deploying backend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment backend-v-2370218e24: ScalingReplicaSet - Scaled up replica set backend-v-2370218e24-776d5d86bb to 1
Pod backend-v-2370218e24-776d5d86bb-kdstg: Scheduled - Successfully assigned node-microservice/backend-v-2370218e24-776d5d86bb-kdstg to minikube
Pod backend-v-2370218e24-776d5d86bb-kdstg: Pulled - Container image "server:v-2370218e24" already present on machine
Pod backend-v-2370218e24-776d5d86bb-kdstg: Created - Created container backend
Pod backend-v-2370218e24-776d5d86bb-kdstg: Started - Started container backend
Pod backend-v-2370218e24-776d5d86bb-kdstg: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-2370218e24

****** backend-v-2370218e24-776d5d86bb-kdstg ******
------ backend ------/usr/src/server/app.js:8
  await db.authenticate();
  ^^^^^

SyntaxError: await is only valid in async function
    at wrapSafe (internal/modules/cjs/loader.js:1047:16)
    at Module._compile (internal/modules/cjs/loader.js:1097:27)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-2370218e24:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-2370218e24-776d5d86bb to 1\e[39m\n\e[94mPod backend-v-2370218e24-776d5d86bb-kdstg:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-2370218e24-776d5d86bb-kdstg to minikube\e[39m\n\e[94mPod backend-v-2370218e24-776d5d86bb-kdstg:\e[39m \e[37mPulled - Container image \"server:v-2370218e24\" already present on machine\e[39m\n\e[94mPod backend-v-2370218e24-776d5d86bb-kdstg:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-2370218e24-776d5d86bb-kdstg:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-2370218e24-776d5d86bb-kdstg:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-2370218e24\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-2370218e24-776d5d86bb-kdstg ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m/usr/src/server/app.js:8\n  await db.authenticate();\n  ^^^^^\n\nSyntaxError: await is only valid in async function\n    at wrapSafe (internal/modules/cjs/loader.js:1047:16)\n    at Module._compile (internal/modules/cjs/loader.js:1097:27)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-2370218e24
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-2370218e24
      uid: ec779ea0-0915-4b97-9010-40c46c38c47d
      resourceVersion: '68932'
      generation: 1
      creationTimestamp: '2020-05-27T19:42:34Z'
      labels:
        garden.io/version: v-2370218e24
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 58e1b723bfb8ca0780af40eaad8d03904df45f6db10a8ee0fc520c0b7ae13a0b
        garden.io/version: v-2370218e24
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"58e1b723bfb8ca0780af40eaad8d03904df45f6db10a8ee0fc520c0b7ae13a0b","garden.io/version":"v-2370218e24"},"labels":{"garden.io/version":"v-2370218e24","module":"server","service":"backend"},"name":"backend-v-2370218e24","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-2370218e24","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-2370218e24","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-2370218e24"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-2370218e24\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-2370218e24","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-2370218e24
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-2370218e24
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T19:42:38.917Z] ⏳  Processing...

[2020-05-27T19:42:39.022Z] Syncing module sources (7 files)...

[2020-05-27T19:42:39.291Z] Syncing module sources (7 files)... → Done (took 0.3 sec)

[2020-05-27T19:42:39.393Z] Building version v-739a5d2b5c...

[2020-05-27T19:42:39.765Z] Building server:v-739a5d2b5c...

[2020-05-27T19:42:40.132Z] Building server:v-739a5d2b5c... → Done (took 0.7 sec)

[2020-05-27T19:42:40.234Z] Deploying version v-739a5d2b5c...

[2020-05-27T19:42:42.092Z] Waiting for resources to be ready...

[2020-05-27T19:42:44.256Z] Deploying version v-739a5d2b5c...

[2020-05-27T19:42:44.365Z] Error: Error deploying backend: CrashLoopBackOff - back-off 10s restarting failed container=backend pod=backend-v-739a5d2b5c-ccb67dcd8-w6rwz_node-microservice(efb88742-4f1d-4a33-a24a-29cc510c55e7)

━━━ Events ━━━
Deployment backend-v-739a5d2b5c: ScalingReplicaSet - Scaled up replica set backend-v-739a5d2b5c-ccb67dcd8 to 1
Pod backend-v-739a5d2b5c-ccb67dcd8-w6rwz: Scheduled - Successfully assigned node-microservice/backend-v-739a5d2b5c-ccb67dcd8-w6rwz to minikube
Pod backend-v-739a5d2b5c-ccb67dcd8-w6rwz: Pulled - Container image "server:v-739a5d2b5c" already present on machine
Pod backend-v-739a5d2b5c-ccb67dcd8-w6rwz: Created - Created container backend
Pod backend-v-739a5d2b5c-ccb67dcd8-w6rwz: Started - Started container backend
Pod backend-v-739a5d2b5c-ccb67dcd8-w6rwz: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-739a5d2b5c

****** backend-v-739a5d2b5c-ccb67dcd8-w6rwz ******
------ backend ------/usr/src/server/app.js:8
  await db.authenticate();
  ^^^^^

SyntaxError: await is only valid in async function
    at wrapSafe (internal/modules/cjs/loader.js:1047:16)
    at Module._compile (internal/modules/cjs/loader.js:1097:27)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=backend
    pod=backend-v-739a5d2b5c-ccb67dcd8-w6rwz_node-microservice(efb88742-4f1d-4a33-a24a-29cc510c55e7)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-739a5d2b5c:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-739a5d2b5c-ccb67dcd8 to 1\e[39m\n\e[94mPod backend-v-739a5d2b5c-ccb67dcd8-w6rwz:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-739a5d2b5c-ccb67dcd8-w6rwz to minikube\e[39m\n\e[94mPod backend-v-739a5d2b5c-ccb67dcd8-w6rwz:\e[39m \e[37mPulled - Container image \"server:v-739a5d2b5c\" already present on machine\e[39m\n\e[94mPod backend-v-739a5d2b5c-ccb67dcd8-w6rwz:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-739a5d2b5c-ccb67dcd8-w6rwz:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-739a5d2b5c-ccb67dcd8-w6rwz:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-739a5d2b5c\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-739a5d2b5c-ccb67dcd8-w6rwz ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m/usr/src/server/app.js:8\n  await db.authenticate();\n  ^^^^^\n\nSyntaxError: await is only valid in async function\n    at wrapSafe (internal/modules/cjs/loader.js:1047:16)\n    at Module._compile (internal/modules/cjs/loader.js:1097:27)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-739a5d2b5c
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-739a5d2b5c
      uid: ad4fee38-3a19-4914-ae01-b4d93b7b877a
      resourceVersion: '68988'
      generation: 1
      creationTimestamp: '2020-05-27T19:42:40Z'
      labels:
        garden.io/version: v-739a5d2b5c
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: aa88a1a3177dc763710f25a594e1db340c08c6b103824f23ef6dc40bf9266827
        garden.io/version: v-739a5d2b5c
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"aa88a1a3177dc763710f25a594e1db340c08c6b103824f23ef6dc40bf9266827","garden.io/version":"v-739a5d2b5c"},"labels":{"garden.io/version":"v-739a5d2b5c","module":"server","service":"backend"},"name":"backend-v-739a5d2b5c","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-739a5d2b5c","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-739a5d2b5c","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-739a5d2b5c"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-739a5d2b5c\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-739a5d2b5c","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-739a5d2b5c
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-739a5d2b5c
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T19:42:44.468Z] Waiting for code changes...

[2020-05-27T19:46:03.768Z] ⏳  Processing...

[2020-05-27T19:46:04.015Z] Waiting for code changes...

[2020-05-27T19:46:04.123Z] ⏳  Processing...

[2020-05-27T19:46:04.233Z] Syncing module sources (7 files)...

[2020-05-27T19:46:04.483Z] Syncing module sources (7 files)... → Done (took 0.3 sec)

[2020-05-27T19:46:04.584Z] Building version v-d489aca6c5...

[2020-05-27T19:46:05.136Z] Building server:v-d489aca6c5...

[2020-05-27T19:46:05.803Z] Building server:v-d489aca6c5... → Done (took 1.2 sec)

[2020-05-27T19:46:05.906Z] Deploying version v-d489aca6c5...

[2020-05-27T19:46:08.577Z] Waiting for resources to be ready...

[2020-05-27T19:46:10.753Z] Deploying version v-d489aca6c5...

[2020-05-27T19:46:10.860Z] Error: Error deploying backend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment backend-v-d489aca6c5: ScalingReplicaSet - Scaled up replica set backend-v-d489aca6c5-6b8fcd95cd to 1
Pod backend-v-d489aca6c5-6b8fcd95cd-25qmc: Scheduled - Successfully assigned node-microservice/backend-v-d489aca6c5-6b8fcd95cd-25qmc to minikube
Pod backend-v-d489aca6c5-6b8fcd95cd-25qmc: Pulled - Container image "server:v-d489aca6c5" already present on machine
Pod backend-v-d489aca6c5-6b8fcd95cd-25qmc: Created - Created container backend
Pod backend-v-d489aca6c5-6b8fcd95cd-25qmc: Started - Started container backend
Pod backend-v-d489aca6c5-6b8fcd95cd-25qmc: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-d489aca6c5

****** backend-v-d489aca6c5-6b8fcd95cd-25qmc ******
------ backend ------/usr/src/server/app.js:8
  await db.authenticate();
  ^^^^^

SyntaxError: await is only valid in async function
    at wrapSafe (internal/modules/cjs/loader.js:1047:16)
    at Module._compile (internal/modules/cjs/loader.js:1097:27)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-d489aca6c5:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-d489aca6c5-6b8fcd95cd to 1\e[39m\n\e[94mPod backend-v-d489aca6c5-6b8fcd95cd-25qmc:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-d489aca6c5-6b8fcd95cd-25qmc to minikube\e[39m\n\e[94mPod backend-v-d489aca6c5-6b8fcd95cd-25qmc:\e[39m \e[37mPulled - Container image \"server:v-d489aca6c5\" already present on machine\e[39m\n\e[94mPod backend-v-d489aca6c5-6b8fcd95cd-25qmc:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-d489aca6c5-6b8fcd95cd-25qmc:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-d489aca6c5-6b8fcd95cd-25qmc:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-d489aca6c5\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-d489aca6c5-6b8fcd95cd-25qmc ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m/usr/src/server/app.js:8\n  await db.authenticate();\n  ^^^^^\n\nSyntaxError: await is only valid in async function\n    at wrapSafe (internal/modules/cjs/loader.js:1047:16)\n    at Module._compile (internal/modules/cjs/loader.js:1097:27)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-d489aca6c5
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-d489aca6c5
      uid: e47b3205-c60c-4b27-b2aa-f27599c59384
      resourceVersion: '69535'
      generation: 1
      creationTimestamp: '2020-05-27T19:46:06Z'
      labels:
        garden.io/version: v-d489aca6c5
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: f428a47b99942d06e6b535387ee28d39f9e7caf0dd73d0c6284c087b8e23a3fe
        garden.io/version: v-d489aca6c5
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"f428a47b99942d06e6b535387ee28d39f9e7caf0dd73d0c6284c087b8e23a3fe","garden.io/version":"v-d489aca6c5"},"labels":{"garden.io/version":"v-d489aca6c5","module":"server","service":"backend"},"name":"backend-v-d489aca6c5","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-d489aca6c5","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-d489aca6c5","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-d489aca6c5"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-d489aca6c5\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-d489aca6c5","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-d489aca6c5
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-d489aca6c5
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T19:46:10.969Z] Waiting for code changes...

[2020-05-27T19:47:18.714Z] ⏳  Processing...

[2020-05-27T19:47:18.978Z] Waiting for code changes...

[2020-05-27T19:47:19.098Z] ⏳  Processing...

[2020-05-27T19:47:19.210Z] Syncing module sources (7 files)...

[2020-05-27T19:47:19.503Z] Syncing module sources (7 files)... → Done (took 0.3 sec)

[2020-05-27T19:47:19.609Z] Building version v-5622777072...

[2020-05-27T19:47:20.147Z] Building server:v-5622777072...

[2020-05-27T19:47:20.806Z] Building server:v-5622777072... → Done (took 1.2 sec)

[2020-05-27T19:47:20.911Z] Deploying version v-5622777072...

[2020-05-27T19:47:22.807Z] Waiting for resources to be ready...

[2020-05-27T19:47:24.974Z] Deploying version v-5622777072...

[2020-05-27T19:47:25.085Z] Error: Error deploying backend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment backend-v-5622777072: ScalingReplicaSet - Scaled up replica set backend-v-5622777072-5f4c4bc464 to 1
Pod backend-v-5622777072-5f4c4bc464-m2lfd: Scheduled - Successfully assigned node-microservice/backend-v-5622777072-5f4c4bc464-m2lfd to minikube
Pod backend-v-5622777072-5f4c4bc464-m2lfd: Pulled - Container image "server:v-5622777072" already present on machine
Pod backend-v-5622777072-5f4c4bc464-m2lfd: Created - Created container backend
Pod backend-v-5622777072-5f4c4bc464-m2lfd: Started - Started container backend
Pod backend-v-5622777072-5f4c4bc464-m2lfd: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-5622777072

****** backend-v-5622777072-5f4c4bc464-m2lfd ******
------ backend ------/usr/src/server/app.js:37
  const tasks = await Task.findAll();
                ^^^^^

SyntaxError: await is only valid in async function
    at wrapSafe (internal/modules/cjs/loader.js:1047:16)
    at Module._compile (internal/modules/cjs/loader.js:1097:27)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-5622777072:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-5622777072-5f4c4bc464 to 1\e[39m\n\e[94mPod backend-v-5622777072-5f4c4bc464-m2lfd:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-5622777072-5f4c4bc464-m2lfd to minikube\e[39m\n\e[94mPod backend-v-5622777072-5f4c4bc464-m2lfd:\e[39m \e[37mPulled - Container image \"server:v-5622777072\" already present on machine\e[39m\n\e[94mPod backend-v-5622777072-5f4c4bc464-m2lfd:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-5622777072-5f4c4bc464-m2lfd:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-5622777072-5f4c4bc464-m2lfd:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-5622777072\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-5622777072-5f4c4bc464-m2lfd ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m/usr/src/server/app.js:37\n  const tasks = await Task.findAll();\n                ^^^^^\n\nSyntaxError: await is only valid in async function\n    at wrapSafe (internal/modules/cjs/loader.js:1047:16)\n    at Module._compile (internal/modules/cjs/loader.js:1097:27)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-5622777072
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-5622777072
      uid: 9120649a-275d-4f93-9829-6c03746d2091
      resourceVersion: '69776'
      generation: 1
      creationTimestamp: '2020-05-27T19:47:21Z'
      labels:
        garden.io/version: v-5622777072
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: b4e64553b6406c9fa05bd405c4714adca3a067b5209f7a7601884a6ee059de44
        garden.io/version: v-5622777072
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"b4e64553b6406c9fa05bd405c4714adca3a067b5209f7a7601884a6ee059de44","garden.io/version":"v-5622777072"},"labels":{"garden.io/version":"v-5622777072","module":"server","service":"backend"},"name":"backend-v-5622777072","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-5622777072","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-5622777072","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-5622777072"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-5622777072\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-5622777072","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-5622777072
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-5622777072
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T19:47:25.191Z] Waiting for code changes...

[2020-05-27T19:47:26.742Z] ⏳  Processing...

[2020-05-27T19:47:26.987Z] Waiting for code changes...

[2020-05-27T19:47:27.096Z] ⏳  Processing...

[2020-05-27T19:47:27.202Z] Syncing module sources (7 files)...

[2020-05-27T19:47:27.466Z] Syncing module sources (7 files)... → Done (took 0.3 sec)

[2020-05-27T19:47:27.571Z] Building version v-d3054733a4...

[2020-05-27T19:47:27.943Z] Building server:v-d3054733a4...

[2020-05-27T19:47:28.592Z] Building server:v-d3054733a4... → Done (took 1 sec)

[2020-05-27T19:47:28.726Z] Deploying version v-d3054733a4...

[2020-05-27T19:47:30.616Z] Waiting for resources to be ready...

[2020-05-27T19:47:32.788Z] Deploying version v-d3054733a4...

[2020-05-27T19:47:32.899Z] Error: Error deploying backend: CrashLoopBackOff - back-off 10s restarting failed container=backend pod=backend-v-d3054733a4-564c87886b-qpsbp_node-microservice(de4dd043-46e4-4e15-9e1d-b22288509dd7)

━━━ Events ━━━
Deployment backend-v-d3054733a4: ScalingReplicaSet - Scaled up replica set backend-v-d3054733a4-564c87886b to 1
Pod backend-v-d3054733a4-564c87886b-qpsbp: Scheduled - Successfully assigned node-microservice/backend-v-d3054733a4-564c87886b-qpsbp to minikube
Pod backend-v-d3054733a4-564c87886b-qpsbp: Pulled - Container image "server:v-d3054733a4" already present on machine
Pod backend-v-d3054733a4-564c87886b-qpsbp: Created - Created container backend
Pod backend-v-d3054733a4-564c87886b-qpsbp: Started - Started container backend
Pod backend-v-d3054733a4-564c87886b-qpsbp: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-d3054733a4

****** backend-v-d3054733a4-564c87886b-qpsbp ******
------ backend ------/usr/src/server/app.js:39
  const tasks = await Task.findAll();
                ^^^^^

SyntaxError: await is only valid in async function
    at wrapSafe (internal/modules/cjs/loader.js:1047:16)
    at Module._compile (internal/modules/cjs/loader.js:1097:27)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=backend
    pod=backend-v-d3054733a4-564c87886b-qpsbp_node-microservice(de4dd043-46e4-4e15-9e1d-b22288509dd7)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-d3054733a4:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-d3054733a4-564c87886b to 1\e[39m\n\e[94mPod backend-v-d3054733a4-564c87886b-qpsbp:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-d3054733a4-564c87886b-qpsbp to minikube\e[39m\n\e[94mPod backend-v-d3054733a4-564c87886b-qpsbp:\e[39m \e[37mPulled - Container image \"server:v-d3054733a4\" already present on machine\e[39m\n\e[94mPod backend-v-d3054733a4-564c87886b-qpsbp:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-d3054733a4-564c87886b-qpsbp:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-d3054733a4-564c87886b-qpsbp:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-d3054733a4\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-d3054733a4-564c87886b-qpsbp ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m/usr/src/server/app.js:39\n  const tasks = await Task.findAll();\n                ^^^^^\n\nSyntaxError: await is only valid in async function\n    at wrapSafe (internal/modules/cjs/loader.js:1047:16)\n    at Module._compile (internal/modules/cjs/loader.js:1097:27)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-d3054733a4
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-d3054733a4
      uid: ca596496-550d-482b-8d30-123723325917
      resourceVersion: '69830'
      generation: 1
      creationTimestamp: '2020-05-27T19:47:28Z'
      labels:
        garden.io/version: v-d3054733a4
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 8f234e356e3870bfab40a375213727ba48e56d129e4547a7b5d1d8c42a1ac078
        garden.io/version: v-d3054733a4
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"8f234e356e3870bfab40a375213727ba48e56d129e4547a7b5d1d8c42a1ac078","garden.io/version":"v-d3054733a4"},"labels":{"garden.io/version":"v-d3054733a4","module":"server","service":"backend"},"name":"backend-v-d3054733a4","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-d3054733a4","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-d3054733a4","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-d3054733a4"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-d3054733a4\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-d3054733a4","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-d3054733a4
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-d3054733a4
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T19:47:33.009Z] Waiting for code changes...

[2020-05-27T19:47:47.753Z] ⏳  Processing...

[2020-05-27T19:47:48.016Z] Waiting for code changes...

[2020-05-27T19:47:48.128Z] ⏳  Processing...

[2020-05-27T19:47:48.239Z] Syncing module sources (7 files)...

[2020-05-27T19:47:48.538Z] Syncing module sources (7 files)... → Done (took 0.3 sec)

[2020-05-27T19:47:48.645Z] Building version v-e766f5ed29...

[2020-05-27T19:47:49.192Z] Building server:v-e766f5ed29...

[2020-05-27T19:47:49.834Z] Building server:v-e766f5ed29... → Done (took 1.2 sec)

[2020-05-27T19:47:49.942Z] Deploying version v-e766f5ed29...

[2020-05-27T19:47:51.804Z] Waiting for resources to be ready...

[2020-05-27T19:47:53.925Z] Resources ready

[2020-05-27T19:47:54.050Z] Deploying version v-e766f5ed29... → Done (took 4.1 sec)

[2020-05-27T19:47:54.176Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T19:47:54.284Z] Waiting for code changes...

[2020-05-27T19:48:08.486Z] ⏳  Processing...

[2020-05-27T19:48:08.746Z] Waiting for code changes...

[2020-05-27T19:48:08.859Z] ⏳  Processing...

[2020-05-27T19:48:08.971Z] Syncing module sources (7 files)...

[2020-05-27T19:48:09.250Z] Syncing module sources (7 files)... → Done (took 0.3 sec)

[2020-05-27T19:48:09.373Z] Building version v-d3054733a4...

[2020-05-27T19:48:09.915Z] Building server:v-d3054733a4...

[2020-05-27T19:48:10.289Z] Building server:v-d3054733a4... → Done (took 0.9 sec)

[2020-05-27T19:48:10.400Z] Deploying version v-d3054733a4...

[2020-05-27T19:48:12.320Z] Waiting for resources to be ready...

[2020-05-27T19:48:14.494Z] Deploying version v-d3054733a4...

[2020-05-27T19:48:14.608Z] Error: Error deploying backend: CrashLoopBackOff - back-off 10s restarting failed container=backend pod=backend-v-d3054733a4-564c87886b-wqpzv_node-microservice(b2518e58-bb7e-4cd4-b1ca-8f4efde716d6)

━━━ Events ━━━
Deployment backend-v-d3054733a4: ScalingReplicaSet - Scaled up replica set backend-v-d3054733a4-564c87886b to 1
Deployment backend-v-d3054733a4: ScalingReplicaSet - Scaled up replica set backend-v-d3054733a4-564c87886b to 1
Pod backend-v-d3054733a4-564c87886b-wqpzv: Scheduled - Successfully assigned node-microservice/backend-v-d3054733a4-564c87886b-wqpzv to minikube
Pod backend-v-d3054733a4-564c87886b-wqpzv: Pulled - Container image "server:v-d3054733a4" already present on machine
Pod backend-v-d3054733a4-564c87886b-wqpzv: Created - Created container backend
Pod backend-v-d3054733a4-564c87886b-wqpzv: Started - Started container backend
Pod backend-v-d3054733a4-564c87886b-wqpzv: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-d3054733a4

****** backend-v-d3054733a4-564c87886b-wqpzv ******
------ backend ------/usr/src/server/app.js:39
  const tasks = await Task.findAll();
                ^^^^^

SyntaxError: await is only valid in async function
    at wrapSafe (internal/modules/cjs/loader.js:1047:16)
    at Module._compile (internal/modules/cjs/loader.js:1097:27)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=backend
    pod=backend-v-d3054733a4-564c87886b-wqpzv_node-microservice(b2518e58-bb7e-4cd4-b1ca-8f4efde716d6)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-d3054733a4:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-d3054733a4-564c87886b to 1\e[39m\n\e[94mDeployment backend-v-d3054733a4:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-d3054733a4-564c87886b to 1\e[39m\n\e[94mPod backend-v-d3054733a4-564c87886b-wqpzv:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-d3054733a4-564c87886b-wqpzv to minikube\e[39m\n\e[94mPod backend-v-d3054733a4-564c87886b-wqpzv:\e[39m \e[37mPulled - Container image \"server:v-d3054733a4\" already present on machine\e[39m\n\e[94mPod backend-v-d3054733a4-564c87886b-wqpzv:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-d3054733a4-564c87886b-wqpzv:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-d3054733a4-564c87886b-wqpzv:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-d3054733a4\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-d3054733a4-564c87886b-wqpzv ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m/usr/src/server/app.js:39\n  const tasks = await Task.findAll();\n                ^^^^^\n\nSyntaxError: await is only valid in async function\n    at wrapSafe (internal/modules/cjs/loader.js:1047:16)\n    at Module._compile (internal/modules/cjs/loader.js:1097:27)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-d3054733a4
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-d3054733a4
      uid: ca834d00-3bb8-4061-bfc1-09ba983d04a0
      resourceVersion: '70013'
      generation: 1
      creationTimestamp: '2020-05-27T19:48:10Z'
      labels:
        garden.io/version: v-d3054733a4
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 8f234e356e3870bfab40a375213727ba48e56d129e4547a7b5d1d8c42a1ac078
        garden.io/version: v-d3054733a4
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"8f234e356e3870bfab40a375213727ba48e56d129e4547a7b5d1d8c42a1ac078","garden.io/version":"v-d3054733a4"},"labels":{"garden.io/version":"v-d3054733a4","module":"server","service":"backend"},"name":"backend-v-d3054733a4","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-d3054733a4","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-d3054733a4","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-d3054733a4"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-d3054733a4\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-d3054733a4","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-d3054733a4
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-d3054733a4
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T19:48:14.728Z] Waiting for code changes...

[2020-05-27T19:49:53.530Z] ⏳  Processing...

[2020-05-27T19:49:53.791Z] Waiting for code changes...

[2020-05-27T19:49:53.914Z] ⏳  Processing...

[2020-05-27T19:49:54.029Z] Syncing module sources (7 files)...

[2020-05-27T19:49:54.322Z] Syncing module sources (7 files)... → Done (took 0.3 sec)

[2020-05-27T19:49:54.436Z] Building version v-0ea44c84bf...

[2020-05-27T19:49:54.980Z] Building server:v-0ea44c84bf...

[2020-05-27T19:49:55.641Z] Building server:v-0ea44c84bf... → Done (took 1.2 sec)

[2020-05-27T19:49:55.758Z] Deploying version v-0ea44c84bf...

[2020-05-27T19:49:57.661Z] Waiting for resources to be ready...

[2020-05-27T19:49:59.853Z] Deploying version v-0ea44c84bf...

[2020-05-27T19:49:59.970Z] Error: Error deploying backend: CrashLoopBackOff - back-off 10s restarting failed container=backend pod=backend-v-0ea44c84bf-ff9d6684-sxqvj_node-microservice(fc654368-fa14-4087-ba9a-7dc4baf13a02)

━━━ Events ━━━
Deployment backend-v-0ea44c84bf: ScalingReplicaSet - Scaled up replica set backend-v-0ea44c84bf-ff9d6684 to 1
Pod backend-v-0ea44c84bf-ff9d6684-sxqvj: Scheduled - Successfully assigned node-microservice/backend-v-0ea44c84bf-ff9d6684-sxqvj to minikube
Pod backend-v-0ea44c84bf-ff9d6684-sxqvj: Pulled - Container image "server:v-0ea44c84bf" already present on machine
Pod backend-v-0ea44c84bf-ff9d6684-sxqvj: Created - Created container backend
Pod backend-v-0ea44c84bf-ff9d6684-sxqvj: Started - Started container backend
Pod backend-v-0ea44c84bf-ff9d6684-sxqvj: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-0ea44c84bf

****** backend-v-0ea44c84bf-ff9d6684-sxqvj ******
------ backend ------/usr/src/server/app.js:39
  const tasks = await Task.findAll();
                ^^^^^

SyntaxError: await is only valid in async function
    at wrapSafe (internal/modules/cjs/loader.js:1047:16)
    at Module._compile (internal/modules/cjs/loader.js:1097:27)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=backend
    pod=backend-v-0ea44c84bf-ff9d6684-sxqvj_node-microservice(fc654368-fa14-4087-ba9a-7dc4baf13a02)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-0ea44c84bf:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-0ea44c84bf-ff9d6684 to 1\e[39m\n\e[94mPod backend-v-0ea44c84bf-ff9d6684-sxqvj:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-0ea44c84bf-ff9d6684-sxqvj to minikube\e[39m\n\e[94mPod backend-v-0ea44c84bf-ff9d6684-sxqvj:\e[39m \e[37mPulled - Container image \"server:v-0ea44c84bf\" already present on machine\e[39m\n\e[94mPod backend-v-0ea44c84bf-ff9d6684-sxqvj:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-0ea44c84bf-ff9d6684-sxqvj:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-0ea44c84bf-ff9d6684-sxqvj:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-0ea44c84bf\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-0ea44c84bf-ff9d6684-sxqvj ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m/usr/src/server/app.js:39\n  const tasks = await Task.findAll();\n                ^^^^^\n\nSyntaxError: await is only valid in async function\n    at wrapSafe (internal/modules/cjs/loader.js:1047:16)\n    at Module._compile (internal/modules/cjs/loader.js:1097:27)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-0ea44c84bf
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-0ea44c84bf
      uid: 242b3459-5ba9-4c86-92c5-971dfecfcf7f
      resourceVersion: '70335'
      generation: 1
      creationTimestamp: '2020-05-27T19:49:56Z'
      labels:
        garden.io/version: v-0ea44c84bf
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: c8e1f9257157ca97fca6d6ad2e37c30065d4c05f1b0e816683798d64eeb0e97e
        garden.io/version: v-0ea44c84bf
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"c8e1f9257157ca97fca6d6ad2e37c30065d4c05f1b0e816683798d64eeb0e97e","garden.io/version":"v-0ea44c84bf"},"labels":{"garden.io/version":"v-0ea44c84bf","module":"server","service":"backend"},"name":"backend-v-0ea44c84bf","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-0ea44c84bf","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-0ea44c84bf","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-0ea44c84bf"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-0ea44c84bf\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-8bbe6fa30a\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-0ea44c84bf","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-0ea44c84bf
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-0ea44c84bf
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T19:50:00.080Z] Waiting for code changes...

[2020-05-27T19:50:11.566Z] ⏳  Processing...

[2020-05-27T19:50:11.831Z] Waiting for code changes...

[2020-05-27T19:50:11.945Z] ⏳  Processing...

[2020-05-27T19:50:12.057Z] Syncing module sources (7 files)...

[2020-05-27T19:50:12.327Z] Syncing module sources (7 files)... → Done (took 0.3 sec)

[2020-05-27T19:50:12.442Z] Building version v-6481b3bdaf...

[2020-05-27T19:50:13.003Z] Building server:v-6481b3bdaf...

[2020-05-27T19:50:13.669Z] Building server:v-6481b3bdaf... → Done (took 1.2 sec)

[2020-05-27T19:50:13.783Z] Deploying version v-6481b3bdaf...

[2020-05-27T19:50:15.652Z] Waiting for resources to be ready...

[2020-05-27T19:50:17.810Z] Resources ready

[2020-05-27T19:50:17.942Z] Deploying version v-6481b3bdaf... → Done (took 4.2 sec)

[2020-05-27T19:50:18.061Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T19:50:18.176Z] Waiting for code changes...

[2020-05-27T19:51:16.964Z] ⏳  Processing...

[2020-05-27T19:51:17.151Z] Waiting for code changes...

[2020-05-27T19:51:17.269Z] ⏳  Processing...

[2020-05-27T19:51:17.496Z] Waiting for code changes...

[2020-05-27T19:51:17.634Z] ⏳  Processing...

[2020-05-27T19:51:17.786Z] Waiting for code changes...

[2020-05-27T19:51:31.946Z] Getting status...

[2020-05-27T19:51:34.362Z] Getting status... → Done

[2020-05-27T19:51:34.669Z] Error: Unknown dependencies detected.

  Service 'backend' (in module 'server'): Unknown service or task 'db' referenced in dependencies.

  Task 'create-db' (in module 'server'): Unknown service or task 'db' referenced in dependencies.

  Task 'use-test-db' (in module 'server'): Unknown service or task 'db' referenced in dependencies.

  Task 'create-table' (in module 'server'): Unknown service or task 'db' referenced in dependencies.

    at Object.detectMissingDependencies (/snapshot/project/garden-service/tmp/dist/build/src/util/validate-dependencies.js:0)
    at new ConfigGraph (/snapshot/project/garden-service/tmp/dist/build/src/config-graph.js:0)
    at Garden.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/garden.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/garden.js:0)
Error Details:
unknownDependencies: []
availableModules: []
availableServicesAndTasks: []


[2020-05-27T19:51:38.325Z] Getting status...

[2020-05-27T19:51:40.210Z] Getting status... → Done

[2020-05-27T19:51:40.518Z] Error: Unknown dependencies detected.

  Service 'backend' (in module 'server'): Unknown service or task 'db' referenced in dependencies.

  Task 'create-db' (in module 'server'): Unknown service or task 'db' referenced in dependencies.

  Task 'use-test-db' (in module 'server'): Unknown service or task 'db' referenced in dependencies.

  Task 'create-table' (in module 'server'): Unknown service or task 'db' referenced in dependencies.

    at Object.detectMissingDependencies (/snapshot/project/garden-service/tmp/dist/build/src/util/validate-dependencies.js:0)
    at new ConfigGraph (/snapshot/project/garden-service/tmp/dist/build/src/config-graph.js:0)
    at Garden.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/garden.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/garden.js:0)
Error Details:
unknownDependencies: []
availableModules: []
availableServicesAndTasks: []


[2020-05-27T19:51:46.478Z] Getting status...

[2020-05-27T19:51:48.442Z] Getting status... → Done

[2020-05-27T19:51:48.734Z] Error: Unknown dependencies detected.

  Service 'backend' (in module 'server'): Unknown service or task 'db' referenced in dependencies.

    at Object.detectMissingDependencies (/snapshot/project/garden-service/tmp/dist/build/src/util/validate-dependencies.js:0)
    at new ConfigGraph (/snapshot/project/garden-service/tmp/dist/build/src/config-graph.js:0)
    at Garden.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/garden.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/garden.js:0)
Error Details:
unknownDependencies: []
availableModules: []
availableServicesAndTasks: []


[2020-05-27T19:51:58.385Z] Getting status...

[2020-05-27T19:52:00.591Z] Getting status... → Done

[2020-05-27T19:52:00.949Z] Module configuration changed, reloading...

[2020-05-27T19:52:01.776Z] Getting status...

[2020-05-27T19:52:03.054Z] Getting status... → Done

[2020-05-27T19:52:03.450Z] ⏳  Processing...

[2020-05-27T19:52:03.563Z] Syncing module sources (17 files)...

[2020-05-27T19:52:03.905Z] Syncing module sources (7 files)...

[2020-05-27T19:52:04.091Z] Syncing module sources (7 files)... → Done (took 0.2 sec)

[2020-05-27T19:52:04.206Z] Getting build status for v-6c42d4185f...

[2020-05-27T19:52:04.971Z] Syncing module sources (17 files)... → Done (took 1.4 sec)

[2020-05-27T19:52:05.088Z] Getting build status for v-6b5541b26a...

[2020-05-27T19:52:05.206Z] Getting build status for v-99c8680ab9...

[2020-05-27T19:52:05.320Z] Getting build status for v-99c8680ab9... → Done (took 0.1 sec)

[2020-05-27T19:52:05.585Z] Deploying version v-99c8680ab9...

[2020-05-27T19:52:05.702Z] Deploying version v-99c8680ab9... → Already deployed

[2020-05-27T19:52:05.828Z] → Forward: http://127.0.0.1:8080 → postgres-db:8080 (http)

[2020-05-27T19:52:06.110Z] Building version v-6c42d4185f...

[2020-05-27T19:52:06.230Z] Getting build status for v-6b5541b26a... → Done (took 1.1 sec)

[2020-05-27T19:52:06.344Z] Deploying version v-6b5541b26a...

[2020-05-27T19:52:06.460Z] Deploying version v-6b5541b26a... → Already deployed

[2020-05-27T19:52:06.575Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T19:52:06.718Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T19:52:06.839Z] Building server:v-6c42d4185f...

[2020-05-27T19:52:07.248Z] Building server:v-6c42d4185f... → Done (took 3 sec)

[2020-05-27T19:52:07.366Z] Deploying version v-6c42d4185f...

[2020-05-27T19:52:09.240Z] Waiting for resources to be ready...

[2020-05-27T19:52:11.370Z] Resources ready

[2020-05-27T19:52:11.506Z] Deploying version v-6c42d4185f... → Done (took 4.1 sec)

[2020-05-27T19:52:11.624Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T19:52:11.744Z] ⏳  Processing...

[2020-05-27T19:52:11.875Z] Waiting for code changes...

[2020-05-27T19:52:14.085Z] ⏳  Processing...

[2020-05-27T19:52:14.237Z] Waiting for code changes...

[2020-05-27T19:52:14.356Z] ⏳  Processing...

[2020-05-27T19:52:14.557Z] Waiting for code changes...

[2020-05-27T19:52:14.682Z] ⏳  Processing...

[2020-05-27T19:52:14.817Z] Waiting for code changes...

[2020-05-27T19:53:20.496Z] ⏳  Processing...

[2020-05-27T19:53:20.748Z] Waiting for code changes...

[2020-05-27T19:53:20.876Z] ⏳  Processing...

[2020-05-27T19:53:21.003Z] Syncing module sources (17 files)...

[2020-05-27T19:53:21.542Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-27T19:53:21.664Z] Building version v-b53f635978...

[2020-05-27T19:53:22.221Z] Building client:v-b53f635978...

[2020-05-27T19:53:22.980Z] Building client:v-b53f635978... → Done (took 1.3 sec)

[2020-05-27T19:53:23.106Z] Deploying version v-b53f635978...

[2020-05-27T19:53:25.098Z] Waiting for resources to be ready...

[2020-05-27T19:53:27.238Z] Resources ready

[2020-05-27T19:53:27.403Z] Deploying version v-b53f635978... → Done (took 4.3 sec)

[2020-05-27T19:53:27.527Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T19:53:27.649Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T19:53:27.770Z] Waiting for code changes...

[2020-05-27T19:53:56.095Z] ⏳  Processing...

[2020-05-27T19:53:56.355Z] Waiting for code changes...

[2020-05-27T19:53:56.480Z] ⏳  Processing...

[2020-05-27T19:53:56.607Z] Syncing module sources (16 files)...

[2020-05-27T19:53:57.106Z] Syncing module sources (16 files)... → Done (took 0.5 sec)

[2020-05-27T19:53:57.227Z] Building version v-bd9b632252...

[2020-05-27T19:53:57.823Z] Building client:v-bd9b632252...

[2020-05-27T19:53:58.533Z] Building client:v-bd9b632252... → Done (took 1.3 sec)

[2020-05-27T19:53:58.654Z] Deploying version v-bd9b632252...

[2020-05-27T19:54:00.615Z] Waiting for resources to be ready...

[2020-05-27T19:54:02.756Z] Resources ready

[2020-05-27T19:54:02.900Z] Deploying version v-bd9b632252... → Done (took 4.2 sec)

[2020-05-27T19:54:03.024Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T19:54:03.170Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T19:54:03.289Z] ⏳  Processing...

[2020-05-27T19:54:03.406Z] Syncing module sources (16 files)...

[2020-05-27T19:54:03.933Z] Syncing module sources (16 files)... → Done (took 0.5 sec)

[2020-05-27T19:54:04.056Z] Building version v-78667236e3...

[2020-05-27T19:54:04.418Z] Building client:v-78667236e3...

[2020-05-27T19:54:04.812Z] Building client:v-78667236e3... → Done (took 0.7 sec)

[2020-05-27T19:54:04.933Z] Deploying version v-78667236e3...

[2020-05-27T19:54:07.132Z] Waiting for resources to be ready...

[2020-05-27T19:54:09.280Z] Resources ready

[2020-05-27T19:54:09.428Z] Deploying version v-78667236e3... → Done (took 4.5 sec)

[2020-05-27T19:54:09.549Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T19:54:09.670Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T19:54:09.793Z] Waiting for code changes...

[2020-05-27T19:54:36.516Z] ⏳  Processing...

[2020-05-27T19:54:36.753Z] Waiting for code changes...

[2020-05-27T19:54:36.882Z] ⏳  Processing...

[2020-05-27T19:54:37.013Z] Syncing module sources (16 files)...

[2020-05-27T19:54:37.553Z] Syncing module sources (16 files)... → Done (took 0.5 sec)

[2020-05-27T19:54:37.679Z] Building version v-8533881d07...

[2020-05-27T19:54:38.228Z] Building client:v-8533881d07...

[2020-05-27T19:54:38.906Z] Building client:v-8533881d07... → Done (took 1.2 sec)

[2020-05-27T19:54:39.028Z] Deploying version v-8533881d07...

[2020-05-27T19:54:41.008Z] Waiting for resources to be ready...

[2020-05-27T19:54:43.151Z] Resources ready

[2020-05-27T19:54:43.297Z] Deploying version v-8533881d07... → Done (took 4.3 sec)

[2020-05-27T19:54:43.419Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T19:54:43.540Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T19:54:43.666Z] Waiting for code changes...

[2020-05-27T19:55:02.479Z] ⏳  Processing...

[2020-05-27T19:55:02.716Z] Waiting for code changes...

[2020-05-27T19:55:02.844Z] ⏳  Processing...

[2020-05-27T19:55:02.967Z] Syncing module sources (16 files)...

[2020-05-27T19:55:03.471Z] Syncing module sources (16 files)... → Done (took 0.5 sec)

[2020-05-27T19:55:03.591Z] Building version v-7c7b8d8773...

[2020-05-27T19:55:04.164Z] Building client:v-7c7b8d8773...

[2020-05-27T19:55:04.850Z] Building client:v-7c7b8d8773... → Done (took 1.2 sec)

[2020-05-27T19:55:04.978Z] Deploying version v-7c7b8d8773...

[2020-05-27T19:55:06.944Z] Waiting for resources to be ready...

[2020-05-27T19:55:09.081Z] Resources ready

[2020-05-27T19:55:09.253Z] Deploying version v-7c7b8d8773... → Done (took 4.3 sec)

[2020-05-27T19:55:09.376Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T19:55:09.526Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T19:55:09.652Z] Waiting for code changes...

[2020-05-27T19:55:16.942Z] ⏳  Processing...

[2020-05-27T19:55:17.178Z] Waiting for code changes...

[2020-05-27T19:55:17.306Z] ⏳  Processing...

[2020-05-27T19:55:17.426Z] Syncing module sources (16 files)...

[2020-05-27T19:55:17.933Z] Syncing module sources (16 files)... → Done (took 0.5 sec)

[2020-05-27T19:55:18.053Z] Building version v-8b32549089...

[2020-05-27T19:55:18.643Z] Building client:v-8b32549089...

[2020-05-27T19:55:19.348Z] Building client:v-8b32549089... → Done (took 1.3 sec)

[2020-05-27T19:55:19.471Z] Deploying version v-8b32549089...

[2020-05-27T19:55:21.442Z] Waiting for resources to be ready...

[2020-05-27T19:55:23.579Z] Resources ready

[2020-05-27T19:55:23.741Z] Deploying version v-8b32549089... → Done (took 4.3 sec)

[2020-05-27T19:55:23.864Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T19:55:23.988Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T19:55:24.110Z] Waiting for code changes...

[2020-05-27T19:55:28.581Z] ⏳  Processing...

[2020-05-27T19:55:28.816Z] Waiting for code changes...

[2020-05-27T19:55:28.942Z] ⏳  Processing...

[2020-05-27T19:55:29.064Z] Syncing module sources (16 files)...

[2020-05-27T19:55:29.579Z] Syncing module sources (16 files)... → Done (took 0.5 sec)

[2020-05-27T19:55:29.702Z] Building version v-6918d1badc...

[2020-05-27T19:55:30.251Z] Building client:v-6918d1badc...

[2020-05-27T19:55:31.077Z] Building client:v-6918d1badc... → Done (took 1.4 sec)

[2020-05-27T19:55:31.202Z] Deploying version v-6918d1badc...

[2020-05-27T19:55:33.175Z] Waiting for resources to be ready...

[2020-05-27T19:55:35.313Z] Resources ready

[2020-05-27T19:55:35.467Z] Deploying version v-6918d1badc... → Done (took 4.3 sec)

[2020-05-27T19:55:35.590Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T19:55:35.711Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T19:55:35.833Z] Waiting for code changes...

[2020-05-27T19:56:21.234Z] ⏳  Processing...

[2020-05-27T19:56:21.481Z] Waiting for code changes...

[2020-05-27T19:56:21.612Z] ⏳  Processing...

[2020-05-27T19:56:21.741Z] Syncing module sources (16 files)...

[2020-05-27T19:56:22.249Z] Syncing module sources (16 files)... → Done (took 0.5 sec)

[2020-05-27T19:56:22.373Z] Building version v-5d74f5983b...

[2020-05-27T19:56:22.944Z] Building client:v-5d74f5983b...

[2020-05-27T19:56:23.648Z] Building client:v-5d74f5983b... → Done (took 1.3 sec)

[2020-05-27T19:56:23.781Z] Deploying version v-5d74f5983b...

[2020-05-27T19:56:26.562Z] Waiting for resources to be ready...

[2020-05-27T19:56:28.705Z] Resources ready

[2020-05-27T19:56:28.861Z] Deploying version v-5d74f5983b... → Done (took 5.1 sec)

[2020-05-27T19:56:28.981Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T19:56:29.134Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T19:56:29.256Z] Waiting for code changes...

[2020-05-27T19:56:59.272Z] ⏳  Processing...

[2020-05-27T19:56:59.509Z] Waiting for code changes...

[2020-05-27T19:56:59.644Z] ⏳  Processing...

[2020-05-27T19:56:59.767Z] Syncing module sources (16 files)...

[2020-05-27T19:57:00.301Z] Syncing module sources (16 files)... → Done (took 0.5 sec)

[2020-05-27T19:57:00.424Z] Building version v-dba5677ca1...

[2020-05-27T19:57:01.012Z] Building client:v-dba5677ca1...

[2020-05-27T19:57:01.731Z] Building client:v-dba5677ca1... → Done (took 1.3 sec)

[2020-05-27T19:57:01.855Z] Deploying version v-dba5677ca1...

[2020-05-27T19:57:03.813Z] Waiting for resources to be ready...

[2020-05-27T19:57:05.955Z] Resources ready

[2020-05-27T19:57:06.119Z] Deploying version v-dba5677ca1... → Done (took 4.3 sec)

[2020-05-27T19:57:06.242Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T19:57:06.366Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T19:57:06.491Z] ⏳  Processing...

[2020-05-27T19:57:06.616Z] Syncing module sources (16 files)...

[2020-05-27T19:57:07.143Z] Syncing module sources (16 files)... → Done (took 0.5 sec)

[2020-05-27T19:57:07.271Z] Building version v-6421a4d0f5...

[2020-05-27T19:57:07.649Z] Building client:v-6421a4d0f5...

[2020-05-27T19:57:08.059Z] Building client:v-6421a4d0f5... → Done (took 0.8 sec)

[2020-05-27T19:57:08.184Z] Deploying version v-6421a4d0f5...

[2020-05-27T19:57:10.360Z] Waiting for resources to be ready...

[2020-05-27T19:57:12.497Z] Resources ready

[2020-05-27T19:57:12.651Z] Deploying version v-6421a4d0f5... → Done (took 4.5 sec)

[2020-05-27T19:57:12.774Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T19:57:12.895Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T19:57:13.021Z] Waiting for code changes...

[2020-05-27T19:57:28.062Z] ⏳  Processing...

[2020-05-27T19:57:28.326Z] Waiting for code changes...

[2020-05-27T19:57:28.455Z] ⏳  Processing...

[2020-05-27T19:57:28.579Z] Syncing module sources (16 files)...

[2020-05-27T19:57:28.973Z] Syncing module sources (16 files)... → Done (took 0.4 sec)

[2020-05-27T19:57:29.099Z] Building version v-6421a4d0f5...

[2020-05-27T19:57:29.666Z] Building client:v-6421a4d0f5...

[2020-05-27T19:57:30.077Z] Building client:v-6421a4d0f5... → Done (took 1 sec)

[2020-05-27T19:57:30.206Z] Deploying version v-6421a4d0f5...

[2020-05-27T19:57:31.913Z] Waiting for resources to be ready...

[2020-05-27T19:57:34.060Z] Resources ready

[2020-05-27T19:57:34.208Z] Deploying version v-6421a4d0f5... → Done (took 4 sec)

[2020-05-27T19:57:34.332Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T19:57:34.457Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T19:57:34.585Z] Waiting for code changes...

[2020-05-27T19:57:37.349Z] ⏳  Processing...

[2020-05-27T19:57:37.585Z] Waiting for code changes...

[2020-05-27T19:57:37.717Z] ⏳  Processing...

[2020-05-27T19:57:37.846Z] Syncing module sources (16 files)...

[2020-05-27T19:57:38.376Z] Syncing module sources (16 files)... → Done (took 0.5 sec)

[2020-05-27T19:57:38.503Z] Building version v-7c25253d56...

[2020-05-27T19:57:38.905Z] Building client:v-7c25253d56...

[2020-05-27T19:57:39.622Z] Building client:v-7c25253d56... → Done (took 1.1 sec)

[2020-05-27T19:57:39.747Z] Deploying version v-7c25253d56...

[2020-05-27T19:57:41.722Z] Waiting for resources to be ready...

[2020-05-27T19:57:43.869Z] Resources ready

[2020-05-27T19:57:44.019Z] Deploying version v-7c25253d56... → Done (took 4.3 sec)

[2020-05-27T19:57:44.149Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T19:57:44.279Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T19:57:44.411Z] Waiting for code changes...

[2020-05-27T19:58:04.773Z] ⏳  Processing...

[2020-05-27T19:58:05.033Z] Waiting for code changes...

[2020-05-27T19:58:05.167Z] ⏳  Processing...

[2020-05-27T19:58:05.299Z] Syncing module sources (16 files)...

[2020-05-27T19:58:05.838Z] Syncing module sources (16 files)... → Done (took 0.5 sec)

[2020-05-27T19:58:05.970Z] Building version v-229c23e219...

[2020-05-27T19:58:06.565Z] Building client:v-229c23e219...

[2020-05-27T19:58:07.340Z] Building client:v-229c23e219... → Done (took 1.4 sec)

[2020-05-27T19:58:07.476Z] Deploying version v-229c23e219...

[2020-05-27T19:58:09.508Z] Waiting for resources to be ready...

[2020-05-27T19:58:11.670Z] Resources ready

[2020-05-27T19:58:11.821Z] Deploying version v-229c23e219... → Done (took 4.4 sec)

[2020-05-27T19:58:11.947Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T19:58:12.074Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T19:58:12.200Z] Waiting for code changes...

[2020-05-27T19:58:26.526Z] ⏳  Processing...

[2020-05-27T19:58:26.776Z] Waiting for code changes...

[2020-05-27T19:58:26.909Z] ⏳  Processing...

[2020-05-27T19:58:27.039Z] Syncing module sources (16 files)...

[2020-05-27T19:58:27.557Z] Syncing module sources (16 files)... → Done (took 0.5 sec)

[2020-05-27T19:58:27.685Z] Building version v-bb16b2f3eb...

[2020-05-27T19:58:28.249Z] Building client:v-bb16b2f3eb...

[2020-05-27T19:58:28.975Z] Building client:v-bb16b2f3eb... → Done (took 1.3 sec)

[2020-05-27T19:58:29.103Z] Deploying version v-bb16b2f3eb...

[2020-05-27T19:58:31.060Z] Waiting for resources to be ready...

[2020-05-27T19:58:33.205Z] Resources ready

[2020-05-27T19:58:33.355Z] Deploying version v-bb16b2f3eb... → Done (took 4.3 sec)

[2020-05-27T19:58:33.485Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T19:58:33.615Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T19:58:33.744Z] Waiting for code changes...

[2020-05-27T19:59:28.050Z] ⏳  Processing...

[2020-05-27T19:59:28.310Z] Waiting for code changes...

[2020-05-27T19:59:28.454Z] ⏳  Processing...

[2020-05-27T19:59:28.592Z] Syncing module sources (16 files)...

[2020-05-27T19:59:29.137Z] Syncing module sources (16 files)... → Done (took 0.5 sec)

[2020-05-27T19:59:29.266Z] Building version v-91cfd141d6...

[2020-05-27T19:59:29.850Z] Building client:v-91cfd141d6...

[2020-05-27T19:59:30.561Z] Building client:v-91cfd141d6... → Done (took 1.3 sec)

[2020-05-27T19:59:30.690Z] Deploying version v-91cfd141d6...

[2020-05-27T19:59:32.715Z] Waiting for resources to be ready...

[2020-05-27T19:59:34.870Z] Resources ready

[2020-05-27T19:59:35.027Z] Deploying version v-91cfd141d6... → Done (took 4.3 sec)

[2020-05-27T19:59:35.159Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T19:59:35.291Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T19:59:35.421Z] Waiting for code changes...

[2020-05-27T19:59:48.398Z] ⏳  Processing...

[2020-05-27T19:59:48.658Z] Waiting for code changes...

[2020-05-27T19:59:48.795Z] ⏳  Processing...

[2020-05-27T19:59:48.920Z] Syncing module sources (16 files)...

[2020-05-27T19:59:49.480Z] Syncing module sources (16 files)... → Done (took 0.5 sec)

[2020-05-27T19:59:49.613Z] Building version v-c575d5975a...

[2020-05-27T19:59:50.182Z] Building client:v-c575d5975a...

[2020-05-27T19:59:50.937Z] Building client:v-c575d5975a... → Done (took 1.3 sec)

[2020-05-27T19:59:51.068Z] Deploying version v-c575d5975a...

[2020-05-27T19:59:53.065Z] Waiting for resources to be ready...

[2020-05-27T19:59:55.218Z] Resources ready

[2020-05-27T19:59:55.375Z] Deploying version v-c575d5975a... → Done (took 4.3 sec)

[2020-05-27T19:59:55.509Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T19:59:55.640Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T19:59:55.770Z] Waiting for code changes...

[2020-05-27T20:05:26.336Z] ⏳  Processing...

[2020-05-27T20:05:26.596Z] Waiting for code changes...

[2020-05-27T20:05:26.738Z] ⏳  Processing...

[2020-05-27T20:05:26.870Z] Syncing module sources (16 files)...

[2020-05-27T20:05:27.915Z] Syncing module sources (16 files)... → Done (took 1 sec)

[2020-05-27T20:05:28.047Z] Building version v-4efd7b2da5...

[2020-05-27T20:05:28.619Z] Building client:v-4efd7b2da5...

[2020-05-27T20:05:29.387Z] Building client:v-4efd7b2da5... → Done (took 1.3 sec)

[2020-05-27T20:05:29.515Z] Deploying version v-4efd7b2da5...

[2020-05-27T20:05:31.517Z] Waiting for resources to be ready...

[2020-05-27T20:05:33.664Z] Resources ready

[2020-05-27T20:05:33.816Z] Deploying version v-4efd7b2da5... → Done (took 4.3 sec)

[2020-05-27T20:05:33.947Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T20:05:34.076Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T20:05:34.206Z] Waiting for code changes...

[2020-05-27T20:05:45.065Z] ⏳  Processing...

[2020-05-27T20:05:45.322Z] Waiting for code changes...

[2020-05-27T20:05:45.457Z] ⏳  Processing...

[2020-05-27T20:05:45.587Z] Syncing module sources (16 files)...

[2020-05-27T20:05:46.182Z] Syncing module sources (16 files)... → Done (took 0.6 sec)

[2020-05-27T20:05:46.317Z] Building version v-e88e2def7e...

[2020-05-27T20:05:46.901Z] Building client:v-e88e2def7e...

[2020-05-27T20:05:47.675Z] Building client:v-e88e2def7e... → Done (took 1.3 sec)

[2020-05-27T20:05:47.806Z] Deploying version v-e88e2def7e...

[2020-05-27T20:05:49.809Z] Waiting for resources to be ready...

[2020-05-27T20:05:51.954Z] Resources ready

[2020-05-27T20:05:52.113Z] Deploying version v-e88e2def7e... → Done (took 4.3 sec)

[2020-05-27T20:05:52.248Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T20:05:52.378Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T20:05:52.510Z] Waiting for code changes...

[2020-05-27T20:06:26.717Z] ⏳  Processing...

[2020-05-27T20:06:27.122Z] ⏳  Processing...

[2020-05-27T20:06:27.263Z] ⏳  Processing...

[2020-05-27T20:06:27.405Z] Syncing module sources (16 files)...

[2020-05-27T20:06:27.992Z] Syncing module sources (16 files)... → Done (took 0.6 sec)

[2020-05-27T20:06:28.126Z] Building version v-4d146e52e5...

[2020-05-27T20:06:28.259Z] Building version v-99c8680ab9...

[2020-05-27T20:06:28.865Z] Building client:v-4d146e52e5...

[2020-05-27T20:06:29.267Z] Building version v-99c8680ab9... → Done (took 1 sec)

[2020-05-27T20:06:29.403Z] Deploying version v-99c8680ab9...

[2020-05-27T20:06:32.326Z] Waiting for resources to be ready...

[2020-05-27T20:06:34.470Z] Resources ready

[2020-05-27T20:06:34.621Z] Deploying version v-99c8680ab9... → Done (took 5.2 sec)

[2020-05-27T20:06:34.752Z] → Forward: http://127.0.0.1:8080 → postgres-db:8080 (http)

[2020-05-27T20:06:34.885Z] Deploying version v-6c42d4185f...

[2020-05-27T20:06:36.549Z] Waiting for resources to be ready...

[2020-05-27T20:06:38.694Z] Resources ready

[2020-05-27T20:06:38.845Z] Deploying version v-6c42d4185f... → Done (took 4 sec)

[2020-05-27T20:06:38.977Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T20:07:14.992Z] Building client:v-4d146e52e5... → Done (took 46.8 sec)

[2020-05-27T20:07:15.151Z] Deploying version v-4d146e52e5...

[2020-05-27T20:07:17.257Z] Waiting for resources to be ready...

[2020-05-27T20:07:19.414Z] Resources ready

[2020-05-27T20:07:19.588Z] Deploying version v-4d146e52e5... → Done (took 4.5 sec)

[2020-05-27T20:07:19.726Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T20:07:19.862Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T20:07:20.000Z] ⏳  Processing...

[2020-05-27T20:07:20.141Z] Syncing module sources (16 files)...

[2020-05-27T20:07:21.014Z] Syncing module sources (16 files)... → Done (took 0.9 sec)

[2020-05-27T20:07:21.150Z] Building version v-4d146e52e5...

[2020-05-27T20:07:21.712Z] Building client:v-4d146e52e5...

[2020-05-27T20:07:22.186Z] Building client:v-4d146e52e5... → Done (took 1 sec)

[2020-05-27T20:07:22.323Z] Deploying version v-4d146e52e5...

[2020-05-27T20:07:24.274Z] Waiting for resources to be ready...

[2020-05-27T20:07:26.424Z] Resources ready

[2020-05-27T20:07:26.598Z] Deploying version v-4d146e52e5... → Done (took 4.3 sec)

[2020-05-27T20:07:26.735Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T20:07:26.874Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T20:07:27.013Z] ⏳  Processing...

[2020-05-27T20:07:27.148Z] Syncing module sources (16 files)...

[2020-05-27T20:07:27.603Z] Syncing module sources (16 files)... → Done (took 0.4 sec)

[2020-05-27T20:07:27.737Z] Building version v-4d146e52e5...

[2020-05-27T20:07:28.155Z] Building client:v-4d146e52e5...

[2020-05-27T20:07:28.556Z] Building client:v-4d146e52e5... → Done (took 0.8 sec)

[2020-05-27T20:07:28.689Z] Deploying version v-4d146e52e5...

[2020-05-27T20:07:30.448Z] Waiting for resources to be ready...

[2020-05-27T20:07:32.597Z] Resources ready

[2020-05-27T20:07:32.751Z] Deploying version v-4d146e52e5... → Done (took 4.1 sec)

[2020-05-27T20:07:32.888Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T20:07:33.023Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T20:07:33.159Z] Waiting for code changes...

[2020-05-27T20:07:55.640Z] ⏳  Processing...

[2020-05-27T20:07:55.902Z] Waiting for code changes...

[2020-05-27T20:07:56.043Z] ⏳  Processing...

[2020-05-27T20:07:56.181Z] Syncing module sources (16 files)...

[2020-05-27T20:07:56.828Z] Syncing module sources (16 files)... → Done (took 0.6 sec)

[2020-05-27T20:07:56.960Z] Building version v-70787fc689...

[2020-05-27T20:07:57.583Z] Building client:v-70787fc689...

[2020-05-27T20:07:58.319Z] Building client:v-70787fc689... → Done (took 1.3 sec)

[2020-05-27T20:07:58.456Z] Deploying version v-70787fc689...

[2020-05-27T20:08:00.510Z] Waiting for resources to be ready...

[2020-05-27T20:08:02.665Z] Resources ready

[2020-05-27T20:08:02.823Z] Deploying version v-70787fc689... → Done (took 4.4 sec)

[2020-05-27T20:08:02.957Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T20:08:03.090Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T20:08:03.228Z] Waiting for code changes...

[2020-05-27T20:13:52.070Z] ⏳  Processing...

[2020-05-27T20:13:52.341Z] Waiting for code changes...

[2020-05-27T20:13:52.490Z] ⏳  Processing...

[2020-05-27T20:13:52.768Z] Waiting for code changes...

[2020-05-27T20:13:52.909Z] ⏳  Processing...

[2020-05-27T20:13:53.054Z] Syncing module sources (17 files)...

[2020-05-27T20:13:53.790Z] Syncing module sources (17 files)... → Done (took 0.7 sec)

[2020-05-27T20:13:53.921Z] Building version v-766e8724f6...

[2020-05-27T20:13:54.523Z] Building client:v-766e8724f6...

[2020-05-27T20:13:55.333Z] Building client:v-766e8724f6... → Done (took 1.4 sec)

[2020-05-27T20:13:55.474Z] Deploying version v-766e8724f6...

[2020-05-27T20:13:57.514Z] Waiting for resources to be ready...

[2020-05-27T20:13:59.667Z] Resources ready

[2020-05-27T20:13:59.831Z] Deploying version v-766e8724f6... → Done (took 4.4 sec)

[2020-05-27T20:13:59.972Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T20:14:00.110Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T20:14:00.248Z] Waiting for code changes...

[2020-05-27T20:16:22.584Z] ⏳  Processing...

[2020-05-27T20:16:22.835Z] Waiting for code changes...

[2020-05-27T20:16:22.980Z] ⏳  Processing...

[2020-05-27T20:16:23.122Z] Syncing module sources (17 files)...

[2020-05-27T20:16:23.695Z] Syncing module sources (17 files)... → Done (took 0.6 sec)

[2020-05-27T20:16:23.830Z] Building version v-96f5badd61...

[2020-05-27T20:16:24.412Z] Building client:v-96f5badd61...

[2020-05-27T20:16:25.132Z] Building client:v-96f5badd61... → Done (took 1.3 sec)

[2020-05-27T20:16:25.271Z] Deploying version v-96f5badd61...

[2020-05-27T20:16:27.272Z] Waiting for resources to be ready...

[2020-05-27T20:16:29.421Z] Resources ready

[2020-05-27T20:16:29.584Z] Deploying version v-96f5badd61... → Done (took 4.3 sec)

[2020-05-27T20:16:29.718Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T20:16:29.853Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T20:16:29.988Z] Waiting for code changes...

[2020-05-27T20:17:08.688Z] ⏳  Processing...

[2020-05-27T20:17:08.945Z] Waiting for code changes...

[2020-05-27T20:17:09.089Z] ⏳  Processing...

[2020-05-27T20:17:09.230Z] Syncing module sources (17 files)...

[2020-05-27T20:17:09.791Z] Syncing module sources (17 files)... → Done (took 0.6 sec)

[2020-05-27T20:17:09.931Z] Building version v-8ee0db9b8b...

[2020-05-27T20:17:10.475Z] Building client:v-8ee0db9b8b...

[2020-05-27T20:17:11.269Z] Building client:v-8ee0db9b8b... → Done (took 1.3 sec)

[2020-05-27T20:17:11.404Z] Deploying version v-8ee0db9b8b...

[2020-05-27T20:17:14.177Z] Waiting for resources to be ready...

[2020-05-27T20:17:16.340Z] Resources ready

[2020-05-27T20:17:16.512Z] Deploying version v-8ee0db9b8b... → Done (took 5.1 sec)

[2020-05-27T20:17:16.653Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T20:17:16.794Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T20:17:16.936Z] ⏳  Processing...

[2020-05-27T20:17:17.075Z] Syncing module sources (17 files)...

[2020-05-27T20:17:17.639Z] Syncing module sources (17 files)... → Done (took 0.6 sec)

[2020-05-27T20:17:17.777Z] Building version v-0589cc4b40...

[2020-05-27T20:17:18.184Z] Building client:v-0589cc4b40...

[2020-05-27T20:17:19.127Z] Building client:v-0589cc4b40... → Done (took 1.3 sec)

[2020-05-27T20:17:19.268Z] Deploying version v-0589cc4b40...

[2020-05-27T20:17:22.780Z] Waiting for resources to be ready...

[2020-05-27T20:17:24.940Z] Resources ready

[2020-05-27T20:17:25.107Z] Deploying version v-0589cc4b40... → Done (took 5.8 sec)

[2020-05-27T20:17:25.246Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T20:17:25.382Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T20:17:25.519Z] Waiting for code changes...

[2020-05-27T20:18:16.387Z] ⏳  Processing...

[2020-05-27T20:18:16.645Z] Waiting for code changes...

[2020-05-27T20:18:16.795Z] ⏳  Processing...

[2020-05-27T20:18:16.930Z] Syncing module sources (17 files)...

[2020-05-27T20:18:17.706Z] Syncing module sources (17 files)... → Done (took 0.8 sec)

[2020-05-27T20:18:17.846Z] Building version v-57d186377f...

[2020-05-27T20:18:18.425Z] Building client:v-57d186377f...

[2020-05-27T20:18:19.105Z] Building client:v-57d186377f... → Done (took 1.2 sec)

[2020-05-27T20:18:19.244Z] Deploying version v-57d186377f...

[2020-05-27T20:18:21.235Z] Waiting for resources to be ready...

[2020-05-27T20:18:23.400Z] Resources ready

[2020-05-27T20:18:23.584Z] Deploying version v-57d186377f... → Done (took 4.3 sec)

[2020-05-27T20:18:23.723Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T20:18:23.863Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T20:18:23.999Z] Waiting for code changes...

[2020-05-27T20:19:17.043Z] ⏳  Processing...

[2020-05-27T20:19:17.308Z] Waiting for code changes...

[2020-05-27T20:19:17.458Z] ⏳  Processing...

[2020-05-27T20:19:17.602Z] Syncing module sources (17 files)...

[2020-05-27T20:19:18.322Z] Syncing module sources (17 files)... → Done (took 0.7 sec)

[2020-05-27T20:19:18.464Z] Building version v-cc0317b14a...

[2020-05-27T20:19:19.083Z] Building client:v-cc0317b14a...

[2020-05-27T20:19:19.874Z] Building client:v-cc0317b14a... → Done (took 1.4 sec)

[2020-05-27T20:19:20.015Z] Deploying version v-cc0317b14a...

[2020-05-27T20:19:22.162Z] Waiting for resources to be ready...

[2020-05-27T20:19:24.321Z] Resources ready

[2020-05-27T20:19:24.508Z] Deploying version v-cc0317b14a... → Done (took 4.5 sec)

[2020-05-27T20:19:24.648Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T20:19:24.787Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T20:19:24.927Z] Waiting for code changes...

[2020-05-27T20:19:31.065Z] ⏳  Processing...

[2020-05-27T20:19:31.393Z] Waiting for code changes...

[2020-05-27T20:19:31.536Z] ⏳  Processing...

[2020-05-27T20:19:31.676Z] Syncing module sources (17 files)...

[2020-05-27T20:19:32.303Z] Syncing module sources (17 files)... → Done (took 0.6 sec)

[2020-05-27T20:19:32.444Z] Building version v-6d20edd5d3...

[2020-05-27T20:19:33.022Z] Building client:v-6d20edd5d3...

[2020-05-27T20:19:33.714Z] Building client:v-6d20edd5d3... → Done (took 1.3 sec)

[2020-05-27T20:19:33.855Z] Deploying version v-6d20edd5d3...

[2020-05-27T20:19:35.852Z] Waiting for resources to be ready...

[2020-05-27T20:19:38.019Z] Resources ready

[2020-05-27T20:19:38.197Z] Deploying version v-6d20edd5d3... → Done (took 4.3 sec)

[2020-05-27T20:19:38.345Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T20:19:38.518Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T20:19:38.661Z] ⏳  Processing...

[2020-05-27T20:19:38.802Z] Syncing module sources (17 files)...

[2020-05-27T20:19:39.418Z] Syncing module sources (17 files)... → Done (took 0.6 sec)

[2020-05-27T20:19:39.560Z] Building version v-3308e74077...

[2020-05-27T20:19:39.953Z] Building client:v-3308e74077...

[2020-05-27T20:19:40.996Z] Building client:v-3308e74077... → Done (took 1.4 sec)

[2020-05-27T20:19:41.142Z] Deploying version v-3308e74077...

[2020-05-27T20:19:43.168Z] Waiting for resources to be ready...

[2020-05-27T20:19:45.331Z] Resources ready

[2020-05-27T20:19:45.499Z] Deploying version v-3308e74077... → Done (took 4.4 sec)

[2020-05-27T20:19:45.641Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T20:19:45.783Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T20:19:45.927Z] Waiting for code changes...

[2020-05-27T20:21:00.556Z] ⏳  Processing...

[2020-05-27T20:21:00.815Z] Waiting for code changes...

[2020-05-27T20:21:00.961Z] ⏳  Processing...

[2020-05-27T20:21:01.107Z] Syncing module sources (17 files)...

[2020-05-27T20:21:01.834Z] Syncing module sources (17 files)... → Done (took 0.7 sec)

[2020-05-27T20:21:01.977Z] Building version v-9d61965f1f...

[2020-05-27T20:21:02.575Z] Building client:v-9d61965f1f...

[2020-05-27T20:21:03.314Z] Building client:v-9d61965f1f... → Done (took 1.3 sec)

[2020-05-27T20:21:03.456Z] Deploying version v-9d61965f1f...

[2020-05-27T20:21:05.442Z] Waiting for resources to be ready...

[2020-05-27T20:21:07.599Z] Resources ready

[2020-05-27T20:21:07.802Z] Deploying version v-9d61965f1f... → Done (took 4.3 sec)

[2020-05-27T20:21:07.942Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T20:21:08.083Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T20:21:08.225Z] Waiting for code changes...

[2020-05-27T20:22:19.001Z] ⏳  Processing...

[2020-05-27T20:22:19.194Z] Waiting for code changes...

[2020-05-27T20:24:48.413Z] ⏳  Processing...

[2020-05-27T20:24:48.682Z] Waiting for code changes...

[2020-05-27T20:24:48.842Z] ⏳  Processing...

[2020-05-27T20:24:48.984Z] Syncing module sources (7 files)...

[2020-05-27T20:24:49.394Z] Syncing module sources (7 files)... → Done (took 0.4 sec)

[2020-05-27T20:24:49.543Z] Building version v-f0142a6aae...

[2020-05-27T20:24:50.129Z] Building server:v-f0142a6aae...

[2020-05-27T20:24:50.817Z] Building server:v-f0142a6aae... → Done (took 1.3 sec)

[2020-05-27T20:24:50.955Z] Deploying version v-f0142a6aae...

[2020-05-27T20:24:52.884Z] Waiting for resources to be ready...

[2020-05-27T20:24:55.099Z] Deploying version v-f0142a6aae...

[2020-05-27T20:24:55.246Z] Error: Error deploying backend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment backend-v-f0142a6aae: ScalingReplicaSet - Scaled up replica set backend-v-f0142a6aae-77c6559867 to 1
Pod backend-v-f0142a6aae-77c6559867-qzj8g: Scheduled - Successfully assigned node-microservice/backend-v-f0142a6aae-77c6559867-qzj8g to minikube
Pod backend-v-f0142a6aae-77c6559867-qzj8g: Pulled - Container image "server:v-f0142a6aae" already present on machine
Pod backend-v-f0142a6aae-77c6559867-qzj8g: Created - Created container backend
Pod backend-v-f0142a6aae-77c6559867-qzj8g: Started - Started container backend
Pod backend-v-f0142a6aae-77c6559867-qzj8g: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-f0142a6aae

****** backend-v-f0142a6aae-77c6559867-qzj8g ******
------ backend ------internal/modules/cjs/loader.js:960
  throw err;
  ^

Error: Cannot find module 'cors'
Require stack:
- /usr/src/server/app.js
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:957:15)
    at Function.Module._load (internal/modules/cjs/loader.js:840:27)
    at Module.require (internal/modules/cjs/loader.js:1019:19)
    at require (internal/modules/cjs/helpers.js:77:18)
    at Object.<anonymous> (/usr/src/server/app.js:3:12)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12) {
  code: 'MODULE_NOT_FOUND',
  requireStack: [ '/usr/src/server/app.js' ]
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-f0142a6aae:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-f0142a6aae-77c6559867 to 1\e[39m\n\e[94mPod backend-v-f0142a6aae-77c6559867-qzj8g:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-f0142a6aae-77c6559867-qzj8g to minikube\e[39m\n\e[94mPod backend-v-f0142a6aae-77c6559867-qzj8g:\e[39m \e[37mPulled - Container image \"server:v-f0142a6aae\" already present on machine\e[39m\n\e[94mPod backend-v-f0142a6aae-77c6559867-qzj8g:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-f0142a6aae-77c6559867-qzj8g:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-f0142a6aae-77c6559867-qzj8g:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-f0142a6aae\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-f0142a6aae-77c6559867-qzj8g ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39minternal/modules/cjs/loader.js:960\n  throw err;\n  ^\n\nError: Cannot find module 'cors'\nRequire stack:\n- /usr/src/server/app.js\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:957:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:840:27)\n    at Module.require (internal/modules/cjs/loader.js:1019:19)\n    at require (internal/modules/cjs/helpers.js:77:18)\n    at Object.<anonymous> (/usr/src/server/app.js:3:12)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12) {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: [ '/usr/src/server/app.js' ]\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-f0142a6aae
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-f0142a6aae
      uid: e0bc8730-1f0a-4cb6-b407-ac8bd1e05c29
      resourceVersion: '76538'
      generation: 1
      creationTimestamp: '2020-05-27T20:24:51Z'
      labels:
        garden.io/version: v-f0142a6aae
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 8e99d864dc574ce2d11bd23f26c42ff3d0abc9db6c7d2241e330c611fcf83988
        garden.io/version: v-f0142a6aae
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"8e99d864dc574ce2d11bd23f26c42ff3d0abc9db6c7d2241e330c611fcf83988","garden.io/version":"v-f0142a6aae"},"labels":{"garden.io/version":"v-f0142a6aae","module":"server","service":"backend"},"name":"backend-v-f0142a6aae","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-f0142a6aae","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-f0142a6aae","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-f0142a6aae"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-f0142a6aae\"},{\"moduleName\":\"postgres-db\",\"name\":\"postgres-db\",\"type\":\"service\",\"version\":\"v-99c8680ab9\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-f0142a6aae","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-f0142a6aae
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-f0142a6aae
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T20:24:55.390Z] Waiting for code changes...

[2020-05-27T20:25:22.436Z] ⏳  Processing...

[2020-05-27T20:25:22.699Z] Waiting for code changes...

[2020-05-27T20:25:22.851Z] ⏳  Processing...

[2020-05-27T20:25:22.998Z] Syncing module sources (17 files)...

[2020-05-27T20:25:23.731Z] Syncing module sources (17 files)... → Done (took 0.7 sec)

[2020-05-27T20:25:23.877Z] Building version v-ab3cd533b6...

[2020-05-27T20:25:24.480Z] Building client:v-ab3cd533b6...

[2020-05-27T20:25:25.227Z] Building client:v-ab3cd533b6... → Done (took 1.3 sec)

[2020-05-27T20:25:25.377Z] Deploying version v-ab3cd533b6...

[2020-05-27T20:25:27.381Z] Waiting for resources to be ready...

[2020-05-27T20:25:29.541Z] Resources ready

[2020-05-27T20:25:29.821Z] Deploying version v-ab3cd533b6... → Done (took 4.4 sec)

[2020-05-27T20:25:29.971Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T20:25:30.129Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T20:25:30.330Z] Waiting for code changes...

[2020-05-27T20:25:30.483Z] ⏳  Processing...

[2020-05-27T20:25:30.632Z] Syncing module sources (7 files)...

[2020-05-27T20:25:30.998Z] Syncing module sources (7 files)... → Done (took 0.3 sec)

[2020-05-27T20:25:31.149Z] Building version v-80cdf0bbc9...

[2020-05-27T20:25:31.549Z] Building server:v-80cdf0bbc9...

[2020-05-27T20:25:32.368Z] Building server:v-80cdf0bbc9... → Done (took 1.2 sec)

[2020-05-27T20:25:32.515Z] Deploying version v-80cdf0bbc9...

[2020-05-27T20:25:34.435Z] Waiting for resources to be ready...

[2020-05-27T20:25:36.590Z] Resources ready

[2020-05-27T20:25:36.753Z] Deploying version v-80cdf0bbc9... → Done (took 4.2 sec)

[2020-05-27T20:25:36.898Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T20:25:37.043Z] Waiting for code changes...

[2020-05-27T20:27:43.824Z] ⏳  Processing...

[2020-05-27T20:27:44.103Z] Waiting for code changes...

[2020-05-27T20:27:44.252Z] ⏳  Processing...

[2020-05-27T20:27:44.404Z] Syncing module sources (7 files)...

[2020-05-27T20:27:44.743Z] Syncing module sources (7 files)... → Done (took 0.3 sec)

[2020-05-27T20:27:44.888Z] Building version v-9b27815884...

[2020-05-27T20:27:45.476Z] Building server:v-9b27815884...

[2020-05-27T20:27:46.205Z] Building server:v-9b27815884... → Done (took 1.3 sec)

[2020-05-27T20:27:46.354Z] Deploying version v-9b27815884...

[2020-05-27T20:27:49.067Z] Waiting for resources to be ready...

[2020-05-27T20:27:51.227Z] Resources ready

[2020-05-27T20:27:51.390Z] Deploying version v-9b27815884... → Done (took 5 sec)

[2020-05-27T20:27:51.571Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T20:27:51.717Z] Waiting for code changes...

[2020-05-27T20:28:34.942Z] Getting status...

[2020-05-27T20:28:37.277Z] Getting status... → Done

[2020-05-27T20:28:37.604Z] Module configuration changed, reloading...

[2020-05-27T20:28:38.478Z] Getting status...

[2020-05-27T20:28:39.802Z] Getting status... → Done

[2020-05-27T20:28:40.271Z] ⏳  Processing...

[2020-05-27T20:28:40.415Z] Syncing module sources (17 files)...

[2020-05-27T20:28:40.700Z] Syncing module sources (7 files)...

[2020-05-27T20:28:41.203Z] Syncing module sources (7 files)... → Done (took 0.5 sec)

[2020-05-27T20:28:41.346Z] Getting build status for v-0c1ec4d6b3...

[2020-05-27T20:28:41.881Z] Syncing module sources (17 files)... → Done (took 1.4 sec)

[2020-05-27T20:28:42.025Z] Getting build status for v-ab3cd533b6...

[2020-05-27T20:28:42.172Z] Getting build status for v-99c8680ab9...

[2020-05-27T20:28:42.318Z] Getting build status for v-99c8680ab9... → Done (took 0.1 sec)

[2020-05-27T20:28:42.460Z] Deploying version v-99c8680ab9...

[2020-05-27T20:28:42.602Z] Deploying version v-99c8680ab9... → Already deployed

[2020-05-27T20:28:42.774Z] → Forward: http://127.0.0.1:8080 → postgres-db:8080 (http)

[2020-05-27T20:28:43.126Z] Getting build status for v-ab3cd533b6... → Done (took 1.1 sec)

[2020-05-27T20:28:43.271Z] Deploying version v-ab3cd533b6...

[2020-05-27T20:28:43.415Z] Deploying version v-ab3cd533b6... → Already deployed

[2020-05-27T20:28:43.557Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T20:28:43.702Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T20:28:43.847Z] Building version v-0c1ec4d6b3...

[2020-05-27T20:28:44.067Z] Building server:v-0c1ec4d6b3...

[2020-05-27T20:28:44.487Z] Building server:v-0c1ec4d6b3... → Done (took 3.1 sec)

[2020-05-27T20:28:44.630Z] Deploying version v-0c1ec4d6b3...

[2020-05-27T20:28:46.705Z] Waiting for resources to be ready...

[2020-05-27T20:28:48.878Z] Resources ready

[2020-05-27T20:28:49.055Z] Deploying version v-0c1ec4d6b3... → Done (took 4.4 sec)

[2020-05-27T20:28:49.203Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T20:28:49.350Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/tasks

[2020-05-27T20:28:49.498Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T20:28:49.652Z] Waiting for code changes...

[2020-05-27T20:31:30.917Z] Getting status...

[2020-05-27T20:31:33.228Z] Getting status... → Done

[2020-05-27T20:31:33.596Z] Module configuration changed, reloading...

[2020-05-27T20:31:34.476Z] Getting status...

[2020-05-27T20:31:35.803Z] Getting status... → Done

[2020-05-27T20:31:36.297Z] ⏳  Processing...

[2020-05-27T20:31:36.447Z] Syncing module sources (17 files)...

[2020-05-27T20:31:36.887Z] Syncing module sources (7 files)...

[2020-05-27T20:31:37.283Z] Syncing module sources (7 files)... → Done (took 0.4 sec)

[2020-05-27T20:31:37.437Z] Getting build status for v-9b27815884...

[2020-05-27T20:31:38.281Z] Syncing module sources (17 files)... → Done (took 1.8 sec)

[2020-05-27T20:31:38.441Z] Getting build status for v-ab3cd533b6...

[2020-05-27T20:31:38.597Z] Getting build status for v-99c8680ab9...

[2020-05-27T20:31:38.750Z] Getting build status for v-99c8680ab9... → Done (took 0.2 sec)

[2020-05-27T20:31:38.902Z] Deploying version v-99c8680ab9...

[2020-05-27T20:31:39.053Z] Deploying version v-99c8680ab9... → Already deployed

[2020-05-27T20:31:39.719Z] → Forward: http://127.0.0.1:8080 → postgres-db:8080 (http)

[2020-05-27T20:31:40.700Z] Getting build status for v-9b27815884... → Done (took 3.2 sec)

[2020-05-27T20:31:40.882Z] Deploying version v-9b27815884...

[2020-05-27T20:31:41.541Z] Getting build status for v-ab3cd533b6... → Done (took 3.1 sec)

[2020-05-27T20:31:41.712Z] Deploying version v-ab3cd533b6...

[2020-05-27T20:31:41.880Z] Deploying version v-ab3cd533b6... → Already deployed

[2020-05-27T20:31:42.048Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T20:31:42.231Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T20:31:44.224Z] Waiting for resources to be ready...

[2020-05-27T20:31:46.398Z] Resources ready

[2020-05-27T20:31:46.587Z] Deploying version v-9b27815884... → Done (took 5.7 sec)

[2020-05-27T20:31:46.753Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T20:31:46.920Z] ⏳  Processing...

[2020-05-27T20:31:47.104Z] Waiting for code changes...

[2020-05-27T20:32:11.291Z] ⏳  Processing...

[2020-05-27T20:32:11.559Z] Waiting for code changes...

[2020-05-27T20:32:11.720Z] ⏳  Processing...

[2020-05-27T20:32:11.878Z] Syncing module sources (17 files)...

[2020-05-27T20:32:12.527Z] Syncing module sources (17 files)... → Done (took 0.6 sec)

[2020-05-27T20:32:12.678Z] Building version v-1908963875...

[2020-05-27T20:32:13.260Z] Building client:v-1908963875...

[2020-05-27T20:32:14.011Z] Building client:v-1908963875... → Done (took 1.3 sec)

[2020-05-27T20:32:14.159Z] Deploying version v-1908963875...

[2020-05-27T20:32:16.156Z] Waiting for resources to be ready...

[2020-05-27T20:32:18.323Z] Resources ready

[2020-05-27T20:32:18.508Z] Deploying version v-1908963875... → Done (took 4.3 sec)

[2020-05-27T20:32:18.658Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T20:32:18.810Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T20:32:18.961Z] Waiting for code changes...

[2020-05-27T20:32:58.213Z] ⏳  Processing...

[2020-05-27T20:32:58.394Z] Waiting for code changes...

[2020-05-27T20:34:13.383Z] ⏳  Processing...

[2020-05-27T20:34:13.657Z] Waiting for code changes...

[2020-05-27T20:34:13.824Z] ⏳  Processing...

[2020-05-27T20:34:13.975Z] Syncing module sources (7 files)...

[2020-05-27T20:34:14.362Z] Syncing module sources (7 files)... → Done (took 0.4 sec)

[2020-05-27T20:34:14.522Z] Building version v-5f5426bf5e...

[2020-05-27T20:34:15.157Z] Building server:v-5f5426bf5e...

[2020-05-27T20:34:15.946Z] Building server:v-5f5426bf5e... → Done (took 1.4 sec)

[2020-05-27T20:34:16.098Z] Deploying version v-5f5426bf5e...

[2020-05-27T20:34:17.989Z] Waiting for resources to be ready...

[2020-05-27T20:34:20.155Z] Resources ready

[2020-05-27T20:34:20.327Z] Deploying version v-5f5426bf5e... → Done (took 4.2 sec)

[2020-05-27T20:34:20.480Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T20:34:20.630Z] Waiting for code changes...

[2020-05-27T20:34:35.193Z] ⏳  Processing...

[2020-05-27T20:34:35.362Z] Waiting for code changes...

[2020-05-27T20:35:31.496Z] Getting status...

[2020-05-27T20:35:33.809Z] Getting status... → Done

[2020-05-27T20:35:34.148Z] Module configuration changed, reloading...

[2020-05-27T20:35:35.015Z] Getting status...

[2020-05-27T20:35:36.364Z] Getting status... → Done

[2020-05-27T20:35:36.846Z] ⏳  Processing...

[2020-05-27T20:35:36.998Z] Syncing module sources (17 files)...

[2020-05-27T20:35:37.451Z] Syncing module sources (7 files)...

[2020-05-27T20:35:37.859Z] Syncing module sources (7 files)... → Done (took 0.4 sec)

[2020-05-27T20:35:38.011Z] Getting build status for v-5f5426bf5e...

[2020-05-27T20:35:38.566Z] Getting build status for v-1e76d4e3b1...

[2020-05-27T20:35:38.717Z] Getting build status for v-1e76d4e3b1... → Done (took 0.2 sec)

[2020-05-27T20:35:38.867Z] Deploying version v-1e76d4e3b1...

[2020-05-27T20:35:39.023Z] Syncing module sources (17 files)... → Done (took 2 sec)

[2020-05-27T20:35:39.173Z] Getting build status for v-1908963875...

[2020-05-27T20:35:39.790Z] Getting build status for v-5f5426bf5e... → Done (took 1.8 sec)

[2020-05-27T20:35:39.941Z] Getting build status for v-1908963875... → Done (took 0.8 sec)

[2020-05-27T20:35:40.111Z] Deploying version v-1908963875...

[2020-05-27T20:35:40.267Z] Deploying version v-1908963875... → Already deployed

[2020-05-27T20:35:40.430Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T20:35:40.587Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T20:35:41.150Z] Waiting for resources to be ready...

[2020-05-27T20:35:43.319Z] Resources ready

[2020-05-27T20:35:43.494Z] Deploying version v-1e76d4e3b1... → Done (took 4.6 sec)

[2020-05-27T20:35:43.658Z] → Forward: postgres://127.0.0.1:5432 → postgres-db:5432 (http)

[2020-05-27T20:35:43.812Z] Deploying version v-5f5426bf5e...

[2020-05-27T20:35:45.522Z] Waiting for resources to be ready...

[2020-05-27T20:35:47.691Z] Resources ready

[2020-05-27T20:35:47.864Z] Deploying version v-5f5426bf5e... → Done (took 4.1 sec)

[2020-05-27T20:35:48.016Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T20:35:48.172Z] ⏳  Processing...

[2020-05-27T20:35:48.335Z] Waiting for code changes...

[2020-05-27T20:35:52.255Z] ⏳  Processing...

[2020-05-27T20:35:52.429Z] Waiting for code changes...

[2020-05-27T20:36:14.304Z] ⏳  Processing...

[2020-05-27T20:36:14.578Z] Waiting for code changes...

[2020-05-27T20:36:14.738Z] ⏳  Processing...

[2020-05-27T20:36:14.895Z] Syncing module sources (7 files)...

[2020-05-27T20:36:15.247Z] Syncing module sources (7 files)... → Done (took 0.3 sec)

[2020-05-27T20:36:15.403Z] Building version v-21d1d8b73f...

[2020-05-27T20:36:15.990Z] Building server:v-21d1d8b73f...

[2020-05-27T20:36:16.779Z] Building server:v-21d1d8b73f... → Done (took 1.4 sec)

[2020-05-27T20:36:16.934Z] Deploying version v-21d1d8b73f...

[2020-05-27T20:36:18.866Z] Waiting for resources to be ready...

[2020-05-27T20:36:21.030Z] Resources ready

[2020-05-27T20:36:21.201Z] Deploying version v-21d1d8b73f... → Done (took 4.3 sec)

[2020-05-27T20:36:21.353Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T20:36:21.506Z] Waiting for code changes...

[2020-05-27T20:36:29.612Z] ⏳  Processing...

[2020-05-27T20:36:29.780Z] Waiting for code changes...

[2020-05-27T20:36:54.481Z] ⏳  Processing...

[2020-05-27T20:36:54.749Z] Waiting for code changes...

[2020-05-27T20:36:54.928Z] ⏳  Processing...

[2020-05-27T20:36:55.097Z] Syncing module sources (7 files)...

[2020-05-27T20:36:55.455Z] Syncing module sources (7 files)... → Done (took 0.4 sec)

[2020-05-27T20:36:55.612Z] Building version v-45b479f953...

[2020-05-27T20:36:56.226Z] Building server:v-45b479f953...

[2020-05-27T20:36:56.952Z] Building server:v-45b479f953... → Done (took 1.3 sec)

[2020-05-27T20:36:57.112Z] Deploying version v-45b479f953...

[2020-05-27T20:36:59.015Z] Waiting for resources to be ready...

[2020-05-27T20:37:01.196Z] Resources ready

[2020-05-27T20:37:01.365Z] Deploying version v-45b479f953... → Done (took 4.3 sec)

[2020-05-27T20:37:01.520Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T20:37:01.677Z] Waiting for code changes...

[2020-05-27T20:38:42.193Z] ⏳  Processing...

[2020-05-27T20:38:42.383Z] Waiting for code changes...

[2020-05-27T20:40:40.973Z] ⏳  Processing...

[2020-05-27T20:40:41.178Z] Waiting for code changes...

[2020-05-27T20:40:41.344Z] ⏳  Processing...

[2020-05-27T20:40:41.579Z] Waiting for code changes...

[2020-05-27T20:40:41.748Z] ⏳  Processing...

[2020-05-27T20:40:41.923Z] Waiting for code changes...

[2020-05-27T20:40:42.342Z] ⏳  Processing...

[2020-05-27T20:40:42.527Z] Waiting for code changes...

[2020-05-27T20:40:43.156Z] ⏳  Processing...

[2020-05-27T20:40:43.371Z] Waiting for code changes...

[2020-05-27T20:42:08.336Z] Getting status...

[2020-05-27T20:42:10.641Z] Getting status... → Done

[2020-05-27T20:42:10.981Z] Module configuration changed, reloading...

[2020-05-27T20:42:11.832Z] Getting status...

[2020-05-27T20:42:13.188Z] Getting status... → Done

[2020-05-27T20:42:13.702Z] ⏳  Processing...

[2020-05-27T20:42:13.867Z] Syncing module sources (17 files)...

[2020-05-27T20:42:14.333Z] Syncing module sources (7 files)...

[2020-05-27T20:42:14.753Z] Syncing module sources (7 files)... → Done (took 0.4 sec)

[2020-05-27T20:42:14.916Z] Getting build status for v-45b479f953...

[2020-05-27T20:42:15.478Z] Getting build status for v-c9e063622c...

[2020-05-27T20:42:15.636Z] Getting build status for v-c9e063622c... → Done (took 0.2 sec)

[2020-05-27T20:42:15.790Z] Deploying version v-c9e063622c...

[2020-05-27T20:42:15.950Z] Syncing module sources (17 files)... → Done (took 2.1 sec)

[2020-05-27T20:42:16.105Z] Getting build status for v-1908963875...

[2020-05-27T20:42:16.812Z] Getting build status for v-45b479f953... → Done (took 1.9 sec)

[2020-05-27T20:42:16.968Z] Getting build status for v-1908963875... → Done (took 0.9 sec)

[2020-05-27T20:42:17.128Z] Deploying version v-1908963875...

[2020-05-27T20:42:17.285Z] Deploying version v-1908963875... → Already deployed

[2020-05-27T20:42:17.446Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T20:42:17.604Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T20:42:18.073Z] Waiting for resources to be ready...

[2020-05-27T20:42:20.245Z] Resources ready

[2020-05-27T20:42:20.424Z] Deploying version v-c9e063622c... → Done (took 4.6 sec)

[2020-05-27T20:42:20.595Z] → Forward: postgres://127.0.0.1:5432 → postgres-db:5432 (postgres)

[2020-05-27T20:42:20.753Z] Deploying version v-45b479f953...

[2020-05-27T20:42:22.444Z] Waiting for resources to be ready...

[2020-05-27T20:42:24.617Z] Resources ready

[2020-05-27T20:42:24.798Z] Deploying version v-45b479f953... → Done (took 4 sec)

[2020-05-27T20:42:24.956Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T20:42:25.114Z] ⏳  Processing...

[2020-05-27T20:42:25.287Z] Waiting for code changes...

[2020-05-27T20:43:34.757Z] ⏳  Processing...

[2020-05-27T20:43:35.046Z] Waiting for code changes...

[2020-05-27T20:43:35.212Z] ⏳  Processing...

[2020-05-27T20:43:35.373Z] Syncing module sources (7 files)...

[2020-05-27T20:43:35.750Z] Syncing module sources (7 files)... → Done (took 0.4 sec)

[2020-05-27T20:43:35.909Z] Building version v-88053895c5...

[2020-05-27T20:43:36.514Z] Building server:v-88053895c5...

[2020-05-27T20:43:37.243Z] Building server:v-88053895c5... → Done (took 1.3 sec)

[2020-05-27T20:43:37.397Z] Deploying version v-88053895c5...

[2020-05-27T20:43:39.352Z] Waiting for resources to be ready...

[2020-05-27T20:43:41.529Z] Resources ready

[2020-05-27T20:43:41.708Z] Deploying version v-88053895c5... → Done (took 4.3 sec)

[2020-05-27T20:43:41.867Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T20:43:42.028Z] Waiting for code changes...

[2020-05-27T20:43:54.488Z] ⏳  Processing...

[2020-05-27T20:43:54.668Z] Waiting for code changes...

[2020-05-27T20:45:16.527Z] Getting status...

[2020-05-27T20:45:18.910Z] Getting status... → Done

[2020-05-27T20:45:19.258Z] Module configuration changed, reloading...

[2020-05-27T20:45:20.166Z] Getting status...

[2020-05-27T20:45:21.525Z] Getting status... → Done

[2020-05-27T20:45:22.018Z] ⏳  Processing...

[2020-05-27T20:45:22.174Z] Syncing module sources (17 files)...

[2020-05-27T20:45:22.643Z] Syncing module sources (7 files)...

[2020-05-27T20:45:23.015Z] Syncing module sources (7 files)... → Done (took 0.4 sec)

[2020-05-27T20:45:23.176Z] Getting build status for v-88053895c5...

[2020-05-27T20:45:23.741Z] Syncing module sources (17 files)... → Done (took 1.5 sec)

[2020-05-27T20:45:23.899Z] Getting build status for v-1908963875...

[2020-05-27T20:45:24.059Z] Getting build status for v-e18bb62b5e...

[2020-05-27T20:45:24.217Z] Getting build status for v-e18bb62b5e... → Done (took 0.2 sec)

[2020-05-27T20:45:24.373Z] Deploying version v-e18bb62b5e...

[2020-05-27T20:45:25.123Z] Getting build status for v-1908963875... → Done (took 1.2 sec)

[2020-05-27T20:45:25.285Z] Deploying version v-1908963875...

[2020-05-27T20:45:25.452Z] Deploying version v-1908963875... → Already deployed

[2020-05-27T20:45:25.619Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T20:45:25.787Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T20:45:25.954Z] Getting build status for v-88053895c5... → Done (took 2.8 sec)

[2020-05-27T20:45:26.358Z] Waiting for resources to be ready...

[2020-05-27T20:45:28.597Z] Deploying version v-e18bb62b5e...

[2020-05-27T20:45:28.762Z] Error: Error deploying postgres-db: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment postgres-db-v-e18bb62b5e: ScalingReplicaSet - Scaled up replica set postgres-db-v-e18bb62b5e-d4566c868 to 1
Pod postgres-db-v-e18bb62b5e-d4566c868-wcjhg: Scheduled - Successfully assigned node-microservice/postgres-db-v-e18bb62b5e-d4566c868-wcjhg to minikube
Pod postgres-db-v-e18bb62b5e-d4566c868-wcjhg: Pulled - Container image "postgres" already present on machine
Pod postgres-db-v-e18bb62b5e-d4566c868-wcjhg: Created - Created container postgres-db
Pod postgres-db-v-e18bb62b5e-d4566c868-wcjhg: Started - Started container postgres-db
Pod postgres-db-v-e18bb62b5e-d4566c868-wcjhg: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/postgres-db-v-e18bb62b5e

****** postgres-db-v-e18bb62b5e-d4566c868-wcjhg ******
------ postgres-db ------Error: Database is uninitialized and superuser password is not specified.
       You must specify POSTGRES_PASSWORD to a non-empty value for the
       superuser. For example, "-e POSTGRES_PASSWORD=password" on "docker run".

       You may also use "POSTGRES_HOST_AUTH_METHOD=trust" to allow all
       connections without a password. This is *not* recommended.

       See PostgreSQL documentation about "trust":
       https://www.postgresql.org/docs/current/auth-trust.html

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: postgres-db
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment postgres-db-v-e18bb62b5e:\e[39m \e[37mScalingReplicaSet - Scaled up replica set postgres-db-v-e18bb62b5e-d4566c868 to 1\e[39m\n\e[94mPod postgres-db-v-e18bb62b5e-d4566c868-wcjhg:\e[39m \e[37mScheduled - Successfully assigned node-microservice/postgres-db-v-e18bb62b5e-d4566c868-wcjhg to minikube\e[39m\n\e[94mPod postgres-db-v-e18bb62b5e-d4566c868-wcjhg:\e[39m \e[37mPulled - Container image \"postgres\" already present on machine\e[39m\n\e[94mPod postgres-db-v-e18bb62b5e-d4566c868-wcjhg:\e[39m \e[37mCreated - Created container postgres-db\e[39m\n\e[94mPod postgres-db-v-e18bb62b5e-d4566c868-wcjhg:\e[39m \e[37mStarted - Started container postgres-db\e[39m\n\e[94mPod postgres-db-v-e18bb62b5e-d4566c868-wcjhg:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/postgres-db-v-e18bb62b5e\e[39m\n\e[94m\e[39m\n\e[94m****** postgres-db-v-e18bb62b5e-d4566c868-wcjhg ******\e[39m\n\e[94m\e[39m\e[90m------ postgres-db ------\e[39mError: Database is uninitialized and superuser password is not specified.\n       You must specify POSTGRES_PASSWORD to a non-empty value for the\n       superuser. For example, \"-e POSTGRES_PASSWORD=password\" on \"docker run\".\n\n       You may also use \"POSTGRES_HOST_AUTH_METHOD=trust\" to allow all\n       connections without a password. This is *not* recommended.\n\n       See PostgreSQL documentation about \"trust\":\n       https://www.postgresql.org/docs/current/auth-trust.html\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: postgres-db-v-e18bb62b5e
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/postgres-db-v-e18bb62b5e
      uid: 3aea2590-4928-430e-843e-4f713f01cef6
      resourceVersion: '80047'
      generation: 1
      creationTimestamp: '2020-05-27T20:45:24Z'
      labels:
        garden.io/version: v-e18bb62b5e
        module: postgres-db
        service: postgres-db
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 20dfce46f1b75bb38c8e688243aa221ad8fbd79b2b8cb139be806fea5101e2e4
        garden.io/version: v-e18bb62b5e
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"20dfce46f1b75bb38c8e688243aa221ad8fbd79b2b8cb139be806fea5101e2e4","garden.io/version":"v-e18bb62b5e"},"labels":{"garden.io/version":"v-e18bb62b5e","module":"postgres-db","service":"postgres-db"},"name":"postgres-db-v-e18bb62b5e","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-e18bb62b5e","service":"postgres-db"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-e18bb62b5e","module":"postgres-db","service":"postgres-db"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-e18bb62b5e"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"postgres-db\",\"name\":\"postgres-db\",\"type\":\"build\",\"version\":\"v-e18bb62b5e\"}]"},{"name":"PGUSER","value":"root"},{"name":"PGPASSWORD","value":"password"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"postgres","imagePullPolicy":"IfNotPresent","name":"postgres-db","ports":[{"containerPort":5432,"name":"postgres","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-e18bb62b5e
          service: postgres-db
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-e18bb62b5e
            module: postgres-db
            service: postgres-db
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T20:45:28.931Z] ⏳  Processing...

[2020-05-27T20:45:29.133Z] Waiting for code changes...

[2020-05-27T20:45:54.750Z] Getting status...

[2020-05-27T20:45:57.009Z] Getting status... → Done

[2020-05-27T20:45:57.362Z] Module configuration changed, reloading...

[2020-05-27T20:45:58.152Z] Getting status...

[2020-05-27T20:45:59.481Z] Getting status... → Done

[2020-05-27T20:45:59.978Z] ⏳  Processing...

[2020-05-27T20:46:00.141Z] Syncing module sources (17 files)...

[2020-05-27T20:46:00.622Z] Syncing module sources (7 files)...

[2020-05-27T20:46:01.001Z] Syncing module sources (7 files)... → Done (took 0.4 sec)

[2020-05-27T20:46:01.165Z] Getting build status for v-88053895c5...

[2020-05-27T20:46:01.731Z] Syncing module sources (17 files)... → Done (took 1.6 sec)

[2020-05-27T20:46:01.895Z] Getting build status for v-1908963875...

[2020-05-27T20:46:02.058Z] Getting build status for v-2aa4faaab4...

[2020-05-27T20:46:02.219Z] Getting build status for v-2aa4faaab4... → Done (took 0.2 sec)

[2020-05-27T20:46:02.383Z] Deploying version v-2aa4faaab4...

[2020-05-27T20:46:03.107Z] Getting build status for v-1908963875... → Done (took 1.2 sec)

[2020-05-27T20:46:03.274Z] Deploying version v-1908963875...

[2020-05-27T20:46:03.438Z] Deploying version v-1908963875... → Already deployed

[2020-05-27T20:46:03.602Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T20:46:03.768Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T20:46:03.934Z] Getting build status for v-88053895c5... → Done (took 2.8 sec)

[2020-05-27T20:46:04.346Z] Waiting for resources to be ready...

[2020-05-27T20:46:06.521Z] Resources ready

[2020-05-27T20:46:06.729Z] Deploying version v-2aa4faaab4... → Done (took 4.3 sec)

[2020-05-27T20:46:06.891Z] → Forward: postgres://127.0.0.1:5432 → postgres-db:5432 (postgres)

[2020-05-27T20:46:07.052Z] Deploying version v-88053895c5...

[2020-05-27T20:46:08.758Z] Waiting for resources to be ready...

[2020-05-27T20:46:10.940Z] Resources ready

[2020-05-27T20:46:11.121Z] Deploying version v-88053895c5... → Done (took 4.1 sec)

[2020-05-27T20:46:11.287Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T20:46:11.451Z] ⏳  Processing...

[2020-05-27T20:46:11.618Z] Waiting for code changes...

[2020-05-27T20:46:17.351Z] ⏳  Processing...

[2020-05-27T20:46:17.536Z] Waiting for code changes...

[2020-05-27T20:46:29.480Z] ⏳  Processing...

[2020-05-27T20:46:29.754Z] Waiting for code changes...

[2020-05-27T20:46:29.923Z] ⏳  Processing...

[2020-05-27T20:46:30.097Z] Syncing module sources (7 files)...

[2020-05-27T20:46:30.475Z] Syncing module sources (7 files)... → Done (took 0.4 sec)

[2020-05-27T20:46:30.640Z] Building version v-2c96c0851a...

[2020-05-27T20:46:31.243Z] Building server:v-2c96c0851a...

[2020-05-27T20:46:31.992Z] Building server:v-2c96c0851a... → Done (took 1.3 sec)

[2020-05-27T20:46:32.157Z] Deploying version v-2c96c0851a...

[2020-05-27T20:46:34.119Z] Waiting for resources to be ready...

[2020-05-27T20:46:36.293Z] Resources ready

[2020-05-27T20:46:36.474Z] Deploying version v-2c96c0851a... → Done (took 4.3 sec)

[2020-05-27T20:46:36.657Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T20:46:36.828Z] Waiting for code changes...

[2020-05-27T20:46:39.735Z] ⏳  Processing...

[2020-05-27T20:46:39.918Z] Waiting for code changes...

[2020-05-27T20:48:23.265Z] ⏳  Processing...

[2020-05-27T20:48:23.559Z] Waiting for code changes...

[2020-05-27T20:48:23.736Z] ⏳  Processing...

[2020-05-27T20:48:23.904Z] Syncing module sources (7 files)...

[2020-05-27T20:48:24.316Z] Syncing module sources (7 files)... → Done (took 0.4 sec)

[2020-05-27T20:48:24.486Z] Building version v-f2624d441d...

[2020-05-27T20:48:25.112Z] Building server:v-f2624d441d...

[2020-05-27T20:48:25.896Z] Building server:v-f2624d441d... → Done (took 1.4 sec)

[2020-05-27T20:48:26.063Z] Deploying version v-f2624d441d...

[2020-05-27T20:48:28.031Z] Waiting for resources to be ready...

[2020-05-27T20:48:30.215Z] Resources ready

[2020-05-27T20:48:30.400Z] Deploying version v-f2624d441d... → Done (took 4.3 sec)

[2020-05-27T20:48:30.568Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T20:48:30.733Z] Waiting for code changes...

[2020-05-27T20:48:33.146Z] ⏳  Processing...

[2020-05-27T20:48:33.331Z] Waiting for code changes...

[2020-05-27T20:54:43.469Z] Getting status...

[2020-05-27T20:54:45.800Z] Getting status... → Done

[2020-05-27T20:54:46.198Z] Module configuration changed, reloading...

[2020-05-27T20:54:47.188Z] Getting status...

[2020-05-27T20:54:48.726Z] Getting status... → Done

[2020-05-27T20:54:49.276Z] ⏳  Processing...

[2020-05-27T20:54:49.444Z] Syncing module sources (17 files)...

[2020-05-27T20:54:49.948Z] Syncing module sources (7 files)...

[2020-05-27T20:54:50.419Z] Syncing module sources (7 files)... → Done (took 0.5 sec)

[2020-05-27T20:54:50.594Z] Getting build status for v-947dc68fe5...

[2020-05-27T20:54:51.322Z] Syncing module sources (17 files)... → Done (took 1.9 sec)

[2020-05-27T20:54:51.485Z] Getting build status for v-1908963875...

[2020-05-27T20:54:51.652Z] Getting build status for v-2aa4faaab4...

[2020-05-27T20:54:51.817Z] Getting build status for v-2aa4faaab4... → Done (took 0.2 sec)

[2020-05-27T20:54:51.982Z] Deploying version v-2aa4faaab4...

[2020-05-27T20:54:52.146Z] Deploying version v-2aa4faaab4... → Already deployed

[2020-05-27T20:54:52.339Z] → Forward: postgres://127.0.0.1:5432 → postgres-db:5432 (postgres)

[2020-05-27T20:54:52.734Z] Building version v-947dc68fe5...

[2020-05-27T20:54:52.900Z] Getting build status for v-1908963875... → Done (took 1.4 sec)

[2020-05-27T20:54:53.062Z] Deploying version v-1908963875...

[2020-05-27T20:54:53.225Z] Deploying version v-1908963875... → Already deployed

[2020-05-27T20:54:53.391Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T20:54:53.589Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T20:54:53.763Z] Building server:v-947dc68fe5...

[2020-05-27T20:54:54.280Z] Building server:v-947dc68fe5... → Done (took 3.7 sec)

[2020-05-27T20:54:54.461Z] Deploying version v-947dc68fe5...

[2020-05-27T20:54:57.310Z] Waiting for resources to be ready...

[2020-05-27T20:54:59.495Z] Resources ready

[2020-05-27T20:54:59.674Z] Deploying version v-947dc68fe5... → Done (took 5.2 sec)

[2020-05-27T20:54:59.844Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T20:55:00.013Z] ⏳  Processing...

[2020-05-27T20:55:00.202Z] Waiting for code changes...

[2020-05-27T20:55:04.473Z] ⏳  Processing...

[2020-05-27T20:55:04.659Z] Waiting for code changes...

[2020-05-27T20:55:39.213Z] Getting status...

[2020-05-27T20:55:41.508Z] Getting status... → Done

[2020-05-27T20:55:41.865Z] Module configuration changed, reloading...

[2020-05-27T20:55:42.761Z] Getting status...

[2020-05-27T20:55:44.107Z] Getting status... → Done

[2020-05-27T20:55:44.627Z] ⏳  Processing...

[2020-05-27T20:55:44.793Z] Syncing module sources (17 files)...

[2020-05-27T20:55:45.293Z] Syncing module sources (7 files)...

[2020-05-27T20:55:45.718Z] Syncing module sources (7 files)... → Done (took 0.4 sec)

[2020-05-27T20:55:45.890Z] Getting build status for v-c10604e6b6...

[2020-05-27T20:55:46.448Z] Getting build status for v-2aa4faaab4...

[2020-05-27T20:55:46.616Z] Getting build status for v-2aa4faaab4... → Done (took 0.2 sec)

[2020-05-27T20:55:46.783Z] Deploying version v-2aa4faaab4...

[2020-05-27T20:55:46.951Z] Deploying version v-2aa4faaab4... → Already deployed

[2020-05-27T20:55:47.117Z] Syncing module sources (17 files)... → Done (took 2.3 sec)

[2020-05-27T20:55:47.285Z] Getting build status for v-1908963875...

[2020-05-27T20:55:47.523Z] → Forward: postgres://127.0.0.1:5432 → postgres-db:5432 (postgres)

[2020-05-27T20:55:47.920Z] Getting build status for v-1908963875... → Done (took 0.6 sec)

[2020-05-27T20:55:48.090Z] Deploying version v-1908963875...

[2020-05-27T20:55:48.261Z] Deploying version v-1908963875... → Already deployed

[2020-05-27T20:55:48.428Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T20:55:48.599Z] Building version v-c10604e6b6...

[2020-05-27T20:55:48.768Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T20:55:49.013Z] Building server:v-c10604e6b6...

[2020-05-27T20:55:49.483Z] Building server:v-c10604e6b6... → Done (took 3.6 sec)

[2020-05-27T20:55:49.650Z] Deploying version v-c10604e6b6...

[2020-05-27T20:55:51.590Z] Waiting for resources to be ready...

[2020-05-27T20:55:53.775Z] Resources ready

[2020-05-27T20:55:53.964Z] Deploying version v-c10604e6b6... → Done (took 4.3 sec)

[2020-05-27T20:55:54.132Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T20:55:54.304Z] ⏳  Processing...

[2020-05-27T20:55:54.484Z] Waiting for code changes...

[2020-05-27T20:56:02.771Z] ⏳  Processing...

[2020-05-27T20:56:02.960Z] Waiting for code changes...

[2020-05-27T20:58:58.957Z] Getting status...

[2020-05-27T20:59:01.299Z] Getting status... → Done

[2020-05-27T20:59:01.671Z] Module configuration changed, reloading...

[2020-05-27T20:59:02.589Z] Getting status...

[2020-05-27T20:59:03.945Z] Getting status... → Done

[2020-05-27T20:59:04.480Z] ⏳  Processing...

[2020-05-27T20:59:04.649Z] Syncing module sources (7 files)...

[2020-05-27T20:59:04.984Z] Syncing module sources (17 files)...

[2020-05-27T20:59:05.568Z] Syncing module sources (7 files)... → Done (took 0.9 sec)

[2020-05-27T20:59:05.736Z] Getting build status for v-f2624d441d...

[2020-05-27T20:59:06.303Z] Syncing module sources (17 files)... → Done (took 1.3 sec)

[2020-05-27T20:59:06.472Z] Getting build status for v-1908963875...

[2020-05-27T20:59:06.639Z] Getting build status for v-2aa4faaab4...

[2020-05-27T20:59:06.805Z] Getting build status for v-2aa4faaab4... → Done (took 0.2 sec)

[2020-05-27T20:59:06.973Z] Deploying version v-2aa4faaab4...

[2020-05-27T20:59:07.141Z] Deploying version v-2aa4faaab4... → Already deployed

[2020-05-27T20:59:07.340Z] → Forward: postgres://127.0.0.1:5432 → postgres-db:5432 (postgres)

[2020-05-27T20:59:07.723Z] Getting build status for v-f2624d441d... → Done (took 2 sec)

[2020-05-27T20:59:07.892Z] Deploying version v-f2624d441d...

[2020-05-27T20:59:08.255Z] Getting build status for v-1908963875... → Done (took 1.8 sec)

[2020-05-27T20:59:08.425Z] Deploying version v-1908963875...

[2020-05-27T20:59:08.594Z] Deploying version v-1908963875... → Already deployed

[2020-05-27T20:59:08.766Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T20:59:08.942Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T20:59:10.526Z] Waiting for resources to be ready...

[2020-05-27T20:59:12.708Z] Resources ready

[2020-05-27T20:59:12.930Z] Deploying version v-f2624d441d... → Done (took 5 sec)

[2020-05-27T20:59:13.099Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T20:59:13.288Z] Waiting for code changes...

[2020-05-27T21:02:49.239Z] Getting status...

[2020-05-27T21:02:51.585Z] Getting status... → Done

[2020-05-27T21:02:51.975Z] Module configuration changed, reloading...

[2020-05-27T21:02:52.888Z] Getting status...

[2020-05-27T21:02:54.439Z] Getting status... → Done

[2020-05-27T21:02:55.014Z] ⏳  Processing...

[2020-05-27T21:02:55.196Z] Syncing module sources (17 files)...

[2020-05-27T21:02:55.556Z] Syncing module sources (7 files)...

[2020-05-27T21:02:56.297Z] Syncing module sources (7 files)... → Done (took 0.7 sec)

[2020-05-27T21:02:56.492Z] Getting build status for v-f2624d441d...

[2020-05-27T21:02:57.133Z] Syncing module sources (17 files)... → Done (took 1.9 sec)

[2020-05-27T21:02:57.332Z] Getting build status for v-1908963875...

[2020-05-27T21:02:57.524Z] Getting build status for v-41f0e46d33...

[2020-05-27T21:02:57.724Z] Getting build status for v-41f0e46d33... → Done (took 0.2 sec)

[2020-05-27T21:02:57.916Z] Deploying version v-41f0e46d33...

[2020-05-27T21:02:58.720Z] Getting build status for v-f2624d441d... → Done (took 2.2 sec)

[2020-05-27T21:02:58.897Z] Getting build status for v-1908963875... → Done (took 1.6 sec)

[2020-05-27T21:02:59.082Z] Deploying version v-1908963875...

[2020-05-27T21:02:59.272Z] Deploying version v-1908963875... → Already deployed

[2020-05-27T21:02:59.457Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T21:02:59.637Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T21:02:59.999Z] Waiting for resources to be ready...

[2020-05-27T21:03:02.190Z] Resources ready

[2020-05-27T21:03:02.390Z] Deploying version v-41f0e46d33... → Done (took 4.5 sec)

[2020-05-27T21:03:02.568Z] → Forward: postgres://127.0.0.1:5432 → postgres-db:5432 (postgres)

[2020-05-27T21:03:02.747Z] Deploying version v-f2624d441d...

[2020-05-27T21:03:04.485Z] Waiting for resources to be ready...

[2020-05-27T21:03:06.681Z] Resources ready

[2020-05-27T21:03:06.883Z] Deploying version v-f2624d441d... → Done (took 4.1 sec)

[2020-05-27T21:03:07.067Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T21:03:07.283Z] Waiting for code changes...

[2020-05-27T21:03:33.218Z] ⏳  Processing...

[2020-05-27T21:03:33.456Z] Waiting for code changes...

[2020-05-27T21:03:33.642Z] ⏳  Processing...

[2020-05-27T21:03:33.903Z] Waiting for code changes...

[2020-05-27T21:03:34.095Z] ⏳  Processing...

[2020-05-27T21:03:34.302Z] Waiting for code changes...

[2020-05-27T21:03:36.791Z] ⏳  Processing...

[2020-05-27T21:03:36.996Z] Waiting for code changes...

[2020-05-27T21:03:40.001Z] ⏳  Processing...

[2020-05-27T21:03:40.198Z] Waiting for code changes...

[2020-05-27T21:04:19.473Z] Getting status...

[2020-05-27T21:04:21.816Z] Getting status... → Done

[2020-05-27T21:04:22.180Z] Module configuration changed, reloading...

[2020-05-27T21:04:23.081Z] Getting status...

[2020-05-27T21:04:24.481Z] Getting status... → Done

[2020-05-27T21:04:25.019Z] ⏳  Processing...

[2020-05-27T21:04:25.195Z] Syncing module sources (17 files)...

[2020-05-27T21:04:25.720Z] Syncing module sources (7 files)...

[2020-05-27T21:04:26.176Z] Syncing module sources (7 files)... → Done (took 0.5 sec)

[2020-05-27T21:04:26.356Z] Getting build status for v-f2624d441d...

[2020-05-27T21:04:27.025Z] Syncing module sources (17 files)... → Done (took 1.8 sec)

[2020-05-27T21:04:27.199Z] Getting build status for v-1908963875...

[2020-05-27T21:04:27.377Z] Getting build status for v-2729f66d2e...

[2020-05-27T21:04:27.554Z] Getting build status for v-2729f66d2e... → Done (took 0.2 sec)

[2020-05-27T21:04:27.731Z] Deploying version v-2729f66d2e...

[2020-05-27T21:04:28.654Z] Getting build status for v-f2624d441d... → Done (took 2.3 sec)

[2020-05-27T21:04:28.829Z] Getting build status for v-1908963875... → Done (took 1.6 sec)

[2020-05-27T21:04:29.003Z] Deploying version v-1908963875...

[2020-05-27T21:04:29.183Z] Deploying version v-1908963875... → Already deployed

[2020-05-27T21:04:29.360Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T21:04:29.538Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T21:04:29.734Z] Waiting for resources to be ready...

[2020-05-27T21:04:31.923Z] Resources ready

[2020-05-27T21:04:32.116Z] Deploying version v-2729f66d2e... → Done (took 4.4 sec)

[2020-05-27T21:04:32.292Z] → Forward: postgres://127.0.0.1:5432 → postgres-db:5432 (postgres)

[2020-05-27T21:04:32.467Z] Deploying version v-f2624d441d...

[2020-05-27T21:04:34.190Z] Waiting for resources to be ready...

[2020-05-27T21:04:36.394Z] Resources ready

[2020-05-27T21:04:36.587Z] Deploying version v-f2624d441d... → Done (took 4.1 sec)

[2020-05-27T21:04:36.765Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T21:04:36.942Z] ⏳  Processing...

[2020-05-27T21:04:37.131Z] Waiting for code changes...

[2020-05-27T21:04:45.375Z] ⏳  Processing...

[2020-05-27T21:04:45.568Z] Waiting for code changes...

[2020-05-27T21:04:55.893Z] ⏳  Processing...

[2020-05-27T21:04:56.128Z] Waiting for code changes...

[2020-05-27T21:05:56.156Z] Getting status...

[2020-05-27T21:05:58.627Z] Getting status... → Done

[2020-05-27T21:05:59.028Z] Module configuration changed, reloading...

[2020-05-27T21:06:00.015Z] Getting status...

[2020-05-27T21:06:01.700Z] Getting status... → Done

[2020-05-27T21:06:02.325Z] ⏳  Processing...

[2020-05-27T21:06:02.683Z] Syncing module sources (7 files)...

[2020-05-27T21:06:02.864Z] Syncing module sources (17 files)...

[2020-05-27T21:06:03.484Z] Syncing module sources (7 files)... → Done (took 0.8 sec)

[2020-05-27T21:06:03.667Z] Getting build status for v-f2624d441d...

[2020-05-27T21:06:04.270Z] Getting build status for v-897088717f...

[2020-05-27T21:06:04.448Z] Getting build status for v-897088717f... → Done (took 0.2 sec)

[2020-05-27T21:06:04.625Z] Deploying version v-897088717f...

[2020-05-27T21:06:04.806Z] Syncing module sources (17 files)... → Done (took 1.9 sec)

[2020-05-27T21:06:04.986Z] Getting build status for v-1908963875...

[2020-05-27T21:06:05.779Z] Getting build status for v-1908963875... → Done (took 0.8 sec)

[2020-05-27T21:06:05.963Z] Deploying version v-1908963875...

[2020-05-27T21:06:06.146Z] Deploying version v-1908963875... → Already deployed

[2020-05-27T21:06:06.334Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T21:06:06.517Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T21:06:06.699Z] Getting build status for v-f2624d441d... → Done (took 3 sec)

[2020-05-27T21:06:08.303Z] Waiting for resources to be ready...

[2020-05-27T21:06:10.505Z] Resources ready

[2020-05-27T21:06:10.728Z] Deploying version v-897088717f... → Done (took 6.1 sec)

[2020-05-27T21:06:10.950Z] → Forward: postgres://127.0.0.1:5432 → postgres-db:5432 (postgres)

[2020-05-27T21:06:11.138Z] Deploying version v-f2624d441d...

[2020-05-27T21:06:12.861Z] Waiting for resources to be ready...

[2020-05-27T21:06:15.075Z] Resources ready

[2020-05-27T21:06:15.273Z] Deploying version v-f2624d441d... → Done (took 4.1 sec)

[2020-05-27T21:06:15.454Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T21:06:15.637Z] ⏳  Processing...

[2020-05-27T21:06:15.843Z] Waiting for code changes...

[2020-05-27T21:06:16.094Z] Waiting for code changes...

[2020-05-27T21:06:16.286Z] ⏳  Processing...

[2020-05-27T21:06:16.494Z] Waiting for code changes...

[2020-05-27T21:06:20.161Z] ⏳  Processing...

[2020-05-27T21:06:20.371Z] Waiting for code changes...

[2020-05-27T21:06:23.734Z] ⏳  Processing...

[2020-05-27T21:06:23.937Z] Waiting for code changes...

[2020-05-27T21:08:28.650Z] Getting status...

[2020-05-27T21:08:31.070Z] Getting status... → Done

[2020-05-27T21:08:31.447Z] Module configuration changed, reloading...

[2020-05-27T21:08:32.353Z] Getting status...

[2020-05-27T21:08:33.933Z] Getting status... → Done

[2020-05-27T21:08:34.505Z] ⏳  Processing...

[2020-05-27T21:08:34.859Z] Syncing module sources (7 files)...

[2020-05-27T21:08:35.033Z] Syncing module sources (17 files)...

[2020-05-27T21:08:35.641Z] Syncing module sources (7 files)... → Done (took 0.8 sec)

[2020-05-27T21:08:35.823Z] Getting build status for v-f2624d441d...

[2020-05-27T21:08:36.391Z] Syncing module sources (17 files)... → Done (took 1.3 sec)

[2020-05-27T21:08:36.568Z] Getting build status for v-1908963875...

[2020-05-27T21:08:36.747Z] Getting build status for v-79d4e5928f...

[2020-05-27T21:08:36.925Z] Getting build status for v-79d4e5928f... → Done (took 0.2 sec)

[2020-05-27T21:08:37.106Z] Deploying version v-79d4e5928f...

[2020-05-27T21:08:37.792Z] Getting build status for v-1908963875... → Done (took 1.2 sec)

[2020-05-27T21:08:37.971Z] Deploying version v-1908963875...

[2020-05-27T21:08:38.151Z] Deploying version v-1908963875... → Already deployed

[2020-05-27T21:08:38.335Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T21:08:38.519Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T21:08:38.705Z] Getting build status for v-f2624d441d... → Done (took 2.9 sec)

[2020-05-27T21:08:39.067Z] Waiting for resources to be ready...

[2020-05-27T21:08:41.261Z] Resources ready

[2020-05-27T21:08:41.459Z] Deploying version v-79d4e5928f... → Done (took 4.4 sec)

[2020-05-27T21:08:41.638Z] → Forward: postgres://127.0.0.1:5432 → postgres-db:5432 (postgres)

[2020-05-27T21:08:41.821Z] Deploying version v-f2624d441d...

[2020-05-27T21:08:43.545Z] Waiting for resources to be ready...

[2020-05-27T21:08:45.741Z] Resources ready

[2020-05-27T21:08:45.938Z] Deploying version v-f2624d441d... → Done (took 4.1 sec)

[2020-05-27T21:08:46.120Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T21:08:46.303Z] ⏳  Processing...

[2020-05-27T21:08:46.502Z] Waiting for code changes...

[2020-05-27T21:08:50.724Z] ⏳  Processing...

[2020-05-27T21:08:50.946Z] Waiting for code changes...

[2020-05-27T21:08:51.129Z] ⏳  Processing...

[2020-05-27T21:08:51.376Z] Waiting for code changes...

[2020-05-27T21:08:51.565Z] ⏳  Processing...

[2020-05-27T21:08:51.763Z] Waiting for code changes...

[2020-05-27T21:08:52.236Z] ⏳  Processing...

[2020-05-27T21:08:52.438Z] Waiting for code changes...

[2020-05-27T21:08:53.045Z] ⏳  Processing...

[2020-05-27T21:08:53.285Z] Waiting for code changes...

[2020-05-27T21:10:06.478Z] Getting status...

[2020-05-27T21:10:08.834Z] Getting status... → Done

[2020-05-27T21:10:09.215Z] Module configuration changed, reloading...

[2020-05-27T21:10:10.138Z] Getting status...

[2020-05-27T21:10:11.545Z] Getting status... → Done

[2020-05-27T21:10:12.231Z] ⏳  Processing...

[2020-05-27T21:10:12.409Z] Syncing module sources (17 files)...

[2020-05-27T21:10:12.944Z] Checking result...

[2020-05-27T21:10:13.122Z] Syncing module sources (7 files)...

[2020-05-27T21:10:13.362Z] Checking result... → Done

[2020-05-27T21:10:13.551Z] Syncing module sources (7 files)... → Done (took 0.4 sec)

[2020-05-27T21:10:13.733Z] Getting build status for v-7133c727f2...

[2020-05-27T21:10:14.345Z] Getting build status for v-79d4e5928f...

[2020-05-27T21:10:14.525Z] Getting build status for v-79d4e5928f... → Done (took 0.2 sec)

[2020-05-27T21:10:14.706Z] Syncing module sources (17 files)... → Done (took 2.3 sec)

[2020-05-27T21:10:14.885Z] Getting build status for v-1908963875...

[2020-05-27T21:10:15.299Z] Deploying version v-79d4e5928f...

[2020-05-27T21:10:15.478Z] Deploying version v-79d4e5928f... → Already deployed

[2020-05-27T21:10:15.663Z] Building version v-7133c727f2...

[2020-05-27T21:10:15.845Z] → Forward: postgres://127.0.0.1:5432 → postgres-db:5432 (postgres)

[2020-05-27T21:10:16.025Z] Running...

[2020-05-27T21:10:16.417Z] Getting build status for v-1908963875... → Done (took 1.5 sec)

[2020-05-27T21:10:16.599Z] Deploying version v-1908963875...

[2020-05-27T21:10:16.781Z] Deploying version v-1908963875... → Already deployed

[2020-05-27T21:10:16.964Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T21:10:17.183Z] Building server:v-7133c727f2...

[2020-05-27T21:10:17.395Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T21:10:17.808Z] Building server:v-7133c727f2... → Done (took 4.1 sec)

[2020-05-27T21:10:18.956Z] Failed!

[2020-05-27T21:10:19.143Z] Error: psql: error: could not connect to server: could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/tasks/task.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/tasks/task.js:0)

[2020-05-27T21:10:19.329Z] ⏳  Processing...

[2020-05-27T21:10:19.521Z] Waiting for code changes...

[2020-05-27T21:12:24.078Z] Getting status...

[2020-05-27T21:12:26.425Z] Getting status... → Done

[2020-05-27T21:12:26.811Z] Module configuration changed, reloading...

[2020-05-27T21:12:27.716Z] Getting status...

[2020-05-27T21:12:29.124Z] Getting status... → Done

[2020-05-27T21:12:29.853Z] ⏳  Processing...

[2020-05-27T21:12:30.042Z] Syncing module sources (17 files)...

[2020-05-27T21:12:30.582Z] Checking result...

[2020-05-27T21:12:30.762Z] Syncing module sources (7 files)...

[2020-05-27T21:12:30.997Z] Checking result... → Done

[2020-05-27T21:12:31.181Z] Syncing module sources (7 files)... → Done (took 0.4 sec)

[2020-05-27T21:12:31.366Z] Getting build status for v-7133c727f2...

[2020-05-27T21:12:31.947Z] Syncing module sources (17 files)... → Done (took 1.9 sec)

[2020-05-27T21:12:32.129Z] Getting build status for v-1908963875...

[2020-05-27T21:12:32.315Z] Getting build status for v-73e8458c9f...

[2020-05-27T21:12:32.498Z] Getting build status for v-73e8458c9f... → Done (took 0.2 sec)

[2020-05-27T21:12:32.903Z] Deploying version v-73e8458c9f...

[2020-05-27T21:12:33.748Z] Getting build status for v-7133c727f2... → Done (took 2.4 sec)

[2020-05-27T21:12:33.936Z] Getting build status for v-1908963875... → Done (took 1.8 sec)

[2020-05-27T21:12:34.120Z] Deploying version v-1908963875...

[2020-05-27T21:12:34.307Z] Deploying version v-1908963875... → Already deployed

[2020-05-27T21:12:34.498Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T21:12:34.686Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T21:12:35.044Z] Waiting for resources to be ready...

[2020-05-27T21:12:37.252Z] Resources ready

[2020-05-27T21:12:37.454Z] Deploying version v-73e8458c9f... → Done (took 4.6 sec)

[2020-05-27T21:12:37.642Z] → Forward: postgres://127.0.0.1:5432 → postgres-db:5432 (postgres)

[2020-05-27T21:12:37.830Z] Running...

[2020-05-27T21:12:40.620Z] Running... → Done (took 2.8 sec)

[2020-05-27T21:12:40.807Z] Deploying version v-7133c727f2...

[2020-05-27T21:12:42.586Z] Waiting for resources to be ready...

[2020-05-27T21:12:44.795Z] Resources ready

[2020-05-27T21:12:44.996Z] Deploying version v-7133c727f2... → Done (took 4.2 sec)

[2020-05-27T21:12:45.182Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T21:12:45.371Z] ⏳  Processing...

[2020-05-27T21:12:45.568Z] Waiting for code changes...

[2020-05-27T21:12:47.156Z] Getting status...

[2020-05-27T21:12:49.507Z] Getting status... → Done

[2020-05-27T21:12:49.889Z] Module configuration changed, reloading...

[2020-05-27T21:12:50.792Z] Getting status...

[2020-05-27T21:12:52.250Z] Getting status... → Done

[2020-05-27T21:12:52.987Z] ⏳  Processing...

[2020-05-27T21:12:53.356Z] Checking result...

[2020-05-27T21:12:53.538Z] Syncing module sources (7 files)...

[2020-05-27T21:12:53.726Z] Syncing module sources (17 files)...

[2020-05-27T21:12:54.148Z] Checking result... → Done

[2020-05-27T21:12:54.336Z] Syncing module sources (7 files)... → Done (took 0.8 sec)

[2020-05-27T21:12:54.518Z] Getting build status for v-7133c727f2...

[2020-05-27T21:12:55.097Z] Getting build status for v-6407afd0a3...

[2020-05-27T21:12:55.282Z] Getting build status for v-6407afd0a3... → Done (took 0.2 sec)

[2020-05-27T21:12:55.467Z] Syncing module sources (17 files)... → Done (took 1.7 sec)

[2020-05-27T21:12:55.652Z] Getting build status for v-1908963875...

[2020-05-27T21:12:56.053Z] Deploying version v-6407afd0a3...

[2020-05-27T21:12:56.765Z] Getting build status for v-7133c727f2... → Done (took 2.2 sec)

[2020-05-27T21:12:56.957Z] Getting build status for v-1908963875... → Done (took 1.3 sec)

[2020-05-27T21:12:57.149Z] Deploying version v-1908963875...

[2020-05-27T21:12:57.341Z] Deploying version v-1908963875... → Already deployed

[2020-05-27T21:12:57.530Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T21:12:57.723Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T21:12:58.032Z] Waiting for resources to be ready...

[2020-05-27T21:13:00.235Z] Resources ready

[2020-05-27T21:13:00.447Z] Deploying version v-6407afd0a3... → Done (took 4.4 sec)

[2020-05-27T21:13:00.642Z] → Forward: postgres://127.0.0.1:5432 → postgres-db:5432 (postgres)

[2020-05-27T21:13:00.833Z] Running...

[2020-05-27T21:13:05.092Z] Failed!

[2020-05-27T21:13:05.289Z] Error: psql: error: could not connect to server: could not translate host name "postgres" to address: Name or service not known
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/tasks/task.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/tasks/task.js:0)

[2020-05-27T21:13:05.479Z] ⏳  Processing...

[2020-05-27T21:13:05.676Z] Waiting for code changes...

[2020-05-27T21:13:09.894Z] Getting status...

[2020-05-27T21:13:12.202Z] Getting status... → Done

[2020-05-27T21:13:12.586Z] Error: Unknown dependencies detected.

  Task 'create-db' (in module 'postgres'): Unknown service or task 'postgres-db' referenced in dependencies.

  Task 'list-dbs' (in module 'postgres'): Unknown service or task 'postgres-db' referenced in dependencies.

    at Object.detectMissingDependencies (/snapshot/project/garden-service/tmp/dist/build/src/util/validate-dependencies.js:0)
    at new ConfigGraph (/snapshot/project/garden-service/tmp/dist/build/src/config-graph.js:0)
    at Garden.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/garden.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/garden.js:0)
Error Details:
unknownDependencies: []
availableModules: []
availableServicesAndTasks: []


[2020-05-27T21:13:15.429Z] ⏳  Processing...

[2020-05-27T21:13:15.736Z] Waiting for code changes...

[2020-05-27T21:13:16.063Z] ⏳  Processing...

[2020-05-27T21:13:16.251Z] Syncing module sources (7 files)...

[2020-05-27T21:13:16.439Z] Checking result...

[2020-05-27T21:13:16.660Z] Checking result... → Done

[2020-05-27T21:13:17.042Z] Running...

[2020-05-27T21:13:17.233Z] Syncing module sources (7 files)... → Done (took 1 sec)

[2020-05-27T21:13:17.424Z] Building version v-1b1898c7a1...

[2020-05-27T21:13:18.198Z] Building server:v-1b1898c7a1...

[2020-05-27T21:13:19.063Z] Building server:v-1b1898c7a1... → Done (took 1.6 sec)

[2020-05-27T21:13:20.277Z] Failed!

[2020-05-27T21:13:20.473Z] Error: psql: error: could not connect to server: could not translate host name "postgres" to address: Name or service not known
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/tasks/task.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/tasks/task.js:0)

[2020-05-27T21:13:20.660Z] Waiting for code changes...

[2020-05-27T21:13:47.934Z] Getting status...

[2020-05-27T21:13:50.272Z] Getting status... → Done

[2020-05-27T21:13:50.656Z] Error: Unknown dependencies detected.

  Task 'list-dbs' (in module 'postgres'): Unknown service or task 'postgres-db' referenced in dependencies.

    at Object.detectMissingDependencies (/snapshot/project/garden-service/tmp/dist/build/src/util/validate-dependencies.js:0)
    at new ConfigGraph (/snapshot/project/garden-service/tmp/dist/build/src/config-graph.js:0)
    at Garden.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/garden.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/garden.js:0)
Error Details:
unknownDependencies: []
availableModules: []
availableServicesAndTasks: []


[2020-05-27T21:14:01.204Z] Getting status...

[2020-05-27T21:14:03.514Z] Getting status... → Done

[2020-05-27T21:14:03.949Z] Module configuration changed, reloading...

[2020-05-27T21:14:04.868Z] Getting status...

[2020-05-27T21:14:06.266Z] Getting status... → Done

[2020-05-27T21:14:06.955Z] ⏳  Processing...

[2020-05-27T21:14:07.331Z] Checking result...

[2020-05-27T21:14:07.522Z] Syncing module sources (7 files)...

[2020-05-27T21:14:07.711Z] Syncing module sources (17 files)...

[2020-05-27T21:14:08.150Z] Checking result... → Done

[2020-05-27T21:14:08.340Z] Syncing module sources (7 files)... → Done (took 0.8 sec)

[2020-05-27T21:14:08.530Z] Getting build status for v-c17ca2a776...

[2020-05-27T21:14:09.111Z] Getting build status for v-f853fcb9f9...

[2020-05-27T21:14:09.301Z] Getting build status for v-f853fcb9f9... → Done (took 0.2 sec)

[2020-05-27T21:14:09.491Z] Syncing module sources (17 files)... → Done (took 1.8 sec)

[2020-05-27T21:14:09.680Z] Getting build status for v-1908963875...

[2020-05-27T21:14:10.089Z] Deploying version v-f853fcb9f9...

[2020-05-27T21:14:10.756Z] Building version v-c17ca2a776...

[2020-05-27T21:14:10.951Z] Getting build status for v-1908963875... → Done (took 1.3 sec)

[2020-05-27T21:14:11.150Z] Deploying version v-1908963875...

[2020-05-27T21:14:11.344Z] Deploying version v-1908963875... → Already deployed

[2020-05-27T21:14:11.536Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T21:14:11.759Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T21:14:11.954Z] Building server:v-c17ca2a776...

[2020-05-27T21:14:12.154Z] Waiting for resources to be ready...

[2020-05-27T21:14:12.648Z] Building server:v-c17ca2a776... → Done (took 4.1 sec)

[2020-05-27T21:14:14.362Z] Resources ready

[2020-05-27T21:14:14.574Z] Deploying version v-f853fcb9f9... → Done (took 4.5 sec)

[2020-05-27T21:14:14.784Z] → Forward: postgres://127.0.0.1:56474 → postgres:5432 (postgres)

[2020-05-27T21:14:14.976Z] Running...

[2020-05-27T21:14:18.150Z] Running... → Done (took 3.2 sec)

[2020-05-27T21:14:18.341Z] Deploying version v-c17ca2a776...

[2020-05-27T21:14:20.135Z] Waiting for resources to be ready...

[2020-05-27T21:14:22.338Z] Resources ready

[2020-05-27T21:14:22.549Z] Deploying version v-c17ca2a776... → Done (took 4.2 sec)

[2020-05-27T21:14:22.744Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T21:14:22.943Z] ⏳  Processing...

[2020-05-27T21:14:23.149Z] Waiting for code changes...

[2020-05-27T21:14:30.006Z] ⏳  Processing...

[2020-05-27T21:14:30.216Z] Waiting for code changes...

[2020-05-27T21:14:30.414Z] API server request failed with status undefined: Could not find service(s): postgres-db

[2020-05-27T21:14:37.530Z] ⏳  Processing...

[2020-05-27T21:14:37.744Z] Waiting for code changes...

[2020-05-27T21:14:43.691Z] ⏳  Processing...

[2020-05-27T21:14:43.930Z] Waiting for code changes...

[2020-05-27T21:14:44.130Z] ⏳  Processing...

[2020-05-27T21:14:44.388Z] Waiting for code changes...

[2020-05-27T21:14:44.595Z] ⏳  Processing...

[2020-05-27T21:14:44.811Z] Waiting for code changes...

[2020-05-27T21:14:45.274Z] ⏳  Processing...

[2020-05-27T21:14:45.492Z] Waiting for code changes...

[2020-05-27T21:14:46.213Z] ⏳  Processing...

[2020-05-27T21:14:46.424Z] Waiting for code changes...

[2020-05-27T21:17:37.751Z] Getting status...

[2020-05-27T21:17:40.196Z] Getting status... → Done

[2020-05-27T21:17:40.594Z] Module configuration changed, reloading...

[2020-05-27T21:17:41.524Z] Getting status...

[2020-05-27T21:17:42.923Z] Getting status... → Done

[2020-05-27T21:17:43.635Z] ⏳  Processing...

[2020-05-27T21:17:43.828Z] Syncing module sources (17 files)...

[2020-05-27T21:17:44.401Z] Checking result...

[2020-05-27T21:17:44.591Z] Syncing module sources (7 files)...

[2020-05-27T21:17:44.832Z] Checking result... → Done

[2020-05-27T21:17:45.031Z] Syncing module sources (7 files)... → Done (took 0.4 sec)

[2020-05-27T21:17:45.228Z] Getting build status for v-c17ca2a776...

[2020-05-27T21:17:45.816Z] Syncing module sources (17 files)... → Done (took 2 sec)

[2020-05-27T21:17:46.006Z] Getting build status for v-7863ed590a...

[2020-05-27T21:17:46.198Z] Getting build status for v-f853fcb9f9...

[2020-05-27T21:17:46.388Z] Getting build status for v-f853fcb9f9... → Done (took 0.2 sec)

[2020-05-27T21:17:46.942Z] Deploying version v-f853fcb9f9...

[2020-05-27T21:17:47.132Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-27T21:17:47.325Z] → Forward: postgres://127.0.0.1:56474 → postgres:5432 (postgres)

[2020-05-27T21:17:47.515Z] Running...

[2020-05-27T21:17:47.709Z] Getting build status for v-c17ca2a776... → Done (took 2.5 sec)

[2020-05-27T21:17:48.086Z] Building version v-7863ed590a...

[2020-05-27T21:17:48.365Z] Building frontend:v-7863ed590a...

[2020-05-27T21:17:48.886Z] Building frontend:v-7863ed590a... → Done (took 2.9 sec)

[2020-05-27T21:17:49.079Z] Deploying version v-7863ed590a...

[2020-05-27T21:17:51.134Z] Failed!

[2020-05-27T21:17:51.332Z] Error: ERROR:  database "test" already exists
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/tasks/task.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/tasks/task.js:0)

[2020-05-27T21:17:51.530Z] Waiting for resources to be ready...

[2020-05-27T21:17:53.740Z] Resources ready

[2020-05-27T21:17:53.963Z] Deploying version v-7863ed590a... → Done (took 4.9 sec)

[2020-05-27T21:17:54.156Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T21:17:54.351Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T21:17:54.559Z] Waiting for code changes...

[2020-05-27T21:18:32.714Z] ⏳  Processing...

[2020-05-27T21:18:32.960Z] Waiting for code changes...

[2020-05-27T21:18:33.162Z] ⏳  Processing...

[2020-05-27T21:18:33.440Z] Waiting for code changes...

[2020-05-27T21:18:33.645Z] ⏳  Processing...

[2020-05-27T21:18:33.873Z] Waiting for code changes...

[2020-05-27T21:18:37.238Z] ⏳  Processing...

[2020-05-27T21:18:37.455Z] Waiting for code changes...

[2020-05-27T21:19:34.330Z] Getting status...

[2020-05-27T21:19:36.769Z] Getting status... → Done

[2020-05-27T21:19:37.177Z] Module configuration changed, reloading...

[2020-05-27T21:19:38.117Z] Getting status...

[2020-05-27T21:19:39.557Z] Getting status... → Done

[2020-05-27T21:19:40.152Z] ⏳  Processing...

[2020-05-27T21:19:40.352Z] Syncing module sources (7 files)...

[2020-05-27T21:19:40.744Z] Syncing module sources (17 files)...

[2020-05-27T21:19:41.424Z] Syncing module sources (7 files)... → Done (took 1.1 sec)

[2020-05-27T21:19:41.623Z] Getting build status for v-d05378551b...

[2020-05-27T21:19:42.242Z] Syncing module sources (17 files)... → Done (took 1.5 sec)

[2020-05-27T21:19:42.442Z] Getting build status for v-7863ed590a...

[2020-05-27T21:19:42.644Z] Getting build status for v-f853fcb9f9...

[2020-05-27T21:19:42.845Z] Getting build status for v-f853fcb9f9... → Done (took 0.2 sec)

[2020-05-27T21:19:43.038Z] Deploying version v-f853fcb9f9...

[2020-05-27T21:19:43.233Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-27T21:19:43.467Z] → Forward: postgres://127.0.0.1:56474 → postgres:5432 (postgres)

[2020-05-27T21:19:43.880Z] Building version v-d05378551b...

[2020-05-27T21:19:44.079Z] Getting build status for v-7863ed590a... → Done (took 1.6 sec)

[2020-05-27T21:19:44.274Z] Deploying version v-7863ed590a...

[2020-05-27T21:19:44.474Z] Deploying version v-7863ed590a... → Already deployed

[2020-05-27T21:19:44.668Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T21:19:44.907Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T21:19:45.111Z] Building backend:v-d05378551b...

[2020-05-27T21:19:45.606Z] Building backend:v-d05378551b... → Done (took 4 sec)

[2020-05-27T21:19:45.803Z] Deploying version v-d05378551b...

[2020-05-27T21:19:47.768Z] Waiting for resources to be ready...

[2020-05-27T21:19:49.984Z] Resources ready

[2020-05-27T21:19:50.195Z] Deploying version v-d05378551b... → Done (took 4.4 sec)

[2020-05-27T21:19:50.393Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T21:19:50.604Z] Waiting for code changes...

[2020-05-27T21:20:33.966Z] ⏳  Processing...

[2020-05-27T21:20:34.212Z] Waiting for code changes...

[2020-05-27T21:20:34.416Z] ⏳  Processing...

[2020-05-27T21:20:34.692Z] Waiting for code changes...

[2020-05-27T21:20:34.901Z] ⏳  Processing...

[2020-05-27T21:20:35.131Z] Waiting for code changes...

[2020-05-27T21:21:16.185Z] ⏳  Processing...

[2020-05-27T21:21:16.508Z] Waiting for code changes...

[2020-05-27T21:21:16.714Z] ⏳  Processing...

[2020-05-27T21:21:16.915Z] Syncing module sources (17 files)...

[2020-05-27T21:21:17.629Z] Syncing module sources (17 files)... → Done (took 0.7 sec)

[2020-05-27T21:21:17.834Z] Building version v-9bc835e548...

[2020-05-27T21:21:18.531Z] Building frontend:v-9bc835e548...

[2020-05-27T21:21:19.378Z] Building frontend:v-9bc835e548... → Done (took 1.5 sec)

[2020-05-27T21:21:19.578Z] Deploying version v-9bc835e548...

[2020-05-27T21:21:21.661Z] Waiting for resources to be ready...

[2020-05-27T21:21:23.884Z] Resources ready

[2020-05-27T21:21:24.121Z] Deploying version v-9bc835e548... → Done (took 4.5 sec)

[2020-05-27T21:21:24.321Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T21:21:24.521Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T21:21:24.720Z] ⏳  Processing...

[2020-05-27T21:21:24.924Z] Syncing module sources (17 files)...

[2020-05-27T21:21:25.669Z] Syncing module sources (17 files)... → Done (took 0.7 sec)

[2020-05-27T21:21:25.872Z] Building version v-21dd74b988...

[2020-05-27T21:21:26.328Z] Building frontend:v-21dd74b988...

[2020-05-27T21:21:26.848Z] Building frontend:v-21dd74b988... → Done (took 1 sec)

[2020-05-27T21:21:27.050Z] Deploying version v-21dd74b988...

[2020-05-27T21:21:29.634Z] Waiting for resources to be ready...

[2020-05-27T21:21:31.865Z] Resources ready

[2020-05-27T21:21:32.096Z] Deploying version v-21dd74b988... → Done (took 5.1 sec)

[2020-05-27T21:21:32.297Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T21:21:32.538Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T21:21:32.737Z] Waiting for code changes...

[2020-05-27T21:22:07.800Z] ⏳  Processing...

[2020-05-27T21:22:08.127Z] Waiting for code changes...

[2020-05-27T21:22:08.340Z] ⏳  Processing...

[2020-05-27T21:22:08.548Z] Syncing module sources (7 files)...

[2020-05-27T21:22:09.008Z] Syncing module sources (7 files)... → Done (took 0.4 sec)

[2020-05-27T21:22:09.223Z] Building version v-b6f3d16f21...

[2020-05-27T21:22:09.893Z] Building backend:v-b6f3d16f21...

[2020-05-27T21:22:10.755Z] Building backend:v-b6f3d16f21... → Done (took 1.5 sec)

[2020-05-27T21:22:10.959Z] Deploying version v-b6f3d16f21...

[2020-05-27T21:22:12.958Z] Waiting for resources to be ready...

[2020-05-27T21:22:15.223Z] Resources ready

[2020-05-27T21:22:15.448Z] Deploying version v-b6f3d16f21... → Done (took 4.5 sec)

[2020-05-27T21:22:15.651Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T21:22:15.858Z] Waiting for code changes...

[2020-05-27T21:22:22.982Z] ⏳  Processing...

[2020-05-27T21:22:23.216Z] Waiting for code changes...

[2020-05-27T21:24:28.304Z] Getting status...

[2020-05-27T21:24:30.648Z] Getting status... → Done

[2020-05-27T21:24:31.050Z] Module configuration changed, reloading...

[2020-05-27T21:24:32.014Z] Getting status...

[2020-05-27T21:24:33.407Z] Getting status... → Done

[2020-05-27T21:24:34.008Z] ⏳  Processing...

[2020-05-27T21:24:34.207Z] Syncing module sources (17 files)...

[2020-05-27T21:24:34.798Z] Syncing module sources (7 files)...

[2020-05-27T21:24:35.267Z] Syncing module sources (7 files)... → Done (took 0.5 sec)

[2020-05-27T21:24:35.466Z] Getting build status for v-b6f3d16f21...

[2020-05-27T21:24:36.067Z] Syncing module sources (17 files)... → Done (took 1.8 sec)

[2020-05-27T21:24:36.269Z] Getting build status for v-61533c7f3c...

[2020-05-27T21:24:36.468Z] Getting build status for v-f853fcb9f9...

[2020-05-27T21:24:36.667Z] Getting build status for v-f853fcb9f9... → Done (took 0.2 sec)

[2020-05-27T21:24:36.867Z] Deploying version v-f853fcb9f9...

[2020-05-27T21:24:37.065Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-27T21:24:37.300Z] → Forward: postgres://127.0.0.1:56474 → postgres:5432 (postgres)

[2020-05-27T21:24:37.710Z] Getting build status for v-b6f3d16f21... → Done (took 2.2 sec)

[2020-05-27T21:24:37.912Z] Deploying version v-b6f3d16f21...

[2020-05-27T21:24:38.110Z] Deploying version v-b6f3d16f21... → Already deployed

[2020-05-27T21:24:38.313Z] Building version v-61533c7f3c...

[2020-05-27T21:24:38.515Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T21:24:38.801Z] Building frontend:v-61533c7f3c...

[2020-05-27T21:24:39.319Z] Building frontend:v-61533c7f3c... → Done (took 3 sec)

[2020-05-27T21:24:39.526Z] Deploying version v-61533c7f3c...

[2020-05-27T21:24:41.608Z] Waiting for resources to be ready...

[2020-05-27T21:24:43.827Z] Resources ready

[2020-05-27T21:24:44.052Z] Deploying version v-61533c7f3c... → Done (took 4.5 sec)

[2020-05-27T21:24:44.254Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T21:24:44.464Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-27T21:24:44.686Z] Waiting for code changes...

[2020-05-27T21:28:32.778Z] ⏳  Processing...

[2020-05-27T21:28:33.125Z] Waiting for code changes...

[2020-05-27T21:28:33.338Z] ⏳  Processing...

[2020-05-27T21:28:33.543Z] Syncing module sources (17 files)...

[2020-05-27T21:28:34.655Z] Syncing module sources (17 files)... → Done (took 1.1 sec)

[2020-05-27T21:28:34.870Z] Building version v-8f38c2388b...

[2020-05-27T21:28:35.534Z] Building frontend:v-8f38c2388b...

[2020-05-27T21:28:36.378Z] Building frontend:v-8f38c2388b... → Done (took 1.5 sec)

[2020-05-27T21:28:36.582Z] Deploying version v-8f38c2388b...

[2020-05-27T21:28:39.439Z] Waiting for resources to be ready...

[2020-05-27T21:28:41.662Z] Resources ready

[2020-05-27T21:28:41.893Z] Deploying version v-8f38c2388b... → Done (took 5.3 sec)

[2020-05-27T21:28:42.102Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T21:28:42.306Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-27T21:28:42.508Z] Waiting for code changes...

[2020-05-27T21:29:17.026Z] ⏳  Processing...

[2020-05-27T21:29:17.393Z] Waiting for code changes...

[2020-05-27T21:29:17.607Z] ⏳  Processing...

[2020-05-27T21:29:17.817Z] Syncing module sources (17 files)...

[2020-05-27T21:29:18.501Z] Syncing module sources (17 files)... → Done (took 0.7 sec)

[2020-05-27T21:29:18.708Z] Building version v-61533c7f3c...

[2020-05-27T21:29:19.378Z] Building frontend:v-61533c7f3c...

[2020-05-27T21:29:19.855Z] Building frontend:v-61533c7f3c... → Done (took 1.1 sec)

[2020-05-27T21:29:20.054Z] Deploying version v-61533c7f3c...

[2020-05-27T21:29:22.123Z] Waiting for resources to be ready...

[2020-05-27T21:29:24.360Z] Resources ready

[2020-05-27T21:29:24.591Z] Deploying version v-61533c7f3c... → Done (took 4.5 sec)

[2020-05-27T21:29:24.807Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T21:29:25.150Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-27T21:29:25.409Z] Waiting for code changes...

[2020-05-27T21:29:40.803Z] ⏳  Processing...

[2020-05-27T21:29:41.143Z] Waiting for code changes...

[2020-05-27T21:29:41.353Z] ⏳  Processing...

[2020-05-27T21:29:41.577Z] Syncing module sources (17 files)...

[2020-05-27T21:29:42.408Z] Syncing module sources (17 files)... → Done (took 0.8 sec)

[2020-05-27T21:29:42.616Z] Building version v-48e9ed3601...

[2020-05-27T21:29:43.290Z] Building frontend:v-48e9ed3601...

[2020-05-27T21:29:44.142Z] Building frontend:v-48e9ed3601... → Done (took 1.5 sec)

[2020-05-27T21:29:44.348Z] Deploying version v-48e9ed3601...

[2020-05-27T21:29:46.440Z] Waiting for resources to be ready...

[2020-05-27T21:29:48.712Z] Resources ready

[2020-05-27T21:29:48.957Z] Deploying version v-48e9ed3601... → Done (took 4.6 sec)

[2020-05-27T21:29:49.165Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T21:29:49.372Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-27T21:29:49.579Z] Waiting for code changes...

[2020-05-27T21:30:05.068Z] ⏳  Processing...

[2020-05-27T21:30:05.536Z] ⏳  Processing...

[2020-05-27T21:30:05.767Z] Syncing module sources (7 files)...

[2020-05-27T21:30:06.262Z] Syncing module sources (7 files)... → Done (took 0.5 sec)

[2020-05-27T21:30:06.469Z] Building version v-e9ffad53c0...

[2020-05-27T21:30:07.189Z] Building backend:v-e9ffad53c0...

[2020-05-27T21:30:13.466Z] Building backend:v-e9ffad53c0... → Done (took 7 sec)

[2020-05-27T21:30:13.674Z] Deploying version v-e9ffad53c0...

[2020-05-27T21:30:15.713Z] Waiting for resources to be ready...

[2020-05-27T21:30:17.946Z] Resources ready

[2020-05-27T21:30:18.172Z] Deploying version v-e9ffad53c0... → Done (took 4.5 sec)

[2020-05-27T21:30:18.379Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T21:30:18.584Z] ⏳  Processing...

[2020-05-27T21:30:18.798Z] Syncing module sources (7 files)...

[2020-05-27T21:30:19.267Z] Syncing module sources (7 files)... → Done (took 0.5 sec)

[2020-05-27T21:30:19.473Z] Building version v-b99689ec1c...

[2020-05-27T21:30:20.192Z] Building backend:v-b99689ec1c...

[2020-05-27T21:30:21.017Z] Building backend:v-b99689ec1c... → Done (took 1.5 sec)

[2020-05-27T21:30:21.224Z] Deploying version v-b99689ec1c...

[2020-05-27T21:30:23.454Z] Waiting for resources to be ready...

[2020-05-27T21:30:25.677Z] Resources ready

[2020-05-27T21:30:25.909Z] Deploying version v-b99689ec1c... → Done (took 4.7 sec)

[2020-05-27T21:30:26.116Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T21:30:26.323Z] ⏳  Processing...

[2020-05-27T21:30:26.527Z] Syncing module sources (7 files)...

[2020-05-27T21:30:26.796Z] Syncing module sources (7 files)... → Done (took 0.3 sec)

[2020-05-27T21:30:26.998Z] Building version v-b99689ec1c...

[2020-05-27T21:30:27.201Z] Building version v-f853fcb9f9...

[2020-05-27T21:30:27.776Z] Building backend:v-b99689ec1c...

[2020-05-27T21:30:28.432Z] Building backend:v-b99689ec1c... → Done (took 1.4 sec)

[2020-05-27T21:30:28.670Z] Building version v-f853fcb9f9... → Done (took 1.5 sec)

[2020-05-27T21:30:28.885Z] Deploying version v-f853fcb9f9...

[2020-05-27T21:30:30.730Z] Waiting for resources to be ready...

[2020-05-27T21:30:32.957Z] Resources ready

[2020-05-27T21:30:33.186Z] Deploying version v-f853fcb9f9... → Done (took 4.3 sec)

[2020-05-27T21:30:33.397Z] → Forward: postgres://127.0.0.1:56474 → postgres:5432 (postgres)

[2020-05-27T21:30:33.613Z] Deploying version v-b99689ec1c...

[2020-05-27T21:30:35.562Z] Waiting for resources to be ready...

[2020-05-27T21:30:37.784Z] Resources ready

[2020-05-27T21:30:38.016Z] Deploying version v-b99689ec1c... → Done (took 4.4 sec)

[2020-05-27T21:30:38.231Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T21:30:38.443Z] ⏳  Processing...

[2020-05-27T21:30:38.656Z] Syncing module sources (7 files)...

[2020-05-27T21:30:39.124Z] Syncing module sources (7 files)... → Done (took 0.5 sec)

[2020-05-27T21:30:39.339Z] Building version v-f41f8aaf13...

[2020-05-27T21:30:40.006Z] Building backend:v-f41f8aaf13...

[2020-05-27T21:30:40.851Z] Building backend:v-f41f8aaf13... → Done (took 1.5 sec)

[2020-05-27T21:30:41.071Z] Deploying version v-f41f8aaf13...

[2020-05-27T21:30:43.073Z] Waiting for resources to be ready...

[2020-05-27T21:30:45.302Z] Resources ready

[2020-05-27T21:30:45.534Z] Deploying version v-f41f8aaf13... → Done (took 4.5 sec)

[2020-05-27T21:30:45.746Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T21:30:45.970Z] ⏳  Processing...

[2020-05-27T21:30:46.186Z] Syncing module sources (7 files)...

[2020-05-27T21:30:46.450Z] Syncing module sources (7 files)... → Done (took 0.3 sec)

[2020-05-27T21:30:46.663Z] Building version v-f41f8aaf13...

[2020-05-27T21:30:47.182Z] Building backend:v-f41f8aaf13...

[2020-05-27T21:30:47.708Z] Building backend:v-f41f8aaf13... → Done (took 1 sec)

[2020-05-27T21:30:47.945Z] Deploying version v-f41f8aaf13...

[2020-05-27T21:30:49.936Z] Waiting for resources to be ready...

[2020-05-27T21:30:52.171Z] Resources ready

[2020-05-27T21:30:52.408Z] Deploying version v-f41f8aaf13... → Done (took 4.5 sec)

[2020-05-27T21:30:52.622Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T21:30:52.836Z] Waiting for code changes...

[2020-05-27T21:31:00.276Z] ⏳  Processing...

[2020-05-27T21:31:00.607Z] Waiting for code changes...

[2020-05-27T21:31:00.880Z] ⏳  Processing...

[2020-05-27T21:31:01.165Z] Syncing module sources (17 files)...

[2020-05-27T21:31:01.695Z] Syncing module sources (17 files)... → Done (took 0.6 sec)

[2020-05-27T21:31:01.907Z] Building version v-48e9ed3601...

[2020-05-27T21:31:02.613Z] Building frontend:v-48e9ed3601...

[2020-05-27T21:31:03.138Z] Building frontend:v-48e9ed3601... → Done (took 1.2 sec)

[2020-05-27T21:31:03.347Z] Deploying version v-48e9ed3601...

[2020-05-27T21:31:05.219Z] Waiting for resources to be ready...

[2020-05-27T21:31:07.447Z] Resources ready

[2020-05-27T21:31:07.708Z] Deploying version v-48e9ed3601... → Done (took 4.3 sec)

[2020-05-27T21:31:07.918Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T21:31:08.129Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-27T21:31:08.339Z] Waiting for code changes...

[2020-05-27T21:31:58.774Z] ⏳  Processing...

[2020-05-27T21:31:59.114Z] Waiting for code changes...

[2020-05-27T21:31:59.332Z] ⏳  Processing...

[2020-05-27T21:31:59.545Z] Syncing module sources (17 files)...

[2020-05-27T21:32:00.314Z] Syncing module sources (17 files)... → Done (took 0.8 sec)

[2020-05-27T21:32:00.530Z] Building version v-821730a964...

[2020-05-27T21:32:01.197Z] Building frontend:v-821730a964...

[2020-05-27T21:32:02.018Z] Building frontend:v-821730a964... → Done (took 1.5 sec)

[2020-05-27T21:32:02.222Z] Deploying version v-821730a964...

[2020-05-27T21:32:04.320Z] Waiting for resources to be ready...

[2020-05-27T21:32:06.550Z] Resources ready

[2020-05-27T21:32:06.878Z] Deploying version v-821730a964... → Done (took 4.6 sec)

[2020-05-27T21:32:07.085Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T21:32:07.295Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-27T21:32:07.502Z] Waiting for code changes...

[2020-05-27T21:35:07.359Z] Getting status...

[2020-05-27T21:35:09.775Z] Getting status... → Done

[2020-05-27T21:35:10.180Z] Module configuration changed, reloading...

[2020-05-27T21:35:11.134Z] Getting status...

[2020-05-27T21:35:12.515Z] Getting status... → Done

[2020-05-27T21:35:13.251Z] ⏳  Processing...

[2020-05-27T21:35:13.468Z] Syncing module sources (17 files)...

[2020-05-27T21:35:14.087Z] Syncing module sources (7 files)...

[2020-05-27T21:35:14.578Z] Syncing module sources (7 files)... → Done (took 0.5 sec)

[2020-05-27T21:35:14.784Z] Getting build status for v-46cfbfb8e7...

[2020-05-27T21:35:15.391Z] Getting build status for v-f853fcb9f9...

[2020-05-27T21:35:15.601Z] Getting build status for v-f853fcb9f9... → Done (took 0.2 sec)

[2020-05-27T21:35:15.812Z] Deploying version v-f853fcb9f9...

[2020-05-27T21:35:16.022Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-27T21:35:16.231Z] Syncing module sources (17 files)... → Done (took 2.8 sec)

[2020-05-27T21:35:16.441Z] Getting build status for v-821730a964...

[2020-05-27T21:35:16.684Z] → Forward: postgres://127.0.0.1:56474 → postgres:5432 (postgres)

[2020-05-27T21:35:17.123Z] Building version v-46cfbfb8e7...

[2020-05-27T21:35:17.334Z] Getting build status for v-821730a964... → Done (took 0.9 sec)

[2020-05-27T21:35:17.547Z] Deploying version v-821730a964...

[2020-05-27T21:35:17.763Z] Deploying version v-821730a964... → Already deployed

[2020-05-27T21:35:17.973Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T21:35:18.220Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-27T21:35:18.432Z] Building backend:v-46cfbfb8e7...

[2020-05-27T21:35:18.919Z] Building backend:v-46cfbfb8e7... → Done (took 4.1 sec)

[2020-05-27T21:35:19.127Z] Deploying version v-46cfbfb8e7...

[2020-05-27T21:35:21.274Z] Waiting for resources to be ready...

[2020-05-27T21:35:23.507Z] Resources ready

[2020-05-27T21:35:23.749Z] Deploying version v-46cfbfb8e7... → Done (took 4.6 sec)

[2020-05-27T21:35:23.966Z] → Ingress: http://backend.app

[2020-05-27T21:35:24.178Z] → Ingress: http://backend.app/tasks

[2020-05-27T21:35:24.387Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T21:35:24.596Z] ⏳  Processing...

[2020-05-27T21:35:24.814Z] Waiting for code changes...

[2020-05-27T21:36:03.809Z] ⏳  Processing...

[2020-05-27T21:36:04.150Z] Waiting for code changes...

[2020-05-27T21:36:04.371Z] ⏳  Processing...

[2020-05-27T21:36:04.584Z] Syncing module sources (17 files)...

[2020-05-27T21:36:05.387Z] Syncing module sources (17 files)... → Done (took 0.8 sec)

[2020-05-27T21:36:05.611Z] Building version v-4b717467fd...

[2020-05-27T21:36:06.274Z] Building frontend:v-4b717467fd...

[2020-05-27T21:36:07.139Z] Building frontend:v-4b717467fd... → Done (took 1.5 sec)

[2020-05-27T21:36:07.356Z] Deploying version v-4b717467fd...

[2020-05-27T21:36:09.441Z] Waiting for resources to be ready...

[2020-05-27T21:36:11.675Z] Resources ready

[2020-05-27T21:36:11.952Z] Deploying version v-4b717467fd... → Done (took 4.6 sec)

[2020-05-27T21:36:12.174Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T21:36:12.393Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-27T21:36:12.628Z] Waiting for code changes...

[2020-05-27T21:36:21.271Z] ⏳  Processing...

[2020-05-27T21:36:21.503Z] Waiting for code changes...

[2020-05-27T21:36:47.419Z] ⏳  Processing...

[2020-05-27T21:36:47.664Z] Waiting for code changes...

[2020-05-27T21:37:09.439Z] Getting status...

[2020-05-27T21:37:11.888Z] Getting status... → Done

[2020-05-27T21:37:12.311Z] Module configuration changed, reloading...

[2020-05-27T21:37:13.275Z] Getting status...

[2020-05-27T21:37:14.716Z] Getting status... → Done

[2020-05-27T21:37:15.365Z] ⏳  Processing...

[2020-05-27T21:37:15.582Z] Syncing module sources (17 files)...

[2020-05-27T21:37:16.006Z] Syncing module sources (7 files)...

[2020-05-27T21:37:16.488Z] Syncing module sources (7 files)... → Done (took 0.5 sec)

[2020-05-27T21:37:16.708Z] Getting build status for v-46cfbfb8e7...

[2020-05-27T21:37:17.327Z] Syncing module sources (17 files)... → Done (took 1.7 sec)

[2020-05-27T21:37:17.540Z] Getting build status for v-8b61b5fc21...

[2020-05-27T21:37:17.751Z] Getting build status for v-f853fcb9f9...

[2020-05-27T21:37:17.962Z] Getting build status for v-f853fcb9f9... → Done (took 0.2 sec)

[2020-05-27T21:37:18.174Z] Deploying version v-f853fcb9f9...

[2020-05-27T21:37:18.384Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-27T21:37:18.626Z] → Forward: postgres://127.0.0.1:56474 → postgres:5432 (postgres)

[2020-05-27T21:37:19.116Z] Building version v-8b61b5fc21...

[2020-05-27T21:37:19.333Z] Getting build status for v-46cfbfb8e7... → Done (took 2.6 sec)

[2020-05-27T21:37:19.545Z] Deploying version v-46cfbfb8e7...

[2020-05-27T21:37:19.754Z] Deploying version v-46cfbfb8e7... → Already deployed

[2020-05-27T21:37:19.970Z] → Ingress: http://backend.app

[2020-05-27T21:37:20.182Z] → Ingress: http://backend.app/tasks

[2020-05-27T21:37:20.428Z] → Forward: http://127.0.0.1:50716 → backend:8080 (http)

[2020-05-27T21:37:20.647Z] Building frontend:v-8b61b5fc21...

[2020-05-27T21:37:21.164Z] Building frontend:v-8b61b5fc21... → Done (took 3.6 sec)

[2020-05-27T21:37:21.379Z] Deploying version v-8b61b5fc21...

[2020-05-27T21:37:23.491Z] Waiting for resources to be ready...

[2020-05-27T21:37:25.718Z] Resources ready

[2020-05-27T21:37:25.966Z] Deploying version v-8b61b5fc21... → Done (took 4.6 sec)

[2020-05-27T21:37:26.183Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T21:37:26.400Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-27T21:37:26.639Z] Waiting for code changes...

[2020-05-27T21:38:15.417Z] ⏳  Processing...

[2020-05-27T21:38:15.684Z] Waiting for code changes...

[2020-05-27T21:38:15.913Z] ⏳  Processing...

[2020-05-27T21:38:16.240Z] Waiting for code changes...

[2020-05-27T21:38:16.490Z] ⏳  Processing...

[2020-05-27T21:38:16.757Z] Waiting for code changes...

[2020-05-27T21:38:17.187Z] ⏳  Processing...

[2020-05-27T21:38:17.426Z] Waiting for code changes...

[2020-05-27T21:38:18.442Z] ⏳  Processing...

[2020-05-27T21:38:18.681Z] Waiting for code changes...

[2020-05-27T21:38:29.737Z] Getting status...

[2020-05-27T21:38:32.150Z] Getting status... → Done

[2020-05-27T21:38:32.587Z] Module configuration changed, reloading...

[2020-05-27T21:38:33.546Z] Getting status...

[2020-05-27T21:38:34.980Z] Getting status... → Done

[2020-05-27T21:38:35.617Z] ⏳  Processing...

[2020-05-27T21:38:36.043Z] Syncing module sources (7 files)...

[2020-05-27T21:38:36.257Z] Syncing module sources (17 files)...

[2020-05-27T21:38:36.754Z] Syncing module sources (7 files)... → Done (took 0.7 sec)

[2020-05-27T21:38:36.969Z] Getting build status for v-d66375ef06...

[2020-05-27T21:38:37.577Z] Getting build status for v-f853fcb9f9...

[2020-05-27T21:38:37.791Z] Getting build status for v-f853fcb9f9... → Done (took 0.2 sec)

[2020-05-27T21:38:38.004Z] Deploying version v-f853fcb9f9...

[2020-05-27T21:38:38.220Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-27T21:38:38.434Z] Syncing module sources (17 files)... → Done (took 2.2 sec)

[2020-05-27T21:38:38.649Z] Getting build status for v-8b61b5fc21...

[2020-05-27T21:38:38.894Z] → Forward: postgres://127.0.0.1:56474 → postgres:5432 (postgres)

[2020-05-27T21:38:39.379Z] Building version v-d66375ef06...

[2020-05-27T21:38:39.595Z] Getting build status for v-8b61b5fc21... → Done (took 0.9 sec)

[2020-05-27T21:38:39.895Z] Building backend:v-d66375ef06...

[2020-05-27T21:38:40.394Z] Building backend:v-d66375ef06... → Done (took 3.4 sec)

[2020-05-27T21:38:40.612Z] Deploying version v-d66375ef06...

[2020-05-27T21:38:43.612Z] Waiting for resources to be ready...

[2020-05-27T21:38:45.855Z] Resources ready

[2020-05-27T21:38:46.102Z] Deploying version v-d66375ef06... → Done (took 5.5 sec)

[2020-05-27T21:38:46.323Z] → Ingress: http://backend.app

[2020-05-27T21:38:46.544Z] → Ingress: http://backend.app/tasks

[2020-05-27T21:38:46.776Z] → Forward: http://127.0.0.1:58227 → backend:80 (http)

[2020-05-27T21:38:46.995Z] Deploying version v-8b61b5fc21...

[2020-05-27T21:38:48.873Z] Waiting for resources to be ready...

[2020-05-27T21:38:51.113Z] Resources ready

[2020-05-27T21:38:51.360Z] Deploying version v-8b61b5fc21... → Done (took 4.4 sec)

[2020-05-27T21:38:51.587Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T21:38:51.807Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-27T21:38:52.026Z] ⏳  Processing...

[2020-05-27T21:38:52.269Z] Waiting for code changes...

[2020-05-27T21:39:10.682Z] ⏳  Processing...

[2020-05-27T21:39:10.924Z] Waiting for code changes...

[2020-05-27T21:39:36.870Z] ⏳  Processing...

[2020-05-27T21:39:37.128Z] Waiting for code changes...

[2020-05-27T21:40:34.893Z] ⏳  Processing...

[2020-05-27T21:40:35.255Z] Waiting for code changes...

[2020-05-27T21:40:35.493Z] ⏳  Processing...

[2020-05-27T21:40:35.713Z] Syncing module sources (17 files)...

[2020-05-27T21:40:36.453Z] Syncing module sources (17 files)... → Done (took 0.7 sec)

[2020-05-27T21:40:36.685Z] Building version v-ffb09084c4...

[2020-05-27T21:40:37.414Z] Building frontend:v-ffb09084c4...

[2020-05-27T21:40:38.364Z] Building frontend:v-ffb09084c4... → Done (took 1.7 sec)

[2020-05-27T21:40:38.604Z] Deploying version v-ffb09084c4...

[2020-05-27T21:40:40.705Z] Waiting for resources to be ready...

[2020-05-27T21:40:42.948Z] Resources ready

[2020-05-27T21:40:43.206Z] Deploying version v-ffb09084c4... → Done (took 4.6 sec)

[2020-05-27T21:40:43.434Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T21:40:43.668Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-27T21:40:43.901Z] ⏳  Processing...

[2020-05-27T21:40:44.132Z] Syncing module sources (17 files)...

[2020-05-27T21:40:44.906Z] Syncing module sources (17 files)... → Done (took 0.8 sec)

[2020-05-27T21:40:45.136Z] Building version v-e2da86195f...

[2020-05-27T21:40:45.622Z] Building frontend:v-e2da86195f...

[2020-05-27T21:40:46.601Z] Building frontend:v-e2da86195f... → Done (took 1.5 sec)

[2020-05-27T21:40:46.827Z] Deploying version v-e2da86195f...

[2020-05-27T21:40:51.114Z] Waiting for resources to be ready...

[2020-05-27T21:40:53.361Z] Resources ready

[2020-05-27T21:40:53.626Z] Deploying version v-e2da86195f... → Done (took 6.8 sec)

[2020-05-27T21:40:53.854Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T21:40:54.083Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-27T21:40:54.310Z] Waiting for code changes...

[2020-05-27T21:41:17.755Z] ⏳  Processing...

[2020-05-27T21:41:18.134Z] Waiting for code changes...

[2020-05-27T21:41:18.371Z] ⏳  Processing...

[2020-05-27T21:41:18.602Z] Syncing module sources (17 files)...

[2020-05-27T21:41:19.358Z] Syncing module sources (17 files)... → Done (took 0.8 sec)

[2020-05-27T21:41:19.581Z] Building version v-4512a88fa2...

[2020-05-27T21:41:20.248Z] Building frontend:v-4512a88fa2...

[2020-05-27T21:41:21.085Z] Building frontend:v-4512a88fa2... → Done (took 1.5 sec)

[2020-05-27T21:41:21.304Z] Deploying version v-4512a88fa2...

[2020-05-27T21:41:23.415Z] Waiting for resources to be ready...

[2020-05-27T21:41:25.651Z] Resources ready

[2020-05-27T21:41:25.907Z] Deploying version v-4512a88fa2... → Done (took 4.6 sec)

[2020-05-27T21:41:26.128Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T21:41:26.349Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-27T21:41:26.570Z] Waiting for code changes...

[2020-05-27T21:44:07.675Z] Getting status...

[2020-05-27T21:44:10.241Z] Getting status... → Done

[2020-05-27T21:44:10.667Z] Module configuration changed, reloading...

[2020-05-27T21:44:11.640Z] Getting status...

[2020-05-27T21:44:13.037Z] Getting status... → Done

[2020-05-27T21:44:13.674Z] ⏳  Processing...

[2020-05-27T21:44:13.893Z] Syncing module sources (17 files)...

[2020-05-27T21:44:14.329Z] Syncing module sources (7 files)...

[2020-05-27T21:44:14.838Z] Syncing module sources (7 files)... → Done (took 0.5 sec)

[2020-05-27T21:44:15.063Z] Getting build status for v-790a166d74...

[2020-05-27T21:44:15.731Z] Syncing module sources (17 files)... → Done (took 1.8 sec)

[2020-05-27T21:44:15.958Z] Getting build status for v-4512a88fa2...

[2020-05-27T21:44:16.193Z] Getting build status for v-f853fcb9f9...

[2020-05-27T21:44:16.419Z] Getting build status for v-f853fcb9f9... → Done (took 0.2 sec)

[2020-05-27T21:44:16.651Z] Deploying version v-f853fcb9f9...

[2020-05-27T21:44:16.877Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-27T21:44:17.138Z] → Forward: postgres://127.0.0.1:56474 → postgres:5432 (postgres)

[2020-05-27T21:44:17.680Z] Getting build status for v-4512a88fa2... → Done (took 1.7 sec)

[2020-05-27T21:44:17.903Z] Building version v-790a166d74...

[2020-05-27T21:44:18.206Z] Building backend:v-790a166d74...

[2020-05-27T21:44:18.720Z] Building backend:v-790a166d74... → Done (took 3.6 sec)

[2020-05-27T21:44:18.945Z] Deploying version v-790a166d74...

[2020-05-27T21:44:21.145Z] Waiting for resources to be ready...

[2020-05-27T21:44:23.392Z] Resources ready

[2020-05-27T21:44:23.683Z] Deploying version v-790a166d74... → Done (took 4.7 sec)

[2020-05-27T21:44:23.903Z] → Ingress: http://backend.app

[2020-05-27T21:44:24.122Z] → Ingress: http://backend.app/tasks

[2020-05-27T21:44:24.354Z] → Forward: http://127.0.0.1:58598 → backend:80 (https)

[2020-05-27T21:44:24.568Z] Deploying version v-4512a88fa2...

[2020-05-27T21:44:26.440Z] Waiting for resources to be ready...

[2020-05-27T21:44:28.710Z] Resources ready

[2020-05-27T21:44:28.971Z] Deploying version v-4512a88fa2... → Done (took 4.4 sec)

[2020-05-27T21:44:29.194Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T21:44:29.417Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-27T21:44:29.665Z] Waiting for code changes...

[2020-05-27T21:44:51.717Z] Getting status...

[2020-05-27T21:44:54.859Z] Getting status... → Done

[2020-05-27T21:44:55.482Z] ⏳  Processing...

[2020-05-27T21:44:55.486Z] Syncing module sources (17 files)...

[2020-05-27T21:44:55.491Z] Syncing module sources (7 files)...

[2020-05-27T21:44:55.570Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-27T21:44:55.572Z] Getting build status for v-790a166d74...

[2020-05-27T21:44:55.952Z] Getting build status for v-f853fcb9f9...

[2020-05-27T21:44:55.956Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-27T21:44:55.959Z] Deploying version v-f853fcb9f9...

[2020-05-27T21:44:55.961Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-27T21:44:55.965Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-27T21:44:55.968Z] Getting build status for v-4512a88fa2...

[2020-05-27T21:44:55.995Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-27T21:44:56.285Z] Getting build status for v-4512a88fa2... → Done (took 0.3 sec)

[2020-05-27T21:44:56.289Z] Getting build status for v-790a166d74... → Done (took 0.7 sec)

[2020-05-27T21:44:56.293Z] Deploying version v-790a166d74...

[2020-05-27T21:44:56.296Z] Deploying version v-790a166d74... → Already deployed

[2020-05-27T21:44:56.302Z] → Ingress: http://backend.app

[2020-05-27T21:44:56.305Z] → Ingress: http://backend.app/tasks

[2020-05-27T21:44:56.314Z] → Forward: http://127.0.0.1:58675 → backend:80 (https)

[2020-05-27T21:44:56.319Z] Deploying version v-4512a88fa2...

[2020-05-27T21:44:56.322Z] Deploying version v-4512a88fa2... → Already deployed

[2020-05-27T21:44:56.326Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T21:44:56.333Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-27T21:44:56.358Z] Waiting for code changes...

[2020-05-27T21:45:48.098Z] Getting status...

[2020-05-27T21:45:50.324Z] Getting status... → Done

[2020-05-27T21:45:50.530Z] Module configuration changed, reloading...

[2020-05-27T21:45:51.224Z] Getting status...

[2020-05-27T21:45:52.440Z] Getting status... → Done

[2020-05-27T21:45:52.678Z] ⏳  Processing...

[2020-05-27T21:45:52.685Z] Syncing module sources (17 files)...

[2020-05-27T21:45:52.694Z] Syncing module sources (7 files)...

[2020-05-27T21:45:52.760Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-27T21:45:52.766Z] Getting build status for v-d90dd35e77...

[2020-05-27T21:45:53.312Z] Syncing module sources (17 files)... → Done (took 0.6 sec)

[2020-05-27T21:45:53.318Z] Getting build status for v-4512a88fa2...

[2020-05-27T21:45:53.324Z] Getting build status for v-f853fcb9f9...

[2020-05-27T21:45:53.333Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-27T21:45:53.339Z] Deploying version v-f853fcb9f9...

[2020-05-27T21:45:53.345Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-27T21:45:53.362Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-27T21:45:53.599Z] Building version v-d90dd35e77...

[2020-05-27T21:45:53.638Z] Getting build status for v-4512a88fa2... → Done (took 0.3 sec)

[2020-05-27T21:45:53.668Z] Building backend:v-d90dd35e77...

[2020-05-27T21:45:53.949Z] Building backend:v-d90dd35e77... → Done (took 1.2 sec)

[2020-05-27T21:45:53.956Z] Deploying version v-d90dd35e77...

[2020-05-27T21:45:55.886Z] Waiting for resources to be ready...

[2020-05-27T21:45:57.914Z] Resources ready

[2020-05-27T21:45:57.968Z] Deploying version v-d90dd35e77... → Done (took 4 sec)

[2020-05-27T21:45:57.984Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T21:45:57.990Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/tasks

[2020-05-27T21:45:57.996Z] → Forward: http://127.0.0.1:58675 → backend:80 (https)

[2020-05-27T21:45:58.003Z] Deploying version v-4512a88fa2...

[2020-05-27T21:45:59.575Z] Waiting for resources to be ready...

[2020-05-27T21:46:01.603Z] Resources ready

[2020-05-27T21:46:01.648Z] Deploying version v-4512a88fa2... → Done (took 3.6 sec)

[2020-05-27T21:46:01.655Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T21:46:01.662Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-27T21:46:01.690Z] Waiting for code changes...

[2020-05-28T13:13:12.625Z] Getting status...

[2020-05-28T13:13:14.225Z] Error: Command "minikube ip" failed with code 69:

Here's the full output:

* The control plane node must be running for this command
  - To fix this, run: "minikube start"
    at makeError (/snapshot/project/garden-service/tmp/dist/node_modules/execa/lib/error.js:58:11)
    at handlePromise (/snapshot/project/garden-service/tmp/dist/node_modules/execa/index.js:114:26)
    at processTicksAndRejections (internal/process/task_queues.js:93:5)
Error Details:
shortMessage: 'Command failed with exit code 69: minikube ip'
command: minikube ip
exitCode: 69
stdout: |-
  * The control plane node must be running for this command
    - To fix this, run: "minikube start"
stderr: ''
all: |-
  * The control plane node must be running for this command
    - To fix this, run: "minikube start"
failed: true
timedOut: false
isCanceled: false
killed: false


[2020-05-28T13:13:14.237Z] Error: Failed resolving one or more providers:
- local-kubernetes
    at Garden.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/garden.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/garden.js:0)
Error Details:
rawConfigs: []
taskResults:
  resolve-provider.exec:
    type: resolve-provider
    key: resolve-provider.exec
    name: exec
    description: resolving provider exec
    completedAt: '2020-05-28T13:13:12.870Z'
    batchId: 784fd3d7-0841-48a5-95c3-f6f1c5cc9aa5
    output:
      name: exec
      dependencies: []
      moduleConfigs: []
      config:
        name: exec
        path: /Users/emilwils/Documents/node-microservice
      status:
        ready: true
        outputs: {}
    dependencyResults: {}
  resolve-provider.container:
    type: resolve-provider
    key: resolve-provider.container
    name: container
    description: resolving provider container
    completedAt: '2020-05-28T13:13:12.870Z'
    batchId: 797502f9-3495-4366-b8bd-e2e3c59fadb8
    output:
      name: container
      dependencies: []
      moduleConfigs: []
      config:
        name: container
        path: /Users/emilwils/Documents/node-microservice
      status:
        ready: true
        outputs: {}
    dependencyResults: {}
  resolve-provider.local-kubernetes:
    type: resolve-provider
    description: resolving provider local-kubernetes
    key: resolve-provider.local-kubernetes
    name: local-kubernetes
    error:
      shortMessage: 'Command failed with exit code 69: minikube ip'
      command: minikube ip
      exitCode: 69
      stdout: |-
        * The control plane node must be running for this command
          - To fix this, run: "minikube start"
      stderr: ''
      all: |-
        * The control plane node must be running for this command
          - To fix this, run: "minikube start"
      failed: true
      timedOut: false
      isCanceled: false
      killed: false
    completedAt: '2020-05-28T13:13:14.214Z'
    batchId: 797502f9-3495-4366-b8bd-e2e3c59fadb8
messages: []


[2020-05-28T13:13:14.241Z] 
See error.log for detailed error message

[2020-05-28T13:13:14.355Z] Getting status...

[2020-05-28T13:14:42.615Z] Getting status...

[2020-05-28T13:14:46.309Z] Getting status... → Done

[2020-05-28T13:14:46.894Z] ⏳  Processing...

[2020-05-28T13:14:46.897Z] Syncing module sources (17 files)...

[2020-05-28T13:14:46.902Z] Syncing module sources (7 files)...

[2020-05-28T13:14:47.057Z] Syncing module sources (7 files)... → Done (took 0.2 sec)

[2020-05-28T13:14:47.061Z] Getting build status for v-d90dd35e77...

[2020-05-28T13:14:48.574Z] Syncing module sources (17 files)... → Done (took 1.7 sec)

[2020-05-28T13:14:48.578Z] Getting build status for v-4512a88fa2...

[2020-05-28T13:14:48.591Z] Getting build status for v-f853fcb9f9...

[2020-05-28T13:14:48.598Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T13:14:48.602Z] Deploying version v-f853fcb9f9...

[2020-05-28T13:14:48.606Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T13:14:48.622Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T13:14:48.821Z] Getting build status for v-d90dd35e77... → Done (took 1.8 sec)

[2020-05-28T13:14:48.829Z] Deploying version v-d90dd35e77...

[2020-05-28T13:14:48.836Z] Deploying version v-d90dd35e77... → Already deployed

[2020-05-28T13:14:48.842Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T13:14:48.848Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/tasks

[2020-05-28T13:14:48.859Z] → Forward: http://127.0.0.1:49914 → backend:80 (https)

[2020-05-28T13:14:48.989Z] Getting build status for v-4512a88fa2... → Done (took 0.4 sec)

[2020-05-28T13:14:48.993Z] Deploying version v-4512a88fa2...

[2020-05-28T13:14:48.997Z] Deploying version v-4512a88fa2... → Already deployed

[2020-05-28T13:14:49.001Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T13:14:49.010Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T13:14:49.038Z] Waiting for code changes...

[2020-05-28T13:17:25.652Z] ⏳  Processing...

[2020-05-28T13:17:25.728Z] Waiting for code changes...

[2020-05-28T13:17:25.744Z] ⏳  Processing...

[2020-05-28T13:17:25.855Z] Waiting for code changes...

[2020-05-28T13:17:25.868Z] ⏳  Processing...

[2020-05-28T13:17:25.896Z] Waiting for code changes...

[2020-05-28T13:17:27.580Z] ⏳  Processing...

[2020-05-28T13:17:27.643Z] Waiting for code changes...

[2020-05-28T13:17:27.653Z] ⏳  Processing...

[2020-05-28T13:17:27.754Z] Waiting for code changes...

[2020-05-28T13:17:27.768Z] ⏳  Processing...

[2020-05-28T13:17:27.793Z] Waiting for code changes...

[2020-05-28T13:23:01.649Z] ⏳  Processing...

[2020-05-28T13:23:01.791Z] Waiting for code changes...

[2020-05-28T13:23:01.805Z] ⏳  Processing...

[2020-05-28T13:23:01.811Z] Syncing module sources (17 files)...

[2020-05-28T13:23:02.109Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-28T13:23:02.115Z] Building version v-9db1c20fa8...

[2020-05-28T13:23:02.576Z] Building frontend:v-9db1c20fa8...

[2020-05-28T13:23:03.499Z] Building frontend:v-9db1c20fa8... → Done (took 1.4 sec)

[2020-05-28T13:23:03.505Z] Deploying version v-9db1c20fa8...

[2020-05-28T13:23:06.282Z] Waiting for resources to be ready...

[2020-05-28T13:23:08.305Z] Resources ready

[2020-05-28T13:23:08.337Z] Deploying version v-9db1c20fa8... → Done (took 4.8 sec)

[2020-05-28T13:23:08.342Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T13:23:08.347Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T13:23:08.353Z] Waiting for code changes...

[2020-05-28T13:25:15.769Z] ⏳  Processing...

[2020-05-28T13:25:15.899Z] Waiting for code changes...

[2020-05-28T13:25:15.911Z] ⏳  Processing...

[2020-05-28T13:25:15.917Z] Syncing module sources (17 files)...

[2020-05-28T13:25:16.394Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-28T13:25:16.400Z] Building version v-333491c572...

[2020-05-28T13:25:16.842Z] Building frontend:v-333491c572...

[2020-05-28T13:25:17.434Z] Building frontend:v-333491c572... → Done (took 1 sec)

[2020-05-28T13:25:17.441Z] Deploying version v-333491c572...

[2020-05-28T13:25:19.295Z] Waiting for resources to be ready...

[2020-05-28T13:25:21.319Z] Resources ready

[2020-05-28T13:25:21.348Z] Deploying version v-333491c572... → Done (took 3.9 sec)

[2020-05-28T13:25:21.353Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T13:25:21.358Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T13:25:21.366Z] Waiting for code changes...

[2020-05-28T13:35:23.300Z] ⏳  Processing...

[2020-05-28T13:35:23.436Z] Waiting for code changes...

[2020-05-28T13:35:23.451Z] ⏳  Processing...

[2020-05-28T13:35:23.458Z] Syncing module sources (17 files)...

[2020-05-28T13:35:24.064Z] Syncing module sources (17 files)... → Done (took 0.6 sec)

[2020-05-28T13:35:24.073Z] Building version v-64b892c30d...

[2020-05-28T13:35:24.631Z] Building frontend:v-64b892c30d...

[2020-05-28T13:35:25.256Z] Building frontend:v-64b892c30d... → Done (took 1.2 sec)

[2020-05-28T13:35:25.264Z] Deploying version v-64b892c30d...

[2020-05-28T16:30:22.898Z] Getting status...

[2020-05-28T16:30:25.852Z] Getting status... → Done

[2020-05-28T16:30:26.456Z] ⏳  Processing...

[2020-05-28T16:30:26.460Z] Syncing module sources (17 files)...

[2020-05-28T16:30:26.465Z] Syncing module sources (7 files)...

[2020-05-28T16:30:26.552Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T16:30:26.555Z] Getting build status for v-0ada47493c...

[2020-05-28T16:30:27.365Z] Getting build status for v-f853fcb9f9...

[2020-05-28T16:30:27.369Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T16:30:27.372Z] Deploying version v-f853fcb9f9...

[2020-05-28T16:30:27.375Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T16:30:27.383Z] Syncing module sources (17 files)... → Done (took 0.9 sec)

[2020-05-28T16:30:27.386Z] Getting build status for v-6a0e3036bc...

[2020-05-28T16:30:27.432Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T16:30:27.549Z] Building version v-0ada47493c...

[2020-05-28T16:30:27.635Z] Building backend:v-0ada47493c...

[2020-05-28T16:30:27.712Z] Building version v-6a0e3036bc...

[2020-05-28T16:30:27.787Z] Building frontend:v-6a0e3036bc...

[2020-05-28T16:30:27.994Z] Building backend:v-0ada47493c... → Done (took 1.4 sec)

[2020-05-28T16:30:27.998Z] Deploying version v-0ada47493c...

[2020-05-28T16:30:31.200Z] Waiting for resources to be ready...

[2020-05-28T16:30:33.219Z] Resources ready

[2020-05-28T16:30:33.251Z] Deploying version v-0ada47493c... → Done (took 5.3 sec)

[2020-05-28T16:30:33.256Z] → Ingress: http://node-microservice.app

[2020-05-28T16:30:33.259Z] → Ingress: http://node-microservice.app/tasks

[2020-05-28T16:30:33.267Z] → Forward: http://127.0.0.1:51546 → backend:80 (https)

[2020-05-28T16:31:15.922Z] Building frontend:v-6a0e3036bc... → Done (took 48.5 sec)

[2020-05-28T16:31:15.928Z] Deploying version v-6a0e3036bc...

[2020-05-28T16:31:17.778Z] Waiting for resources to be ready...

[2020-05-28T16:31:19.800Z] Resources ready

[2020-05-28T16:31:19.839Z] Deploying version v-6a0e3036bc... → Done (took 3.9 sec)

[2020-05-28T16:31:19.844Z] → Ingress: http://node-microservice.app

[2020-05-28T16:31:19.853Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T16:31:19.884Z] Waiting for code changes...

[2020-05-28T16:31:26.827Z] ⏳  Processing...

[2020-05-28T16:31:26.891Z] Waiting for code changes...

[2020-05-28T16:31:26.904Z] ⏳  Processing...

[2020-05-28T16:31:27.070Z] Waiting for code changes...

[2020-05-28T16:31:27.083Z] ⏳  Processing...

[2020-05-28T16:31:27.107Z] Waiting for code changes...

[2020-05-28T16:31:27.486Z] ⏳  Processing...

[2020-05-28T16:31:27.519Z] Waiting for code changes...

[2020-05-28T16:31:28.215Z] ⏳  Processing...

[2020-05-28T16:31:28.246Z] Waiting for code changes...

[2020-05-28T16:32:18.021Z] Getting status...

[2020-05-28T16:32:19.987Z] Getting status... → Done

[2020-05-28T16:32:20.171Z] Module configuration changed, reloading...

[2020-05-28T16:32:20.906Z] Getting status...

[2020-05-28T16:32:21.928Z] Getting status... → Done

[2020-05-28T16:32:22.361Z] ⏳  Processing...

[2020-05-28T16:32:22.377Z] Checking result...

[2020-05-28T16:32:22.390Z] Syncing module sources (7 files)...

[2020-05-28T16:32:22.395Z] Syncing module sources (17 files)...

[2020-05-28T16:32:22.439Z] Checking result... → Done

[2020-05-28T16:32:22.457Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T16:32:22.463Z] Getting build status for v-d8272f58cc...

[2020-05-28T16:32:22.877Z] Getting build status for v-f853fcb9f9...

[2020-05-28T16:32:22.883Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T16:32:22.889Z] Deploying version v-f853fcb9f9...

[2020-05-28T16:32:22.895Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T16:32:22.902Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-28T16:32:22.909Z] Getting build status for v-6a0e3036bc...

[2020-05-28T16:32:22.928Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T16:32:22.937Z] Running...

[2020-05-28T16:32:23.210Z] Building version v-d8272f58cc...

[2020-05-28T16:32:23.258Z] Getting build status for v-6a0e3036bc... → Done (took 0.4 sec)

[2020-05-28T16:32:23.284Z] Building backend:v-d8272f58cc...

[2020-05-28T16:32:23.581Z] Building backend:v-d8272f58cc... → Done (took 1.1 sec)

[2020-05-28T16:32:25.274Z] Running... → Done (took 2.3 sec)

[2020-05-28T16:32:25.281Z] Deploying version v-d8272f58cc...

[2020-05-28T16:32:27.173Z] Waiting for resources to be ready...

[2020-05-28T16:32:29.196Z] Resources ready

[2020-05-28T16:32:29.234Z] Deploying version v-d8272f58cc... → Done (took 4 sec)

[2020-05-28T16:32:29.241Z] → Ingress: http://node-microservice.app

[2020-05-28T16:32:29.248Z] → Ingress: http://node-microservice.app/tasks

[2020-05-28T16:32:29.255Z] → Forward: http://127.0.0.1:51546 → backend:80 (https)

[2020-05-28T16:32:29.262Z] Deploying version v-6a0e3036bc...

[2020-05-28T16:32:30.735Z] Waiting for resources to be ready...

[2020-05-28T16:32:32.764Z] Resources ready

[2020-05-28T16:32:32.804Z] Deploying version v-6a0e3036bc... → Done (took 3.5 sec)

[2020-05-28T16:32:32.811Z] → Ingress: http://node-microservice.app

[2020-05-28T16:32:32.818Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T16:32:32.826Z] ⏳  Processing...

[2020-05-28T16:32:32.883Z] Waiting for code changes...

[2020-05-28T16:33:11.333Z] Getting status...

[2020-05-28T16:33:13.448Z] Getting status... → Done

[2020-05-28T16:33:13.645Z] Module configuration changed, reloading...

[2020-05-28T16:33:14.403Z] Getting status...

[2020-05-28T16:33:15.604Z] Getting status... → Done

[2020-05-28T16:33:16.061Z] ⏳  Processing...

[2020-05-28T16:33:16.078Z] Checking result...

[2020-05-28T16:33:16.085Z] Syncing module sources (7 files)...

[2020-05-28T16:33:16.093Z] Syncing module sources (17 files)...

[2020-05-28T16:33:16.139Z] Checking result... → Done

[2020-05-28T16:33:16.156Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T16:33:16.166Z] Getting build status for v-18bdd33b99...

[2020-05-28T16:33:16.627Z] Getting build status for v-f853fcb9f9...

[2020-05-28T16:33:16.637Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T16:33:16.647Z] Syncing module sources (17 files)... → Done (took 0.6 sec)

[2020-05-28T16:33:16.661Z] Getting build status for v-ea770499ac...

[2020-05-28T16:33:16.733Z] Deploying version v-f853fcb9f9...

[2020-05-28T16:33:16.743Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T16:33:16.758Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T16:33:16.766Z] Running...

[2020-05-28T16:33:16.952Z] Building version v-18bdd33b99...

[2020-05-28T16:33:17.010Z] Building version v-ea770499ac...

[2020-05-28T16:33:17.115Z] Building backend:v-18bdd33b99...

[2020-05-28T16:33:17.140Z] Building frontend:v-ea770499ac...

[2020-05-28T16:33:17.531Z] Building backend:v-18bdd33b99... → Done (took 1.4 sec)

[2020-05-28T16:33:17.569Z] Building frontend:v-ea770499ac... → Done (took 0.9 sec)

[2020-05-28T16:33:19.196Z] Failed!

[2020-05-28T16:33:19.209Z] Error: ERROR:  database "test" already exists
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/tasks/task.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/tasks/task.js:0)

[2020-05-28T16:33:19.219Z] ⏳  Processing...

[2020-05-28T16:33:19.273Z] Waiting for code changes...

[2020-05-28T16:33:26.740Z] Getting status...

[2020-05-28T16:33:28.692Z] Getting status... → Done

[2020-05-28T16:33:28.891Z] Module configuration changed, reloading...

[2020-05-28T16:33:29.580Z] Getting status...

[2020-05-28T16:33:30.877Z] Getting status... → Done

[2020-05-28T16:33:31.068Z] ⏳  Processing...

[2020-05-28T16:33:31.080Z] Syncing module sources (17 files)...

[2020-05-28T16:33:31.103Z] Syncing module sources (7 files)...

[2020-05-28T16:33:31.174Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T16:33:31.185Z] Getting build status for v-d90dd35e77...

[2020-05-28T16:33:31.565Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-28T16:33:31.576Z] Getting build status for v-ea770499ac...

[2020-05-28T16:33:31.587Z] Getting build status for v-f853fcb9f9...

[2020-05-28T16:33:31.602Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T16:33:31.615Z] Deploying version v-f853fcb9f9...

[2020-05-28T16:33:31.626Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T16:33:31.653Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T16:33:31.882Z] Getting build status for v-d90dd35e77... → Done (took 0.7 sec)

[2020-05-28T16:33:31.894Z] Deploying version v-d90dd35e77...

[2020-05-28T16:33:31.923Z] Getting build status for v-ea770499ac... → Done (took 0.3 sec)

[2020-05-28T16:33:33.641Z] Waiting for resources to be ready...

[2020-05-28T16:33:35.667Z] Resources ready

[2020-05-28T16:33:35.702Z] Deploying version v-d90dd35e77... → Done (took 3.8 sec)

[2020-05-28T16:33:35.715Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T16:33:35.728Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/tasks

[2020-05-28T16:33:35.741Z] → Forward: http://127.0.0.1:51546 → backend:80 (https)

[2020-05-28T16:33:35.752Z] Deploying version v-ea770499ac...

[2020-05-28T16:33:37.593Z] Waiting for resources to be ready...

[2020-05-28T16:33:39.619Z] Resources ready

[2020-05-28T16:33:39.679Z] Deploying version v-ea770499ac... → Done (took 3.9 sec)

[2020-05-28T16:33:39.692Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T16:33:39.703Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T16:33:39.723Z] Waiting for code changes...

[2020-05-28T16:34:43.162Z] ⏳  Processing...

[2020-05-28T16:34:43.496Z] Waiting for code changes...

[2020-05-28T16:34:43.515Z] ⏳  Processing...

[2020-05-28T16:34:43.528Z] Syncing module sources (17 files)...

[2020-05-28T16:34:44.021Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-28T16:34:44.037Z] Building version v-a6190798db...

[2020-05-28T16:34:44.502Z] Building frontend:v-a6190798db...

[2020-05-28T16:34:45.137Z] Building frontend:v-a6190798db... → Done (took 1.1 sec)

[2020-05-28T16:34:45.151Z] Deploying version v-a6190798db...

[2020-05-28T16:34:47.034Z] Waiting for resources to be ready...

[2020-05-28T16:34:49.057Z] Resources ready

[2020-05-28T16:34:49.107Z] Deploying version v-a6190798db... → Done (took 4 sec)

[2020-05-28T16:34:49.130Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T16:34:49.145Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T16:34:49.156Z] Waiting for code changes...

[2020-05-28T16:35:23.881Z] ⏳  Processing...

[2020-05-28T16:35:24.061Z] Waiting for code changes...

[2020-05-28T16:35:24.077Z] ⏳  Processing...

[2020-05-28T16:35:24.091Z] Syncing module sources (17 files)...

[2020-05-28T16:35:24.412Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-28T16:35:24.425Z] Building version v-232650d756...

[2020-05-28T16:35:24.891Z] Building frontend:v-232650d756...

[2020-05-28T16:35:25.498Z] Building frontend:v-232650d756... → Done (took 1.1 sec)

[2020-05-28T16:35:25.512Z] Deploying version v-232650d756...

[2020-05-28T16:35:27.360Z] Waiting for resources to be ready...

[2020-05-28T16:35:29.389Z] Resources ready

[2020-05-28T16:35:29.454Z] Deploying version v-232650d756... → Done (took 3.9 sec)

[2020-05-28T16:35:29.468Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T16:35:29.487Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T16:35:29.506Z] Waiting for code changes...

[2020-05-28T16:37:58.817Z] ⏳  Processing...

[2020-05-28T16:37:58.979Z] Waiting for code changes...

[2020-05-28T16:37:58.997Z] ⏳  Processing...

[2020-05-28T16:37:59.010Z] Syncing module sources (17 files)...

[2020-05-28T16:37:59.309Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-28T16:37:59.324Z] Building version v-82cfb4ce41...

[2020-05-28T16:37:59.783Z] Building frontend:v-82cfb4ce41...

[2020-05-28T16:38:00.371Z] Building frontend:v-82cfb4ce41... → Done (took 1 sec)

[2020-05-28T16:38:00.385Z] Deploying version v-82cfb4ce41...

[2020-05-28T16:38:02.245Z] Waiting for resources to be ready...

[2020-05-28T16:38:04.272Z] Resources ready

[2020-05-28T16:38:04.312Z] Deploying version v-82cfb4ce41... → Done (took 3.9 sec)

[2020-05-28T16:38:04.325Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T16:38:04.347Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T16:38:04.366Z] Waiting for code changes...

[2020-05-28T16:39:29.791Z] ⏳  Processing...

[2020-05-28T16:39:29.958Z] Waiting for code changes...

[2020-05-28T16:39:29.976Z] ⏳  Processing...

[2020-05-28T16:39:29.990Z] Syncing module sources (17 files)...

[2020-05-28T16:39:30.297Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-28T16:39:30.311Z] Building version v-bac7a1ae3f...

[2020-05-28T16:39:30.778Z] Building frontend:v-bac7a1ae3f...

[2020-05-28T16:39:31.351Z] Building frontend:v-bac7a1ae3f... → Done (took 1 sec)

[2020-05-28T16:39:31.365Z] Deploying version v-bac7a1ae3f...

[2020-05-28T16:39:33.215Z] Waiting for resources to be ready...

[2020-05-28T16:39:35.247Z] Resources ready

[2020-05-28T16:39:35.297Z] Deploying version v-bac7a1ae3f... → Done (took 3.9 sec)

[2020-05-28T16:39:35.319Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T16:39:35.335Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T16:39:35.350Z] Waiting for code changes...

[2020-05-28T16:41:40.826Z] ⏳  Processing...

[2020-05-28T16:41:40.985Z] Waiting for code changes...

[2020-05-28T16:41:41.004Z] ⏳  Processing...

[2020-05-28T16:41:41.018Z] Syncing module sources (17 files)...

[2020-05-28T16:41:41.479Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-28T16:41:41.492Z] Building version v-8b14844318...

[2020-05-28T16:41:41.944Z] Building frontend:v-8b14844318...

[2020-05-28T16:41:42.569Z] Building frontend:v-8b14844318... → Done (took 1.1 sec)

[2020-05-28T16:41:42.585Z] Deploying version v-8b14844318...

[2020-05-28T16:41:45.289Z] Waiting for resources to be ready...

[2020-05-28T16:41:47.320Z] Resources ready

[2020-05-28T16:41:47.361Z] Deploying version v-8b14844318... → Done (took 4.8 sec)

[2020-05-28T16:41:47.376Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T16:41:47.400Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T16:41:47.423Z] ⏳  Processing...

[2020-05-28T16:41:47.447Z] Syncing module sources (17 files)...

[2020-05-28T16:41:47.850Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-28T16:41:47.865Z] Building version v-83382e3a0a...

[2020-05-28T16:41:48.142Z] Building frontend:v-83382e3a0a...

[2020-05-28T16:41:49.055Z] Building frontend:v-83382e3a0a... → Done (took 1.2 sec)

[2020-05-28T16:41:49.071Z] Deploying version v-83382e3a0a...

[2020-05-28T16:41:51.143Z] Waiting for resources to be ready...

[2020-05-28T16:41:53.171Z] Resources ready

[2020-05-28T16:41:53.215Z] Deploying version v-83382e3a0a... → Done (took 4.1 sec)

[2020-05-28T16:41:53.231Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T16:41:53.247Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T16:41:53.261Z] ⏳  Processing...

[2020-05-28T16:41:53.275Z] Syncing module sources (17 files)...

[2020-05-28T16:41:53.587Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-28T16:41:53.607Z] Building version v-58148ac88d...

[2020-05-28T16:41:53.874Z] Building frontend:v-58148ac88d...

[2020-05-28T16:41:54.526Z] Building frontend:v-58148ac88d... → Done (took 0.9 sec)

[2020-05-28T16:41:54.545Z] Deploying version v-58148ac88d...

[2020-05-28T16:41:57.099Z] Waiting for resources to be ready...

[2020-05-28T16:41:59.138Z] Resources ready

[2020-05-28T16:41:59.189Z] Deploying version v-58148ac88d... → Done (took 4.6 sec)

[2020-05-28T16:41:59.206Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T16:41:59.224Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T16:41:59.240Z] ⏳  Processing...

[2020-05-28T16:41:59.254Z] Syncing module sources (17 files)...

[2020-05-28T16:41:59.536Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-28T16:41:59.553Z] Building version v-58148ac88d...

[2020-05-28T16:41:59.810Z] Building frontend:v-58148ac88d...

[2020-05-28T16:42:00.093Z] Building frontend:v-58148ac88d... → Done (took 0.5 sec)

[2020-05-28T16:42:00.111Z] Deploying version v-58148ac88d...

[2020-05-28T16:42:01.886Z] Waiting for resources to be ready...

[2020-05-28T16:42:03.943Z] Resources ready

[2020-05-28T16:42:03.985Z] Deploying version v-58148ac88d... → Done (took 3.9 sec)

[2020-05-28T16:42:04.003Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T16:42:04.021Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T16:42:04.040Z] Waiting for code changes...

[2020-05-28T16:58:12.320Z] ⏳  Processing...

[2020-05-28T16:58:12.509Z] Waiting for code changes...

[2020-05-28T16:58:12.532Z] ⏳  Processing...

[2020-05-28T16:58:12.550Z] Syncing module sources (17 files)...

[2020-05-28T16:58:13.390Z] Syncing module sources (17 files)... → Done (took 0.8 sec)

[2020-05-28T16:58:13.407Z] Building version v-634c6e3627...

[2020-05-28T16:58:13.863Z] Building frontend:v-634c6e3627...

[2020-05-28T16:58:14.517Z] Building frontend:v-634c6e3627... → Done (took 1.1 sec)

[2020-05-28T16:58:14.537Z] Deploying version v-634c6e3627...

[2020-05-28T16:58:17.296Z] Waiting for resources to be ready...

[2020-05-28T16:58:19.330Z] Resources ready

[2020-05-28T16:58:19.369Z] Deploying version v-634c6e3627... → Done (took 4.8 sec)

[2020-05-28T16:58:19.387Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T16:58:19.416Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T16:58:19.450Z] Waiting for code changes...

[2020-05-28T16:58:31.588Z] ⏳  Processing...

[2020-05-28T16:58:31.735Z] Waiting for code changes...

[2020-05-28T16:58:31.758Z] ⏳  Processing...

[2020-05-28T16:58:31.779Z] Syncing module sources (17 files)...

[2020-05-28T16:58:32.104Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-28T16:58:32.123Z] Building version v-4b2d4dde7f...

[2020-05-28T16:58:32.637Z] Building frontend:v-4b2d4dde7f...

[2020-05-28T16:58:33.513Z] Building frontend:v-4b2d4dde7f... → Done (took 1.4 sec)

[2020-05-28T16:58:33.532Z] Deploying version v-4b2d4dde7f...

[2020-05-28T16:58:35.445Z] Waiting for resources to be ready...

[2020-05-28T16:58:37.479Z] Resources ready

[2020-05-28T16:58:37.525Z] Deploying version v-4b2d4dde7f... → Done (took 4 sec)

[2020-05-28T16:58:37.545Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T16:58:37.564Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T16:58:37.584Z] Waiting for code changes...

[2020-05-28T16:58:59.683Z] ⏳  Processing...

[2020-05-28T16:58:59.870Z] Waiting for code changes...

[2020-05-28T16:58:59.895Z] ⏳  Processing...

[2020-05-28T16:58:59.914Z] Syncing module sources (17 files)...

[2020-05-28T16:59:00.266Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-28T16:59:00.288Z] Building version v-51ce635bde...

[2020-05-28T16:59:00.742Z] Building frontend:v-51ce635bde...

[2020-05-28T16:59:01.454Z] Building frontend:v-51ce635bde... → Done (took 1.2 sec)

[2020-05-28T16:59:01.474Z] Deploying version v-51ce635bde...

[2020-05-28T16:59:03.342Z] Waiting for resources to be ready...

[2020-05-28T16:59:05.374Z] Resources ready

[2020-05-28T16:59:05.457Z] Deploying version v-51ce635bde... → Done (took 4 sec)

[2020-05-28T16:59:05.480Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T16:59:05.502Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T16:59:05.524Z] Waiting for code changes...

[2020-05-28T17:00:11.749Z] ⏳  Processing...

[2020-05-28T17:00:11.904Z] Waiting for code changes...

[2020-05-28T17:00:11.929Z] ⏳  Processing...

[2020-05-28T17:00:11.949Z] Syncing module sources (17 files)...

[2020-05-28T17:00:12.509Z] Syncing module sources (17 files)... → Done (took 0.6 sec)

[2020-05-28T17:00:12.530Z] Building version v-f9d0d8cdc0...

[2020-05-28T17:00:13.008Z] Building frontend:v-f9d0d8cdc0...

[2020-05-28T17:00:13.609Z] Building frontend:v-f9d0d8cdc0... → Done (took 1.1 sec)

[2020-05-28T17:00:13.631Z] Deploying version v-f9d0d8cdc0...

[2020-05-28T17:00:15.494Z] Waiting for resources to be ready...

[2020-05-28T17:00:17.556Z] Resources ready

[2020-05-28T17:00:17.637Z] Deploying version v-f9d0d8cdc0... → Done (took 4 sec)

[2020-05-28T17:00:17.659Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T17:00:17.680Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T17:00:17.700Z] Waiting for code changes...

[2020-05-28T17:00:50.250Z] ⏳  Processing...

[2020-05-28T17:00:50.437Z] Waiting for code changes...

[2020-05-28T17:00:50.463Z] ⏳  Processing...

[2020-05-28T17:00:50.486Z] Syncing module sources (17 files)...

[2020-05-28T17:00:50.814Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-28T17:00:50.836Z] Building version v-5bbe81b61d...

[2020-05-28T17:00:51.314Z] Building frontend:v-5bbe81b61d...

[2020-05-28T17:00:51.962Z] Building frontend:v-5bbe81b61d... → Done (took 1.1 sec)

[2020-05-28T17:00:51.983Z] Deploying version v-5bbe81b61d...

[2020-05-28T17:00:53.858Z] Waiting for resources to be ready...

[2020-05-28T17:00:55.893Z] Resources ready

[2020-05-28T17:00:55.947Z] Deploying version v-5bbe81b61d... → Done (took 4 sec)

[2020-05-28T17:00:55.969Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T17:00:55.992Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T17:00:56.014Z] Waiting for code changes...

[2020-05-28T17:03:25.535Z] ⏳  Processing...

[2020-05-28T17:03:25.750Z] Waiting for code changes...

[2020-05-28T17:03:25.783Z] ⏳  Processing...

[2020-05-28T17:03:25.805Z] Syncing module sources (17 files)...

[2020-05-28T17:03:26.668Z] Syncing module sources (17 files)... → Done (took 0.9 sec)

[2020-05-28T17:03:26.690Z] Building version v-cbc319a537...

[2020-05-28T17:03:27.182Z] Building frontend:v-cbc319a537...

[2020-05-28T17:03:27.893Z] Building frontend:v-cbc319a537... → Done (took 1.2 sec)

[2020-05-28T17:03:27.917Z] Deploying version v-cbc319a537...

[2020-05-28T17:03:29.842Z] Waiting for resources to be ready...

[2020-05-28T17:03:31.883Z] Resources ready

[2020-05-28T17:03:31.935Z] Deploying version v-cbc319a537... → Done (took 4 sec)

[2020-05-28T17:03:31.959Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T17:03:31.984Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T17:03:32.006Z] Waiting for code changes...

[2020-05-28T17:04:11.466Z] ⏳  Processing...

[2020-05-28T17:04:11.657Z] Waiting for code changes...

[2020-05-28T17:04:11.686Z] ⏳  Processing...

[2020-05-28T17:04:11.709Z] Syncing module sources (17 files)...

[2020-05-28T17:04:12.238Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-28T17:04:12.260Z] Building version v-38bf00d7a0...

[2020-05-28T17:04:12.758Z] Building frontend:v-38bf00d7a0...

[2020-05-28T17:04:13.441Z] Building frontend:v-38bf00d7a0... → Done (took 1.2 sec)

[2020-05-28T17:04:13.465Z] Deploying version v-38bf00d7a0...

[2020-05-28T17:04:15.383Z] Waiting for resources to be ready...

[2020-05-28T17:04:17.426Z] Resources ready

[2020-05-28T17:04:17.474Z] Deploying version v-38bf00d7a0... → Done (took 4 sec)

[2020-05-28T17:04:17.495Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T17:04:17.516Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T17:04:17.536Z] Waiting for code changes...

[2020-05-28T17:05:43.996Z] ⏳  Processing...

[2020-05-28T17:05:44.150Z] Waiting for code changes...

[2020-05-28T17:05:44.181Z] ⏳  Processing...

[2020-05-28T17:05:44.217Z] Syncing module sources (17 files)...

[2020-05-28T17:05:44.848Z] Syncing module sources (17 files)... → Done (took 0.6 sec)

[2020-05-28T17:05:44.874Z] Building version v-008eb38ca5...

[2020-05-28T17:05:45.337Z] Building frontend:v-008eb38ca5...

[2020-05-28T17:05:46.045Z] Building frontend:v-008eb38ca5... → Done (took 1.2 sec)

[2020-05-28T17:05:46.070Z] Deploying version v-008eb38ca5...

[2020-05-28T17:05:47.950Z] Waiting for resources to be ready...

[2020-05-28T17:05:49.993Z] Resources ready

[2020-05-28T17:05:50.060Z] Deploying version v-008eb38ca5... → Done (took 4 sec)

[2020-05-28T17:05:50.084Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T17:05:50.109Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T17:05:50.133Z] Waiting for code changes...

[2020-05-28T17:07:36.703Z] ⏳  Processing...

[2020-05-28T17:07:36.874Z] Waiting for code changes...

[2020-05-28T17:07:36.912Z] ⏳  Processing...

[2020-05-28T17:07:36.942Z] Syncing module sources (17 files)...

[2020-05-28T17:07:37.464Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-28T17:07:37.491Z] Building version v-cb68501d4c...

[2020-05-28T17:07:37.983Z] Building frontend:v-cb68501d4c...

[2020-05-28T17:07:38.670Z] Building frontend:v-cb68501d4c... → Done (took 1.2 sec)

[2020-05-28T17:07:38.696Z] Deploying version v-cb68501d4c...

[2020-05-28T17:07:40.581Z] Waiting for resources to be ready...

[2020-05-28T17:07:42.625Z] Resources ready

[2020-05-28T17:07:42.677Z] Deploying version v-cb68501d4c... → Done (took 4 sec)

[2020-05-28T17:07:42.704Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T17:07:42.730Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T17:07:42.755Z] Waiting for code changes...

[2020-05-28T17:08:09.029Z] ⏳  Processing...

[2020-05-28T17:08:09.279Z] Waiting for code changes...

[2020-05-28T17:08:09.308Z] ⏳  Processing...

[2020-05-28T17:08:09.332Z] Syncing module sources (17 files)...

[2020-05-28T17:08:09.756Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-28T17:08:09.779Z] Building version v-a0213b366a...

[2020-05-28T17:08:10.337Z] Building frontend:v-a0213b366a...

[2020-05-28T17:08:10.977Z] Building frontend:v-a0213b366a... → Done (took 1.2 sec)

[2020-05-28T17:08:11.001Z] Deploying version v-a0213b366a...

[2020-05-28T17:08:12.942Z] Waiting for resources to be ready...

[2020-05-28T17:08:14.985Z] Resources ready

[2020-05-28T17:08:15.068Z] Deploying version v-a0213b366a... → Done (took 4.1 sec)

[2020-05-28T17:08:15.092Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T17:08:15.119Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T17:08:15.143Z] Waiting for code changes...

[2020-05-28T17:09:20.947Z] ⏳  Processing...

[2020-05-28T17:09:21.135Z] Waiting for code changes...

[2020-05-28T17:09:21.165Z] ⏳  Processing...

[2020-05-28T17:09:21.190Z] Syncing module sources (17 files)...

[2020-05-28T17:09:21.520Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-28T17:09:21.545Z] Building version v-6a3299bb77...

[2020-05-28T17:09:21.994Z] Building frontend:v-6a3299bb77...

[2020-05-28T17:09:22.600Z] Building frontend:v-6a3299bb77... → Done (took 1.1 sec)

[2020-05-28T17:09:22.625Z] Deploying version v-6a3299bb77...

[2020-05-28T17:09:24.483Z] Waiting for resources to be ready...

[2020-05-28T17:09:26.540Z] Resources ready

[2020-05-28T17:09:26.618Z] Deploying version v-6a3299bb77... → Done (took 4 sec)

[2020-05-28T17:09:26.644Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T17:09:26.669Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T17:09:26.693Z] Waiting for code changes...

[2020-05-28T17:10:03.745Z] ⏳  Processing...

[2020-05-28T17:10:03.944Z] Waiting for code changes...

[2020-05-28T17:10:03.975Z] ⏳  Processing...

[2020-05-28T17:10:04.004Z] Syncing module sources (17 files)...

[2020-05-28T17:10:04.326Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-28T17:10:04.351Z] Building version v-e96a704f4e...

[2020-05-28T17:10:04.837Z] Building frontend:v-e96a704f4e...

[2020-05-28T17:10:05.446Z] Building frontend:v-e96a704f4e... → Done (took 1.1 sec)

[2020-05-28T17:10:05.470Z] Deploying version v-e96a704f4e...

[2020-05-28T17:10:07.492Z] Waiting for resources to be ready...

[2020-05-28T17:10:09.536Z] Resources ready

[2020-05-28T17:10:09.587Z] Deploying version v-e96a704f4e... → Done (took 4.1 sec)

[2020-05-28T17:10:09.613Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T17:10:09.637Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T17:10:09.662Z] Waiting for code changes...

[2020-05-28T17:13:37.360Z] ⏳  Processing...

[2020-05-28T17:13:37.533Z] Waiting for code changes...

[2020-05-28T17:13:37.566Z] ⏳  Processing...

[2020-05-28T17:13:37.593Z] Syncing module sources (17 files)...

[2020-05-28T17:13:38.111Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-28T17:13:38.142Z] Building version v-1b435ff99d...

[2020-05-28T17:13:38.639Z] Building frontend:v-1b435ff99d...

[2020-05-28T17:13:39.462Z] Building frontend:v-1b435ff99d... → Done (took 1.3 sec)

[2020-05-28T17:13:39.496Z] Deploying version v-1b435ff99d...

[2020-05-28T17:13:41.534Z] Waiting for resources to be ready...

[2020-05-28T17:13:41.640Z] Error starting port forward to frontend/frontend:3000: Port forward exited with code 1 before establishing connection:

error: unable to forward port because pod is not running. Current status=Pending


[2020-05-28T17:13:43.598Z] Resources ready

[2020-05-28T17:13:43.701Z] Deploying version v-1b435ff99d... → Done (took 4.2 sec)

[2020-05-28T17:13:43.728Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T17:13:43.756Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T17:13:43.783Z] Waiting for code changes...

[2020-05-28T17:15:51.044Z] ⏳  Processing...

[2020-05-28T17:15:51.190Z] Waiting for code changes...

[2020-05-28T17:15:51.226Z] ⏳  Processing...

[2020-05-28T17:15:51.256Z] Syncing module sources (17 files)...

[2020-05-28T17:15:52.130Z] Syncing module sources (17 files)... → Done (took 0.9 sec)

[2020-05-28T17:15:52.159Z] Building version v-06c4765cff...

[2020-05-28T17:15:52.628Z] Building frontend:v-06c4765cff...

[2020-05-28T17:15:53.383Z] Building frontend:v-06c4765cff... → Done (took 1.2 sec)

[2020-05-28T17:15:53.415Z] Deploying version v-06c4765cff...

[2020-05-28T17:15:55.248Z] Error starting port forward to frontend/frontend:3000: Port forward exited with code 1 before establishing connection:

error: unable to forward port because pod is not running. Current status=Pending


[2020-05-28T17:15:55.318Z] Waiting for resources to be ready...

[2020-05-28T17:15:55.398Z] Error starting port forward to frontend/frontend:3000: Port forward exited with code 1 before establishing connection:

error: unable to forward port because pod is not running. Current status=Pending


[2020-05-28T17:15:57.369Z] Resources ready

[2020-05-28T17:15:57.438Z] Deploying version v-06c4765cff... → Done (took 4 sec)

[2020-05-28T17:15:57.468Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T17:15:57.500Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T17:15:57.529Z] Waiting for code changes...

[2020-05-28T17:17:33.173Z] ⏳  Processing...

[2020-05-28T17:17:33.381Z] Waiting for code changes...

[2020-05-28T17:17:33.417Z] ⏳  Processing...

[2020-05-28T17:17:33.448Z] Syncing module sources (17 files)...

[2020-05-28T17:17:33.954Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-28T17:17:34.001Z] Building version v-0ca48dc967...

[2020-05-28T17:17:34.476Z] Building frontend:v-0ca48dc967...

[2020-05-28T17:17:35.212Z] Building frontend:v-0ca48dc967... → Done (took 1.2 sec)

[2020-05-28T17:17:35.246Z] Deploying version v-0ca48dc967...

[2020-05-28T17:17:37.110Z] Waiting for resources to be ready...

[2020-05-28T17:17:39.164Z] Resources ready

[2020-05-28T17:17:39.226Z] Deploying version v-0ca48dc967... → Done (took 4 sec)

[2020-05-28T17:17:39.257Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T17:17:39.288Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T17:17:39.316Z] Waiting for code changes...

[2020-05-28T17:17:52.161Z] ⏳  Processing...

[2020-05-28T17:17:52.456Z] Waiting for code changes...

[2020-05-28T17:17:52.495Z] ⏳  Processing...

[2020-05-28T17:17:52.527Z] Syncing module sources (17 files)...

[2020-05-28T17:17:53.039Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-28T17:17:53.072Z] Building version v-531d483e57...

[2020-05-28T17:17:53.596Z] Building frontend:v-531d483e57...

[2020-05-28T17:17:54.630Z] Building frontend:v-531d483e57... → Done (took 1.6 sec)

[2020-05-28T17:17:54.666Z] Deploying version v-531d483e57...

[2020-05-28T17:17:56.848Z] Waiting for resources to be ready...

[2020-05-28T17:17:58.915Z] Resources ready

[2020-05-28T17:17:58.989Z] Deploying version v-531d483e57... → Done (took 4.3 sec)

[2020-05-28T17:17:59.023Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T17:17:59.059Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T17:17:59.091Z] Waiting for code changes...

[2020-05-28T17:20:00.241Z] ⏳  Processing...

[2020-05-28T17:20:00.417Z] Waiting for code changes...

[2020-05-28T17:20:00.454Z] ⏳  Processing...

[2020-05-28T17:20:00.485Z] Syncing module sources (17 files)...

[2020-05-28T17:20:01.091Z] Syncing module sources (17 files)... → Done (took 0.6 sec)

[2020-05-28T17:20:01.123Z] Building version v-45d0e299cd...

[2020-05-28T17:20:01.646Z] Building frontend:v-45d0e299cd...

[2020-05-28T17:20:02.395Z] Building frontend:v-45d0e299cd... → Done (took 1.3 sec)

[2020-05-28T17:20:02.428Z] Deploying version v-45d0e299cd...

[2020-05-28T17:20:04.078Z] Error starting port forward to frontend/frontend:3000: Port forward exited with code 1 before establishing connection:

error: unable to forward port because pod is not running. Current status=Pending


[2020-05-28T17:20:04.195Z] Error starting port forward to frontend/frontend:3000: Port forward exited with code 1 before establishing connection:

error: unable to forward port because pod is not running. Current status=Pending


[2020-05-28T17:20:04.341Z] Error starting port forward to frontend/frontend:3000: Port forward exited with code 1 before establishing connection:

error: unable to forward port because pod is not running. Current status=Pending


[2020-05-28T17:20:04.462Z] Error starting port forward to frontend/frontend:3000: Port forward exited with code 1 before establishing connection:

error: unable to forward port because pod is not running. Current status=Pending


[2020-05-28T17:20:04.581Z] Error starting port forward to frontend/frontend:3000: Port forward exited with code 1 before establishing connection:

error: unable to forward port because pod is not running. Current status=Pending


[2020-05-28T17:20:04.718Z] Error starting port forward to frontend/frontend:3000: Port forward exited with code 1 before establishing connection:

error: unable to forward port because pod is not running. Current status=Pending


[2020-05-28T17:20:04.852Z] Error starting port forward to frontend/frontend:3000: Port forward exited with code 1 before establishing connection:

error: unable to forward port because pod is not running. Current status=Pending


[2020-05-28T17:20:05.127Z] Error starting port forward to frontend/frontend:3000: Port forward exited with code 1 before establishing connection:

error: unable to forward port because pod is not running. Current status=Pending


[2020-05-28T17:20:05.262Z] Error starting port forward to frontend/frontend:3000: Port forward exited with code 1 before establishing connection:

error: unable to forward port because pod is not running. Current status=Pending


[2020-05-28T17:20:05.400Z] Error starting port forward to frontend/frontend:3000: Port forward exited with code 1 before establishing connection:

error: unable to forward port because pod is not running. Current status=Pending


[2020-05-28T17:20:05.467Z] Waiting for resources to be ready...

[2020-05-28T17:20:07.516Z] Resources ready

[2020-05-28T17:20:07.577Z] Deploying version v-45d0e299cd... → Done (took 5.1 sec)

[2020-05-28T17:20:07.609Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T17:20:07.641Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T17:20:07.673Z] Waiting for code changes...

[2020-05-28T17:40:04.574Z] ⏳  Processing...

[2020-05-28T17:40:04.794Z] Waiting for code changes...

[2020-05-28T17:40:04.833Z] ⏳  Processing...

[2020-05-28T17:40:04.865Z] Syncing module sources (17 files)...

[2020-05-28T17:40:05.800Z] Syncing module sources (17 files)... → Done (took 0.9 sec)

[2020-05-28T17:40:05.832Z] Building version v-9390be0fbd...

[2020-05-28T17:41:06.325Z] Building version v-9390be0fbd...

[2020-05-28T17:41:06.366Z] Error: Docker server is not running or cannot be reached.
    at Object.checkDockerServerVersion (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/build.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/build.js:0)
Error Details:
{}


[2020-05-28T17:41:20.221Z] RequestError: Error: connect ETIMEDOUT 192.168.99.108:8443
    at new RequestError (/snapshot/project/garden-service/tmp/dist/node_modules/request-promise-core/lib/errors.js:14:15)
    at Request.<anonymous> (/snapshot/project/garden-service/tmp/dist/node_modules/request-promise-core/lib/plumbing.js:87:29)
    at Request.RP$callback [as _callback] (/snapshot/project/garden-service/tmp/dist/node_modules/request-promise-core/lib/plumbing.js:46:31)
    at /snapshot/project/garden-service/tmp/dist/node_modules/request/request.js:185:22
    at Request.emit (events.js:210:5)
    at Request.EventEmitter.emit (domain.js:475:20)
    at Request.onRequestError (/snapshot/project/garden-service/tmp/dist/node_modules/request/request.js:877:8)
    at ClientRequest.emit (events.js:210:5)
    at ClientRequest.EventEmitter.emit (domain.js:475:20)
    at TLSSocket.socketErrorListener (_http_client.js:406:9)
    at TLSSocket.emit (events.js:210:5)
    at TLSSocket.EventEmitter.emit (domain.js:475:20)
    at emitErrorNT (internal/streams/destroy.js:92:8)
    at emitErrorAndCloseNT (internal/streams/destroy.js:60:3)
    at processTicksAndRejections (internal/process/task_queues.js:80:21)
Error Details:
name: RequestError
cause:
  errno: ETIMEDOUT
  code: ETIMEDOUT
  syscall: connect
  address: 192.168.99.108
  port: 8443
error: ~cause
options:
  url: >-
    https://192.168.99.108:8443/apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-9390be0fbd
  method: GET
  json: true
  resolveWithFullResponse: true
  ca: <Buffer>
  cert: <Buffer>
  key: <Buffer>
  headers: []
  simple: true
  transform2xxOnly: false


[2020-05-28T17:41:20.256Z] Waiting for code changes...

[2020-05-28T17:42:06.529Z] Error starting port forward to frontend/frontend:3000: Port forward exited with code 1 before establishing connection:

Unable to connect to the server: dial tcp 192.168.99.108:8443: i/o timeout


[2020-05-28T17:42:35.410Z] Getting status...

[2020-05-28T17:43:07.958Z] Error

[2020-05-28T17:43:07.974Z] Error: Unable to connect to Kubernetes cluster. Got error:

Command "/Users/emilwils/.garden/tools/kubectl/b57d7033ebdf2a5a/kubectl --context=minikube version" failed with code 1:

Unable to connect to the server: dial tcp 192.168.99.108:8443: i/o timeout

Here's the full output:

Client Version: version.Info{Major:"1", Minor:"16", GitVersion:"v1.16.0", GitCommit:"2bd9643cee5b3b3a5ecbd3af49d09018f0773c77", GitTreeState:"clean", BuildDate:"2019-09-18T14:36:53Z", GoVersion:"go1.12.9", Compiler:"gc", Platform:"darwin/amd64"}
Unable to connect to the server: dial tcp 192.168.99.108:8443: i/o timeout
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/namespace.js:0)
    at Generator.throw (<anonymous>)
    at rejected (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/namespace.js:0)
    at processTicksAndRejections (internal/process/task_queues.js:93:5)
Error Details:
providerConfig:
  name: local-kubernetes
  environments: []
  buildMode: local-docker
  deploymentStrategy: rolling
  forceSsl: false
  gardenSystemNamespace: garden-system
  imagePullSecrets: []
  resources:
    builder:
      limits:
        cpu: 4000
        memory: 8192
      requests:
        cpu: 200
        memory: 512
    registry:
      limits:
        cpu: 2000
        memory: 4096
      requests:
        cpu: 200
        memory: 512
    sync:
      limits:
        cpu: 500
        memory: 512
      requests:
        cpu: 100
        memory: 64
  storage:
    builder:
      size: 20480
      storageClass: null
    nfs:
      storageClass: null
    registry:
      size: 20480
      storageClass: null
    sync:
      size: 10240
      storageClass: null
  tlsCertificates: []
  systemNodeSelector: {}
  registryProxyTolerations: []
  setupIngressController: nginx
  namespace: node-microservice
  ingressClass: nginx
  context: minikube
  clusterType: minikube
  defaultHostname: node-microservice.192.168.99.108.nip.io
  ingressHttpPort: 80
  ingressHttpsPort: 443


[2020-05-28T17:43:07.986Z] Error: Failed resolving one or more providers:
- local-kubernetes
    at Garden.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/garden.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/garden.js:0)
Error Details:
rawConfigs: []
taskResults:
  resolve-provider.exec:
    type: resolve-provider
    key: resolve-provider.exec
    name: exec
    description: resolving provider exec
    completedAt: '2020-05-28T17:42:35.663Z'
    batchId: d81cd325-29cb-4e42-ab9e-6e52850180bf
    output:
      name: exec
      dependencies: []
      moduleConfigs: []
      config:
        name: exec
        path: /Users/emilwils/Documents/node-microservice
      status:
        ready: true
        outputs: {}
    dependencyResults: {}
  resolve-provider.container:
    type: resolve-provider
    key: resolve-provider.container
    name: container
    description: resolving provider container
    completedAt: '2020-05-28T17:42:35.663Z'
    batchId: 48840b53-6baf-475f-9781-9a589dc0d10e
    output:
      name: container
      dependencies: []
      moduleConfigs: []
      config:
        name: container
        path: /Users/emilwils/Documents/node-microservice
      status:
        ready: true
        outputs: {}
    dependencyResults: {}
  resolve-provider.local-kubernetes:
    type: resolve-provider
    description: resolving provider local-kubernetes
    key: resolve-provider.local-kubernetes
    name: local-kubernetes
    error:
      detail:
        providerConfig:
          name: local-kubernetes
          environments:
            - local
          buildMode: local-docker
          deploymentStrategy: rolling
          forceSsl: false
          gardenSystemNamespace: garden-system
          imagePullSecrets: []
          resources:
            builder:
              limits:
                cpu: 4000
                memory: 8192
              requests:
                cpu: 200
                memory: 512
            registry:
              limits:
                cpu: 2000
                memory: 4096
              requests:
                cpu: 200
                memory: 512
            sync:
              limits:
                cpu: 500
                memory: 512
              requests:
                cpu: 100
                memory: 64
          storage:
            builder:
              size: 20480
              storageClass: null
            nfs:
              storageClass: null
            registry:
              size: 20480
              storageClass: null
            sync:
              size: 10240
              storageClass: null
          tlsCertificates: []
          _systemServices: []
          systemNodeSelector: {}
          registryProxyTolerations: []
          setupIngressController: nginx
          namespace: node-microservice
          ingressClass: nginx
          context: minikube
          clusterType: minikube
          defaultHostname: node-microservice.192.168.99.108.nip.io
          ingressHttpPort: 80
          ingressHttpsPort: 443
      type: deployment
    completedAt: '2020-05-28T17:43:07.958Z'
    batchId: 48840b53-6baf-475f-9781-9a589dc0d10e
messages: []


[2020-05-28T17:43:07.997Z] 
See error.log for detailed error message

[2020-05-28T17:48:08.363Z] Getting status...

[2020-05-28T17:48:12.164Z] Getting status... → Done

[2020-05-28T17:48:13.201Z] ⏳  Processing...

[2020-05-28T17:48:13.204Z] Syncing module sources (17 files)...

[2020-05-28T17:48:13.210Z] Syncing module sources (7 files)...

[2020-05-28T17:48:13.361Z] Syncing module sources (7 files)... → Done (took 0.2 sec)

[2020-05-28T17:48:13.364Z] Getting build status for v-d90dd35e77...

[2020-05-28T17:48:14.489Z] Getting build status for v-d90dd35e77... → Done (took 1.1 sec)

[2020-05-28T17:48:14.887Z] Syncing module sources (17 files)... → Done (took 1.7 sec)

[2020-05-28T17:48:14.890Z] Getting build status for v-9390be0fbd...

[2020-05-28T17:48:14.910Z] Getting build status for v-f853fcb9f9...

[2020-05-28T17:48:14.914Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T17:48:14.918Z] Deploying version v-f853fcb9f9...

[2020-05-28T17:48:14.921Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T17:48:14.935Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T17:48:14.947Z] Deploying version v-d90dd35e77...

[2020-05-28T17:48:14.953Z] Deploying version v-d90dd35e77... → Already deployed

[2020-05-28T17:48:14.961Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T17:48:14.968Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/tasks

[2020-05-28T17:48:14.976Z] → Forward: http://127.0.0.1:49833 → backend:80 (https)

[2020-05-28T17:48:15.466Z] Building version v-9390be0fbd...

[2020-05-28T17:48:15.578Z] Building frontend:v-9390be0fbd...

[2020-05-28T17:48:16.433Z] Building frontend:v-9390be0fbd... → Done (took 1.5 sec)

[2020-05-28T17:48:16.438Z] Deploying version v-9390be0fbd...

[2020-05-28T17:48:19.348Z] Waiting for resources to be ready...

[2020-05-28T17:48:21.364Z] Resources ready

[2020-05-28T17:48:21.393Z] Deploying version v-9390be0fbd... → Done (took 5 sec)

[2020-05-28T17:48:21.396Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T17:48:21.404Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T17:48:21.432Z] Waiting for code changes...

[2020-05-28T17:50:03.107Z] ⏳  Processing...

[2020-05-28T17:50:03.260Z] Waiting for code changes...

[2020-05-28T17:50:03.273Z] ⏳  Processing...

[2020-05-28T17:50:03.277Z] Syncing module sources (17 files)...

[2020-05-28T17:50:03.555Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-28T17:50:03.559Z] Building version v-4b185eb4a5...

[2020-05-28T17:50:04.000Z] Building frontend:v-4b185eb4a5...

[2020-05-28T17:50:04.566Z] Building frontend:v-4b185eb4a5... → Done (took 1 sec)

[2020-05-28T17:50:04.572Z] Deploying version v-4b185eb4a5...

[2020-05-28T17:50:06.403Z] Waiting for resources to be ready...

[2020-05-28T17:50:08.423Z] Resources ready

[2020-05-28T17:50:08.476Z] Deploying version v-4b185eb4a5... → Done (took 3.9 sec)

[2020-05-28T17:50:08.482Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T17:50:08.486Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T17:50:08.491Z] Waiting for code changes...

[2020-05-28T17:51:34.494Z] ⏳  Processing...

[2020-05-28T17:51:34.628Z] Waiting for code changes...

[2020-05-28T17:51:34.639Z] ⏳  Processing...

[2020-05-28T17:51:34.644Z] Syncing module sources (17 files)...

[2020-05-28T17:51:34.918Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-28T17:51:34.924Z] Building version v-5551e9f65a...

[2020-05-28T17:51:35.351Z] Building frontend:v-5551e9f65a...

[2020-05-28T17:51:35.916Z] Building frontend:v-5551e9f65a... → Done (took 1 sec)

[2020-05-28T17:51:35.922Z] Deploying version v-5551e9f65a...

[2020-05-28T17:51:37.767Z] Waiting for resources to be ready...

[2020-05-28T17:51:39.784Z] Resources ready

[2020-05-28T17:51:39.820Z] Deploying version v-5551e9f65a... → Done (took 3.9 sec)

[2020-05-28T17:51:39.826Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T17:51:39.830Z] → Forward: 127.0.0.1:3000 → frontend:3000 (frontend)

[2020-05-28T17:51:39.836Z] Waiting for code changes...

[2020-05-28T18:01:54.208Z] Getting status...

[2020-05-28T18:01:56.349Z] Getting status... → Done

[2020-05-28T18:01:56.541Z] Module configuration changed, reloading...

[2020-05-28T18:01:57.247Z] Getting status...

[2020-05-28T18:01:58.395Z] Getting status... → Done

[2020-05-28T18:01:58.611Z] ⏳  Processing...

[2020-05-28T18:01:58.618Z] Syncing module sources (17 files)...

[2020-05-28T18:01:58.632Z] Syncing module sources (7 files)...

[2020-05-28T18:01:58.713Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T18:01:58.719Z] Getting build status for v-d90dd35e77...

[2020-05-28T18:01:59.468Z] Syncing module sources (17 files)... → Done (took 0.9 sec)

[2020-05-28T18:01:59.475Z] Getting build status for v-0c1dfeec86...

[2020-05-28T18:01:59.493Z] Getting build status for v-f853fcb9f9...

[2020-05-28T18:01:59.501Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T18:01:59.508Z] Deploying version v-f853fcb9f9...

[2020-05-28T18:01:59.517Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T18:01:59.524Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T18:01:59.730Z] Getting build status for v-d90dd35e77... → Done (took 1 sec)

[2020-05-28T18:01:59.739Z] Deploying version v-d90dd35e77...

[2020-05-28T18:01:59.747Z] Deploying version v-d90dd35e77... → Already deployed

[2020-05-28T18:01:59.755Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T18:01:59.762Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/tasks

[2020-05-28T18:01:59.770Z] → Forward: http://127.0.0.1:49833 → backend:80 (https)

[2020-05-28T18:01:59.813Z] Building version v-0c1dfeec86...

[2020-05-28T18:01:59.882Z] Building frontend:v-0c1dfeec86...

[2020-05-28T18:02:00.174Z] Building frontend:v-0c1dfeec86... → Done (took 0.7 sec)

[2020-05-28T18:02:00.182Z] Deploying version v-0c1dfeec86...

[2020-05-28T18:02:02.919Z] Waiting for resources to be ready...

[2020-05-28T18:02:04.946Z] Resources ready

[2020-05-28T18:02:04.983Z] Deploying version v-0c1dfeec86... → Done (took 4.8 sec)

[2020-05-28T18:02:04.991Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T18:02:05.000Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/setTasks

[2020-05-28T18:02:05.017Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T18:02:05.036Z] Waiting for code changes...

[2020-05-28T18:02:21.360Z] Getting status...

[2020-05-28T18:02:23.440Z] Getting status... → Done

[2020-05-28T18:02:23.618Z] Module configuration changed, reloading...

[2020-05-28T18:02:24.303Z] Getting status...

[2020-05-28T18:02:25.428Z] Getting status... → Done

[2020-05-28T18:02:25.612Z] ⏳  Processing...

[2020-05-28T18:02:25.622Z] Syncing module sources (17 files)...

[2020-05-28T18:02:25.642Z] Syncing module sources (7 files)...

[2020-05-28T18:02:25.698Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T18:02:25.708Z] Getting build status for v-c8d382b1c7...

[2020-05-28T18:02:26.089Z] Getting build status for v-f853fcb9f9...

[2020-05-28T18:02:26.102Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T18:02:26.116Z] Deploying version v-f853fcb9f9...

[2020-05-28T18:02:26.136Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T18:02:26.147Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-28T18:02:26.158Z] Getting build status for v-0c1dfeec86...

[2020-05-28T18:02:26.181Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T18:02:26.448Z] Building version v-c8d382b1c7...

[2020-05-28T18:02:26.486Z] Getting build status for v-0c1dfeec86... → Done (took 0.3 sec)

[2020-05-28T18:02:26.516Z] Building backend:v-c8d382b1c7...

[2020-05-28T18:02:26.753Z] Building backend:v-c8d382b1c7... → Done (took 1 sec)

[2020-05-28T18:02:26.764Z] Deploying version v-c8d382b1c7...

[2020-05-28T18:02:28.820Z] Waiting for resources to be ready...

[2020-05-28T18:02:30.845Z] Resources ready

[2020-05-28T18:02:30.883Z] Deploying version v-c8d382b1c7... → Done (took 4.1 sec)

[2020-05-28T18:02:30.893Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T18:02:30.912Z] → Forward: http://127.0.0.1:50374 → backend:80 (http)

[2020-05-28T18:02:30.924Z] Deploying version v-0c1dfeec86...

[2020-05-28T18:02:32.501Z] Waiting for resources to be ready...

[2020-05-28T18:02:34.528Z] Resources ready

[2020-05-28T18:02:34.601Z] Deploying version v-0c1dfeec86... → Done (took 3.7 sec)

[2020-05-28T18:02:34.612Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T18:02:34.622Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/setTasks

[2020-05-28T18:02:34.633Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T18:02:34.655Z] Waiting for code changes...

[2020-05-28T18:03:18.380Z] ⏳  Processing...

[2020-05-28T18:03:18.512Z] Waiting for code changes...

[2020-05-28T18:03:18.530Z] ⏳  Processing...

[2020-05-28T18:03:18.542Z] Syncing module sources (17 files)...

[2020-05-28T18:03:18.836Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-28T18:03:18.848Z] Building version v-c1e9b3cb12...

[2020-05-28T18:03:19.292Z] Building frontend:v-c1e9b3cb12...

[2020-05-28T18:03:19.872Z] Building frontend:v-c1e9b3cb12... → Done (took 1 sec)

[2020-05-28T18:03:19.885Z] Deploying version v-c1e9b3cb12...

[2020-05-28T18:03:21.776Z] Waiting for resources to be ready...

[2020-05-28T18:03:23.402Z] Getting status...

[2020-05-28T18:03:23.913Z] Resources ready

[2020-05-28T18:03:24.135Z] Deploying version v-c1e9b3cb12... → Done (took 4.3 sec)

[2020-05-28T18:03:24.147Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T18:03:24.158Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/setTasks

[2020-05-28T18:03:24.169Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T18:03:24.179Z] Waiting for code changes...

[2020-05-28T18:03:25.502Z] Getting status... → Done

[2020-05-28T18:03:25.750Z] Module configuration changed, reloading...

[2020-05-28T18:03:26.455Z] Getting status...

[2020-05-28T18:03:27.932Z] Getting status... → Done

[2020-05-28T18:03:28.158Z] ⏳  Processing...

[2020-05-28T18:03:28.170Z] Syncing module sources (17 files)...

[2020-05-28T18:03:28.195Z] Syncing module sources (7 files)...

[2020-05-28T18:03:28.276Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T18:03:28.289Z] Getting build status for v-c8d382b1c7...

[2020-05-28T18:03:28.534Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-28T18:03:28.546Z] Getting build status for v-2fee06677d...

[2020-05-28T18:03:28.571Z] Getting build status for v-f853fcb9f9...

[2020-05-28T18:03:28.584Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T18:03:28.598Z] Deploying version v-f853fcb9f9...

[2020-05-28T18:03:28.612Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T18:03:28.628Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T18:03:29.101Z] Getting build status for v-c8d382b1c7... → Done (took 0.8 sec)

[2020-05-28T18:03:29.116Z] Deploying version v-c8d382b1c7...

[2020-05-28T18:03:29.129Z] Deploying version v-c8d382b1c7... → Already deployed

[2020-05-28T18:03:29.142Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T18:03:29.156Z] → Forward: http://127.0.0.1:50374 → backend:80 (http)

[2020-05-28T18:03:29.199Z] Building version v-2fee06677d...

[2020-05-28T18:03:29.277Z] Building frontend:v-2fee06677d...

[2020-05-28T18:03:29.565Z] Building frontend:v-2fee06677d... → Done (took 1 sec)

[2020-05-28T18:03:29.580Z] Deploying version v-2fee06677d...

[2020-05-28T18:03:31.334Z] Waiting for resources to be ready...

[2020-05-28T18:03:33.363Z] Resources ready

[2020-05-28T18:03:33.410Z] Deploying version v-2fee06677d... → Done (took 3.8 sec)

[2020-05-28T18:03:33.423Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T18:03:33.436Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/tasks

[2020-05-28T18:03:33.451Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T18:03:33.473Z] Waiting for code changes...

[2020-05-28T18:08:19.528Z] Getting status...

[2020-05-28T18:08:21.583Z] Getting status... → Done

[2020-05-28T18:08:21.765Z] Module configuration changed, reloading...

[2020-05-28T18:08:22.455Z] Getting status...

[2020-05-28T18:08:23.601Z] Getting status... → Done

[2020-05-28T18:08:23.826Z] ⏳  Processing...

[2020-05-28T18:08:23.839Z] Syncing module sources (17 files)...

[2020-05-28T18:08:23.865Z] Syncing module sources (7 files)...

[2020-05-28T18:08:23.939Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T18:08:23.953Z] Getting build status for v-fc0114c2d1...

[2020-05-28T18:08:24.320Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-28T18:08:24.337Z] Getting build status for v-2fee06677d...

[2020-05-28T18:08:24.353Z] Getting build status for v-f853fcb9f9...

[2020-05-28T18:08:24.367Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T18:08:24.381Z] Deploying version v-f853fcb9f9...

[2020-05-28T18:08:24.394Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T18:08:24.420Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T18:08:24.684Z] Building version v-fc0114c2d1...

[2020-05-28T18:08:24.720Z] Getting build status for v-2fee06677d... → Done (took 0.4 sec)

[2020-05-28T18:08:24.758Z] Building backend:v-fc0114c2d1...

[2020-05-28T18:08:25.003Z] Building backend:v-fc0114c2d1... → Done (took 1 sec)

[2020-05-28T18:08:25.018Z] Deploying version v-fc0114c2d1...

[2020-05-28T18:08:26.753Z] Waiting for resources to be ready...

[2020-05-28T18:08:28.791Z] Resources ready

[2020-05-28T18:08:28.836Z] Deploying version v-fc0114c2d1... → Done (took 3.8 sec)

[2020-05-28T18:08:28.852Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T18:08:28.868Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/tasks

[2020-05-28T18:08:28.893Z] → Forward: http://127.0.0.1:50374 → backend:80 (http)

[2020-05-28T18:08:28.918Z] Deploying version v-2fee06677d...

[2020-05-28T18:08:30.648Z] Waiting for resources to be ready...

[2020-05-28T18:08:32.684Z] Resources ready

[2020-05-28T18:08:32.736Z] Deploying version v-2fee06677d... → Done (took 3.8 sec)

[2020-05-28T18:08:32.754Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T18:08:32.770Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/tasks

[2020-05-28T18:08:32.787Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T18:08:32.810Z] Waiting for code changes...

[2020-05-28T18:08:34.193Z] Getting status...

[2020-05-28T18:08:36.202Z] Getting status... → Done

[2020-05-28T18:08:36.389Z] Module configuration changed, reloading...

[2020-05-28T18:08:37.074Z] Getting status...

[2020-05-28T18:08:38.523Z] Getting status... → Done

[2020-05-28T18:08:38.715Z] ⏳  Processing...

[2020-05-28T18:08:38.731Z] Syncing module sources (17 files)...

[2020-05-28T18:08:38.778Z] Syncing module sources (7 files)...

[2020-05-28T18:08:38.903Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T18:08:38.923Z] Getting build status for v-b1bc1468c4...

[2020-05-28T18:08:39.307Z] Syncing module sources (17 files)... → Done (took 0.6 sec)

[2020-05-28T18:08:39.326Z] Getting build status for v-66b1b1e631...

[2020-05-28T18:08:39.347Z] Getting build status for v-f853fcb9f9...

[2020-05-28T18:08:39.365Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T18:08:39.382Z] Deploying version v-f853fcb9f9...

[2020-05-28T18:08:39.400Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T18:08:39.435Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T18:08:39.874Z] Building version v-b1bc1468c4...

[2020-05-28T18:08:39.984Z] Building version v-66b1b1e631...

[2020-05-28T18:08:40.014Z] Building backend:v-b1bc1468c4...

[2020-05-28T18:08:40.127Z] Building frontend:v-66b1b1e631...

[2020-05-28T18:08:40.521Z] Building frontend:v-66b1b1e631... → Done (took 1.2 sec)

[2020-05-28T18:08:40.539Z] Deploying version v-66b1b1e631...

[2020-05-28T18:08:40.839Z] Building backend:v-b1bc1468c4... → Done (took 1.9 sec)

[2020-05-28T18:08:40.857Z] Deploying version v-b1bc1468c4...

[2020-05-28T18:08:42.721Z] Waiting for resources to be ready...

[2020-05-28T18:08:42.921Z] Waiting for resources to be ready...

[2020-05-28T18:08:44.751Z] Resources ready

[2020-05-28T18:08:44.796Z] Deploying version v-66b1b1e631... → Done (took 4.3 sec)

[2020-05-28T18:08:44.813Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T18:08:44.830Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T18:08:44.955Z] Resources ready

[2020-05-28T18:08:44.996Z] Deploying version v-b1bc1468c4... → Done (took 4.1 sec)

[2020-05-28T18:08:45.013Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/tasks

[2020-05-28T18:08:45.029Z] → Forward: http://127.0.0.1:50374 → backend:80 (http)

[2020-05-28T18:08:45.046Z] ⏳  Processing...

[2020-05-28T18:08:45.079Z] Waiting for code changes...

[2020-05-28T18:10:08.174Z] Getting status...

[2020-05-28T18:10:11.284Z] Getting status... → Done

[2020-05-28T18:10:11.878Z] Syncing module sources (7 files)...

[2020-05-28T18:10:11.946Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T18:10:11.950Z] Getting build status for v-b1bc1468c4...

[2020-05-28T18:10:12.337Z] Getting build status for v-f853fcb9f9...

[2020-05-28T18:10:12.339Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T18:10:12.343Z] Deploying version v-f853fcb9f9...

[2020-05-28T18:10:12.345Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T18:10:12.607Z] Getting build status for v-b1bc1468c4... → Done (took 0.7 sec)

[2020-05-28T18:10:12.609Z] Deploying version v-b1bc1468c4...

[2020-05-28T18:10:12.611Z] Deploying version v-b1bc1468c4... → Already deployed

[2020-05-28T18:10:12.613Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/tasks

[2020-05-28T18:10:12.638Z] Done! ✔️ 

[2020-05-28T18:10:19.392Z] Getting status...

[2020-05-28T18:10:22.436Z] Getting status... → Done

[2020-05-28T18:10:23.161Z] 2020-05-28T18:08:42.629Z → Server running on port 80

[2020-05-28T18:10:23.162Z] 2020-05-28T18:08:42.662Z → Unable to connect to database: ConnectionError [SequelizeConnectionError]: database "test" does not exist

[2020-05-28T18:10:23.162Z] 2020-05-28T18:08:42.662Z →     at /usr/src/server/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:182:24

[2020-05-28T18:10:23.162Z] 2020-05-28T18:08:42.662Z →     at Connection.connectingErrorHandler (/usr/src/server/node_modules/pg/lib/client.js:213:14)

[2020-05-28T18:10:23.163Z] 2020-05-28T18:08:42.662Z →     at Connection.emit (events.js:310:20)

[2020-05-28T18:10:23.163Z] 2020-05-28T18:08:42.662Z →     at /usr/src/server/node_modules/pg/lib/connection.js:109:10

[2020-05-28T18:10:23.163Z] 2020-05-28T18:08:42.662Z →     at Parser.parse (/usr/src/server/node_modules/pg-protocol/dist/parser.js:42:17)

[2020-05-28T18:10:23.163Z] 2020-05-28T18:08:42.662Z →     at Socket.<anonymous> (/usr/src/server/node_modules/pg-protocol/dist/index.js:8:42)

[2020-05-28T18:10:23.163Z] 2020-05-28T18:08:42.662Z →     at Socket.emit (events.js:310:20)

[2020-05-28T18:10:23.164Z] 2020-05-28T18:08:42.662Z →     at addChunk (_stream_readable.js:286:12)

[2020-05-28T18:10:23.164Z] 2020-05-28T18:08:42.662Z →     at readableAddChunk (_stream_readable.js:268:9)

[2020-05-28T18:10:23.170Z] 2020-05-28T18:08:42.662Z →     at Socket.Readable.push (_stream_readable.js:209:10)

[2020-05-28T18:10:23.171Z] 2020-05-28T18:08:42.662Z →     at TCP.onStreamRead (internal/stream_base_commons.js:186:23) {

[2020-05-28T18:10:23.171Z] 2020-05-28T18:08:42.662Z →   parent: error: database "test" does not exist

[2020-05-28T18:10:23.171Z] 2020-05-28T18:08:42.662Z →       at Parser.parseErrorMessage (/usr/src/server/node_modules/pg-protocol/dist/parser.js:241:15)

[2020-05-28T18:10:23.171Z] 2020-05-28T18:08:42.662Z →       at Parser.handlePacket (/usr/src/server/node_modules/pg-protocol/dist/parser.js:89:29)

[2020-05-28T18:10:23.171Z] 2020-05-28T18:08:42.662Z →       at Parser.parse (/usr/src/server/node_modules/pg-protocol/dist/parser.js:41:38)

[2020-05-28T18:10:23.171Z] 2020-05-28T18:08:42.662Z →       at Socket.<anonymous> (/usr/src/server/node_modules/pg-protocol/dist/index.js:8:42)

[2020-05-28T18:10:23.171Z] 2020-05-28T18:08:42.662Z →       at Socket.emit (events.js:310:20)

[2020-05-28T18:10:23.172Z] 2020-05-28T18:08:42.662Z →       at addChunk (_stream_readable.js:286:12)

[2020-05-28T18:10:23.172Z] 2020-05-28T18:08:42.662Z →       at readableAddChunk (_stream_readable.js:268:9)

[2020-05-28T18:10:23.172Z] 2020-05-28T18:08:42.662Z →       at Socket.Readable.push (_stream_readable.js:209:10)

[2020-05-28T18:10:23.172Z] 2020-05-28T18:08:42.662Z →       at TCP.onStreamRead (internal/stream_base_commons.js:186:23) {

[2020-05-28T18:10:23.172Z] 2020-05-28T18:08:42.662Z →     length: 89,

[2020-05-28T18:10:23.172Z] 2020-05-28T18:08:42.662Z →     severity: 'FATAL',

[2020-05-28T18:10:23.172Z] 2020-05-28T18:08:42.662Z →     code: '3D000',

[2020-05-28T18:10:23.172Z] 2020-05-28T18:08:42.662Z →     detail: undefined,

[2020-05-28T18:10:23.173Z] 2020-05-28T18:08:42.662Z →     hint: undefined,

[2020-05-28T18:10:23.173Z] 2020-05-28T18:08:42.662Z →     position: undefined,

[2020-05-28T18:10:23.173Z] 2020-05-28T18:08:42.662Z →     internalPosition: undefined,

[2020-05-28T18:10:23.173Z] 2020-05-28T18:08:42.662Z →     internalQuery: undefined,

[2020-05-28T18:10:23.173Z] 2020-05-28T18:08:42.662Z →     where: undefined,

[2020-05-28T18:10:23.173Z] 2020-05-28T18:08:42.662Z →     schema: undefined,

[2020-05-28T18:10:23.173Z] 2020-05-28T18:08:42.662Z →     table: undefined,

[2020-05-28T18:10:23.173Z] 2020-05-28T18:08:42.662Z →     column: undefined,

[2020-05-28T18:10:23.174Z] 2020-05-28T18:08:42.662Z →     dataType: undefined,

[2020-05-28T18:10:23.174Z] 2020-05-28T18:08:42.663Z →     constraint: undefined,

[2020-05-28T18:10:23.174Z] 2020-05-28T18:08:42.663Z →     file: 'postinit.c',

[2020-05-28T18:10:23.174Z] 2020-05-28T18:08:42.663Z →     line: '890',

[2020-05-28T18:10:23.174Z] 2020-05-28T18:08:42.663Z →     routine: 'InitPostgres'

[2020-05-28T18:10:23.174Z] 2020-05-28T18:08:42.663Z →   },

[2020-05-28T18:10:23.174Z] 2020-05-28T18:08:42.663Z →   original: error: database "test" does not exist

[2020-05-28T18:10:23.174Z] 2020-05-28T18:08:42.663Z →       at Parser.parseErrorMessage (/usr/src/server/node_modules/pg-protocol/dist/parser.js:241:15)

[2020-05-28T18:10:23.175Z] 2020-05-28T18:08:42.663Z →       at Parser.handlePacket (/usr/src/server/node_modules/pg-protocol/dist/parser.js:89:29)

[2020-05-28T18:10:23.175Z] 2020-05-28T18:08:42.663Z →       at Parser.parse (/usr/src/server/node_modules/pg-protocol/dist/parser.js:41:38)

[2020-05-28T18:10:23.175Z] 2020-05-28T18:08:42.663Z →       at Socket.<anonymous> (/usr/src/server/node_modules/pg-protocol/dist/index.js:8:42)

[2020-05-28T18:10:23.175Z] 2020-05-28T18:08:42.663Z →       at Socket.emit (events.js:310:20)

[2020-05-28T18:10:23.175Z] 2020-05-28T18:08:42.663Z →       at addChunk (_stream_readable.js:286:12)

[2020-05-28T18:10:23.175Z] 2020-05-28T18:08:42.663Z →       at readableAddChunk (_stream_readable.js:268:9)

[2020-05-28T18:10:23.175Z] 2020-05-28T18:08:42.663Z →       at Socket.Readable.push (_stream_readable.js:209:10)

[2020-05-28T18:10:23.175Z] 2020-05-28T18:08:42.663Z →       at TCP.onStreamRead (internal/stream_base_commons.js:186:23) {

[2020-05-28T18:10:23.176Z] 2020-05-28T18:08:42.663Z →     length: 89,

[2020-05-28T18:10:23.177Z] 2020-05-28T18:08:42.663Z →     severity: 'FATAL',

[2020-05-28T18:10:23.177Z] 2020-05-28T18:08:42.663Z →     code: '3D000',

[2020-05-28T18:10:23.177Z] 2020-05-28T18:08:42.663Z →     detail: undefined,

[2020-05-28T18:10:23.177Z] 2020-05-28T18:08:42.663Z →     hint: undefined,

[2020-05-28T18:10:23.177Z] 2020-05-28T18:08:42.663Z →     position: undefined,

[2020-05-28T18:10:23.177Z] 2020-05-28T18:08:42.663Z →     internalPosition: undefined,

[2020-05-28T18:10:23.177Z] 2020-05-28T18:08:42.663Z →     internalQuery: undefined,

[2020-05-28T18:10:23.178Z] 2020-05-28T18:08:42.663Z →     where: undefined,

[2020-05-28T18:10:23.178Z] 2020-05-28T18:08:42.663Z →     schema: undefined,

[2020-05-28T18:10:23.178Z] 2020-05-28T18:08:42.663Z →     table: undefined,

[2020-05-28T18:10:23.178Z] 2020-05-28T18:08:42.663Z →     column: undefined,

[2020-05-28T18:10:23.178Z] 2020-05-28T18:08:42.663Z →     dataType: undefined,

[2020-05-28T18:10:23.178Z] 2020-05-28T18:08:42.663Z →     constraint: undefined,

[2020-05-28T18:10:23.178Z] 2020-05-28T18:08:42.663Z →     file: 'postinit.c',

[2020-05-28T18:10:23.179Z] 2020-05-28T18:08:42.663Z →     line: '890',

[2020-05-28T18:10:23.179Z] 2020-05-28T18:08:42.663Z →     routine: 'InitPostgres'

[2020-05-28T18:10:23.179Z] 2020-05-28T18:08:42.663Z →   }

[2020-05-28T18:10:23.179Z] 2020-05-28T18:08:42.663Z → }

[2020-05-28T18:10:23.179Z] 2020-05-28T18:08:42.669Z → Error synchronizing models: ConnectionError [SequelizeConnectionError]: database "test" does not exist

[2020-05-28T18:10:23.179Z] 2020-05-28T18:08:42.669Z →     at /usr/src/server/node_modules/sequelize/lib/dialects/postgres/connection-manager.js:182:24

[2020-05-28T18:10:23.179Z] 2020-05-28T18:08:42.669Z →     at Connection.connectingErrorHandler (/usr/src/server/node_modules/pg/lib/client.js:213:14)

[2020-05-28T18:10:23.180Z] 2020-05-28T18:08:42.669Z →     at Connection.emit (events.js:310:20)

[2020-05-28T18:10:23.180Z] 2020-05-28T18:08:42.669Z →     at /usr/src/server/node_modules/pg/lib/connection.js:109:10

[2020-05-28T18:10:23.180Z] 2020-05-28T18:08:42.669Z →     at Parser.parse (/usr/src/server/node_modules/pg-protocol/dist/parser.js:42:17)

[2020-05-28T18:10:23.180Z] 2020-05-28T18:08:42.669Z →     at Socket.<anonymous> (/usr/src/server/node_modules/pg-protocol/dist/index.js:8:42)

[2020-05-28T18:10:23.180Z] 2020-05-28T18:08:42.669Z →     at Socket.emit (events.js:310:20)

[2020-05-28T18:10:23.180Z] 2020-05-28T18:08:42.669Z →     at addChunk (_stream_readable.js:286:12)

[2020-05-28T18:10:23.180Z] 2020-05-28T18:08:42.669Z →     at readableAddChunk (_stream_readable.js:268:9)

[2020-05-28T18:10:23.180Z] 2020-05-28T18:08:42.669Z →     at Socket.Readable.push (_stream_readable.js:209:10)

[2020-05-28T18:10:23.180Z] 2020-05-28T18:08:42.669Z →     at TCP.onStreamRead (internal/stream_base_commons.js:186:23) {

[2020-05-28T18:10:23.180Z] 2020-05-28T18:08:42.669Z →   parent: error: database "test" does not exist

[2020-05-28T18:10:23.181Z] 2020-05-28T18:08:42.669Z →       at Parser.parseErrorMessage (/usr/src/server/node_modules/pg-protocol/dist/parser.js:241:15)

[2020-05-28T18:10:23.181Z] 2020-05-28T18:08:42.669Z →       at Parser.handlePacket (/usr/src/server/node_modules/pg-protocol/dist/parser.js:89:29)

[2020-05-28T18:10:23.181Z] 2020-05-28T18:08:42.669Z →       at Parser.parse (/usr/src/server/node_modules/pg-protocol/dist/parser.js:41:38)

[2020-05-28T18:10:23.181Z] 2020-05-28T18:08:42.669Z →       at Socket.<anonymous> (/usr/src/server/node_modules/pg-protocol/dist/index.js:8:42)

[2020-05-28T18:10:23.181Z] 2020-05-28T18:08:42.669Z →       at Socket.emit (events.js:310:20)

[2020-05-28T18:10:23.181Z] 2020-05-28T18:08:42.669Z →       at addChunk (_stream_readable.js:286:12)

[2020-05-28T18:10:23.181Z] 2020-05-28T18:08:42.669Z →       at readableAddChunk (_stream_readable.js:268:9)

[2020-05-28T18:10:23.181Z] 2020-05-28T18:08:42.669Z →       at Socket.Readable.push (_stream_readable.js:209:10)

[2020-05-28T18:10:23.181Z] 2020-05-28T18:08:42.669Z →       at TCP.onStreamRead (internal/stream_base_commons.js:186:23) {

[2020-05-28T18:10:23.181Z] 2020-05-28T18:08:42.669Z →     length: 89,

[2020-05-28T18:10:23.181Z] 2020-05-28T18:08:42.669Z →     severity: 'FATAL',

[2020-05-28T18:10:23.182Z] 2020-05-28T18:08:42.669Z →     code: '3D000',

[2020-05-28T18:10:23.182Z] 2020-05-28T18:08:42.669Z →     detail: undefined,

[2020-05-28T18:10:23.182Z] 2020-05-28T18:08:42.669Z →     hint: undefined,

[2020-05-28T18:10:23.182Z] 2020-05-28T18:08:42.669Z →     position: undefined,

[2020-05-28T18:10:23.182Z] 2020-05-28T18:08:42.669Z →     internalPosition: undefined,

[2020-05-28T18:10:23.182Z] 2020-05-28T18:08:42.669Z →     internalQuery: undefined,

[2020-05-28T18:10:23.182Z] 2020-05-28T18:08:42.669Z →     where: undefined,

[2020-05-28T18:10:23.182Z] 2020-05-28T18:08:42.669Z →     schema: undefined,

[2020-05-28T18:10:23.182Z] 2020-05-28T18:08:42.669Z →     table: undefined,

[2020-05-28T18:10:23.182Z] 2020-05-28T18:08:42.669Z →     column: undefined,

[2020-05-28T18:10:23.182Z] 2020-05-28T18:08:42.669Z →     dataType: undefined,

[2020-05-28T18:10:23.182Z] 2020-05-28T18:08:42.669Z →     constraint: undefined,

[2020-05-28T18:10:23.183Z] 2020-05-28T18:08:42.669Z →     file: 'postinit.c',

[2020-05-28T18:10:23.183Z] 2020-05-28T18:08:42.669Z →     line: '890',

[2020-05-28T18:10:23.183Z] 2020-05-28T18:08:42.669Z →     routine: 'InitPostgres'

[2020-05-28T18:10:23.183Z] 2020-05-28T18:08:42.669Z →   },

[2020-05-28T18:10:23.183Z] 2020-05-28T18:08:42.669Z →   original: error: database "test" does not exist

[2020-05-28T18:10:23.183Z] 2020-05-28T18:08:42.669Z →       at Parser.parseErrorMessage (/usr/src/server/node_modules/pg-protocol/dist/parser.js:241:15)

[2020-05-28T18:10:23.183Z] 2020-05-28T18:08:42.669Z →       at Parser.handlePacket (/usr/src/server/node_modules/pg-protocol/dist/parser.js:89:29)

[2020-05-28T18:10:23.183Z] 2020-05-28T18:08:42.669Z →       at Parser.parse (/usr/src/server/node_modules/pg-protocol/dist/parser.js:41:38)

[2020-05-28T18:10:23.183Z] 2020-05-28T18:08:42.669Z →       at Socket.<anonymous> (/usr/src/server/node_modules/pg-protocol/dist/index.js:8:42)

[2020-05-28T18:10:23.184Z] 2020-05-28T18:08:42.669Z →       at Socket.emit (events.js:310:20)

[2020-05-28T18:10:23.184Z] 2020-05-28T18:08:42.669Z →       at addChunk (_stream_readable.js:286:12)

[2020-05-28T18:10:23.184Z] 2020-05-28T18:08:42.669Z →       at readableAddChunk (_stream_readable.js:268:9)

[2020-05-28T18:10:23.184Z] 2020-05-28T18:08:42.669Z →       at Socket.Readable.push (_stream_readable.js:209:10)

[2020-05-28T18:10:23.189Z] 2020-05-28T18:08:42.669Z →       at TCP.onStreamRead (internal/stream_base_commons.js:186:23) {

[2020-05-28T18:10:23.189Z] 2020-05-28T18:08:42.669Z →     length: 89,

[2020-05-28T18:10:23.189Z] 2020-05-28T18:08:42.669Z →     severity: 'FATAL',

[2020-05-28T18:10:23.189Z] 2020-05-28T18:08:42.669Z →     code: '3D000',

[2020-05-28T18:10:23.189Z] 2020-05-28T18:08:42.669Z →     detail: undefined,

[2020-05-28T18:10:23.190Z] 2020-05-28T18:08:42.669Z →     hint: undefined,

[2020-05-28T18:10:23.190Z] 2020-05-28T18:08:42.669Z →     position: undefined,

[2020-05-28T18:10:23.190Z] 2020-05-28T18:08:42.669Z →     internalPosition: undefined,

[2020-05-28T18:10:23.190Z] 2020-05-28T18:08:42.669Z →     internalQuery: undefined,

[2020-05-28T18:10:23.190Z] 2020-05-28T18:08:42.669Z →     where: undefined,

[2020-05-28T18:10:23.190Z] 2020-05-28T18:08:42.669Z →     schema: undefined,

[2020-05-28T18:10:23.190Z] 2020-05-28T18:08:42.669Z →     table: undefined,

[2020-05-28T18:10:23.190Z] 2020-05-28T18:08:42.669Z →     column: undefined,

[2020-05-28T18:10:23.190Z] 2020-05-28T18:08:42.669Z →     dataType: undefined,

[2020-05-28T18:10:23.190Z] 2020-05-28T18:08:42.669Z →     constraint: undefined,

[2020-05-28T18:10:23.190Z] 2020-05-28T18:08:42.669Z →     file: 'postinit.c',

[2020-05-28T18:10:23.190Z] 2020-05-28T18:08:42.669Z →     line: '890',

[2020-05-28T18:10:23.191Z] 2020-05-28T18:08:42.669Z →     routine: 'InitPostgres'

[2020-05-28T18:10:23.191Z] 2020-05-28T18:08:42.669Z →   }

[2020-05-28T18:10:23.191Z] 2020-05-28T18:08:42.669Z → }

[2020-05-28T18:10:50.682Z] Getting status...

[2020-05-28T18:10:53.652Z] Getting status... → Done

[2020-05-28T18:10:54.419Z] Checking result...

[2020-05-28T18:10:54.422Z] Syncing module sources (7 files)...

[2020-05-28T18:10:54.459Z] Checking result... → Done

[2020-05-28T18:10:54.488Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T18:10:54.489Z] Getting build status for v-cc887eb25f...

[2020-05-28T18:10:54.846Z] Getting build status for v-f853fcb9f9...

[2020-05-28T18:10:54.849Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T18:10:54.854Z] Deploying version v-f853fcb9f9...

[2020-05-28T18:10:54.857Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T18:10:54.859Z] Running...

[2020-05-28T18:10:55.129Z] Building version v-cc887eb25f...

[2020-05-28T18:10:55.188Z] Building backend:v-cc887eb25f...

[2020-05-28T18:10:55.473Z] Building backend:v-cc887eb25f... → Done (took 1 sec)

[2020-05-28T18:10:57.502Z] Running... → Done (took 2.6 sec)

[2020-05-28T18:10:57.504Z] Deploying version v-cc887eb25f...

[2020-05-28T18:10:59.348Z] Waiting for resources to be ready...

[2020-05-28T18:11:01.367Z] Resources ready

[2020-05-28T18:11:01.393Z] Deploying version v-cc887eb25f... → Done (took 3.9 sec)

[2020-05-28T18:11:01.397Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/tasks

[2020-05-28T18:11:01.418Z] Done! ✔️ 

[2020-05-28T18:11:06.121Z] Getting status...

[2020-05-28T18:11:08.948Z] Getting status... → Done

[2020-05-28T18:11:09.889Z] 2020-05-28T17:47:52.716Z → ********************************************************************************

[2020-05-28T18:11:09.889Z] 2020-05-28T17:47:52.716Z → WARNING: POSTGRES_HOST_AUTH_METHOD has been set to "trust". This will allow

[2020-05-28T18:11:09.890Z] 2020-05-28T17:47:52.716Z →          anyone with access to the Postgres port to access your database without

[2020-05-28T18:11:09.890Z] 2020-05-28T17:47:52.716Z →          a password, even if POSTGRES_PASSWORD is set. See PostgreSQL

[2020-05-28T18:11:09.890Z] 2020-05-28T17:47:52.716Z →          documentation about "trust":

[2020-05-28T18:11:09.890Z] 2020-05-28T17:47:52.716Z →          https://www.postgresql.org/docs/current/auth-trust.html

[2020-05-28T18:11:09.890Z] 2020-05-28T17:47:52.716Z →          In Docker's default configuration, this is effectively any other

[2020-05-28T18:11:09.891Z] 2020-05-28T17:47:52.716Z →          container on the same system.

[2020-05-28T18:11:09.891Z] 2020-05-28T17:47:52.716Z → 

[2020-05-28T18:11:09.891Z] 2020-05-28T17:47:52.716Z →          It is not recommended to use POSTGRES_HOST_AUTH_METHOD=trust. Replace

[2020-05-28T18:11:09.891Z] 2020-05-28T17:47:52.716Z →          it with "-e POSTGRES_PASSWORD=password" instead to set a password in

[2020-05-28T18:11:09.891Z] 2020-05-28T17:47:52.716Z →          "docker run".

[2020-05-28T18:11:09.892Z] 2020-05-28T17:47:52.716Z → ********************************************************************************

[2020-05-28T18:11:09.897Z] 2020-05-28T17:47:52.942Z → The files belonging to this database system will be owned by user "postgres".

[2020-05-28T18:11:09.898Z] 2020-05-28T17:47:52.942Z → This user must also own the server process.

[2020-05-28T18:11:09.898Z] 2020-05-28T17:47:52.942Z → 

[2020-05-28T18:11:09.898Z] 2020-05-28T17:47:52.953Z → The database cluster will be initialized with locale "en_US.utf8".

[2020-05-28T18:11:09.898Z] 2020-05-28T17:47:52.953Z → The default database encoding has accordingly been set to "UTF8".

[2020-05-28T18:11:09.898Z] 2020-05-28T17:47:52.954Z → The default text search configuration will be set to "english".

[2020-05-28T18:11:09.898Z] 2020-05-28T17:47:52.954Z → 

[2020-05-28T18:11:09.899Z] 2020-05-28T17:47:52.954Z → Data page checksums are disabled.

[2020-05-28T18:11:09.899Z] 2020-05-28T17:47:52.955Z → 

[2020-05-28T18:11:09.899Z] 2020-05-28T17:47:52.955Z → fixing permissions on existing directory /var/lib/postgresql/data ... ok

[2020-05-28T18:11:09.899Z] 2020-05-28T17:47:52.957Z → creating subdirectories ... ok

[2020-05-28T18:11:09.899Z] 2020-05-28T17:47:52.957Z → selecting dynamic shared memory implementation ... posix

[2020-05-28T18:11:09.899Z] 2020-05-28T17:47:53.065Z → selecting default max_connections ... 100

[2020-05-28T18:11:09.899Z] 2020-05-28T17:47:53.132Z → selecting default shared_buffers ... 128MB

[2020-05-28T18:11:09.899Z] 2020-05-28T17:47:53.184Z → selecting default time zone ... Etc/UTC

[2020-05-28T18:11:09.900Z] 2020-05-28T17:47:53.195Z → creating configuration files ... ok

[2020-05-28T18:11:09.900Z] 2020-05-28T17:47:53.691Z → running bootstrap script ... ok

[2020-05-28T18:11:09.900Z] 2020-05-28T17:47:54.755Z → performing post-bootstrap initialization ... ok

[2020-05-28T18:11:09.900Z] 2020-05-28T17:47:55.070Z → syncing data to disk ... ok

[2020-05-28T18:11:09.900Z] 2020-05-28T17:47:55.070Z → 

[2020-05-28T18:11:09.900Z] 2020-05-28T17:47:55.070Z → initdb: warning: enabling "trust" authentication for local connections

[2020-05-28T18:11:09.900Z] 2020-05-28T17:47:55.070Z → You can change this by editing pg_hba.conf or using the option -A, or

[2020-05-28T18:11:09.900Z] 2020-05-28T17:47:55.070Z → --auth-local and --auth-host, the next time you run initdb.

[2020-05-28T18:11:09.901Z] 2020-05-28T17:47:55.071Z → 

[2020-05-28T18:11:09.901Z] 2020-05-28T17:47:55.071Z → Success. You can now start the database server using:

[2020-05-28T18:11:09.901Z] 2020-05-28T17:47:55.071Z → 

[2020-05-28T18:11:09.901Z] 2020-05-28T17:47:55.071Z →     pg_ctl -D /var/lib/postgresql/data -l logfile start

[2020-05-28T18:11:09.901Z] 2020-05-28T17:47:55.071Z → 

[2020-05-28T18:11:09.901Z] 2020-05-28T17:47:55.104Z → waiting for server to start....2020-05-28 17:47:55.104 UTC [47] LOG:  starting PostgreSQL 12.3 (Debian 12.3-1.pgdg100+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 8.3.0-6) 8.3.0, 64-bit

[2020-05-28T18:11:09.901Z] 2020-05-28T17:47:55.106Z → 2020-05-28 17:47:55.106 UTC [47] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"

[2020-05-28T18:11:09.901Z] 2020-05-28T17:47:55.119Z → 2020-05-28 17:47:55.119 UTC [48] LOG:  database system was shut down at 2020-05-28 17:47:54 UTC

[2020-05-28T18:11:09.901Z] 2020-05-28T17:47:55.126Z → 2020-05-28 17:47:55.126 UTC [47] LOG:  database system is ready to accept connections

[2020-05-28T18:11:09.902Z] 2020-05-28T17:47:55.196Z →  done

[2020-05-28T18:11:09.902Z] 2020-05-28T17:47:55.196Z → server started

[2020-05-28T18:11:09.902Z] 2020-05-28T17:47:55.196Z → 

[2020-05-28T18:11:09.902Z] 2020-05-28T17:47:55.197Z → /usr/local/bin/docker-entrypoint.sh: ignoring /docker-entrypoint-initdb.d/*

[2020-05-28T18:11:09.902Z] 2020-05-28T17:47:55.197Z → 

[2020-05-28T18:11:09.902Z] 2020-05-28T17:47:55.201Z → waiting for server to shut down....2020-05-28 17:47:55.200 UTC [47] LOG:  received fast shutdown request

[2020-05-28T18:11:09.902Z] 2020-05-28T17:47:55.204Z → 2020-05-28 17:47:55.204 UTC [47] LOG:  aborting any active transactions

[2020-05-28T18:11:09.902Z] 2020-05-28T17:47:55.212Z → 2020-05-28 17:47:55.212 UTC [47] LOG:  background worker "logical replication launcher" (PID 54) exited with exit code 1

[2020-05-28T18:11:09.902Z] 2020-05-28T17:47:55.233Z → 2020-05-28 17:47:55.230 UTC [49] LOG:  shutting down

[2020-05-28T18:11:09.903Z] 2020-05-28T17:47:55.250Z → 2020-05-28 17:47:55.249 UTC [47] LOG:  database system is shut down

[2020-05-28T18:11:09.903Z] 2020-05-28T17:47:55.301Z →  done

[2020-05-28T18:11:09.903Z] 2020-05-28T17:47:55.301Z → server stopped

[2020-05-28T18:11:09.903Z] 2020-05-28T17:47:55.301Z → 

[2020-05-28T18:11:09.903Z] 2020-05-28T17:47:55.301Z → PostgreSQL init process complete; ready for start up.

[2020-05-28T18:11:09.903Z] 2020-05-28T17:47:55.301Z → 

[2020-05-28T18:11:09.903Z] 2020-05-28T17:47:55.321Z → 2020-05-28 17:47:55.321 UTC [1] LOG:  starting PostgreSQL 12.3 (Debian 12.3-1.pgdg100+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 8.3.0-6) 8.3.0, 64-bit

[2020-05-28T18:11:09.903Z] 2020-05-28T17:47:55.324Z → 2020-05-28 17:47:55.324 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432

[2020-05-28T18:11:09.903Z] 2020-05-28T17:47:55.324Z → 2020-05-28 17:47:55.324 UTC [1] LOG:  listening on IPv6 address "::", port 5432

[2020-05-28T18:11:09.903Z] 2020-05-28T17:47:55.326Z → 2020-05-28 17:47:55.326 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"

[2020-05-28T18:11:09.904Z] 2020-05-28T17:47:55.372Z → 2020-05-28 17:47:55.372 UTC [56] LOG:  database system was shut down at 2020-05-28 17:47:55 UTC

[2020-05-28T18:11:09.904Z] 2020-05-28T17:47:55.396Z → 2020-05-28 17:47:55.395 UTC [1] LOG:  database system is ready to accept connections

[2020-05-28T18:11:09.904Z] 2020-05-28T17:48:59.648Z → 2020-05-28 17:48:59.648 UTC [63] FATAL:  database "test" does not exist

[2020-05-28T18:11:09.904Z] 2020-05-28T17:49:10.867Z → 2020-05-28 17:49:10.866 UTC [64] FATAL:  database "test" does not exist

[2020-05-28T18:11:09.904Z] 2020-05-28T17:50:24.127Z → 2020-05-28 17:50:24.125 UTC [65] FATAL:  database "test" does not exist

[2020-05-28T18:11:09.904Z] 2020-05-28T17:51:55.617Z → 2020-05-28 17:51:55.617 UTC [66] FATAL:  database "test" does not exist

[2020-05-28T18:11:09.904Z] 2020-05-28T17:53:56.157Z → 2020-05-28 17:53:56.157 UTC [67] FATAL:  database "test" does not exist

[2020-05-28T18:11:09.905Z] 2020-05-28T17:55:56.763Z → 2020-05-28 17:55:56.763 UTC [68] FATAL:  database "test" does not exist

[2020-05-28T18:11:09.905Z] 2020-05-28T17:57:57.369Z → 2020-05-28 17:57:57.369 UTC [69] FATAL:  database "test" does not exist

[2020-05-28T18:11:09.905Z] 2020-05-28T17:59:57.979Z → 2020-05-28 17:59:57.977 UTC [70] FATAL:  database "test" does not exist

[2020-05-28T18:11:09.905Z] 2020-05-28T18:01:58.598Z → 2020-05-28 18:01:58.597 UTC [71] FATAL:  database "test" does not exist

[2020-05-28T18:11:09.905Z] 2020-05-28T18:02:28.141Z → 2020-05-28 18:02:28.141 UTC [72] FATAL:  database "test" does not exist

[2020-05-28T18:11:09.905Z] 2020-05-28T18:02:28.158Z → 2020-05-28 18:02:28.158 UTC [73] FATAL:  database "test" does not exist

[2020-05-28T18:11:09.905Z] 2020-05-28T18:08:26.231Z → 2020-05-28 18:08:26.231 UTC [74] FATAL:  database "test" does not exist

[2020-05-28T18:11:09.905Z] 2020-05-28T18:08:26.249Z → 2020-05-28 18:08:26.249 UTC [75] FATAL:  database "test" does not exist

[2020-05-28T18:11:09.905Z] 2020-05-28T18:08:42.655Z → 2020-05-28 18:08:42.655 UTC [76] FATAL:  database "test" does not exist

[2020-05-28T18:11:09.906Z] 2020-05-28T18:08:42.668Z → 2020-05-28 18:08:42.668 UTC [77] FATAL:  database "test" does not exist

[2020-05-28T18:11:09.911Z] 2020-05-28T18:08:42.267Z → 

[2020-05-28T18:11:28.077Z] Getting status...

[2020-05-28T18:11:31.077Z] Getting status... → Done

[2020-05-28T18:11:31.605Z] Call 📞 

[2020-05-28T18:11:31.693Z] Sending HTTP GET request to http://node-microservice.192.168.99.108.nip.io/tasks


[2020-05-28T18:11:31.712Z] Sending HTTP GET request to http://node-microservice.192.168.99.108.nip.io/tasks


[2020-05-28T18:12:04.089Z] Getting status...

[2020-05-28T18:12:07.100Z] Getting status... → Done

[2020-05-28T18:12:07.822Z] ⏳  Processing...

[2020-05-28T18:12:07.826Z] Syncing module sources (17 files)...

[2020-05-28T18:12:07.832Z] Checking result...

[2020-05-28T18:12:07.835Z] Syncing module sources (7 files)...

[2020-05-28T18:12:07.887Z] Checking result... → Done

[2020-05-28T18:12:07.913Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T18:12:07.916Z] Getting build status for v-cc887eb25f...

[2020-05-28T18:12:08.299Z] Getting build status for v-f853fcb9f9...

[2020-05-28T18:12:08.302Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T18:12:08.309Z] Deploying version v-f853fcb9f9...

[2020-05-28T18:12:08.312Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T18:12:08.316Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-28T18:12:08.320Z] Getting build status for v-66b1b1e631...

[2020-05-28T18:12:08.353Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T18:12:08.362Z] Running...

[2020-05-28T18:12:08.634Z] Getting build status for v-cc887eb25f... → Done (took 0.7 sec)

[2020-05-28T18:12:08.695Z] Getting build status for v-66b1b1e631... → Done (took 0.4 sec)

[2020-05-28T18:12:08.699Z] Deploying version v-66b1b1e631...

[2020-05-28T18:12:08.703Z] Deploying version v-66b1b1e631... → Already deployed

[2020-05-28T18:12:08.707Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T18:12:08.715Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T18:12:11.530Z] Failed!

[2020-05-28T18:12:11.535Z] Error: ERROR:  database "test" already exists
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/tasks/task.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/tasks/task.js:0)

[2020-05-28T18:12:11.539Z] ⏳  Processing...

[2020-05-28T18:12:11.574Z] Waiting for code changes...

[2020-05-28T18:12:18.145Z] Getting status...

[2020-05-28T18:12:20.264Z] Getting status... → Done

[2020-05-28T18:12:20.498Z] Module configuration changed, reloading...

[2020-05-28T18:12:21.625Z] Getting status...

[2020-05-28T18:12:22.765Z] Getting status... → Done

[2020-05-28T18:12:22.944Z] ⏳  Processing...

[2020-05-28T18:12:22.953Z] Syncing module sources (7 files)...

[2020-05-28T18:12:22.958Z] Syncing module sources (17 files)...

[2020-05-28T18:12:23.028Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T18:12:23.034Z] Getting build status for v-b1bc1468c4...

[2020-05-28T18:12:23.413Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-28T18:12:23.419Z] Getting build status for v-66b1b1e631...

[2020-05-28T18:12:23.425Z] Getting build status for v-f853fcb9f9...

[2020-05-28T18:12:23.431Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T18:12:23.438Z] Deploying version v-f853fcb9f9...

[2020-05-28T18:12:23.443Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T18:12:23.460Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T18:12:23.712Z] Getting build status for v-b1bc1468c4... → Done (took 0.7 sec)

[2020-05-28T18:12:23.721Z] Deploying version v-b1bc1468c4...

[2020-05-28T18:12:23.892Z] Getting build status for v-66b1b1e631... → Done (took 0.5 sec)

[2020-05-28T18:12:23.898Z] Deploying version v-66b1b1e631...

[2020-05-28T18:12:23.906Z] Deploying version v-66b1b1e631... → Already deployed

[2020-05-28T18:12:23.912Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T18:12:23.919Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T18:12:25.557Z] Waiting for resources to be ready...

[2020-05-28T18:12:27.581Z] Resources ready

[2020-05-28T18:12:27.614Z] Deploying version v-b1bc1468c4... → Done (took 3.9 sec)

[2020-05-28T18:12:27.620Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/tasks

[2020-05-28T18:12:27.631Z] → Forward: http://127.0.0.1:51192 → backend:80 (http)

[2020-05-28T18:12:27.637Z] ⏳  Processing...

[2020-05-28T18:12:27.661Z] Waiting for code changes...

[2020-05-28T18:13:54.605Z] ⏳  Processing...

[2020-05-28T18:13:54.681Z] Waiting for code changes...

[2020-05-28T18:13:54.695Z] ⏳  Processing...

[2020-05-28T18:13:54.769Z] Waiting for code changes...

[2020-05-28T18:13:54.784Z] ⏳  Processing...

[2020-05-28T18:13:54.815Z] Waiting for code changes...

[2020-05-28T18:14:04.095Z] ⏳  Processing...

[2020-05-28T18:14:04.128Z] Waiting for code changes...

[2020-05-28T18:40:20.260Z] Getting status...

[2020-05-28T18:40:22.407Z] Getting status... → Done

[2020-05-28T18:40:22.608Z] Module configuration changed, reloading...

[2020-05-28T18:40:23.314Z] Getting status...

[2020-05-28T18:40:24.501Z] Getting status... → Done

[2020-05-28T18:40:24.689Z] ⏳  Processing...

[2020-05-28T18:40:24.699Z] Syncing module sources (17 files)...

[2020-05-28T18:40:24.719Z] Syncing module sources (7 files)...

[2020-05-28T18:40:24.792Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T18:40:24.801Z] Getting build status for v-b1bc1468c4...

[2020-05-28T18:40:25.215Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-28T18:40:25.223Z] Getting build status for v-66b1b1e631...

[2020-05-28T18:40:25.232Z] Getting build status for v-f853fcb9f9...

[2020-05-28T18:40:25.241Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T18:40:25.251Z] Deploying version v-f853fcb9f9...

[2020-05-28T18:40:25.260Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T18:40:25.283Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T18:40:25.548Z] Getting build status for v-b1bc1468c4... → Done (took 0.7 sec)

[2020-05-28T18:40:25.557Z] Deploying version v-b1bc1468c4...

[2020-05-28T18:40:25.566Z] Deploying version v-b1bc1468c4... → Already deployed

[2020-05-28T18:40:25.576Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/tasks

[2020-05-28T18:40:25.585Z] → Forward: http://127.0.0.1:51192 → backend:80 (http)

[2020-05-28T18:40:25.598Z] Getting build status for v-66b1b1e631... → Done (took 0.4 sec)

[2020-05-28T18:40:25.607Z] Deploying version v-66b1b1e631...

[2020-05-28T18:40:25.615Z] Deploying version v-66b1b1e631... → Already deployed

[2020-05-28T18:40:25.623Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T18:40:25.632Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T18:40:25.668Z] Waiting for code changes...

[2020-05-28T18:40:36.710Z] Getting status...

[2020-05-28T18:40:39.717Z] Getting status... → Done

[2020-05-28T18:40:40.320Z] ⏳  Processing...

[2020-05-28T18:40:40.324Z] Syncing module sources (17 files)...

[2020-05-28T18:40:40.330Z] Syncing module sources (7 files)...

[2020-05-28T18:40:40.416Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T18:40:40.420Z] Getting build status for v-b1bc1468c4...

[2020-05-28T18:40:40.805Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-28T18:40:40.808Z] Getting build status for v-66b1b1e631...

[2020-05-28T18:40:40.812Z] Getting build status for v-f853fcb9f9...

[2020-05-28T18:40:40.816Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T18:40:40.841Z] Deploying version v-f853fcb9f9...

[2020-05-28T18:40:40.845Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T18:40:40.873Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T18:40:41.122Z] Getting build status for v-b1bc1468c4... → Done (took 0.7 sec)

[2020-05-28T18:40:41.128Z] Deploying version v-b1bc1468c4...

[2020-05-28T18:40:41.134Z] Deploying version v-b1bc1468c4... → Already deployed

[2020-05-28T18:40:41.139Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/tasks

[2020-05-28T18:40:41.146Z] → Forward: http://127.0.0.1:51926 → backend:80 (http)

[2020-05-28T18:40:41.163Z] Getting build status for v-66b1b1e631... → Done (took 0.4 sec)

[2020-05-28T18:40:41.169Z] Deploying version v-66b1b1e631...

[2020-05-28T18:40:41.172Z] Deploying version v-66b1b1e631... → Already deployed

[2020-05-28T18:40:41.176Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T18:40:41.184Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T18:40:41.220Z] Waiting for code changes...

[2020-05-28T18:53:07.867Z] ⏳  Processing...

[2020-05-28T18:53:08.043Z] Waiting for code changes...

[2020-05-28T18:53:08.056Z] ⏳  Processing...

[2020-05-28T18:53:08.061Z] Syncing module sources (7 files)...

[2020-05-28T18:53:08.113Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T18:53:08.118Z] Building version v-af2cba0001...

[2020-05-28T18:53:08.565Z] Building backend:v-af2cba0001...

[2020-05-28T18:53:09.236Z] Building backend:v-af2cba0001... → Done (took 1.1 sec)

[2020-05-28T18:53:09.241Z] Deploying version v-af2cba0001...

[2020-05-28T18:53:11.904Z] Waiting for resources to be ready...

[2020-05-28T18:53:13.988Z] Deploying version v-af2cba0001...

[2020-05-28T18:53:14.007Z] Error: Error deploying backend: CrashLoopBackOff - back-off 10s restarting failed container=backend pod=backend-v-af2cba0001-798c6fd97-fkgvf_node-microservice(b22c02f6-0d95-4c56-964b-86dba2abd437)

━━━ Events ━━━
Deployment backend-v-af2cba0001: ScalingReplicaSet - Scaled up replica set backend-v-af2cba0001-798c6fd97 to 1
Pod backend-v-af2cba0001-798c6fd97-fkgvf: Scheduled - Successfully assigned node-microservice/backend-v-af2cba0001-798c6fd97-fkgvf to minikube
Pod backend-v-af2cba0001-798c6fd97-fkgvf: Pulled - Container image "backend:v-af2cba0001" already present on machine
Pod backend-v-af2cba0001-798c6fd97-fkgvf: Created - Created container backend
Pod backend-v-af2cba0001-798c6fd97-fkgvf: Started - Started container backend
Pod backend-v-af2cba0001-798c6fd97-fkgvf: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-af2cba0001

****** backend-v-af2cba0001-798c6fd97-fkgvf ******
------ backend ------/usr/src/server/app.js:47
app.listen(80, '0.0.0.0'  () => {
                          ^

SyntaxError: Malformed arrow function parameter list
    at wrapSafe (internal/modules/cjs/loader.js:1047:16)
    at Module._compile (internal/modules/cjs/loader.js:1097:27)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=backend
    pod=backend-v-af2cba0001-798c6fd97-fkgvf_node-microservice(b22c02f6-0d95-4c56-964b-86dba2abd437)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-af2cba0001:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-af2cba0001-798c6fd97 to 1\e[39m\n\e[94mPod backend-v-af2cba0001-798c6fd97-fkgvf:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-af2cba0001-798c6fd97-fkgvf to minikube\e[39m\n\e[94mPod backend-v-af2cba0001-798c6fd97-fkgvf:\e[39m \e[37mPulled - Container image \"backend:v-af2cba0001\" already present on machine\e[39m\n\e[94mPod backend-v-af2cba0001-798c6fd97-fkgvf:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-af2cba0001-798c6fd97-fkgvf:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-af2cba0001-798c6fd97-fkgvf:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-af2cba0001\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-af2cba0001-798c6fd97-fkgvf ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m/usr/src/server/app.js:47\napp.listen(80, '0.0.0.0'  () => {\n                          ^\n\nSyntaxError: Malformed arrow function parameter list\n    at wrapSafe (internal/modules/cjs/loader.js:1047:16)\n    at Module._compile (internal/modules/cjs/loader.js:1097:27)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-af2cba0001
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-af2cba0001
      uid: aa0aa2de-6b4f-4d85-87ba-f9d55844ca59
      resourceVersion: '121501'
      generation: 1
      creationTimestamp: '2020-05-28T18:53:05Z'
      labels:
        garden.io/version: v-af2cba0001
        module: backend
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: b050463bbc3fa3b2b04c4708c52b953e4ce88388c317fd0fe963bf01d65f79d1
        garden.io/version: v-af2cba0001
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"b050463bbc3fa3b2b04c4708c52b953e4ce88388c317fd0fe963bf01d65f79d1","garden.io/version":"v-af2cba0001"},"labels":{"garden.io/version":"v-af2cba0001","module":"backend","service":"backend"},"name":"backend-v-af2cba0001","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-af2cba0001","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-af2cba0001","module":"backend","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-af2cba0001"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"backend\",\"name\":\"backend\",\"type\":\"build\",\"version\":\"v-af2cba0001\"},{\"moduleName\":\"postgres\",\"name\":\"postgres\",\"type\":\"service\",\"version\":\"v-f853fcb9f9\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"backend:v-af2cba0001","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":80,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-af2cba0001
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-af2cba0001
            module: backend
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-28T18:53:14.021Z] Waiting for code changes...

[2020-05-28T18:53:31.647Z] ⏳  Processing...

[2020-05-28T18:53:31.790Z] Waiting for code changes...

[2020-05-28T18:53:31.803Z] ⏳  Processing...

[2020-05-28T18:53:31.810Z] Syncing module sources (17 files)...

[2020-05-28T18:53:32.130Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-28T18:53:32.137Z] Building version v-55b4525b5d...

[2020-05-28T18:53:32.586Z] Building frontend:v-55b4525b5d...

[2020-05-28T18:53:33.257Z] Building frontend:v-55b4525b5d... → Done (took 1.1 sec)

[2020-05-28T18:53:33.264Z] Deploying version v-55b4525b5d...

[2020-05-28T18:53:35.129Z] Waiting for resources to be ready...

[2020-05-28T18:53:37.149Z] Resources ready

[2020-05-28T18:53:37.180Z] Deploying version v-55b4525b5d... → Done (took 3.9 sec)

[2020-05-28T18:53:37.187Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T18:53:37.194Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T18:53:37.200Z] Waiting for code changes...

[2020-05-28T18:53:49.004Z] ⏳  Processing...

[2020-05-28T18:53:49.135Z] Waiting for code changes...

[2020-05-28T18:53:49.148Z] ⏳  Processing...

[2020-05-28T18:53:49.155Z] Syncing module sources (7 files)...

[2020-05-28T18:53:49.209Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T18:53:49.216Z] Building version v-936ceb8d6f...

[2020-05-28T18:53:49.646Z] Building backend:v-936ceb8d6f...

[2020-05-28T18:53:50.296Z] Building backend:v-936ceb8d6f... → Done (took 1.1 sec)

[2020-05-28T18:53:50.304Z] Deploying version v-936ceb8d6f...

[2020-05-28T18:53:52.205Z] Waiting for resources to be ready...

[2020-05-28T18:53:54.233Z] Resources ready

[2020-05-28T18:53:54.271Z] Deploying version v-936ceb8d6f... → Done (took 4 sec)

[2020-05-28T18:53:54.278Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/tasks

[2020-05-28T18:53:54.285Z] → Forward: http://127.0.0.1:51926 → backend:80 (http)

[2020-05-28T18:53:54.292Z] Waiting for code changes...

[2020-05-28T18:54:58.239Z] Getting status...

[2020-05-28T18:55:00.442Z] Getting status... → Done

[2020-05-28T18:55:00.659Z] Module configuration changed, reloading...

[2020-05-28T18:55:01.390Z] Getting status...

[2020-05-28T18:55:02.647Z] Getting status... → Done

[2020-05-28T18:55:02.846Z] ⏳  Processing...

[2020-05-28T18:55:02.856Z] Syncing module sources (17 files)...

[2020-05-28T18:55:02.872Z] Syncing module sources (7 files)...

[2020-05-28T18:55:02.933Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T18:55:02.942Z] Getting build status for v-936ceb8d6f...

[2020-05-28T18:55:03.372Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-28T18:55:03.381Z] Getting build status for v-93a29930f7...

[2020-05-28T18:55:03.391Z] Getting build status for v-f853fcb9f9...

[2020-05-28T18:55:03.400Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T18:55:03.409Z] Deploying version v-f853fcb9f9...

[2020-05-28T18:55:03.418Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T18:55:03.443Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T18:55:03.781Z] Getting build status for v-936ceb8d6f... → Done (took 0.8 sec)

[2020-05-28T18:55:03.792Z] Deploying version v-936ceb8d6f...

[2020-05-28T18:55:03.801Z] Deploying version v-936ceb8d6f... → Already deployed

[2020-05-28T18:55:03.812Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/tasks

[2020-05-28T18:55:03.822Z] → Forward: http://127.0.0.1:51926 → backend:80 (http)

[2020-05-28T18:55:03.831Z] Building version v-93a29930f7...

[2020-05-28T18:55:03.910Z] Building frontend:v-93a29930f7...

[2020-05-28T18:55:04.229Z] Building frontend:v-93a29930f7... → Done (took 0.8 sec)

[2020-05-28T18:55:04.242Z] Deploying version v-93a29930f7...

[2020-05-28T18:55:06.144Z] Waiting for resources to be ready...

[2020-05-28T18:55:08.177Z] Resources ready

[2020-05-28T18:55:08.226Z] Deploying version v-93a29930f7... → Done (took 4 sec)

[2020-05-28T18:55:08.237Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T18:55:08.247Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T18:55:08.270Z] Waiting for code changes...

[2020-05-28T18:58:37.128Z] ⏳  Processing...

[2020-05-28T18:58:37.284Z] Waiting for code changes...

[2020-05-28T18:58:37.300Z] ⏳  Processing...

[2020-05-28T18:58:37.310Z] Syncing module sources (17 files)...

[2020-05-28T18:58:37.600Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-28T18:58:37.612Z] Building version v-cbef764b3c...

[2020-05-28T18:58:38.067Z] Building frontend:v-cbef764b3c...

[2020-05-28T18:58:38.702Z] Building frontend:v-cbef764b3c... → Done (took 1.1 sec)

[2020-05-28T18:58:38.714Z] Deploying version v-cbef764b3c...

[2020-05-28T18:58:40.673Z] Waiting for resources to be ready...

[2020-05-28T18:58:42.699Z] Resources ready

[2020-05-28T18:58:42.734Z] Deploying version v-cbef764b3c... → Done (took 4 sec)

[2020-05-28T18:58:42.744Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T18:58:42.753Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T18:58:42.763Z] Waiting for code changes...

[2020-05-28T19:01:10.488Z] ⏳  Processing...

[2020-05-28T19:01:10.523Z] Waiting for code changes...

[2020-05-28T19:01:13.446Z] ⏳  Processing...

[2020-05-28T19:01:13.486Z] Waiting for code changes...

[2020-05-28T19:01:49.092Z] ⏳  Processing...

[2020-05-28T19:01:49.132Z] Waiting for code changes...

[2020-05-28T19:01:54.097Z] ⏳  Processing...

[2020-05-28T19:01:54.126Z] Waiting for code changes...

[2020-05-28T19:11:07.495Z] Getting status...

[2020-05-28T19:11:08.937Z] Error: Command "minikube ip" failed with code 69:

Here's the full output:

* The control plane node must be running for this command
  - To fix this, run: "minikube start"
    at makeError (/snapshot/project/garden-service/tmp/dist/node_modules/execa/lib/error.js:58:11)
    at handlePromise (/snapshot/project/garden-service/tmp/dist/node_modules/execa/index.js:114:26)
    at processTicksAndRejections (internal/process/task_queues.js:93:5)
Error Details:
shortMessage: 'Command failed with exit code 69: minikube ip'
command: minikube ip
exitCode: 69
stdout: |-
  * The control plane node must be running for this command
    - To fix this, run: "minikube start"
stderr: ''
all: |-
  * The control plane node must be running for this command
    - To fix this, run: "minikube start"
failed: true
timedOut: false
isCanceled: false
killed: false


[2020-05-28T19:11:08.946Z] Error: Failed resolving one or more providers:
- local-kubernetes
    at Garden.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/garden.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/garden.js:0)
Error Details:
rawConfigs: []
taskResults:
  resolve-provider.exec:
    type: resolve-provider
    key: resolve-provider.exec
    name: exec
    description: resolving provider exec
    completedAt: '2020-05-28T19:11:07.743Z'
    batchId: ec50068d-625e-4429-8bc9-fcb42ca50285
    output:
      name: exec
      dependencies: []
      moduleConfigs: []
      config:
        name: exec
        path: /Users/emilwils/Documents/node-microservice
      status:
        ready: true
        outputs: {}
    dependencyResults: {}
  resolve-provider.container:
    type: resolve-provider
    key: resolve-provider.container
    name: container
    description: resolving provider container
    completedAt: '2020-05-28T19:11:07.743Z'
    batchId: f27cc628-0de3-4364-a654-d59d6a792d0e
    output:
      name: container
      dependencies: []
      moduleConfigs: []
      config:
        name: container
        path: /Users/emilwils/Documents/node-microservice
      status:
        ready: true
        outputs: {}
    dependencyResults: {}
  resolve-provider.local-kubernetes:
    type: resolve-provider
    description: resolving provider local-kubernetes
    key: resolve-provider.local-kubernetes
    name: local-kubernetes
    error:
      shortMessage: 'Command failed with exit code 69: minikube ip'
      command: minikube ip
      exitCode: 69
      stdout: |-
        * The control plane node must be running for this command
          - To fix this, run: "minikube start"
      stderr: ''
      all: |-
        * The control plane node must be running for this command
          - To fix this, run: "minikube start"
      failed: true
      timedOut: false
      isCanceled: false
      killed: false
    completedAt: '2020-05-28T19:11:08.924Z'
    batchId: f27cc628-0de3-4364-a654-d59d6a792d0e
messages: []


[2020-05-28T19:11:08.950Z] 
See error.log for detailed error message

[2020-05-28T19:11:09.062Z] Getting status...

[2020-05-28T19:13:21.023Z] Getting status...

[2020-05-28T19:13:24.133Z] Getting status... → Done

[2020-05-28T19:13:24.740Z] ⏳  Processing...

[2020-05-28T19:13:24.744Z] Syncing module sources (17 files)...

[2020-05-28T19:13:24.749Z] Syncing module sources (7 files)...

[2020-05-28T19:13:24.839Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T19:13:24.841Z] Getting build status for v-936ceb8d6f...

[2020-05-28T19:13:25.595Z] Syncing module sources (17 files)... → Done (took 0.9 sec)

[2020-05-28T19:13:25.598Z] Getting build status for v-cbef764b3c...

[2020-05-28T19:13:25.611Z] Getting build status for v-f853fcb9f9...

[2020-05-28T19:13:25.614Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T19:13:25.617Z] Deploying version v-f853fcb9f9...

[2020-05-28T19:13:25.624Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T19:13:25.636Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T19:13:25.831Z] Getting build status for v-936ceb8d6f... → Done (took 1 sec)

[2020-05-28T19:13:25.838Z] Deploying version v-936ceb8d6f...

[2020-05-28T19:13:25.843Z] Deploying version v-936ceb8d6f... → Already deployed

[2020-05-28T19:13:25.848Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/tasks

[2020-05-28T19:13:25.856Z] → Forward: http://127.0.0.1:52933 → backend:80 (http)

[2020-05-28T19:13:25.911Z] Getting build status for v-cbef764b3c... → Done (took 0.3 sec)

[2020-05-28T19:13:25.917Z] Deploying version v-cbef764b3c...

[2020-05-28T19:13:25.920Z] Deploying version v-cbef764b3c... → Already deployed

[2020-05-28T19:13:25.923Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T19:13:25.932Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T19:13:25.962Z] Waiting for code changes...

[2020-05-28T19:15:05.517Z] Getting status...

[2020-05-28T19:15:07.761Z] Getting status... → Done

[2020-05-28T19:15:07.961Z] Module configuration changed, reloading...

[2020-05-28T19:15:08.653Z] Getting status...

[2020-05-28T19:15:09.886Z] Getting status... → Done

[2020-05-28T19:15:10.292Z] ⏳  Processing...

[2020-05-28T19:15:10.305Z] Syncing module sources (7 files)...

[2020-05-28T19:15:10.318Z] Checking result...

[2020-05-28T19:15:10.325Z] Syncing module sources (17 files)...

[2020-05-28T19:15:10.383Z] Checking result... → Done

[2020-05-28T19:15:10.426Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T19:15:10.431Z] Getting build status for v-32b0cd809d...

[2020-05-28T19:15:11.010Z] Getting build status for v-f853fcb9f9...

[2020-05-28T19:15:11.016Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T19:15:11.022Z] Deploying version v-f853fcb9f9...

[2020-05-28T19:15:11.027Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T19:15:11.033Z] Syncing module sources (17 files)... → Done (took 0.7 sec)

[2020-05-28T19:15:11.042Z] Getting build status for v-cbef764b3c...

[2020-05-28T19:15:11.060Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T19:15:11.066Z] Running...

[2020-05-28T19:15:11.377Z] Building version v-32b0cd809d...

[2020-05-28T19:15:11.460Z] Building backend:v-32b0cd809d...

[2020-05-28T19:15:11.615Z] Getting build status for v-cbef764b3c... → Done (took 0.6 sec)

[2020-05-28T19:15:11.795Z] Building backend:v-32b0cd809d... → Done (took 1.4 sec)

[2020-05-28T19:15:14.001Z] Running... → Done (took 2.9 sec)

[2020-05-28T19:15:14.009Z] Deploying version v-32b0cd809d...

[2020-05-28T19:15:15.801Z] Waiting for resources to be ready...

[2020-05-28T19:15:17.822Z] Resources ready

[2020-05-28T19:15:17.860Z] Deploying version v-32b0cd809d... → Done (took 3.9 sec)

[2020-05-28T19:15:17.869Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/tasks

[2020-05-28T19:15:17.876Z] → Forward: http://127.0.0.1:52933 → backend:80 (http)

[2020-05-28T19:15:17.884Z] Deploying version v-cbef764b3c...

[2020-05-28T19:15:19.547Z] Waiting for resources to be ready...

[2020-05-28T19:15:21.570Z] Resources ready

[2020-05-28T19:15:21.616Z] Deploying version v-cbef764b3c... → Done (took 3.7 sec)

[2020-05-28T19:15:21.623Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T19:15:21.631Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T19:15:21.638Z] ⏳  Processing...

[2020-05-28T19:15:21.688Z] Waiting for code changes...

[2020-05-28T19:15:26.210Z] Getting status...

[2020-05-28T19:15:28.358Z] Getting status... → Done

[2020-05-28T19:15:28.548Z] Module configuration changed, reloading...

[2020-05-28T19:15:29.233Z] Getting status...

[2020-05-28T19:15:30.801Z] Getting status... → Done

[2020-05-28T19:15:30.986Z] ⏳  Processing...

[2020-05-28T19:15:31.001Z] Syncing module sources (7 files)...

[2020-05-28T19:15:31.009Z] Syncing module sources (17 files)...

[2020-05-28T19:15:31.096Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T19:15:31.114Z] Getting build status for v-936ceb8d6f...

[2020-05-28T19:15:31.685Z] Syncing module sources (17 files)... → Done (took 0.7 sec)

[2020-05-28T19:15:31.694Z] Getting build status for v-cbef764b3c...

[2020-05-28T19:15:31.704Z] Getting build status for v-f853fcb9f9...

[2020-05-28T19:15:31.716Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T19:15:31.726Z] Deploying version v-f853fcb9f9...

[2020-05-28T19:15:31.735Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T19:15:31.757Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T19:15:32.264Z] Getting build status for v-936ceb8d6f... → Done (took 1.2 sec)

[2020-05-28T19:15:32.274Z] Deploying version v-936ceb8d6f...

[2020-05-28T19:15:32.410Z] Getting build status for v-cbef764b3c... → Done (took 0.7 sec)

[2020-05-28T19:15:34.093Z] Waiting for resources to be ready...

[2020-05-28T19:15:36.143Z] Resources ready

[2020-05-28T19:15:36.220Z] Deploying version v-936ceb8d6f... → Done (took 3.9 sec)

[2020-05-28T19:15:36.229Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/tasks

[2020-05-28T19:15:36.238Z] → Forward: http://127.0.0.1:52933 → backend:80 (http)

[2020-05-28T19:15:36.251Z] Deploying version v-cbef764b3c...

[2020-05-28T19:15:38.018Z] Waiting for resources to be ready...

[2020-05-28T19:15:40.062Z] Resources ready

[2020-05-28T19:15:40.113Z] Deploying version v-cbef764b3c... → Done (took 3.9 sec)

[2020-05-28T19:15:40.124Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T19:15:40.134Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T19:15:40.145Z] ⏳  Processing...

[2020-05-28T19:15:40.173Z] Waiting for code changes...

[2020-05-28T19:15:55.769Z] ⏳  Processing...

[2020-05-28T19:15:55.885Z] Waiting for code changes...

[2020-05-28T19:15:55.900Z] ⏳  Processing...

[2020-05-28T19:15:55.910Z] Syncing module sources (7 files)...

[2020-05-28T19:15:55.966Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T19:15:55.976Z] Building version v-ab71b38118...

[2020-05-28T19:15:56.436Z] Building backend:v-ab71b38118...

[2020-05-28T19:15:57.147Z] Building backend:v-ab71b38118... → Done (took 1.2 sec)

[2020-05-28T19:15:57.159Z] Deploying version v-ab71b38118...

[2020-05-28T19:15:59.020Z] Waiting for resources to be ready...

[2020-05-28T19:16:01.049Z] Resources ready

[2020-05-28T19:16:01.082Z] Deploying version v-ab71b38118... → Done (took 3.9 sec)

[2020-05-28T19:16:01.096Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/tasks

[2020-05-28T19:16:01.106Z] → Forward: http://127.0.0.1:52933 → backend:80 (http)

[2020-05-28T19:16:01.116Z] Deploying version v-cbef764b3c...

[2020-05-28T19:16:02.805Z] Waiting for resources to be ready...

[2020-05-28T19:16:04.837Z] Resources ready

[2020-05-28T19:16:04.882Z] Deploying version v-cbef764b3c... → Done (took 3.8 sec)

[2020-05-28T19:16:04.892Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T19:16:04.904Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T19:16:04.917Z] Waiting for code changes...

[2020-05-28T19:16:45.262Z] Getting status...

[2020-05-28T19:16:47.530Z] Getting status... → Done

[2020-05-28T19:16:47.716Z] Module configuration changed, reloading...

[2020-05-28T19:16:48.476Z] Getting status...

[2020-05-28T19:16:49.723Z] Getting status... → Done

[2020-05-28T19:16:50.064Z] ⏳  Processing...

[2020-05-28T19:16:50.100Z] Syncing module sources (7 files)...

[2020-05-28T19:16:50.119Z] Syncing module sources (17 files)...

[2020-05-28T19:16:50.191Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T19:16:50.203Z] Getting build status for v-5cf332d98a...

[2020-05-28T19:16:50.647Z] Getting build status for v-f853fcb9f9...

[2020-05-28T19:16:50.661Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T19:16:50.675Z] Deploying version v-f853fcb9f9...

[2020-05-28T19:16:50.687Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T19:16:50.699Z] Syncing module sources (17 files)... → Done (took 0.6 sec)

[2020-05-28T19:16:50.710Z] Getting build status for v-cbef764b3c...

[2020-05-28T19:16:50.740Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T19:16:51.095Z] Building version v-5cf332d98a...

[2020-05-28T19:16:51.141Z] Getting build status for v-cbef764b3c... → Done (took 0.4 sec)

[2020-05-28T19:16:51.175Z] Building backend:v-5cf332d98a...

[2020-05-28T19:16:51.469Z] Building backend:v-5cf332d98a... → Done (took 1.3 sec)

[2020-05-28T19:16:51.481Z] Deploying version v-5cf332d98a...

[2020-05-28T19:16:53.365Z] Waiting for resources to be ready...

[2020-05-28T19:16:55.403Z] Resources ready

[2020-05-28T19:16:55.437Z] Deploying version v-5cf332d98a... → Done (took 4 sec)

[2020-05-28T19:16:55.450Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/api/tasks

[2020-05-28T19:16:55.462Z] → Forward: http://127.0.0.1:52933 → backend:80 (http)

[2020-05-28T19:16:55.474Z] Deploying version v-cbef764b3c...

[2020-05-28T19:16:56.958Z] Waiting for resources to be ready...

[2020-05-28T19:16:58.986Z] Resources ready

[2020-05-28T19:16:59.036Z] Deploying version v-cbef764b3c... → Done (took 3.6 sec)

[2020-05-28T19:16:59.048Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T19:16:59.061Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T19:16:59.073Z] ⏳  Processing...

[2020-05-28T19:16:59.116Z] Waiting for code changes...

[2020-05-28T19:17:14.706Z] ⏳  Processing...

[2020-05-28T19:17:14.829Z] Waiting for code changes...

[2020-05-28T19:17:14.847Z] ⏳  Processing...

[2020-05-28T19:17:14.862Z] Syncing module sources (17 files)...

[2020-05-28T19:17:15.160Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-28T19:17:15.175Z] Building version v-1a60071b5f...

[2020-05-28T19:17:15.633Z] Building frontend:v-1a60071b5f...

[2020-05-28T19:17:16.324Z] Building frontend:v-1a60071b5f... → Done (took 1.2 sec)

[2020-05-28T19:17:16.337Z] Deploying version v-1a60071b5f...

[2020-05-28T19:17:18.223Z] Waiting for resources to be ready...

[2020-05-28T19:17:20.252Z] Resources ready

[2020-05-28T19:17:20.292Z] Deploying version v-1a60071b5f... → Done (took 4 sec)

[2020-05-28T19:17:20.305Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T19:17:20.318Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T19:17:20.331Z] Waiting for code changes...

[2020-05-28T19:18:33.633Z] ⏳  Processing...

[2020-05-28T19:18:33.773Z] Waiting for code changes...

[2020-05-28T19:18:33.793Z] ⏳  Processing...

[2020-05-28T19:18:33.808Z] Syncing module sources (17 files)...

[2020-05-28T19:18:34.183Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-28T19:18:34.196Z] Building version v-d86cbbc17c...

[2020-05-28T19:18:34.750Z] Building frontend:v-d86cbbc17c...

[2020-05-28T19:18:35.381Z] Building frontend:v-d86cbbc17c... → Done (took 1.2 sec)

[2020-05-28T19:18:35.395Z] Deploying version v-d86cbbc17c...

[2020-05-28T19:18:37.300Z] Waiting for resources to be ready...

[2020-05-28T19:18:39.331Z] Resources ready

[2020-05-28T19:18:39.370Z] Deploying version v-d86cbbc17c... → Done (took 4 sec)

[2020-05-28T19:18:39.383Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T19:18:39.396Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T19:18:39.409Z] Waiting for code changes...

[2020-05-28T19:21:04.970Z] ⏳  Processing...

[2020-05-28T19:21:05.119Z] Waiting for code changes...

[2020-05-28T19:21:05.137Z] ⏳  Processing...

[2020-05-28T19:21:05.152Z] Syncing module sources (17 files)...

[2020-05-28T19:21:05.800Z] Syncing module sources (17 files)... → Done (took 0.6 sec)

[2020-05-28T19:21:05.815Z] Building version v-e45ba051fc...

[2020-05-28T19:21:06.273Z] Building frontend:v-e45ba051fc...

[2020-05-28T19:21:06.921Z] Building frontend:v-e45ba051fc... → Done (took 1.1 sec)

[2020-05-28T19:21:06.935Z] Deploying version v-e45ba051fc...

[2020-05-28T19:21:08.820Z] Waiting for resources to be ready...

[2020-05-28T19:21:10.849Z] Resources ready

[2020-05-28T19:21:10.905Z] Deploying version v-e45ba051fc... → Done (took 4 sec)

[2020-05-28T19:21:10.937Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T19:21:10.952Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T19:21:10.967Z] Waiting for code changes...

[2020-05-28T19:28:58.145Z] Getting status...

[2020-05-28T19:29:01.785Z] Getting status... → Done

[2020-05-28T19:29:02.389Z] ⏳  Processing...

[2020-05-28T19:29:02.393Z] Syncing module sources (17 files)...

[2020-05-28T19:29:02.398Z] Syncing module sources (7 files)...

[2020-05-28T19:29:02.486Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T19:29:02.489Z] Getting build status for v-5cf332d98a...

[2020-05-28T19:29:03.288Z] Syncing module sources (17 files)... → Done (took 0.9 sec)

[2020-05-28T19:29:03.291Z] Getting build status for v-e45ba051fc...

[2020-05-28T19:29:03.307Z] Getting build status for v-f853fcb9f9...

[2020-05-28T19:29:03.313Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T19:29:03.318Z] Deploying version v-f853fcb9f9...

[2020-05-28T19:29:03.324Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T19:29:03.351Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T19:29:03.840Z] Getting build status for v-5cf332d98a... → Done (took 1.3 sec)

[2020-05-28T19:29:03.847Z] Deploying version v-5cf332d98a...

[2020-05-28T19:29:03.854Z] Deploying version v-5cf332d98a... → Already deployed

[2020-05-28T19:29:03.859Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/api/tasks

[2020-05-28T19:29:03.868Z] → Forward: http://127.0.0.1:53624 → backend:80 (http)

[2020-05-28T19:29:03.920Z] Getting build status for v-e45ba051fc... → Done (took 0.6 sec)

[2020-05-28T19:29:03.927Z] Deploying version v-e45ba051fc...

[2020-05-28T19:29:03.930Z] Deploying version v-e45ba051fc... → Already deployed

[2020-05-28T19:29:03.935Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T19:29:03.943Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T19:29:03.971Z] Waiting for code changes...

[2020-05-28T19:30:49.297Z] Getting status...

[2020-05-28T19:30:51.615Z] Getting status... → Done

[2020-05-28T19:30:51.816Z] Module configuration changed, reloading...

[2020-05-28T19:30:52.501Z] Getting status...

[2020-05-28T19:30:53.743Z] Getting status... → Done

[2020-05-28T19:30:54.152Z] ⏳  Processing...

[2020-05-28T19:30:54.165Z] Syncing module sources (17 files)...

[2020-05-28T19:30:54.185Z] Checking result...

[2020-05-28T19:30:54.191Z] Syncing module sources (7 files)...

[2020-05-28T19:30:54.239Z] Checking result... → Done

[2020-05-28T19:30:54.280Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T19:30:54.287Z] Getting build status for v-4c261fa403...

[2020-05-28T19:30:54.716Z] Syncing module sources (17 files)... → Done (took 0.6 sec)

[2020-05-28T19:30:54.721Z] Getting build status for v-e45ba051fc...

[2020-05-28T19:30:54.729Z] Getting build status for v-f853fcb9f9...

[2020-05-28T19:30:54.735Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T19:30:54.741Z] Deploying version v-f853fcb9f9...

[2020-05-28T19:30:54.746Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T19:30:54.764Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T19:30:54.771Z] Running...

[2020-05-28T19:30:55.158Z] Building version v-4c261fa403...

[2020-05-28T19:30:55.238Z] Building backend:v-4c261fa403...

[2020-05-28T19:30:55.359Z] Getting build status for v-e45ba051fc... → Done (took 0.6 sec)

[2020-05-28T19:30:55.599Z] Building backend:v-4c261fa403... → Done (took 1.3 sec)

[2020-05-28T19:30:57.829Z] Running... → Done (took 3.1 sec)

[2020-05-28T19:30:57.835Z] Deploying version v-4c261fa403...

[2020-05-28T19:30:59.665Z] Waiting for resources to be ready...

[2020-05-28T19:31:01.688Z] Resources ready

[2020-05-28T19:31:01.718Z] Deploying version v-4c261fa403... → Done (took 3.9 sec)

[2020-05-28T19:31:01.728Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/api/tasks

[2020-05-28T19:31:01.735Z] → Forward: http://127.0.0.1:53624 → backend:80 (http)

[2020-05-28T19:31:01.744Z] Deploying version v-e45ba051fc...

[2020-05-28T19:31:03.407Z] Waiting for resources to be ready...

[2020-05-28T19:31:05.454Z] Resources ready

[2020-05-28T19:31:05.488Z] Deploying version v-e45ba051fc... → Done (took 3.7 sec)

[2020-05-28T19:31:05.495Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T19:31:05.502Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T19:31:05.524Z] Waiting for code changes...

[2020-05-28T19:34:05.978Z] Getting status...

[2020-05-28T19:34:08.159Z] Getting status... → Done

[2020-05-28T19:34:08.351Z] Module configuration changed, reloading...

[2020-05-28T19:34:09.039Z] Getting status...

[2020-05-28T19:34:10.238Z] Getting status... → Done

[2020-05-28T19:34:10.430Z] ⏳  Processing...

[2020-05-28T19:34:10.442Z] Syncing module sources (17 files)...

[2020-05-28T19:34:10.464Z] Syncing module sources (7 files)...

[2020-05-28T19:34:10.549Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T19:34:10.558Z] Getting build status for v-5cf332d98a...

[2020-05-28T19:34:11.238Z] Syncing module sources (17 files)... → Done (took 0.8 sec)

[2020-05-28T19:34:11.246Z] Getting build status for v-e45ba051fc...

[2020-05-28T19:34:11.256Z] Getting build status for v-f853fcb9f9...

[2020-05-28T19:34:11.264Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T19:34:11.274Z] Deploying version v-f853fcb9f9...

[2020-05-28T19:34:11.283Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T19:34:11.301Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T19:34:11.573Z] Getting build status for v-5cf332d98a... → Done (took 1 sec)

[2020-05-28T19:34:11.584Z] Deploying version v-5cf332d98a...

[2020-05-28T19:34:11.621Z] Getting build status for v-e45ba051fc... → Done (took 0.4 sec)

[2020-05-28T19:34:13.352Z] Waiting for resources to be ready...

[2020-05-28T19:34:15.377Z] Resources ready

[2020-05-28T19:34:15.412Z] Deploying version v-5cf332d98a... → Done (took 3.8 sec)

[2020-05-28T19:34:15.421Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/api/tasks

[2020-05-28T19:34:15.430Z] → Forward: http://127.0.0.1:53624 → backend:80 (http)

[2020-05-28T19:34:15.438Z] Deploying version v-e45ba051fc...

[2020-05-28T19:34:17.056Z] Waiting for resources to be ready...

[2020-05-28T19:34:19.080Z] Resources ready

[2020-05-28T19:34:19.114Z] Deploying version v-e45ba051fc... → Done (took 3.7 sec)

[2020-05-28T19:34:19.123Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T19:34:19.133Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T19:34:19.151Z] Waiting for code changes...

[2020-05-28T19:34:41.714Z] ⏳  Processing...

[2020-05-28T19:34:41.846Z] Waiting for code changes...

[2020-05-28T19:34:41.861Z] ⏳  Processing...

[2020-05-28T19:34:41.870Z] Syncing module sources (17 files)...

[2020-05-28T19:34:42.169Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-28T19:34:42.179Z] Building version v-407890a3f1...

[2020-05-28T19:34:42.635Z] Building frontend:v-407890a3f1...

[2020-05-28T19:34:43.282Z] Building frontend:v-407890a3f1... → Done (took 1.1 sec)

[2020-05-28T19:34:43.292Z] Deploying version v-407890a3f1...

[2020-05-28T19:34:45.170Z] Waiting for resources to be ready...

[2020-05-28T19:34:47.197Z] Resources ready

[2020-05-28T19:34:47.229Z] Deploying version v-407890a3f1... → Done (took 3.9 sec)

[2020-05-28T19:34:47.239Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T19:34:47.249Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T19:34:47.258Z] Waiting for code changes...

[2020-05-28T19:35:03.874Z] ⏳  Processing...

[2020-05-28T19:35:04.006Z] Waiting for code changes...

[2020-05-28T19:35:04.025Z] ⏳  Processing...

[2020-05-28T19:35:04.035Z] Syncing module sources (17 files)...

[2020-05-28T19:35:04.454Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-28T19:35:04.464Z] Building version v-d1cac47c70...

[2020-05-28T19:35:04.957Z] Building frontend:v-d1cac47c70...

[2020-05-28T19:35:05.603Z] Building frontend:v-d1cac47c70... → Done (took 1.1 sec)

[2020-05-28T19:35:05.618Z] Deploying version v-d1cac47c70...

[2020-05-28T19:35:07.634Z] Waiting for resources to be ready...

[2020-05-28T19:35:09.661Z] Resources ready

[2020-05-28T19:35:09.706Z] Deploying version v-d1cac47c70... → Done (took 4.1 sec)

[2020-05-28T19:35:09.717Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T19:35:09.727Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T19:35:09.737Z] Waiting for code changes...

[2020-05-28T19:47:33.755Z] Getting status...

[2020-05-28T19:47:35.955Z] Getting status... → Done

[2020-05-28T19:47:36.192Z] Module configuration changed, reloading...

[2020-05-28T19:47:36.896Z] Getting status...

[2020-05-28T19:47:38.116Z] Getting status... → Done

[2020-05-28T19:47:38.312Z] ⏳  Processing...

[2020-05-28T19:47:38.325Z] Syncing module sources (17 files)...

[2020-05-28T19:47:38.346Z] Syncing module sources (7 files)...

[2020-05-28T19:47:38.426Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T19:47:38.439Z] Getting build status for v-0206ea5497...

[2020-05-28T19:47:39.201Z] Syncing module sources (17 files)... → Done (took 0.9 sec)

[2020-05-28T19:47:39.213Z] Getting build status for v-d1cac47c70...

[2020-05-28T19:47:39.237Z] Getting build status for v-f853fcb9f9...

[2020-05-28T19:47:39.250Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T19:47:39.264Z] Deploying version v-f853fcb9f9...

[2020-05-28T19:47:39.276Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T19:47:39.288Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T19:47:39.474Z] Building version v-0206ea5497...

[2020-05-28T19:47:39.568Z] Building backend:v-0206ea5497...

[2020-05-28T19:47:39.597Z] Getting build status for v-d1cac47c70... → Done (took 0.4 sec)

[2020-05-28T19:47:39.853Z] Building backend:v-0206ea5497... → Done (took 1.4 sec)

[2020-05-28T19:47:39.866Z] Deploying version v-0206ea5497...

[2020-05-28T19:47:42.583Z] Waiting for resources to be ready...

[2020-05-28T19:47:44.619Z] Resources ready

[2020-05-28T19:47:44.664Z] Deploying version v-0206ea5497... → Done (took 4.8 sec)

[2020-05-28T19:47:44.676Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/api/tasks

[2020-05-28T19:47:44.687Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/api/createTask

[2020-05-28T19:47:44.701Z] → Forward: http://127.0.0.1:53624 → backend:80 (http)

[2020-05-28T19:47:44.715Z] Deploying version v-d1cac47c70...

[2020-05-28T19:47:46.196Z] Waiting for resources to be ready...

[2020-05-28T19:47:48.223Z] Resources ready

[2020-05-28T19:47:48.263Z] Deploying version v-d1cac47c70... → Done (took 3.5 sec)

[2020-05-28T19:47:48.276Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T19:47:48.290Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T19:47:48.314Z] Waiting for code changes...

[2020-05-28T19:47:51.124Z] ⏳  Processing...

[2020-05-28T19:47:51.302Z] Waiting for code changes...

[2020-05-28T19:47:51.340Z] ⏳  Processing...

[2020-05-28T19:47:51.373Z] Syncing module sources (17 files)...

[2020-05-28T19:47:51.428Z] Syncing module sources (7 files)...

[2020-05-28T19:47:51.564Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T19:47:51.591Z] Getting build status for v-528be55825...

[2020-05-28T19:47:52.418Z] Syncing module sources (17 files)... → Done (took 1 sec)

[2020-05-28T19:47:52.446Z] Building version v-9adf26a1c9...

[2020-05-28T19:47:52.690Z] Building frontend:v-9adf26a1c9...

[2020-05-28T19:47:53.799Z] Building version v-528be55825...

[2020-05-28T19:47:54.052Z] Building backend:v-528be55825...

[2020-05-28T19:47:55.354Z] Building frontend:v-9adf26a1c9... → Done (took 2.9 sec)

[2020-05-28T19:47:55.977Z] Building backend:v-528be55825... → Done (took 4.4 sec)

[2020-05-28T19:47:56.007Z] Deploying version v-528be55825...

[2020-05-28T19:47:59.029Z] Waiting for resources to be ready...

[2020-05-28T19:48:01.099Z] Resources ready

[2020-05-28T19:48:01.199Z] Deploying version v-528be55825... → Done (took 5.2 sec)

[2020-05-28T19:48:01.228Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/api/tasks

[2020-05-28T19:48:01.259Z] → Ingress: http://node-microservice.192.168.99.108.nip.io/api/createTask

[2020-05-28T19:48:01.289Z] → Forward: http://127.0.0.1:53624 → backend:80 (http)

[2020-05-28T19:48:01.318Z] Deploying version v-9adf26a1c9...

[2020-05-28T19:48:03.769Z] Waiting for resources to be ready...

[2020-05-28T19:48:05.830Z] Resources ready

[2020-05-28T19:48:05.921Z] Deploying version v-9adf26a1c9... → Done (took 4.6 sec)

[2020-05-28T19:48:05.953Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T19:48:05.983Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T19:48:06.013Z] Waiting for code changes...

[2020-05-28T21:21:06.245Z] Getting status...

[2020-05-28T21:21:08.228Z] Error: Command "minikube ip" failed with code 69:

Here's the full output:

* The control plane node is not running (state=Saved)
  - To fix this, run: "minikube start"
    at makeError (/snapshot/project/garden-service/tmp/dist/node_modules/execa/lib/error.js:58:11)
    at handlePromise (/snapshot/project/garden-service/tmp/dist/node_modules/execa/index.js:114:26)
    at runMicrotasks (<anonymous>)
    at processTicksAndRejections (internal/process/task_queues.js:93:5)
Error Details:
shortMessage: 'Command failed with exit code 69: minikube ip'
command: minikube ip
exitCode: 69
stdout: |-
  * The control plane node is not running (state=Saved)
    - To fix this, run: "minikube start"
stderr: ''
all: |-
  * The control plane node is not running (state=Saved)
    - To fix this, run: "minikube start"
failed: true
timedOut: false
isCanceled: false
killed: false


[2020-05-28T21:21:27.571Z] Getting status...

[2020-05-28T21:21:28.521Z] Error: Command "minikube ip" failed with code 69:

Here's the full output:

* The control plane node is not running (state=Saved)
  - To fix this, run: "minikube start"
    at makeError (/snapshot/project/garden-service/tmp/dist/node_modules/execa/lib/error.js:58:11)
    at handlePromise (/snapshot/project/garden-service/tmp/dist/node_modules/execa/index.js:114:26)
    at runMicrotasks (<anonymous>)
    at processTicksAndRejections (internal/process/task_queues.js:93:5)
Error Details:
shortMessage: 'Command failed with exit code 69: minikube ip'
command: minikube ip
exitCode: 69
stdout: |-
  * The control plane node is not running (state=Saved)
    - To fix this, run: "minikube start"
stderr: ''
all: |-
  * The control plane node is not running (state=Saved)
    - To fix this, run: "minikube start"
failed: true
timedOut: false
isCanceled: false
killed: false


[2020-05-28T21:21:45.640Z] Getting status...

[2020-05-28T21:21:46.586Z] Error: Command "minikube ip" failed with code 69:

Here's the full output:

* The control plane node is not running (state=Saved)
  - To fix this, run: "minikube start"
    at makeError (/snapshot/project/garden-service/tmp/dist/node_modules/execa/lib/error.js:58:11)
    at handlePromise (/snapshot/project/garden-service/tmp/dist/node_modules/execa/index.js:114:26)
    at runMicrotasks (<anonymous>)
    at processTicksAndRejections (internal/process/task_queues.js:93:5)
Error Details:
shortMessage: 'Command failed with exit code 69: minikube ip'
command: minikube ip
exitCode: 69
stdout: |-
  * The control plane node is not running (state=Saved)
    - To fix this, run: "minikube start"
stderr: ''
all: |-
  * The control plane node is not running (state=Saved)
    - To fix this, run: "minikube start"
failed: true
timedOut: false
isCanceled: false
killed: false


[2020-05-28T21:22:56.231Z] Getting status...

[2020-05-28T21:22:59.302Z] Getting status... → Done

[2020-05-28T21:22:59.902Z] ⏳  Processing...

[2020-05-28T21:22:59.906Z] Syncing module sources (17 files)...

[2020-05-28T21:22:59.911Z] Syncing module sources (7 files)...

[2020-05-28T21:23:00.002Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T21:23:00.005Z] Getting build status for v-88d31d131c...

[2020-05-28T21:23:00.807Z] Syncing module sources (17 files)... → Done (took 0.9 sec)

[2020-05-28T21:23:00.810Z] Getting build status for v-9adf26a1c9...

[2020-05-28T21:23:00.822Z] Getting build status for v-f853fcb9f9...

[2020-05-28T21:23:00.826Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T21:23:00.831Z] Deploying version v-f853fcb9f9...

[2020-05-28T21:23:00.838Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T21:23:00.847Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T21:23:01.511Z] Building version v-88d31d131c...

[2020-05-28T21:23:01.582Z] Building backend:v-88d31d131c...

[2020-05-28T21:23:01.642Z] Getting build status for v-9adf26a1c9... → Done (took 0.8 sec)

[2020-05-28T21:23:01.985Z] Building backend:v-88d31d131c... → Done (took 2 sec)

[2020-05-28T21:23:01.988Z] Deploying version v-88d31d131c...

[2020-05-28T21:23:04.891Z] Waiting for resources to be ready...

[2020-05-28T21:23:06.917Z] Resources ready

[2020-05-28T21:23:06.943Z] Deploying version v-88d31d131c... → Done (took 5 sec)

[2020-05-28T21:23:06.948Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:23:06.956Z] → Forward: http://127.0.0.1:55179 → backend:80 (interface)

[2020-05-28T21:23:06.960Z] Deploying version v-9adf26a1c9...

[2020-05-28T21:23:08.505Z] Waiting for resources to be ready...

[2020-05-28T21:23:10.526Z] Resources ready

[2020-05-28T21:23:10.578Z] Deploying version v-9adf26a1c9... → Done (took 3.6 sec)

[2020-05-28T21:23:10.582Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:23:10.589Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T21:23:10.618Z] Waiting for code changes...

[2020-05-28T21:24:29.775Z] ⏳  Processing...

[2020-05-28T21:24:29.938Z] Waiting for code changes...

[2020-05-28T21:24:29.952Z] ⏳  Processing...

[2020-05-28T21:24:29.957Z] Syncing module sources (7 files)...

[2020-05-28T21:24:30.009Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T21:24:30.014Z] Building version v-1be93be714...

[2020-05-28T21:24:30.450Z] Building backend:v-1be93be714...

[2020-05-28T21:24:30.698Z] Building backend:v-1be93be714... → Done (took 0.7 sec)

[2020-05-28T21:24:30.705Z] Deploying version v-1be93be714...

[2020-05-28T21:24:32.553Z] Waiting for resources to be ready...

[2020-05-28T21:24:34.579Z] Resources ready

[2020-05-28T21:24:34.612Z] Deploying version v-1be93be714... → Done (took 3.9 sec)

[2020-05-28T21:24:34.619Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:24:34.624Z] → Forward: http://127.0.0.1:55179 → backend:80 (interface)

[2020-05-28T21:24:34.629Z] Deploying version v-9adf26a1c9...

[2020-05-28T21:24:36.261Z] Waiting for resources to be ready...

[2020-05-28T21:24:38.283Z] Resources ready

[2020-05-28T21:24:38.313Z] Deploying version v-9adf26a1c9... → Done (took 3.7 sec)

[2020-05-28T21:24:38.319Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:24:38.324Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T21:24:38.330Z] Waiting for code changes...

[2020-05-28T21:25:44.651Z] Getting status...

[2020-05-28T21:25:46.744Z] Getting status... → Done

[2020-05-28T21:25:46.983Z] Module configuration changed, reloading...

[2020-05-28T21:25:47.681Z] Getting status...

[2020-05-28T21:25:48.868Z] Getting status... → Done

[2020-05-28T21:25:49.057Z] ⏳  Processing...

[2020-05-28T21:25:49.065Z] Syncing module sources (17 files)...

[2020-05-28T21:25:49.076Z] Syncing module sources (7 files)...

[2020-05-28T21:25:49.131Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T21:25:49.139Z] Getting build status for v-763544debb...

[2020-05-28T21:25:49.531Z] Getting build status for v-f853fcb9f9...

[2020-05-28T21:25:49.539Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T21:25:49.547Z] Deploying version v-f853fcb9f9...

[2020-05-28T21:25:49.553Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T21:25:49.560Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-28T21:25:49.571Z] Getting build status for v-9adf26a1c9...

[2020-05-28T21:25:49.591Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T21:25:49.904Z] Building version v-763544debb...

[2020-05-28T21:25:49.964Z] Getting build status for v-9adf26a1c9... → Done (took 0.4 sec)

[2020-05-28T21:25:49.980Z] Building backend:v-763544debb...

[2020-05-28T21:25:50.238Z] Building backend:v-763544debb... → Done (took 1.1 sec)

[2020-05-28T21:25:50.246Z] Deploying version v-763544debb...

[2020-05-28T21:25:51.929Z] Waiting for resources to be ready...

[2020-05-28T21:25:53.954Z] Resources ready

[2020-05-28T21:25:53.995Z] Deploying version v-763544debb... → Done (took 3.7 sec)

[2020-05-28T21:25:54.003Z] → Ingress: http://api.local.app.garden

[2020-05-28T21:25:54.011Z] → Forward: http://127.0.0.1:55179 → backend:80 (interface)

[2020-05-28T21:25:54.018Z] Deploying version v-9adf26a1c9...

[2020-05-28T21:25:55.645Z] Waiting for resources to be ready...

[2020-05-28T21:25:57.670Z] Resources ready

[2020-05-28T21:25:57.705Z] Deploying version v-9adf26a1c9... → Done (took 3.7 sec)

[2020-05-28T21:25:57.713Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:25:57.721Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T21:25:57.739Z] Waiting for code changes...

[2020-05-28T21:26:03.938Z] Getting status...

[2020-05-28T21:26:06.104Z] Getting status... → Done

[2020-05-28T21:26:06.300Z] Module configuration changed, reloading...

[2020-05-28T21:26:07.000Z] Getting status...

[2020-05-28T21:26:08.324Z] Getting status... → Done

[2020-05-28T21:26:08.588Z] ⏳  Processing...

[2020-05-28T21:26:08.596Z] Syncing module sources (17 files)...

[2020-05-28T21:26:08.615Z] Syncing module sources (7 files)...

[2020-05-28T21:26:08.687Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T21:26:08.696Z] Getting build status for v-763544debb...

[2020-05-28T21:26:09.081Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-28T21:26:09.091Z] Getting build status for v-ac942b135a...

[2020-05-28T21:26:09.103Z] Getting build status for v-f853fcb9f9...

[2020-05-28T21:26:09.113Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T21:26:09.123Z] Deploying version v-f853fcb9f9...

[2020-05-28T21:26:09.133Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T21:26:09.155Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T21:26:09.611Z] Getting build status for v-763544debb... → Done (took 0.9 sec)

[2020-05-28T21:26:09.620Z] Deploying version v-763544debb...

[2020-05-28T21:26:09.632Z] Deploying version v-763544debb... → Already deployed

[2020-05-28T21:26:09.641Z] → Ingress: http://api.local.app.garden

[2020-05-28T21:26:09.652Z] → Forward: http://127.0.0.1:55179 → backend:80 (interface)

[2020-05-28T21:26:09.712Z] Building version v-ac942b135a...

[2020-05-28T21:26:09.789Z] Building frontend:v-ac942b135a...

[2020-05-28T21:26:10.139Z] Building frontend:v-ac942b135a... → Done (took 1 sec)

[2020-05-28T21:26:10.150Z] Deploying version v-ac942b135a...

[2020-05-28T21:26:12.778Z] Waiting for resources to be ready...

[2020-05-28T21:26:14.804Z] Resources ready

[2020-05-28T21:26:14.849Z] Deploying version v-ac942b135a... → Done (took 4.7 sec)

[2020-05-28T21:26:14.861Z] → Ingress: http://todo.local.app.garden

[2020-05-28T21:26:14.872Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T21:26:14.895Z] Waiting for code changes...

[2020-05-28T21:27:01.574Z] ⏳  Processing...

[2020-05-28T21:27:01.648Z] Waiting for code changes...

[2020-05-28T21:27:01.666Z] ⏳  Processing...

[2020-05-28T21:27:01.754Z] Waiting for code changes...

[2020-05-28T21:27:01.777Z] ⏳  Processing...

[2020-05-28T21:27:01.807Z] Waiting for code changes...

[2020-05-28T21:28:46.469Z] Getting status...

[2020-05-28T21:28:48.593Z] Getting status... → Done

[2020-05-28T21:28:48.789Z] Module configuration changed, reloading...

[2020-05-28T21:28:49.476Z] Getting status...

[2020-05-28T21:28:50.676Z] Getting status... → Done

[2020-05-28T21:28:50.964Z] ⏳  Processing...

[2020-05-28T21:28:50.976Z] Syncing module sources (17 files)...

[2020-05-28T21:28:50.999Z] Syncing module sources (7 files)...

[2020-05-28T21:28:51.072Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T21:28:51.083Z] Getting build status for v-763544debb...

[2020-05-28T21:28:51.483Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-28T21:28:51.494Z] Getting build status for v-9adf26a1c9...

[2020-05-28T21:28:51.507Z] Getting build status for v-f853fcb9f9...

[2020-05-28T21:28:51.520Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T21:28:51.533Z] Deploying version v-f853fcb9f9...

[2020-05-28T21:28:51.542Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T21:28:51.566Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T21:28:51.870Z] Getting build status for v-763544debb... → Done (took 0.8 sec)

[2020-05-28T21:28:51.884Z] Deploying version v-763544debb...

[2020-05-28T21:28:51.895Z] Deploying version v-763544debb... → Already deployed

[2020-05-28T21:28:51.908Z] → Ingress: http://api.local.app.garden

[2020-05-28T21:28:51.919Z] → Forward: http://127.0.0.1:55179 → backend:80 (interface)

[2020-05-28T21:28:51.931Z] Getting build status for v-9adf26a1c9... → Done (took 0.4 sec)

[2020-05-28T21:28:51.942Z] Deploying version v-9adf26a1c9...

[2020-05-28T21:28:53.793Z] Waiting for resources to be ready...

[2020-05-28T21:28:55.821Z] Resources ready

[2020-05-28T21:28:55.864Z] Deploying version v-9adf26a1c9... → Done (took 3.9 sec)

[2020-05-28T21:28:55.876Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:28:55.889Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T21:28:55.911Z] Waiting for code changes...

[2020-05-28T21:31:17.820Z] Getting status...

[2020-05-28T21:31:19.986Z] Getting status... → Done

[2020-05-28T21:31:20.172Z] Module configuration changed, reloading...

[2020-05-28T21:31:20.926Z] Getting status...

[2020-05-28T21:31:22.088Z] Getting status... → Done

[2020-05-28T21:31:22.328Z] ⏳  Processing...

[2020-05-28T21:31:22.342Z] Syncing module sources (17 files)...

[2020-05-28T21:31:22.367Z] Syncing module sources (7 files)...

[2020-05-28T21:31:22.453Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T21:31:22.468Z] Getting build status for v-763544debb...

[2020-05-28T21:31:22.909Z] Syncing module sources (17 files)... → Done (took 0.6 sec)

[2020-05-28T21:31:22.931Z] Getting build status for v-9adf26a1c9...

[2020-05-28T21:31:22.945Z] Getting build status for v-f853fcb9f9...

[2020-05-28T21:31:22.960Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T21:31:22.973Z] Deploying version v-f853fcb9f9...

[2020-05-28T21:31:22.986Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T21:31:23.017Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T21:31:23.194Z] Getting build status for v-763544debb... → Done (took 0.7 sec)

[2020-05-28T21:31:23.210Z] Deploying version v-763544debb...

[2020-05-28T21:31:23.223Z] Deploying version v-763544debb... → Already deployed

[2020-05-28T21:31:23.237Z] → Ingress: http://api.local.app.garden

[2020-05-28T21:31:23.250Z] → Forward: http://127.0.0.1:55179 → backend:80 (interface)

[2020-05-28T21:31:23.301Z] Getting build status for v-9adf26a1c9... → Done (took 0.4 sec)

[2020-05-28T21:31:23.317Z] Deploying version v-9adf26a1c9...

[2020-05-28T21:31:23.329Z] Deploying version v-9adf26a1c9... → Already deployed

[2020-05-28T21:31:23.343Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:31:23.365Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T21:31:23.408Z] Waiting for code changes...

[2020-05-28T21:31:30.179Z] Getting status...

[2020-05-28T21:31:32.401Z] Getting status... → Done

[2020-05-28T21:31:32.589Z] Module configuration changed, reloading...

[2020-05-28T21:31:33.272Z] Getting status...

[2020-05-28T21:31:34.447Z] Getting status... → Done

[2020-05-28T21:31:34.644Z] ⏳  Processing...

[2020-05-28T21:31:34.659Z] Syncing module sources (17 files)...

[2020-05-28T21:31:34.689Z] Syncing module sources (7 files)...

[2020-05-28T21:31:34.797Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T21:31:34.814Z] Getting build status for v-0bf81b3726...

[2020-05-28T21:31:35.200Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-28T21:31:35.216Z] Getting build status for v-9adf26a1c9...

[2020-05-28T21:31:35.236Z] Getting build status for v-f853fcb9f9...

[2020-05-28T21:31:35.254Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T21:31:35.270Z] Deploying version v-f853fcb9f9...

[2020-05-28T21:31:35.285Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T21:31:35.314Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T21:31:35.612Z] Building version v-0bf81b3726...

[2020-05-28T21:31:35.639Z] Getting build status for v-9adf26a1c9... → Done (took 0.4 sec)

[2020-05-28T21:31:35.693Z] Building backend:v-0bf81b3726...

[2020-05-28T21:31:35.975Z] Building backend:v-0bf81b3726... → Done (took 1.2 sec)

[2020-05-28T21:31:35.991Z] Deploying version v-0bf81b3726...

[2020-05-28T21:31:37.866Z] Waiting for resources to be ready...

[2020-05-28T21:31:39.899Z] Resources ready

[2020-05-28T21:31:39.945Z] Deploying version v-0bf81b3726... → Done (took 4 sec)

[2020-05-28T21:31:39.962Z] → Ingress: http://api.local.app.garden

[2020-05-28T21:31:39.990Z] → Forward: http://127.0.0.1:8080 → backend:8080 (interface)

[2020-05-28T21:31:40.006Z] Deploying version v-9adf26a1c9...

[2020-05-28T21:31:41.502Z] Waiting for resources to be ready...

[2020-05-28T21:31:43.531Z] Resources ready

[2020-05-28T21:31:43.574Z] Deploying version v-9adf26a1c9... → Done (took 3.6 sec)

[2020-05-28T21:31:43.592Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:31:43.609Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T21:31:43.634Z] Waiting for code changes...

[2020-05-28T21:32:17.182Z] Getting status...

[2020-05-28T21:32:19.234Z] Getting status... → Done

[2020-05-28T21:32:19.423Z] Module configuration changed, reloading...

[2020-05-28T21:32:20.121Z] Getting status...

[2020-05-28T21:32:21.334Z] Getting status... → Done

[2020-05-28T21:32:21.572Z] ⏳  Processing...

[2020-05-28T21:32:21.590Z] Syncing module sources (17 files)...

[2020-05-28T21:32:21.623Z] Syncing module sources (7 files)...

[2020-05-28T21:32:21.703Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T21:32:21.719Z] Getting build status for v-3a217d7fde...

[2020-05-28T21:32:22.099Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-28T21:32:22.117Z] Getting build status for v-9adf26a1c9...

[2020-05-28T21:32:22.136Z] Getting build status for v-f853fcb9f9...

[2020-05-28T21:32:22.153Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T21:32:22.170Z] Deploying version v-f853fcb9f9...

[2020-05-28T21:32:22.186Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T21:32:22.219Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T21:32:22.520Z] Building version v-3a217d7fde...

[2020-05-28T21:32:22.540Z] Getting build status for v-9adf26a1c9... → Done (took 0.4 sec)

[2020-05-28T21:32:22.619Z] Building backend:v-3a217d7fde...

[2020-05-28T21:32:22.873Z] Building backend:v-3a217d7fde... → Done (took 1.2 sec)

[2020-05-28T21:32:22.892Z] Deploying version v-3a217d7fde...

[2020-05-28T21:32:23.318Z] Deploying version v-3a217d7fde...

[2020-05-28T21:32:23.345Z] Error: Command "/Users/emilwils/.garden/tools/kubectl/b57d7033ebdf2a5a/kubectl --context=minikube --namespace=node-microservice --context=minikube --namespace=node-microservice apply --prune --selector service=backend --output=json -f -" failed with code 1:

The Service "backend" is invalid: spec.ports[0].nodePort: Invalid value: 80: provided port is not in the valid range. The range of valid ports is 30000-32767

The Service "backend" is invalid: spec.ports[0].nodePort: Invalid value: 80: provided port is not in the valid range. The range of valid ports is 30000-32767
    at makeError (/snapshot/project/garden-service/tmp/dist/node_modules/execa/lib/error.js:58:11)
    at handlePromise (/snapshot/project/garden-service/tmp/dist/node_modules/execa/index.js:114:26)
    at runMicrotasks (<anonymous>)
    at processTicksAndRejections (internal/process/task_queues.js:93:5)
Error Details:
shortMessage: >-
  Command failed with exit code 1:
  /Users/emilwils/.garden/tools/kubectl/b57d7033ebdf2a5a/kubectl
  --context=minikube --namespace=node-microservice --context=minikube
  --namespace=node-microservice apply --prune --selector service=backend
  --output=json -f -
command: >-
  /Users/emilwils/.garden/tools/kubectl/b57d7033ebdf2a5a/kubectl
  --context=minikube --namespace=node-microservice --context=minikube
  --namespace=node-microservice apply --prune --selector service=backend
  --output=json -f -
exitCode: 1
stdout: ''
stderr: >-
  The Service "backend" is invalid: spec.ports[0].nodePort: Invalid value: 80:
  provided port is not in the valid range. The range of valid ports is
  30000-32767
all: >-
  The Service "backend" is invalid: spec.ports[0].nodePort: Invalid value: 80:
  provided port is not in the valid range. The range of valid ports is
  30000-32767
failed: true
timedOut: false
isCanceled: false
killed: false


[2020-05-28T21:32:23.379Z] Waiting for code changes...

[2020-05-28T21:32:34.418Z] Getting status...

[2020-05-28T21:32:36.543Z] Getting status... → Done

[2020-05-28T21:32:36.732Z] Module configuration changed, reloading...

[2020-05-28T21:32:37.433Z] Getting status...

[2020-05-28T21:32:38.603Z] Getting status... → Done

[2020-05-28T21:32:38.808Z] ⏳  Processing...

[2020-05-28T21:32:38.829Z] Syncing module sources (17 files)...

[2020-05-28T21:32:38.872Z] Syncing module sources (7 files)...

[2020-05-28T21:32:39.000Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T21:32:39.032Z] Getting build status for v-48734c5625...

[2020-05-28T21:32:39.434Z] Getting build status for v-f853fcb9f9...

[2020-05-28T21:32:39.459Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T21:32:39.481Z] Deploying version v-f853fcb9f9...

[2020-05-28T21:32:39.503Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T21:32:39.525Z] Syncing module sources (17 files)... → Done (took 0.7 sec)

[2020-05-28T21:32:39.546Z] Getting build status for v-9adf26a1c9...

[2020-05-28T21:32:39.580Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T21:32:39.891Z] Building version v-48734c5625...

[2020-05-28T21:32:39.912Z] Getting build status for v-9adf26a1c9... → Done (took 0.4 sec)

[2020-05-28T21:32:40.007Z] Building backend:v-48734c5625...

[2020-05-28T21:32:40.310Z] Building backend:v-48734c5625... → Done (took 1.3 sec)

[2020-05-28T21:32:40.332Z] Deploying version v-48734c5625...

[2020-05-28T21:32:40.755Z] Deploying version v-48734c5625...

[2020-05-28T21:32:40.780Z] Error: Command "/Users/emilwils/.garden/tools/kubectl/b57d7033ebdf2a5a/kubectl --context=minikube --namespace=node-microservice --context=minikube --namespace=node-microservice apply --prune --selector service=backend --output=json -f -" failed with code 1:

The Service "backend" is invalid: spec.ports[0].nodePort: Invalid value: 30080: provided port is already allocated

The Service "backend" is invalid: spec.ports[0].nodePort: Invalid value: 30080: provided port is already allocated
    at makeError (/snapshot/project/garden-service/tmp/dist/node_modules/execa/lib/error.js:58:11)
    at handlePromise (/snapshot/project/garden-service/tmp/dist/node_modules/execa/index.js:114:26)
    at runMicrotasks (<anonymous>)
    at processTicksAndRejections (internal/process/task_queues.js:93:5)
Error Details:
shortMessage: >-
  Command failed with exit code 1:
  /Users/emilwils/.garden/tools/kubectl/b57d7033ebdf2a5a/kubectl
  --context=minikube --namespace=node-microservice --context=minikube
  --namespace=node-microservice apply --prune --selector service=backend
  --output=json -f -
command: >-
  /Users/emilwils/.garden/tools/kubectl/b57d7033ebdf2a5a/kubectl
  --context=minikube --namespace=node-microservice --context=minikube
  --namespace=node-microservice apply --prune --selector service=backend
  --output=json -f -
exitCode: 1
stdout: ''
stderr: >-
  The Service "backend" is invalid: spec.ports[0].nodePort: Invalid value:
  30080: provided port is already allocated
all: >-
  The Service "backend" is invalid: spec.ports[0].nodePort: Invalid value:
  30080: provided port is already allocated
failed: true
timedOut: false
isCanceled: false
killed: false


[2020-05-28T21:32:40.808Z] Waiting for code changes...

[2020-05-28T21:33:40.604Z] Getting status...

[2020-05-28T21:33:43.730Z] Getting status... → Done

[2020-05-28T21:33:44.325Z] ⏳  Processing...

[2020-05-28T21:33:44.329Z] Syncing module sources (17 files)...

[2020-05-28T21:33:44.335Z] Syncing module sources (7 files)...

[2020-05-28T21:33:44.402Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T21:33:44.405Z] Getting build status for v-48734c5625...

[2020-05-28T21:33:44.993Z] Syncing module sources (17 files)... → Done (took 0.7 sec)

[2020-05-28T21:33:44.996Z] Getting build status for v-9adf26a1c9...

[2020-05-28T21:33:45.018Z] Getting build status for v-f853fcb9f9...

[2020-05-28T21:33:45.022Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T21:33:45.025Z] Deploying version v-f853fcb9f9...

[2020-05-28T21:33:45.028Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T21:33:45.038Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T21:33:45.107Z] Getting build status for v-48734c5625... → Done (took 0.7 sec)

[2020-05-28T21:33:45.114Z] Deploying version v-48734c5625...

[2020-05-28T21:33:45.347Z] Getting build status for v-9adf26a1c9... → Done (took 0.3 sec)

[2020-05-28T21:33:46.987Z] Waiting for resources to be ready...

[2020-05-28T21:33:49.007Z] Resources ready

[2020-05-28T21:33:49.034Z] Deploying version v-48734c5625... → Done (took 3.9 sec)

[2020-05-28T21:33:49.038Z] → Ingress: http://api.local.app.garden

[2020-05-28T21:33:49.045Z] → Forward: http://127.0.0.1:56105 → backend:80 (interface)

[2020-05-28T21:33:49.049Z] Deploying version v-9adf26a1c9...

[2020-05-28T21:33:50.672Z] Waiting for resources to be ready...

[2020-05-28T21:33:52.757Z] Resources ready

[2020-05-28T21:33:52.822Z] Deploying version v-9adf26a1c9... → Done (took 3.8 sec)

[2020-05-28T21:33:52.826Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:33:52.833Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T21:33:52.862Z] Waiting for code changes...

[2020-05-28T21:33:59.651Z] Getting status...

[2020-05-28T21:34:01.984Z] Getting status... → Done

[2020-05-28T21:34:02.230Z] Module configuration changed, reloading...

[2020-05-28T21:34:02.935Z] Getting status...

[2020-05-28T21:34:04.210Z] Getting status... → Done

[2020-05-28T21:34:04.403Z] ⏳  Processing...

[2020-05-28T21:34:04.408Z] Syncing module sources (17 files)...

[2020-05-28T21:34:04.417Z] Syncing module sources (7 files)...

[2020-05-28T21:34:04.476Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T21:34:04.481Z] Getting build status for v-763544debb...

[2020-05-28T21:34:04.899Z] Getting build status for v-f853fcb9f9...

[2020-05-28T21:34:04.905Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T21:34:04.911Z] Deploying version v-f853fcb9f9...

[2020-05-28T21:34:04.918Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T21:34:04.924Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-28T21:34:04.930Z] Getting build status for v-9adf26a1c9...

[2020-05-28T21:34:04.948Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T21:34:05.458Z] Getting build status for v-763544debb... → Done (took 1 sec)

[2020-05-28T21:34:05.465Z] Deploying version v-763544debb...

[2020-05-28T21:34:05.556Z] Getting build status for v-9adf26a1c9... → Done (took 0.6 sec)

[2020-05-28T21:34:07.189Z] Waiting for resources to be ready...

[2020-05-28T21:34:09.213Z] Resources ready

[2020-05-28T21:34:09.243Z] Deploying version v-763544debb... → Done (took 3.8 sec)

[2020-05-28T21:34:09.251Z] → Ingress: http://api.local.app.garden

[2020-05-28T21:34:09.257Z] → Forward: http://127.0.0.1:56105 → backend:80 (interface)

[2020-05-28T21:34:09.265Z] Deploying version v-9adf26a1c9...

[2020-05-28T21:34:10.846Z] Waiting for resources to be ready...

[2020-05-28T21:34:12.877Z] Resources ready

[2020-05-28T21:34:12.924Z] Deploying version v-9adf26a1c9... → Done (took 3.7 sec)

[2020-05-28T21:34:12.930Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:34:12.938Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T21:34:12.960Z] Waiting for code changes...

[2020-05-28T21:34:28.322Z] ⏳  Processing...

[2020-05-28T21:34:28.445Z] Waiting for code changes...

[2020-05-28T21:34:28.458Z] ⏳  Processing...

[2020-05-28T21:34:28.468Z] Syncing module sources (7 files)...

[2020-05-28T21:34:28.522Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T21:34:28.529Z] Building version v-12a81749d1...

[2020-05-28T21:34:28.993Z] Building backend:v-12a81749d1...

[2020-05-28T21:34:29.668Z] Building backend:v-12a81749d1... → Done (took 1.1 sec)

[2020-05-28T21:34:29.676Z] Deploying version v-12a81749d1...

[2020-05-28T21:34:31.559Z] Waiting for resources to be ready...

[2020-05-28T21:34:33.578Z] Resources ready

[2020-05-28T21:34:33.609Z] Deploying version v-12a81749d1... → Done (took 3.9 sec)

[2020-05-28T21:34:33.616Z] → Ingress: http://api.local.app.garden

[2020-05-28T21:34:33.624Z] → Forward: http://127.0.0.1:56105 → backend:80 (interface)

[2020-05-28T21:34:33.635Z] Deploying version v-9adf26a1c9...

[2020-05-28T21:34:35.320Z] Waiting for resources to be ready...

[2020-05-28T21:34:37.341Z] Resources ready

[2020-05-28T21:34:37.372Z] Deploying version v-9adf26a1c9... → Done (took 3.7 sec)

[2020-05-28T21:34:37.383Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:34:37.391Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T21:34:37.399Z] Waiting for code changes...

[2020-05-28T21:35:43.973Z] Getting status...

[2020-05-28T21:35:46.148Z] Getting status... → Done

[2020-05-28T21:35:46.348Z] Module configuration changed, reloading...

[2020-05-28T21:35:47.048Z] Getting status...

[2020-05-28T21:35:48.248Z] Getting status... → Done

[2020-05-28T21:35:48.475Z] ⏳  Processing...

[2020-05-28T21:35:48.485Z] Syncing module sources (17 files)...

[2020-05-28T21:35:48.501Z] Syncing module sources (7 files)...

[2020-05-28T21:35:48.564Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T21:35:48.574Z] Getting build status for v-67015a4610...

[2020-05-28T21:35:48.974Z] Getting build status for v-f853fcb9f9...

[2020-05-28T21:35:48.983Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T21:35:48.992Z] Deploying version v-f853fcb9f9...

[2020-05-28T21:35:49.002Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T21:35:49.013Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-28T21:35:49.025Z] Getting build status for v-9adf26a1c9...

[2020-05-28T21:35:49.077Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T21:35:49.455Z] Building version v-67015a4610...

[2020-05-28T21:35:49.485Z] Getting build status for v-9adf26a1c9... → Done (took 0.5 sec)

[2020-05-28T21:35:49.525Z] Building backend:v-67015a4610...

[2020-05-28T21:35:49.782Z] Building backend:v-67015a4610... → Done (took 1.2 sec)

[2020-05-28T21:35:49.793Z] Deploying version v-67015a4610...

[2020-05-28T21:35:51.663Z] Waiting for resources to be ready...

[2020-05-28T21:35:53.692Z] Resources ready

[2020-05-28T21:35:53.725Z] Deploying version v-67015a4610... → Done (took 3.9 sec)

[2020-05-28T21:35:53.735Z] → Ingress: http://api.local.app.garden

[2020-05-28T21:35:53.755Z] → Forward: http://127.0.0.1:8080 → backend:8080 (interface)

[2020-05-28T21:35:53.765Z] Deploying version v-9adf26a1c9...

[2020-05-28T21:35:55.213Z] Waiting for resources to be ready...

[2020-05-28T21:35:57.239Z] Resources ready

[2020-05-28T21:35:57.275Z] Deploying version v-9adf26a1c9... → Done (took 3.5 sec)

[2020-05-28T21:35:57.287Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:35:57.298Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T21:35:57.327Z] Waiting for code changes...

[2020-05-28T21:37:24.595Z] ⏳  Processing...

[2020-05-28T21:37:24.745Z] Waiting for code changes...

[2020-05-28T21:37:24.764Z] ⏳  Processing...

[2020-05-28T21:37:24.780Z] Syncing module sources (17 files)...

[2020-05-28T21:37:24.806Z] Syncing module sources (7 files)...

[2020-05-28T21:37:24.868Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T21:37:24.879Z] Getting build status for v-72dadb1793...

[2020-05-28T21:37:25.258Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-28T21:37:25.270Z] Building version v-45f11b1dbf...

[2020-05-28T21:37:25.369Z] Building frontend:v-45f11b1dbf...

[2020-05-28T21:37:25.638Z] Building version v-72dadb1793...

[2020-05-28T21:37:25.717Z] Building backend:v-72dadb1793...

[2020-05-28T21:37:26.061Z] Building frontend:v-45f11b1dbf... → Done (took 0.8 sec)

[2020-05-28T21:37:26.354Z] Building backend:v-72dadb1793... → Done (took 1.5 sec)

[2020-05-28T21:37:26.364Z] Deploying version v-72dadb1793...

[2020-05-28T21:37:28.227Z] Waiting for resources to be ready...

[2020-05-28T21:37:30.256Z] Resources ready

[2020-05-28T21:37:30.315Z] Deploying version v-72dadb1793... → Done (took 3.9 sec)

[2020-05-28T21:37:30.328Z] → Ingress: http://api.local.app.garden

[2020-05-28T21:37:30.341Z] → Forward: http://127.0.0.1:8080 → backend:8080 (interface)

[2020-05-28T21:37:30.356Z] Deploying version v-45f11b1dbf...

[2020-05-28T21:37:32.073Z] Waiting for resources to be ready...

[2020-05-28T21:37:34.099Z] Resources ready

[2020-05-28T21:37:34.141Z] Deploying version v-45f11b1dbf... → Done (took 3.8 sec)

[2020-05-28T21:37:34.152Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:37:34.165Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T21:37:34.176Z] Waiting for code changes...

[2020-05-28T21:38:37.467Z] ⏳  Processing...

[2020-05-28T21:38:37.593Z] Waiting for code changes...

[2020-05-28T21:38:37.611Z] ⏳  Processing...

[2020-05-28T21:38:37.625Z] Syncing module sources (7 files)...

[2020-05-28T21:38:37.700Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T21:38:37.718Z] Building version v-d43db8b4a3...

[2020-05-28T21:38:38.162Z] Building backend:v-d43db8b4a3...

[2020-05-28T21:38:38.735Z] Building backend:v-d43db8b4a3... → Done (took 1 sec)

[2020-05-28T21:38:38.750Z] Deploying version v-d43db8b4a3...

[2020-05-28T21:38:40.619Z] Waiting for resources to be ready...

[2020-05-28T21:38:41.015Z] Getting status...

[2020-05-28T21:38:42.649Z] Resources ready

[2020-05-28T21:38:42.687Z] Deploying version v-d43db8b4a3... → Done (took 3.9 sec)

[2020-05-28T21:38:42.699Z] → Ingress: http://api.local.app.garden

[2020-05-28T21:38:42.712Z] → Forward: http://127.0.0.1:8080 → backend:8080 (interface)

[2020-05-28T21:38:42.725Z] Deploying version v-45f11b1dbf...

[2020-05-28T21:38:43.049Z] Getting status... → Done

[2020-05-28T21:38:43.255Z] Module configuration changed, reloading...

[2020-05-28T21:38:43.936Z] Deploying version v-45f11b1dbf...

[2020-05-28T21:38:43.951Z] Getting status...

[2020-05-28T21:38:44.253Z] Waiting for resources to be ready...

[2020-05-28T21:38:45.546Z] Getting status... → Done

[2020-05-28T21:38:45.761Z] ⏳  Processing...

[2020-05-28T21:38:45.776Z] Syncing module sources (7 files)...

[2020-05-28T21:38:45.803Z] Syncing module sources (17 files)...

[2020-05-28T21:38:45.895Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T21:38:45.910Z] Getting build status for v-ab810e9fb4...

[2020-05-28T21:38:46.198Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-28T21:38:46.214Z] Getting build status for v-45f11b1dbf...

[2020-05-28T21:38:46.243Z] Getting build status for v-f853fcb9f9...

[2020-05-28T21:38:46.259Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T21:38:46.273Z] Deploying version v-f853fcb9f9...

[2020-05-28T21:38:46.287Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T21:38:46.304Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T21:38:46.358Z] Resources ready

[2020-05-28T21:38:46.519Z] Deploying version v-45f11b1dbf... → Done (took 3.8 sec)

[2020-05-28T21:38:46.536Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:38:46.550Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T21:38:46.857Z] Getting build status for v-45f11b1dbf... → Done (took 0.6 sec)

[2020-05-28T21:38:46.880Z] Building version v-ab810e9fb4...

[2020-05-28T21:38:46.962Z] Building backend:v-ab810e9fb4...

[2020-05-28T21:38:47.224Z] Building backend:v-ab810e9fb4... → Done (took 1.3 sec)

[2020-05-28T21:38:47.241Z] Deploying version v-ab810e9fb4...

[2020-05-28T21:38:49.229Z] Waiting for resources to be ready...

[2020-05-28T21:38:51.259Z] Resources ready

[2020-05-28T21:38:51.300Z] Deploying version v-ab810e9fb4... → Done (took 4.1 sec)

[2020-05-28T21:38:51.316Z] → Ingress: http://api.local.app.garden

[2020-05-28T21:38:51.339Z] → Forward: 127.0.0.1:5000 → backend:5000 (interface)

[2020-05-28T21:38:51.355Z] Deploying version v-45f11b1dbf...

[2020-05-28T21:38:52.973Z] Waiting for resources to be ready...

[2020-05-28T21:38:55.007Z] Resources ready

[2020-05-28T21:38:55.046Z] Deploying version v-45f11b1dbf... → Done (took 3.7 sec)

[2020-05-28T21:38:55.062Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:38:55.081Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T21:38:55.097Z] ⏳  Processing...

[2020-05-28T21:38:55.136Z] Waiting for code changes...

[2020-05-28T21:39:16.841Z] ⏳  Processing...

[2020-05-28T21:39:16.878Z] Waiting for code changes...

[2020-05-28T21:39:25.287Z] ⏳  Processing...

[2020-05-28T21:39:25.332Z] Waiting for code changes...

[2020-05-28T21:39:27.048Z] ⏳  Processing...

[2020-05-28T21:39:27.084Z] Waiting for code changes...

[2020-05-28T21:39:39.907Z] ⏳  Processing...

[2020-05-28T21:39:39.949Z] Waiting for code changes...

[2020-05-28T21:40:19.385Z] Getting status...

[2020-05-28T21:40:21.474Z] Getting status... → Done

[2020-05-28T21:40:21.675Z] Module configuration changed, reloading...

[2020-05-28T21:40:22.372Z] Getting status...

[2020-05-28T21:40:23.564Z] Getting status... → Done

[2020-05-28T21:40:23.796Z] ⏳  Processing...

[2020-05-28T21:40:23.812Z] Syncing module sources (17 files)...

[2020-05-28T21:40:23.841Z] Syncing module sources (7 files)...

[2020-05-28T21:40:23.918Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T21:40:23.934Z] Getting build status for v-46692326f3...

[2020-05-28T21:40:24.318Z] Getting build status for v-f853fcb9f9...

[2020-05-28T21:40:24.336Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T21:40:24.354Z] Deploying version v-f853fcb9f9...

[2020-05-28T21:40:24.370Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T21:40:24.386Z] Syncing module sources (17 files)... → Done (took 0.6 sec)

[2020-05-28T21:40:24.402Z] Getting build status for v-45f11b1dbf...

[2020-05-28T21:40:24.433Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T21:40:24.751Z] Building version v-46692326f3...

[2020-05-28T21:40:24.783Z] Getting build status for v-45f11b1dbf... → Done (took 0.4 sec)

[2020-05-28T21:40:24.829Z] Building backend:v-46692326f3...

[2020-05-28T21:40:25.101Z] Building backend:v-46692326f3... → Done (took 1.2 sec)

[2020-05-28T21:40:25.119Z] Deploying version v-46692326f3...

[2020-05-28T21:40:26.955Z] Waiting for resources to be ready...

[2020-05-28T21:40:28.988Z] Resources ready

[2020-05-28T21:40:29.031Z] Deploying version v-46692326f3... → Done (took 3.9 sec)

[2020-05-28T21:40:29.050Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:40:29.077Z] → Forward: 127.0.0.1:5000 → backend:5000 (interface)

[2020-05-28T21:40:29.102Z] Deploying version v-45f11b1dbf...

[2020-05-28T21:40:30.616Z] Waiting for resources to be ready...

[2020-05-28T21:40:32.649Z] Resources ready

[2020-05-28T21:40:32.691Z] Deploying version v-45f11b1dbf... → Done (took 3.6 sec)

[2020-05-28T21:40:32.710Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:40:32.730Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T21:40:32.760Z] Waiting for code changes...

[2020-05-28T21:40:35.347Z] ⏳  Processing...

[2020-05-28T21:40:35.417Z] Waiting for code changes...

[2020-05-28T21:40:35.440Z] ⏳  Processing...

[2020-05-28T21:40:35.557Z] Waiting for code changes...

[2020-05-28T21:40:35.584Z] ⏳  Processing...

[2020-05-28T21:40:35.624Z] Waiting for code changes...

[2020-05-28T21:41:44.403Z] ⏳  Processing...

[2020-05-28T21:41:44.561Z] Waiting for code changes...

[2020-05-28T21:41:44.584Z] ⏳  Processing...

[2020-05-28T21:41:44.601Z] Syncing module sources (17 files)...

[2020-05-28T21:41:44.898Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-28T21:41:44.917Z] Building version v-c39dc6d6d6...

[2020-05-28T21:41:45.367Z] Building frontend:v-c39dc6d6d6...

[2020-05-28T21:41:45.950Z] Building frontend:v-c39dc6d6d6... → Done (took 1 sec)

[2020-05-28T21:41:45.970Z] Deploying version v-c39dc6d6d6...

[2020-05-28T21:41:47.835Z] Waiting for resources to be ready...

[2020-05-28T21:41:49.869Z] Resources ready

[2020-05-28T21:41:49.911Z] Deploying version v-c39dc6d6d6... → Done (took 3.9 sec)

[2020-05-28T21:41:49.929Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:41:49.947Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T21:41:49.967Z] Waiting for code changes...

[2020-05-28T21:43:33.859Z] ⏳  Processing...

[2020-05-28T21:43:34.009Z] Waiting for code changes...

[2020-05-28T21:43:34.036Z] ⏳  Processing...

[2020-05-28T21:43:34.056Z] Syncing module sources (17 files)...

[2020-05-28T21:43:34.390Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-28T21:43:34.410Z] Building version v-a87fb5792c...

[2020-05-28T21:43:34.857Z] Building frontend:v-a87fb5792c...

[2020-05-28T21:43:35.444Z] Building frontend:v-a87fb5792c... → Done (took 1 sec)

[2020-05-28T21:43:35.464Z] Deploying version v-a87fb5792c...

[2020-05-28T21:43:38.159Z] Waiting for resources to be ready...

[2020-05-28T21:43:40.190Z] Resources ready

[2020-05-28T21:43:40.246Z] Deploying version v-a87fb5792c... → Done (took 4.8 sec)

[2020-05-28T21:43:40.279Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:43:40.301Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T21:43:40.321Z] Waiting for code changes...

[2020-05-28T21:46:14.163Z] ⏳  Processing...

[2020-05-28T21:46:14.319Z] Waiting for code changes...

[2020-05-28T21:46:14.345Z] ⏳  Processing...

[2020-05-28T21:46:14.368Z] Syncing module sources (17 files)...

[2020-05-28T21:46:14.822Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-28T21:46:14.842Z] Building version v-0bcb627f57...

[2020-05-28T21:46:15.298Z] Building frontend:v-0bcb627f57...

[2020-05-28T21:46:16.012Z] Building frontend:v-0bcb627f57... → Done (took 1.2 sec)

[2020-05-28T21:46:16.034Z] Deploying version v-0bcb627f57...

[2020-05-28T21:46:17.995Z] Waiting for resources to be ready...

[2020-05-28T21:46:20.067Z] Resources ready

[2020-05-28T21:46:20.123Z] Deploying version v-0bcb627f57... → Done (took 4.1 sec)

[2020-05-28T21:46:20.142Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:46:20.163Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T21:46:20.183Z] ⏳  Processing...

[2020-05-28T21:46:20.203Z] Syncing module sources (17 files)...

[2020-05-28T21:46:20.846Z] Syncing module sources (17 files)... → Done (took 0.6 sec)

[2020-05-28T21:46:20.868Z] Building version v-670af22552...

[2020-05-28T21:46:21.126Z] Building frontend:v-670af22552...

[2020-05-28T21:46:21.462Z] Building frontend:v-670af22552... → Done (took 0.6 sec)

[2020-05-28T21:46:21.484Z] Deploying version v-670af22552...

[2020-05-28T21:46:23.328Z] Waiting for resources to be ready...

[2020-05-28T21:46:25.364Z] Resources ready

[2020-05-28T21:46:25.409Z] Deploying version v-670af22552... → Done (took 3.9 sec)

[2020-05-28T21:46:25.428Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:46:25.447Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T21:46:25.468Z] Waiting for code changes...

[2020-05-28T21:50:32.501Z] Getting status...

[2020-05-28T21:50:34.621Z] Getting status... → Done

[2020-05-28T21:50:34.822Z] Module configuration changed, reloading...

[2020-05-28T21:50:35.521Z] Getting status...

[2020-05-28T21:50:36.704Z] Getting status... → Done

[2020-05-28T21:50:36.975Z] ⏳  Processing...

[2020-05-28T21:50:36.995Z] Syncing module sources (17 files)...

[2020-05-28T21:50:37.036Z] Syncing module sources (7 files)...

[2020-05-28T21:50:37.129Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T21:50:37.150Z] Getting build status for v-22cb0cf420...

[2020-05-28T21:50:37.780Z] Getting build status for v-f853fcb9f9...

[2020-05-28T21:50:37.805Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T21:50:37.826Z] Deploying version v-f853fcb9f9...

[2020-05-28T21:50:37.846Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T21:50:37.867Z] Syncing module sources (17 files)... → Done (took 0.9 sec)

[2020-05-28T21:50:37.887Z] Getting build status for v-670af22552...

[2020-05-28T21:50:37.924Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T21:50:38.238Z] Building version v-22cb0cf420...

[2020-05-28T21:50:38.294Z] Getting build status for v-670af22552... → Done (took 0.4 sec)

[2020-05-28T21:50:38.356Z] Building backend:v-22cb0cf420...

[2020-05-28T21:50:38.660Z] Building backend:v-22cb0cf420... → Done (took 1.5 sec)

[2020-05-28T21:50:38.684Z] Deploying version v-22cb0cf420...

[2020-05-28T21:50:40.553Z] Waiting for resources to be ready...

[2020-05-28T21:50:42.592Z] Resources ready

[2020-05-28T21:50:42.638Z] Deploying version v-22cb0cf420... → Done (took 4 sec)

[2020-05-28T21:50:42.661Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:50:42.683Z] → Forward: http://127.0.0.1:8080 → backend:8080 (interface)

[2020-05-28T21:50:42.704Z] Deploying version v-670af22552...

[2020-05-28T21:50:44.188Z] Waiting for resources to be ready...

[2020-05-28T21:50:46.236Z] Resources ready

[2020-05-28T21:50:46.291Z] Deploying version v-670af22552... → Done (took 3.6 sec)

[2020-05-28T21:50:46.314Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:50:46.337Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T21:50:46.368Z] Waiting for code changes...

[2020-05-28T21:51:20.111Z] ⏳  Processing...

[2020-05-28T21:51:20.254Z] Waiting for code changes...

[2020-05-28T21:51:20.283Z] ⏳  Processing...

[2020-05-28T21:51:20.307Z] Syncing module sources (17 files)...

[2020-05-28T21:51:20.720Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-28T21:51:20.745Z] Building version v-32ffb692bd...

[2020-05-28T21:51:21.207Z] Building frontend:v-32ffb692bd...

[2020-05-28T21:51:21.857Z] Building frontend:v-32ffb692bd... → Done (took 1.1 sec)

[2020-05-28T21:51:21.879Z] Deploying version v-32ffb692bd...

[2020-05-28T21:51:23.729Z] Waiting for resources to be ready...

[2020-05-28T21:51:25.768Z] Resources ready

[2020-05-28T21:51:25.869Z] Deploying version v-32ffb692bd... → Done (took 4 sec)

[2020-05-28T21:51:25.893Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:51:25.918Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T21:51:25.941Z] Waiting for code changes...

[2020-05-28T21:51:57.671Z] ⏳  Processing...

[2020-05-28T21:51:57.814Z] Waiting for code changes...

[2020-05-28T21:51:57.843Z] ⏳  Processing...

[2020-05-28T21:51:57.867Z] Syncing module sources (17 files)...

[2020-05-28T21:51:58.350Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-28T21:51:58.375Z] Building version v-cadefa94bd...

[2020-05-28T21:51:58.887Z] Building frontend:v-cadefa94bd...

[2020-05-28T21:51:59.597Z] Building frontend:v-cadefa94bd... → Done (took 1.2 sec)

[2020-05-28T21:51:59.621Z] Deploying version v-cadefa94bd...

[2020-05-28T21:52:01.495Z] Waiting for resources to be ready...

[2020-05-28T21:52:03.533Z] Resources ready

[2020-05-28T21:52:03.584Z] Deploying version v-cadefa94bd... → Done (took 4 sec)

[2020-05-28T21:52:03.610Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:52:03.635Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T21:52:03.659Z] Waiting for code changes...

[2020-05-28T21:52:12.227Z] ⏳  Processing...

[2020-05-28T21:52:12.295Z] Waiting for code changes...

[2020-05-28T21:52:12.321Z] ⏳  Processing...

[2020-05-28T21:52:12.441Z] Waiting for code changes...

[2020-05-28T21:52:12.476Z] ⏳  Processing...

[2020-05-28T21:52:12.523Z] Waiting for code changes...

[2020-05-28T21:53:04.012Z] ⏳  Processing...

[2020-05-28T21:53:04.169Z] Waiting for code changes...

[2020-05-28T21:53:04.201Z] ⏳  Processing...

[2020-05-28T21:53:04.228Z] Syncing module sources (17 files)...

[2020-05-28T21:53:04.559Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-28T21:53:04.584Z] Building version v-a35e50b251...

[2020-05-28T21:53:05.058Z] Building frontend:v-a35e50b251...

[2020-05-28T21:53:05.761Z] Building frontend:v-a35e50b251... → Done (took 1.2 sec)

[2020-05-28T21:53:05.788Z] Deploying version v-a35e50b251...

[2020-05-28T21:53:07.665Z] Waiting for resources to be ready...

[2020-05-28T21:53:09.758Z] Resources ready

[2020-05-28T21:53:09.851Z] Deploying version v-a35e50b251... → Done (took 4.1 sec)

[2020-05-28T21:53:09.880Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:53:09.906Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T21:53:09.931Z] Waiting for code changes...

[2020-05-28T21:53:56.851Z] ⏳  Processing...

[2020-05-28T21:53:57.000Z] Waiting for code changes...

[2020-05-28T21:53:57.032Z] ⏳  Processing...

[2020-05-28T21:53:57.058Z] Syncing module sources (17 files)...

[2020-05-28T21:53:57.386Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-28T21:53:57.413Z] Building version v-48a4de9e3c...

[2020-05-28T21:53:57.884Z] Building frontend:v-48a4de9e3c...

[2020-05-28T21:53:58.481Z] Building frontend:v-48a4de9e3c... → Done (took 1.1 sec)

[2020-05-28T21:53:58.507Z] Deploying version v-48a4de9e3c...

[2020-05-28T21:54:01.202Z] Waiting for resources to be ready...

[2020-05-28T21:54:03.251Z] Resources ready

[2020-05-28T21:54:03.341Z] Deploying version v-48a4de9e3c... → Done (took 4.8 sec)

[2020-05-28T21:54:03.369Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:54:03.395Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T21:54:03.421Z] Waiting for code changes...

[2020-05-28T21:54:27.184Z] ⏳  Processing...

[2020-05-28T21:54:27.336Z] Waiting for code changes...

[2020-05-28T21:54:27.369Z] ⏳  Processing...

[2020-05-28T21:54:27.397Z] Syncing module sources (17 files)...

[2020-05-28T21:54:27.719Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-28T21:54:27.747Z] Building version v-bc6f3e10f4...

[2020-05-28T21:54:28.248Z] Building frontend:v-bc6f3e10f4...

[2020-05-28T21:54:28.894Z] Building frontend:v-bc6f3e10f4... → Done (took 1.1 sec)

[2020-05-28T21:54:28.920Z] Deploying version v-bc6f3e10f4...

[2020-05-28T21:54:30.773Z] Waiting for resources to be ready...

[2020-05-28T21:54:32.837Z] Resources ready

[2020-05-28T21:54:32.904Z] Deploying version v-bc6f3e10f4... → Done (took 4 sec)

[2020-05-28T21:54:32.930Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:54:32.957Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T21:54:32.983Z] Waiting for code changes...

[2020-05-28T21:54:59.933Z] ⏳  Processing...

[2020-05-28T21:55:00.101Z] Waiting for code changes...

[2020-05-28T21:55:00.133Z] ⏳  Processing...

[2020-05-28T21:55:00.164Z] Syncing module sources (17 files)...

[2020-05-28T21:55:00.484Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-28T21:55:00.512Z] Building version v-7a0130a416...

[2020-05-28T21:55:00.973Z] Building frontend:v-7a0130a416...

[2020-05-28T21:55:01.623Z] Building frontend:v-7a0130a416... → Done (took 1.1 sec)

[2020-05-28T21:55:01.653Z] Deploying version v-7a0130a416...

[2020-05-28T21:55:03.536Z] Waiting for resources to be ready...

[2020-05-28T21:55:05.579Z] Resources ready

[2020-05-28T21:55:05.643Z] Deploying version v-7a0130a416... → Done (took 4 sec)

[2020-05-28T21:55:05.671Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:55:05.713Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T21:55:05.752Z] Waiting for code changes...

[2020-05-28T21:55:26.000Z] ⏳  Processing...

[2020-05-28T21:55:26.154Z] Waiting for code changes...

[2020-05-28T21:55:26.187Z] ⏳  Processing...

[2020-05-28T21:55:26.216Z] Syncing module sources (17 files)...

[2020-05-28T21:55:26.543Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-28T21:55:26.573Z] Building version v-6378d30c70...

[2020-05-28T21:55:27.028Z] Building frontend:v-6378d30c70...

[2020-05-28T21:55:27.652Z] Building frontend:v-6378d30c70... → Done (took 1.1 sec)

[2020-05-28T21:55:27.680Z] Deploying version v-6378d30c70...

[2020-05-28T21:55:29.543Z] Waiting for resources to be ready...

[2020-05-28T21:55:31.588Z] Resources ready

[2020-05-28T21:55:31.676Z] Deploying version v-6378d30c70... → Done (took 4 sec)

[2020-05-28T21:55:31.708Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:55:31.735Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T21:55:31.767Z] Waiting for code changes...

[2020-05-28T21:55:38.787Z] ⏳  Processing...

[2020-05-28T21:55:38.923Z] Waiting for code changes...

[2020-05-28T21:55:38.956Z] ⏳  Processing...

[2020-05-28T21:55:38.984Z] Syncing module sources (17 files)...

[2020-05-28T21:55:39.313Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-28T21:55:39.343Z] Building version v-9b4f006881...

[2020-05-28T21:55:39.809Z] Building frontend:v-9b4f006881...

[2020-05-28T21:55:40.591Z] Building frontend:v-9b4f006881... → Done (took 1.2 sec)

[2020-05-28T21:55:40.621Z] Deploying version v-9b4f006881...

[2020-05-28T21:55:43.684Z] Waiting for resources to be ready...

[2020-05-28T21:55:45.728Z] Resources ready

[2020-05-28T21:55:45.789Z] Deploying version v-9b4f006881... → Done (took 5.2 sec)

[2020-05-28T21:55:45.819Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:55:45.864Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T21:55:45.912Z] Waiting for code changes...

[2020-05-28T21:57:26.895Z] ⏳  Processing...

[2020-05-28T21:57:27.035Z] Waiting for code changes...

[2020-05-28T21:57:27.069Z] ⏳  Processing...

[2020-05-28T21:57:27.100Z] Syncing module sources (17 files)...

[2020-05-28T21:57:27.536Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-28T21:57:27.566Z] Building version v-5d164b3838...

[2020-05-28T21:57:28.024Z] Building frontend:v-5d164b3838...

[2020-05-28T21:57:28.618Z] Building frontend:v-5d164b3838... → Done (took 1.1 sec)

[2020-05-28T21:57:28.648Z] Deploying version v-5d164b3838...

[2020-05-28T21:57:30.516Z] Waiting for resources to be ready...

[2020-05-28T21:57:32.562Z] Resources ready

[2020-05-28T21:57:32.640Z] Deploying version v-5d164b3838... → Done (took 4 sec)

[2020-05-28T21:57:32.669Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:57:32.713Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T21:57:32.752Z] Waiting for code changes...

[2020-05-28T21:57:45.906Z] ⏳  Processing...

[2020-05-28T21:57:46.070Z] Waiting for code changes...

[2020-05-28T21:57:46.106Z] ⏳  Processing...

[2020-05-28T21:57:46.135Z] Syncing module sources (17 files)...

[2020-05-28T21:57:46.463Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-28T21:57:46.493Z] Building version v-a1770141f0...

[2020-05-28T21:57:46.945Z] Building frontend:v-a1770141f0...

[2020-05-28T21:57:47.554Z] Building frontend:v-a1770141f0... → Done (took 1.1 sec)

[2020-05-28T21:57:47.587Z] Deploying version v-a1770141f0...

[2020-05-28T21:57:49.467Z] Waiting for resources to be ready...

[2020-05-28T21:57:51.513Z] Resources ready

[2020-05-28T21:57:51.591Z] Deploying version v-a1770141f0... → Done (took 4 sec)

[2020-05-28T21:57:51.619Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:57:51.647Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T21:57:51.678Z] Waiting for code changes...

[2020-05-28T21:58:11.580Z] ⏳  Processing...

[2020-05-28T21:58:11.736Z] Waiting for code changes...

[2020-05-28T21:58:11.771Z] ⏳  Processing...

[2020-05-28T21:58:11.801Z] Syncing module sources (17 files)...

[2020-05-28T21:58:12.127Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-28T21:58:12.159Z] Building version v-e18c3f5e83...

[2020-05-28T21:58:12.621Z] Building frontend:v-e18c3f5e83...

[2020-05-28T21:58:13.269Z] Building frontend:v-e18c3f5e83... → Done (took 1.1 sec)

[2020-05-28T21:58:13.300Z] Deploying version v-e18c3f5e83...

[2020-05-28T21:58:15.181Z] Waiting for resources to be ready...

[2020-05-28T21:58:17.227Z] Resources ready

[2020-05-28T21:58:17.286Z] Deploying version v-e18c3f5e83... → Done (took 4 sec)

[2020-05-28T21:58:17.320Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T21:58:17.357Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T21:58:17.392Z] Waiting for code changes...

[2020-05-28T22:00:44.875Z] ⏳  Processing...

[2020-05-28T22:00:45.016Z] Waiting for code changes...

[2020-05-28T22:00:45.053Z] ⏳  Processing...

[2020-05-28T22:00:45.084Z] Syncing module sources (17 files)...

[2020-05-28T22:00:45.434Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-28T22:00:45.464Z] Building version v-0b0d723c35...

[2020-05-28T22:00:45.922Z] Building frontend:v-0b0d723c35...

[2020-05-28T22:00:46.671Z] Building frontend:v-0b0d723c35... → Done (took 1.2 sec)

[2020-05-28T22:00:46.702Z] Deploying version v-0b0d723c35...

[2020-05-28T22:00:48.588Z] Waiting for resources to be ready...

[2020-05-28T22:00:50.668Z] Resources ready

[2020-05-28T22:00:50.864Z] Deploying version v-0b0d723c35... → Done (took 4.2 sec)

[2020-05-28T22:00:50.897Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T22:00:50.928Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T22:00:50.959Z] Waiting for code changes...

[2020-05-28T22:02:27.774Z] ⏳  Processing...

[2020-05-28T22:02:27.930Z] Waiting for code changes...

[2020-05-28T22:02:27.967Z] ⏳  Processing...

[2020-05-28T22:02:28.000Z] Syncing module sources (17 files)...

[2020-05-28T22:02:28.330Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-28T22:02:28.361Z] Building version v-05d6901b4c...

[2020-05-28T22:02:28.823Z] Building frontend:v-05d6901b4c...

[2020-05-28T22:02:29.415Z] Building frontend:v-05d6901b4c... → Done (took 1.1 sec)

[2020-05-28T22:02:29.447Z] Deploying version v-05d6901b4c...

[2020-05-28T22:02:31.327Z] Waiting for resources to be ready...

[2020-05-28T22:02:33.370Z] Resources ready

[2020-05-28T22:02:33.424Z] Deploying version v-05d6901b4c... → Done (took 4 sec)

[2020-05-28T22:02:33.458Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T22:02:33.504Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T22:02:33.545Z] Waiting for code changes...

[2020-05-28T22:02:48.986Z] ⏳  Processing...

[2020-05-28T22:02:49.142Z] Waiting for code changes...

[2020-05-28T22:02:49.180Z] ⏳  Processing...

[2020-05-28T22:02:49.213Z] Syncing module sources (7 files)...

[2020-05-28T22:02:49.315Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T22:02:49.347Z] Building version v-39eb827a01...

[2020-05-28T22:02:49.803Z] Building backend:v-39eb827a01...

[2020-05-28T22:02:50.077Z] Building backend:v-39eb827a01... → Done (took 0.7 sec)

[2020-05-28T22:02:50.109Z] Deploying version v-39eb827a01...

[2020-05-28T22:02:51.953Z] Waiting for resources to be ready...

[2020-05-28T22:02:54.005Z] Resources ready

[2020-05-28T22:02:54.065Z] Deploying version v-39eb827a01... → Done (took 4 sec)

[2020-05-28T22:02:54.098Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T22:02:54.131Z] → Forward: http://127.0.0.1:8080 → backend:8080 (interface)

[2020-05-28T22:02:54.165Z] Deploying version v-05d6901b4c...

[2020-05-28T22:02:55.865Z] Waiting for resources to be ready...

[2020-05-28T22:02:57.917Z] Resources ready

[2020-05-28T22:02:57.973Z] Deploying version v-05d6901b4c... → Done (took 3.8 sec)

[2020-05-28T22:02:58.004Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T22:02:58.037Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T22:02:58.069Z] Waiting for code changes...

[2020-05-28T22:03:11.792Z] Getting status...

[2020-05-28T22:03:14.910Z] Getting status... → Done

[2020-05-28T22:03:15.536Z] ⏳  Processing...

[2020-05-28T22:03:15.543Z] Syncing module sources (7 files)...

[2020-05-28T22:03:15.545Z] Syncing module sources (17 files)...

[2020-05-28T22:03:15.612Z] Syncing module sources (7 files)... → Done (took 0.1 sec)

[2020-05-28T22:03:15.616Z] Getting build status for v-39eb827a01...

[2020-05-28T22:03:15.989Z] Getting build status for v-f853fcb9f9...

[2020-05-28T22:03:15.993Z] Getting build status for v-f853fcb9f9... → Done (took 0 sec)

[2020-05-28T22:03:15.996Z] Deploying version v-f853fcb9f9...

[2020-05-28T22:03:15.999Z] Deploying version v-f853fcb9f9... → Already deployed

[2020-05-28T22:03:16.001Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-28T22:03:16.004Z] Getting build status for v-05d6901b4c...

[2020-05-28T22:03:16.030Z] → Forward: postgres://127.0.0.1:5432 → postgres:5432 (postgres)

[2020-05-28T22:03:16.375Z] Getting build status for v-39eb827a01... → Done (took 0.8 sec)

[2020-05-28T22:03:16.379Z] Deploying version v-39eb827a01...

[2020-05-28T22:03:16.383Z] Deploying version v-39eb827a01... → Already deployed

[2020-05-28T22:03:16.387Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T22:03:16.394Z] → Forward: http://127.0.0.1:8080 → backend:8080 (interface)

[2020-05-28T22:03:16.418Z] Getting build status for v-05d6901b4c... → Done (took 0.4 sec)

[2020-05-28T22:03:16.422Z] Deploying version v-05d6901b4c...

[2020-05-28T22:03:16.427Z] Deploying version v-05d6901b4c... → Already deployed

[2020-05-28T22:03:16.430Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-28T22:03:16.436Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-28T22:03:16.440Z] ⏳  Processing...

[2020-05-28T22:03:16.496Z] Waiting for code changes...
