
[2020-05-26T20:15:49.446Z] Thanks for installing Garden! We work hard to provide you with the best experience we can. We collect some anonymized usage data while you use Garden. If you'd like to know more about what we collect or if you'd like to opt out of telemetry, please read more at https://github.com/garden-io/garden/tree/v0.11.14/README.md#Analytics

[2020-05-26T20:15:49.452Z] Getting status...

[2020-05-26T20:15:49.722Z] Fetching kubectl...

[2020-05-26T20:15:59.043Z] Fetched kubectl

[2020-05-26T20:16:01.618Z] Fetching helm2...

[2020-05-26T20:16:14.468Z] Fetched helm2

[2020-05-26T20:16:15.110Z] Getting status... → Done

[2020-05-26T20:16:15.885Z] modules: []


[2020-05-26T20:17:12.115Z] Getting status...

[2020-05-26T20:17:15.227Z] Getting status... → Done

[2020-05-26T20:17:15.729Z] modules:
  - allowPublish: true
    apiVersion: garden.io/v0
    build:
      dependencies: []
    buildDependencies: {}
    buildMetadataPath: /Users/emilwils/Documents/node-microservice/.garden/build-metadata/client
    buildPath: /Users/emilwils/Documents/node-microservice/.garden/build/client
    compatibleTypes:
      - container
    configPath: /Users/emilwils/Documents/node-microservice/client/garden.yml
    description: Frontend container
    disabled: false
    include: []
    kind: Module
    name: client
    needsBuild: true
    outputs:
      deployment-image-name: client
      local-image-name: client
    path: /Users/emilwils/Documents/node-microservice/client
    serviceConfigs: []
    serviceDependencyNames: []
    taskConfigs: []
    taskDependencyNames: []
    testConfigs: []
    type: container
    version:
      dependencyVersions: {}
      files: []
      versionString: v-92b31cbaad


[2020-05-26T20:32:44.248Z] Getting status...

[2020-05-26T20:32:47.422Z] Getting status... → Done

[2020-05-26T20:32:47.932Z] Error: Module client neither specifies image nor provides Dockerfile
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
Error Details:
spec:
  services: []
  build:
    dependencies: []
    timeout: 1200
  buildArgs: {}
  tests: []
  tasks: []


[2020-05-26T20:32:48.862Z] Getting build status for v-4f04a66d1e...

[2020-05-26T20:32:48.867Z] Getting build status for v-4f04a66d1e... → Done (took 0 sec)

[2020-05-26T20:32:48.874Z] Error: 1 deploy task(s) failed!
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at Generator.next (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at new Promise (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at Object.handleProcessResults (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at DeployCommand.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
Error Details:
results:
  taskResults:
    get-service-status.frontend:
      type: get-service-status
      description: getting status for service 'frontend' (from module 'client')
      key: get-service-status.frontend
      name: frontend
      error:
        detail:
          spec:
            services:
              - name: frontend
                ports:
                  - name: http
                    containerPort: 8080
                    protocol: TCP
                    servicePort: 8080
                dependencies: []
                disabled: false
                annotations: {}
                daemon: false
                ingresses: []
                env: {}
                limits:
                  cpu: 1000
                  memory: 1024
                volumes: []
            build:
              dependencies: []
              timeout: 1200
            buildArgs: {}
            tests: []
            tasks: []
        type: configuration
      completedAt: '2020-05-26T20:32:47.929Z'
      batchId: 2ccfa90c-d5ce-4aa2-8bad-9a7cb8ea015f
    stage-build.client:
      type: stage-build
      key: stage-build.client
      name: client
      description: staging build for client
      completedAt: '2020-05-26T20:32:48.860Z'
      batchId: 2ccfa90c-d5ce-4aa2-8bad-9a7cb8ea015f
      output: {}
      dependencyResults: {}
    build.client:
      type: build
      key: build.client
      name: client
      description: building client
      completedAt: '2020-05-26T20:32:48.867Z'
      batchId: 2ccfa90c-d5ce-4aa2-8bad-9a7cb8ea015f
      output:
        fresh: false
      dependencyResults:
        stage-build.client:
          type: stage-build
          key: stage-build.client
          name: client
          description: staging build for client
          completedAt: '2020-05-26T20:32:48.860Z'
          batchId: 2ccfa90c-d5ce-4aa2-8bad-9a7cb8ea015f
          output: {}
          dependencyResults: {}
  restartRequired: false


[2020-05-26T20:32:48.876Z] 
See error.log for detailed error message

[2020-05-26T20:33:31.279Z] Getting status...

[2020-05-26T20:33:34.374Z] Getting status... → Done

[2020-05-26T20:33:34.904Z] Syncing module sources (5 files)...

[2020-05-26T20:33:34.952Z] Syncing module sources (5 files)... → Done (took 0 sec)

[2020-05-26T20:33:34.955Z] Getting build status for v-baa629c081...

[2020-05-26T20:33:35.447Z] Building version v-baa629c081...

[2020-05-26T20:33:35.513Z] Building server:v-baa629c081...

[2020-05-26T20:33:35.763Z] Building server:v-baa629c081... → Done (took 0.8 sec)

[2020-05-26T20:33:35.765Z] Deploying version v-baa629c081...

[2020-05-26T20:33:38.001Z] Waiting for resources to be ready...

[2020-05-26T20:33:40.064Z] Deploying version v-baa629c081...

[2020-05-26T20:33:40.077Z] Error: Error deploying backend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment backend-v-baa629c081: ScalingReplicaSet - Scaled up replica set backend-v-baa629c081-7c76d4d5d6 to 1
Pod backend-v-baa629c081-7c76d4d5d6-ltx26: Scheduled - Successfully assigned node-microservice/backend-v-baa629c081-7c76d4d5d6-ltx26 to minikube
Pod backend-v-baa629c081-7c76d4d5d6-ltx26: Pulled - Container image "server:v-baa629c081" already present on machine
Pod backend-v-baa629c081-7c76d4d5d6-ltx26: Created - Created container backend
Pod backend-v-baa629c081-7c76d4d5d6-ltx26: Started - Started container backend
Pod backend-v-baa629c081-7c76d4d5d6-ltx26: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-baa629c081

****** backend-v-baa629c081-7c76d4d5d6-ltx26 ******
------ backend ------    at Handshake.ErrorPacket (/usr/src/app/node_modules/mysql/lib/protocol/sequences/Handshake.js:123:18)
    at Protocol._parsePacket (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/src/app/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/src/app/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/src/app/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/src/app/node_modules/mysql/lib/Connection.js:526:10)
    at emitOne (events.js:96:13)
    at Socket.emit (events.js:191:7)
    --------------------
    at Protocol._enqueue (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/app/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/app/app.js:11:6)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.runMain (module.js:605:10)

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-baa629c081:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-baa629c081-7c76d4d5d6 to 1\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-baa629c081-7c76d4d5d6-ltx26 to minikube\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mPulled - Container image \"server:v-baa629c081\" already present on machine\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-baa629c081\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-baa629c081-7c76d4d5d6-ltx26 ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m    at Handshake.ErrorPacket (/usr/src/app/node_modules/mysql/lib/protocol/sequences/Handshake.js:123:18)\n    at Protocol._parsePacket (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:291:23)\n    at Parser._parsePacket (/usr/src/app/node_modules/mysql/lib/protocol/Parser.js:433:10)\n    at Parser.write (/usr/src/app/node_modules/mysql/lib/protocol/Parser.js:43:10)\n    at Protocol.write (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:38:16)\n    at Socket.<anonymous> (/usr/src/app/node_modules/mysql/lib/Connection.js:88:28)\n    at Socket.<anonymous> (/usr/src/app/node_modules/mysql/lib/Connection.js:526:10)\n    at emitOne (events.js:96:13)\n    at Socket.emit (events.js:191:7)\n    --------------------\n    at Protocol._enqueue (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/app/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/app/app.js:11:6)\n    at Module._compile (module.js:571:32)\n    at Object.Module._extensions..js (module.js:580:10)\n    at Module.load (module.js:488:32)\n    at tryModuleLoad (module.js:447:12)\n    at Function.Module._load (module.js:439:3)\n    at Module.runMain (module.js:605:10)\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-baa629c081
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-baa629c081
      uid: 645152cc-746c-43b2-99a5-1fa7e2326807
      resourceVersion: '9475'
      generation: 1
      creationTimestamp: '2020-05-26T20:33:36Z'
      labels:
        garden.io/version: v-baa629c081
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 3c12647ed6cf2ce40fd9565408fb8a88dac39f9ce12a70f14dac556b705d49de
        garden.io/version: v-baa629c081
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"3c12647ed6cf2ce40fd9565408fb8a88dac39f9ce12a70f14dac556b705d49de","garden.io/version":"v-baa629c081"},"labels":{"garden.io/version":"v-baa629c081","module":"server","service":"backend"},"name":"backend-v-baa629c081","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-baa629c081","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-baa629c081","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-baa629c081"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-baa629c081\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-baa629c081","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-baa629c081
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-baa629c081
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-26T20:33:40.106Z] Error: 1 deploy task(s) failed!
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at Generator.next (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at new Promise (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at Object.handleProcessResults (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at DeployCommand.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
Error Details:
results:
  taskResults:
    get-service-status.backend:
      type: get-service-status
      key: get-service-status.backend
      name: backend
      description: getting status for service 'backend' (from module 'server')
      completedAt: '2020-05-26T20:33:34.927Z'
      batchId: 5a8d58de-810f-4386-a55a-376be743740c
      output:
        forwardablePorts: []
        ingresses: []
        state: missing
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: backend-v-baa629c081
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-baa629c081
              namespace: node-microservice
              labels:
                module: server
                service: backend
                garden.io/version: v-baa629c081
            spec:
              selector:
                matchLabels:
                  service: backend
                  garden.io/version: v-baa629c081
              template:
                metadata:
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-baa629c081
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults: {}
    stage-build.server:
      type: stage-build
      key: stage-build.server
      name: server
      description: staging build for server
      completedAt: '2020-05-26T20:33:34.952Z'
      batchId: 5a8d58de-810f-4386-a55a-376be743740c
      output: {}
      dependencyResults: {}
    build.server:
      type: build
      key: build.server
      name: server
      description: building server
      completedAt: '2020-05-26T20:33:35.763Z'
      batchId: 5a8d58de-810f-4386-a55a-376be743740c
      output:
        fresh: true
        buildLog: "Sending build context to Docker daemon  23.04kB\r\r\nStep 1/7 : FROM node:7\n ---> d9aed20b68a4\nStep 2/7 : WORKDIR /usr/src/app\n ---> Using cache\n ---> 21cdbe2a105b\nStep 3/7 : COPY package*.json ./\n ---> Using cache\n ---> a62b8c8cb2ae\nStep 4/7 : RUN npm install\n ---> Using cache\n ---> de507c110ed0\nStep 5/7 : COPY . .\n ---> Using cache\n ---> 70db9dff2d2c\nStep 6/7 : EXPOSE 8080\n ---> Using cache\n ---> 96f746d33ffa\nStep 7/7 : CMD [\"node\", \"app.js\"]\n ---> Using cache\n ---> 49f15a49a7ec\nSuccessfully built 49f15a49a7ec\nSuccessfully tagged server:v-baa629c081\n"
        details:
          identifier: 'server:v-baa629c081'
      dependencyResults:
        stage-build.server:
          type: stage-build
          key: stage-build.server
          name: server
          description: staging build for server
          completedAt: '2020-05-26T20:33:34.952Z'
          batchId: 5a8d58de-810f-4386-a55a-376be743740c
          output: {}
          dependencyResults: {}
    deploy.backend:
      type: deploy
      description: deploying service 'backend' (from module 'server')
      key: deploy.backend
      name: backend
      error:
        detail:
          serviceName: backend
          status:
            state: unhealthy
            lastMessage: BackOff - Back-off restarting failed container
            logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-baa629c081:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-baa629c081-7c76d4d5d6 to 1\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-baa629c081-7c76d4d5d6-ltx26 to minikube\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mPulled - Container image \"server:v-baa629c081\" already present on machine\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-baa629c081\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-baa629c081-7c76d4d5d6-ltx26 ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m    at Handshake.ErrorPacket (/usr/src/app/node_modules/mysql/lib/protocol/sequences/Handshake.js:123:18)\n    at Protocol._parsePacket (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:291:23)\n    at Parser._parsePacket (/usr/src/app/node_modules/mysql/lib/protocol/Parser.js:433:10)\n    at Parser.write (/usr/src/app/node_modules/mysql/lib/protocol/Parser.js:43:10)\n    at Protocol.write (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:38:16)\n    at Socket.<anonymous> (/usr/src/app/node_modules/mysql/lib/Connection.js:88:28)\n    at Socket.<anonymous> (/usr/src/app/node_modules/mysql/lib/Connection.js:526:10)\n    at emitOne (events.js:96:13)\n    at Socket.emit (events.js:191:7)\n    --------------------\n    at Protocol._enqueue (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/app/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/app/app.js:11:6)\n    at Module._compile (module.js:571:32)\n    at Object.Module._extensions..js (module.js:580:10)\n    at Module.load (module.js:488:32)\n    at tryModuleLoad (module.js:447:12)\n    at Function.Module._load (module.js:439:3)\n    at Module.runMain (module.js:605:10)\n"
            resource:
              kind: Deployment
              apiVersion: apps/v1
              metadata:
                name: backend-v-baa629c081
                namespace: node-microservice
                selfLink: >-
                  /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-baa629c081
                uid: 645152cc-746c-43b2-99a5-1fa7e2326807
                resourceVersion: '9475'
                generation: 1
                creationTimestamp: '2020-05-26T20:33:36Z'
                labels:
                  garden.io/version: v-baa629c081
                  module: server
                  service: backend
                annotations:
                  deployment.kubernetes.io/revision: '1'
                  garden.io/configured.replicas: '1'
                  garden.io/generated: 'true'
                  garden.io/manifest-hash: >-
                    3c12647ed6cf2ce40fd9565408fb8a88dac39f9ce12a70f14dac556b705d49de
                  garden.io/version: v-baa629c081
                  kubectl.kubernetes.io/last-applied-configuration: >
                    {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"3c12647ed6cf2ce40fd9565408fb8a88dac39f9ce12a70f14dac556b705d49de","garden.io/version":"v-baa629c081"},"labels":{"garden.io/version":"v-baa629c081","module":"server","service":"backend"},"name":"backend-v-baa629c081","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-baa629c081","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-baa629c081","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-baa629c081"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-baa629c081\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-baa629c081","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
                managedFields:
                  - manager: kube-controller-manager
                    operation: Update
                    apiVersion: apps/v1
                    time: '2020-05-26T20:33:36Z'
                    fieldsType: FieldsV1
                    fieldsV1:
                      'f:metadata':
                        'f:annotations':
                          'f:deployment.kubernetes.io/revision': {}
                      'f:status':
                        'f:conditions':
                          .: {}
                          'k:{"type":"Available"}':
                            .: {}
                            'f:lastTransitionTime': {}
                            'f:lastUpdateTime': {}
                            'f:message': {}
                            'f:reason': {}
                            'f:status': {}
                            'f:type': {}
                          'k:{"type":"Progressing"}':
                            .: {}
                            'f:lastTransitionTime': {}
                            'f:lastUpdateTime': {}
                            'f:message': {}
                            'f:reason': {}
                            'f:status': {}
                            'f:type': {}
                        'f:observedGeneration': {}
                        'f:replicas': {}
                        'f:unavailableReplicas': {}
                        'f:updatedReplicas': {}
                  - manager: kubectl
                    operation: Update
                    apiVersion: apps/v1
                    time: '2020-05-26T20:33:36Z'
                    fieldsType: FieldsV1
                    fieldsV1:
                      'f:metadata':
                        'f:annotations':
                          .: {}
                          'f:garden.io/configured.replicas': {}
                          'f:garden.io/generated': {}
                          'f:garden.io/manifest-hash': {}
                          'f:garden.io/version': {}
                          'f:kubectl.kubernetes.io/last-applied-configuration': {}
                        'f:labels':
                          .: {}
                          'f:garden.io/version': {}
                          'f:module': {}
                          'f:service': {}
                      'f:spec':
                        'f:progressDeadlineSeconds': {}
                        'f:replicas': {}
                        'f:revisionHistoryLimit': {}
                        'f:selector':
                          'f:matchLabels':
                            .: {}
                            'f:garden.io/version': {}
                            'f:service': {}
                        'f:strategy':
                          'f:rollingUpdate':
                            .: {}
                            'f:maxSurge': {}
                            'f:maxUnavailable': {}
                          'f:type': {}
                        'f:template':
                          'f:metadata':
                            'f:labels':
                              .: {}
                              'f:garden.io/version': {}
                              'f:module': {}
                              'f:service': {}
                          'f:spec':
                            'f:containers':
                              'k:{"name":"backend"}':
                                .: {}
                                'f:env':
                                  .: {}
                                  'k:{"name":"GARDEN_DEPENDENCIES"}':
                                    .: {}
                                    'f:name': {}
                                    'f:value': {}
                                  'k:{"name":"GARDEN_VERSION"}':
                                    .: {}
                                    'f:name': {}
                                    'f:value': {}
                                  'k:{"name":"POD_HOST_IP"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_IP"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NAME"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NAMESPACE"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NODE_NAME"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_SERVICE_ACCOUNT"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_UID"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                'f:image': {}
                                'f:imagePullPolicy': {}
                                'f:name': {}
                                'f:ports':
                                  .: {}
                                  'k:{"containerPort":8080,"protocol":"TCP"}':
                                    .: {}
                                    'f:containerPort': {}
                                    'f:name': {}
                                    'f:protocol': {}
                                'f:resources':
                                  .: {}
                                  'f:limits':
                                    .: {}
                                    'f:cpu': {}
                                    'f:memory': {}
                                  'f:requests':
                                    .: {}
                                    'f:cpu': {}
                                    'f:memory': {}
                                'f:securityContext':
                                  .: {}
                                  'f:allowPrivilegeEscalation': {}
                                'f:terminationMessagePath': {}
                                'f:terminationMessagePolicy': {}
                            'f:dnsPolicy': {}
                            'f:restartPolicy': {}
                            'f:schedulerName': {}
                            'f:securityContext': {}
                            'f:terminationGracePeriodSeconds': {}
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    garden.io/version: v-baa629c081
                    service: backend
                template:
                  metadata:
                    creationTimestamp: null
                    labels:
                      garden.io/version: v-baa629c081
                      module: server
                      service: backend
                  spec:
                    containers:
                      - name: backend
                        image: 'server:v-baa629c081'
                        ports:
                          - name: http
                            containerPort: 8080
                            protocol: TCP
                        env:
                          - name: GARDEN_VERSION
                            value: v-baa629c081
                          - name: GARDEN_DEPENDENCIES
                            value: >-
                              [{"moduleName":"server","name":"server","type":"build","version":"v-baa629c081"}]
                          - name: POD_HOST_IP
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: status.hostIP
                          - name: POD_IP
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: status.podIP
                          - name: POD_NAME
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.name
                          - name: POD_NAMESPACE
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.namespace
                          - name: POD_NODE_NAME
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: spec.nodeName
                          - name: POD_SERVICE_ACCOUNT
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: spec.serviceAccountName
                          - name: POD_UID
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.uid
                        resources:
                          limits:
                            cpu: '1'
                            memory: 1Gi
                          requests:
                            cpu: 10m
                            memory: 64Mi
                        terminationMessagePath: /dev/termination-log
                        terminationMessagePolicy: File
                        imagePullPolicy: IfNotPresent
                        securityContext:
                          allowPrivilegeEscalation: false
                    restartPolicy: Always
                    terminationGracePeriodSeconds: 5
                    dnsPolicy: ClusterFirst
                    securityContext: {}
                    schedulerName: default-scheduler
                strategy:
                  type: RollingUpdate
                  rollingUpdate:
                    maxUnavailable: 1
                    maxSurge: 1
                revisionHistoryLimit: 3
                progressDeadlineSeconds: 600
              status:
                observedGeneration: 1
                replicas: 1
                updatedReplicas: 1
                unavailableReplicas: 1
                conditions:
                  - type: Available
                    status: 'True'
                    lastUpdateTime: '2020-05-26T20:33:36Z'
                    lastTransitionTime: '2020-05-26T20:33:36Z'
                    reason: MinimumReplicasAvailable
                    message: Deployment has minimum availability.
                  - type: Progressing
                    status: 'True'
                    lastUpdateTime: '2020-05-26T20:33:36Z'
                    lastTransitionTime: '2020-05-26T20:33:36Z'
                    reason: ReplicaSetUpdated
                    message: >-
                      ReplicaSet "backend-v-baa629c081-7c76d4d5d6" is
                      progressing.
        type: deployment
      completedAt: '2020-05-26T20:33:40.064Z'
      batchId: 5a8d58de-810f-4386-a55a-376be743740c
  restartRequired: false


[2020-05-26T20:33:40.115Z] 
See error.log for detailed error message

[2020-05-26T20:35:03.153Z] Getting status...

[2020-05-26T20:35:06.236Z] Getting status... → Done

[2020-05-26T20:35:06.772Z] Syncing module sources (5 files)...

[2020-05-26T20:35:06.801Z] Syncing module sources (5 files)... → Done (took 0 sec)

[2020-05-26T20:35:06.804Z] Getting build status for v-baa629c081...

[2020-05-26T20:35:07.288Z] Getting build status for v-baa629c081... → Done (took 0.5 sec)

[2020-05-26T20:35:07.290Z] Deploying version v-baa629c081...

[2020-05-26T20:35:08.662Z] Waiting for resources to be ready...

[2020-05-26T20:35:10.727Z] Deploying version v-baa629c081...

[2020-05-26T20:35:10.742Z] Error: Error deploying backend: CrashLoopBackOff - back-off 40s restarting failed container=backend pod=backend-v-baa629c081-7c76d4d5d6-ltx26_node-microservice(9d11b487-c2f6-49f4-a025-c6d806cccc41)

━━━ Events ━━━
Deployment backend-v-baa629c081: ScalingReplicaSet - Scaled up replica set backend-v-baa629c081-7c76d4d5d6 to 1
Pod backend-v-baa629c081-7c76d4d5d6-ltx26: Scheduled - Successfully assigned node-microservice/backend-v-baa629c081-7c76d4d5d6-ltx26 to minikube
Pod backend-v-baa629c081-7c76d4d5d6-ltx26: Pulled - Container image "server:v-baa629c081" already present on machine
Pod backend-v-baa629c081-7c76d4d5d6-ltx26: Created - Created container backend
Pod backend-v-baa629c081-7c76d4d5d6-ltx26: Started - Started container backend
Pod backend-v-baa629c081-7c76d4d5d6-ltx26: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-baa629c081

****** backend-v-baa629c081-7c76d4d5d6-ltx26 ******
------ backend ------    at Handshake.ErrorPacket (/usr/src/app/node_modules/mysql/lib/protocol/sequences/Handshake.js:123:18)
    at Protocol._parsePacket (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:291:23)
    at Parser._parsePacket (/usr/src/app/node_modules/mysql/lib/protocol/Parser.js:433:10)
    at Parser.write (/usr/src/app/node_modules/mysql/lib/protocol/Parser.js:43:10)
    at Protocol.write (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:38:16)
    at Socket.<anonymous> (/usr/src/app/node_modules/mysql/lib/Connection.js:88:28)
    at Socket.<anonymous> (/usr/src/app/node_modules/mysql/lib/Connection.js:526:10)
    at emitOne (events.js:96:13)
    at Socket.emit (events.js:191:7)
    --------------------
    at Protocol._enqueue (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/app/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/app/app.js:11:6)
    at Module._compile (module.js:571:32)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:488:32)
    at tryModuleLoad (module.js:447:12)
    at Function.Module._load (module.js:439:3)
    at Module.runMain (module.js:605:10)

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 40s restarting failed container=backend
    pod=backend-v-baa629c081-7c76d4d5d6-ltx26_node-microservice(9d11b487-c2f6-49f4-a025-c6d806cccc41)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-baa629c081:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-baa629c081-7c76d4d5d6 to 1\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-baa629c081-7c76d4d5d6-ltx26 to minikube\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mPulled - Container image \"server:v-baa629c081\" already present on machine\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-baa629c081\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-baa629c081-7c76d4d5d6-ltx26 ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m    at Handshake.ErrorPacket (/usr/src/app/node_modules/mysql/lib/protocol/sequences/Handshake.js:123:18)\n    at Protocol._parsePacket (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:291:23)\n    at Parser._parsePacket (/usr/src/app/node_modules/mysql/lib/protocol/Parser.js:433:10)\n    at Parser.write (/usr/src/app/node_modules/mysql/lib/protocol/Parser.js:43:10)\n    at Protocol.write (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:38:16)\n    at Socket.<anonymous> (/usr/src/app/node_modules/mysql/lib/Connection.js:88:28)\n    at Socket.<anonymous> (/usr/src/app/node_modules/mysql/lib/Connection.js:526:10)\n    at emitOne (events.js:96:13)\n    at Socket.emit (events.js:191:7)\n    --------------------\n    at Protocol._enqueue (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/app/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/app/app.js:11:6)\n    at Module._compile (module.js:571:32)\n    at Object.Module._extensions..js (module.js:580:10)\n    at Module.load (module.js:488:32)\n    at tryModuleLoad (module.js:447:12)\n    at Function.Module._load (module.js:439:3)\n    at Module.runMain (module.js:605:10)\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-baa629c081
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-baa629c081
      uid: 645152cc-746c-43b2-99a5-1fa7e2326807
      resourceVersion: '9547'
      generation: 1
      creationTimestamp: '2020-05-26T20:33:36Z'
      labels:
        garden.io/version: v-baa629c081
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 3c12647ed6cf2ce40fd9565408fb8a88dac39f9ce12a70f14dac556b705d49de
        garden.io/version: v-baa629c081
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"3c12647ed6cf2ce40fd9565408fb8a88dac39f9ce12a70f14dac556b705d49de","garden.io/version":"v-baa629c081"},"labels":{"garden.io/version":"v-baa629c081","module":"server","service":"backend"},"name":"backend-v-baa629c081","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-baa629c081","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-baa629c081","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-baa629c081"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-baa629c081\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-baa629c081","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-baa629c081
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-baa629c081
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-26T20:35:10.771Z] Error: 1 deploy task(s) failed!
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at Generator.next (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at new Promise (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at Object.handleProcessResults (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at DeployCommand.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
Error Details:
results:
  taskResults:
    stage-build.server:
      type: stage-build
      key: stage-build.server
      name: server
      description: staging build for server
      completedAt: '2020-05-26T20:35:06.802Z'
      batchId: 5904eeb0-35b9-4a64-a928-b93af2bc8a9f
      output: {}
      dependencyResults: {}
    get-service-status.backend:
      type: get-service-status
      key: get-service-status.backend
      name: backend
      description: getting status for service 'backend' (from module 'server')
      completedAt: '2020-05-26T20:35:07.243Z'
      batchId: 5904eeb0-35b9-4a64-a928-b93af2bc8a9f
      output:
        forwardablePorts: []
        ingresses: []
        state: unhealthy
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: backend-v-baa629c081
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-baa629c081
              namespace: node-microservice
              labels:
                module: server
                service: backend
                garden.io/version: v-baa629c081
            spec:
              selector:
                matchLabels:
                  service: backend
                  garden.io/version: v-baa629c081
              template:
                metadata:
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-baa629c081
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults: {}
    build.server:
      type: build
      key: build.server
      name: server
      description: building server
      completedAt: '2020-05-26T20:35:07.288Z'
      batchId: 5904eeb0-35b9-4a64-a928-b93af2bc8a9f
      output:
        fresh: false
      dependencyResults:
        stage-build.server:
          type: stage-build
          key: stage-build.server
          name: server
          description: staging build for server
          completedAt: '2020-05-26T20:35:06.802Z'
          batchId: 5904eeb0-35b9-4a64-a928-b93af2bc8a9f
          output: {}
          dependencyResults: {}
    deploy.backend:
      type: deploy
      description: deploying service 'backend' (from module 'server')
      key: deploy.backend
      name: backend
      error:
        detail:
          serviceName: backend
          status:
            state: unhealthy
            lastMessage: >-
              CrashLoopBackOff - back-off 40s restarting failed
              container=backend
              pod=backend-v-baa629c081-7c76d4d5d6-ltx26_node-microservice(9d11b487-c2f6-49f4-a025-c6d806cccc41)
            logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment backend-v-baa629c081:\e[39m \e[37mScalingReplicaSet - Scaled up replica set backend-v-baa629c081-7c76d4d5d6 to 1\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mScheduled - Successfully assigned node-microservice/backend-v-baa629c081-7c76d4d5d6-ltx26 to minikube\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mPulled - Container image \"server:v-baa629c081\" already present on machine\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-baa629c081-7c76d4d5d6-ltx26:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-baa629c081\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-baa629c081-7c76d4d5d6-ltx26 ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39m    at Handshake.ErrorPacket (/usr/src/app/node_modules/mysql/lib/protocol/sequences/Handshake.js:123:18)\n    at Protocol._parsePacket (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:291:23)\n    at Parser._parsePacket (/usr/src/app/node_modules/mysql/lib/protocol/Parser.js:433:10)\n    at Parser.write (/usr/src/app/node_modules/mysql/lib/protocol/Parser.js:43:10)\n    at Protocol.write (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:38:16)\n    at Socket.<anonymous> (/usr/src/app/node_modules/mysql/lib/Connection.js:88:28)\n    at Socket.<anonymous> (/usr/src/app/node_modules/mysql/lib/Connection.js:526:10)\n    at emitOne (events.js:96:13)\n    at Socket.emit (events.js:191:7)\n    --------------------\n    at Protocol._enqueue (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/app/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/app/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/app/app.js:11:6)\n    at Module._compile (module.js:571:32)\n    at Object.Module._extensions..js (module.js:580:10)\n    at Module.load (module.js:488:32)\n    at tryModuleLoad (module.js:447:12)\n    at Function.Module._load (module.js:439:3)\n    at Module.runMain (module.js:605:10)\n"
            resource:
              kind: Deployment
              apiVersion: apps/v1
              metadata:
                name: backend-v-baa629c081
                namespace: node-microservice
                selfLink: >-
                  /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-baa629c081
                uid: 645152cc-746c-43b2-99a5-1fa7e2326807
                resourceVersion: '9547'
                generation: 1
                creationTimestamp: '2020-05-26T20:33:36Z'
                labels:
                  garden.io/version: v-baa629c081
                  module: server
                  service: backend
                annotations:
                  deployment.kubernetes.io/revision: '1'
                  garden.io/configured.replicas: '1'
                  garden.io/generated: 'true'
                  garden.io/manifest-hash: >-
                    3c12647ed6cf2ce40fd9565408fb8a88dac39f9ce12a70f14dac556b705d49de
                  garden.io/version: v-baa629c081
                  kubectl.kubernetes.io/last-applied-configuration: >
                    {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"3c12647ed6cf2ce40fd9565408fb8a88dac39f9ce12a70f14dac556b705d49de","garden.io/version":"v-baa629c081"},"labels":{"garden.io/version":"v-baa629c081","module":"server","service":"backend"},"name":"backend-v-baa629c081","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-baa629c081","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-baa629c081","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-baa629c081"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-baa629c081\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-baa629c081","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
                managedFields:
                  - manager: kubectl
                    operation: Update
                    apiVersion: apps/v1
                    time: '2020-05-26T20:33:36Z'
                    fieldsType: FieldsV1
                    fieldsV1:
                      'f:metadata':
                        'f:annotations':
                          .: {}
                          'f:garden.io/configured.replicas': {}
                          'f:garden.io/generated': {}
                          'f:garden.io/manifest-hash': {}
                          'f:garden.io/version': {}
                          'f:kubectl.kubernetes.io/last-applied-configuration': {}
                        'f:labels':
                          .: {}
                          'f:garden.io/version': {}
                          'f:module': {}
                          'f:service': {}
                      'f:spec':
                        'f:progressDeadlineSeconds': {}
                        'f:replicas': {}
                        'f:revisionHistoryLimit': {}
                        'f:selector':
                          'f:matchLabels':
                            .: {}
                            'f:garden.io/version': {}
                            'f:service': {}
                        'f:strategy':
                          'f:rollingUpdate':
                            .: {}
                            'f:maxSurge': {}
                            'f:maxUnavailable': {}
                          'f:type': {}
                        'f:template':
                          'f:metadata':
                            'f:labels':
                              .: {}
                              'f:garden.io/version': {}
                              'f:module': {}
                              'f:service': {}
                          'f:spec':
                            'f:containers':
                              'k:{"name":"backend"}':
                                .: {}
                                'f:env':
                                  .: {}
                                  'k:{"name":"GARDEN_DEPENDENCIES"}':
                                    .: {}
                                    'f:name': {}
                                    'f:value': {}
                                  'k:{"name":"GARDEN_VERSION"}':
                                    .: {}
                                    'f:name': {}
                                    'f:value': {}
                                  'k:{"name":"POD_HOST_IP"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_IP"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NAME"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NAMESPACE"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NODE_NAME"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_SERVICE_ACCOUNT"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_UID"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                'f:image': {}
                                'f:imagePullPolicy': {}
                                'f:name': {}
                                'f:ports':
                                  .: {}
                                  'k:{"containerPort":8080,"protocol":"TCP"}':
                                    .: {}
                                    'f:containerPort': {}
                                    'f:name': {}
                                    'f:protocol': {}
                                'f:resources':
                                  .: {}
                                  'f:limits':
                                    .: {}
                                    'f:cpu': {}
                                    'f:memory': {}
                                  'f:requests':
                                    .: {}
                                    'f:cpu': {}
                                    'f:memory': {}
                                'f:securityContext':
                                  .: {}
                                  'f:allowPrivilegeEscalation': {}
                                'f:terminationMessagePath': {}
                                'f:terminationMessagePolicy': {}
                            'f:dnsPolicy': {}
                            'f:restartPolicy': {}
                            'f:schedulerName': {}
                            'f:securityContext': {}
                            'f:terminationGracePeriodSeconds': {}
                  - manager: kube-controller-manager
                    operation: Update
                    apiVersion: apps/v1
                    time: '2020-05-26T20:33:52Z'
                    fieldsType: FieldsV1
                    fieldsV1:
                      'f:metadata':
                        'f:annotations':
                          'f:deployment.kubernetes.io/revision': {}
                      'f:status':
                        'f:conditions':
                          .: {}
                          'k:{"type":"Available"}':
                            .: {}
                            'f:lastTransitionTime': {}
                            'f:lastUpdateTime': {}
                            'f:message': {}
                            'f:reason': {}
                            'f:status': {}
                            'f:type': {}
                          'k:{"type":"Progressing"}':
                            .: {}
                            'f:lastTransitionTime': {}
                            'f:lastUpdateTime': {}
                            'f:message': {}
                            'f:reason': {}
                            'f:status': {}
                            'f:type': {}
                        'f:observedGeneration': {}
                        'f:replicas': {}
                        'f:unavailableReplicas': {}
                        'f:updatedReplicas': {}
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    garden.io/version: v-baa629c081
                    service: backend
                template:
                  metadata:
                    creationTimestamp: null
                    labels:
                      garden.io/version: v-baa629c081
                      module: server
                      service: backend
                  spec:
                    containers:
                      - name: backend
                        image: 'server:v-baa629c081'
                        ports:
                          - name: http
                            containerPort: 8080
                            protocol: TCP
                        env:
                          - name: GARDEN_VERSION
                            value: v-baa629c081
                          - name: GARDEN_DEPENDENCIES
                            value: >-
                              [{"moduleName":"server","name":"server","type":"build","version":"v-baa629c081"}]
                          - name: POD_HOST_IP
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: status.hostIP
                          - name: POD_IP
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: status.podIP
                          - name: POD_NAME
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.name
                          - name: POD_NAMESPACE
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.namespace
                          - name: POD_NODE_NAME
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: spec.nodeName
                          - name: POD_SERVICE_ACCOUNT
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: spec.serviceAccountName
                          - name: POD_UID
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.uid
                        resources:
                          limits:
                            cpu: '1'
                            memory: 1Gi
                          requests:
                            cpu: 10m
                            memory: 64Mi
                        terminationMessagePath: /dev/termination-log
                        terminationMessagePolicy: File
                        imagePullPolicy: IfNotPresent
                        securityContext:
                          allowPrivilegeEscalation: false
                    restartPolicy: Always
                    terminationGracePeriodSeconds: 5
                    dnsPolicy: ClusterFirst
                    securityContext: {}
                    schedulerName: default-scheduler
                strategy:
                  type: RollingUpdate
                  rollingUpdate:
                    maxUnavailable: 1
                    maxSurge: 1
                revisionHistoryLimit: 3
                progressDeadlineSeconds: 600
              status:
                observedGeneration: 1
                replicas: 1
                updatedReplicas: 1
                unavailableReplicas: 1
                conditions:
                  - type: Available
                    status: 'True'
                    lastUpdateTime: '2020-05-26T20:33:36Z'
                    lastTransitionTime: '2020-05-26T20:33:36Z'
                    reason: MinimumReplicasAvailable
                    message: Deployment has minimum availability.
                  - type: Progressing
                    status: 'True'
                    lastUpdateTime: '2020-05-26T20:33:51Z'
                    lastTransitionTime: '2020-05-26T20:33:36Z'
                    reason: NewReplicaSetAvailable
                    message: >-
                      ReplicaSet "backend-v-baa629c081-7c76d4d5d6" has
                      successfully progressed.
        type: deployment
      completedAt: '2020-05-26T20:35:10.727Z'
      batchId: 5904eeb0-35b9-4a64-a928-b93af2bc8a9f
  restartRequired: false


[2020-05-26T20:35:10.780Z] 
See error.log for detailed error message

[2020-05-26T20:39:08.554Z] Getting status...

[2020-05-26T20:39:11.675Z] Getting status... → Done

[2020-05-26T20:39:11.842Z] Error: Missing include and/or exclude directives on modules with overlapping paths.
Setting includes/excludes is required when modules have the same path (i.e. are in the same garden.yml file),
or when one module is nested within another.

Module server overlaps with module(s) db (same path).

Module db overlaps with module(s) server (same path).
    at Garden.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/garden.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/garden.js:0)
Error Details:
overlappingModules: []


[2020-05-26T20:39:11.843Z] 
See error.log for detailed error message

[2020-05-26T20:58:56.075Z] Getting status...

[2020-05-26T20:58:59.168Z] Getting status... → Done

[2020-05-26T20:58:59.911Z] Error: Missing include and/or exclude directives on modules with overlapping paths.
Setting includes/excludes is required when modules have the same path (i.e. are in the same garden.yml file),
or when one module is nested within another.

Module server overlaps with module(s) db (same path).

Module db overlaps with module(s) server (same path).
    at Garden.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/garden.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/garden.js:0)
Error Details:
overlappingModules: []


[2020-05-26T20:58:59.913Z] 
See error.log for detailed error message

[2020-05-26T20:59:36.510Z] Getting status...

[2020-05-26T20:59:39.606Z] Getting status... → Done

[2020-05-26T20:59:40.782Z] Syncing module sources (5 files)...

[2020-05-26T20:59:40.831Z] Syncing module sources (5 files)... → Done (took 0 sec)

[2020-05-26T20:59:40.833Z] Getting build status for v-f782aed143...

[2020-05-26T20:59:41.424Z] Getting build status for v-57df7df941...

[2020-05-26T20:59:41.429Z] Getting build status for v-57df7df941... → Done (took 0 sec)

[2020-05-26T20:59:41.431Z] Deploying version v-57df7df941...

[2020-05-26T20:59:41.453Z] Building version v-f782aed143...

[2020-05-26T20:59:41.543Z] Building server:v-f782aed143...

[2020-05-26T20:59:41.870Z] Building server:v-f782aed143... → Done (took 1 sec)

[2020-05-26T20:59:43.658Z] Waiting for resources to be ready...

[2020-05-26T20:59:45.671Z] Resources ready

[2020-05-26T20:59:45.689Z] Deploying version v-57df7df941... → Done (took 4.3 sec)

[2020-05-26T20:59:45.691Z] Deploying version v-f782aed143...

[2020-05-26T20:59:47.444Z] Waiting for resources to be ready...

[2020-05-26T20:59:49.457Z] Resources ready

[2020-05-26T20:59:49.490Z] Deploying version v-f782aed143... → Done (took 3.8 sec)

[2020-05-26T20:59:49.506Z] Done! ✔️ 

[2020-05-26T21:03:09.569Z] Getting status...

[2020-05-26T21:03:12.742Z] Getting status... → Done

[2020-05-26T21:03:14.296Z] Error: Could not find module(s): backend
    at Object.pickKeys (/snapshot/project/garden-service/tmp/dist/build/src/util/util.js:0)
    at ConfigGraph.getModules (/snapshot/project/garden-service/tmp/dist/build/src/config-graph.js:0)
    at BuildCommand.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/build.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/commands/build.js:0)
Error Details:
missing: []
available: []


[2020-05-26T21:03:14.297Z] 
See error.log for detailed error message

[2020-05-26T21:03:30.869Z] Getting status...

[2020-05-26T21:03:33.907Z] Getting status... → Done

[2020-05-26T21:03:35.043Z] Syncing module sources (5 files)...

[2020-05-26T21:03:35.074Z] Syncing module sources (5 files)... → Done (took 0 sec)

[2020-05-26T21:03:35.077Z] Getting build status for v-f782aed143...

[2020-05-26T21:03:35.573Z] Getting build status for v-f782aed143... → Done (took 0.5 sec)

[2020-05-26T21:03:35.576Z] Done! ✔️ 

[2020-05-26T21:03:56.911Z] Getting status...

[2020-05-26T21:04:00.025Z] Getting status... → Done

[2020-05-26T21:04:01.185Z] Syncing module sources (5 files)...

[2020-05-26T21:04:01.201Z] Error: Module client neither specifies image nor provides Dockerfile
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
Error Details:
spec:
  services: []
  build:
    dependencies: []
    timeout: 1200
  buildArgs: {}
  tests: []
  tasks: []


[2020-05-26T21:04:01.264Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-26T21:04:01.267Z] Getting build status for v-f782aed143...

[2020-05-26T21:04:01.870Z] Getting build status for v-57df7df941...

[2020-05-26T21:04:01.872Z] Getting build status for v-57df7df941... → Done (took 0 sec)

[2020-05-26T21:04:01.875Z] Deploying version v-57df7df941...

[2020-05-26T21:04:01.877Z] Deploying version v-57df7df941... → Already deployed

[2020-05-26T21:04:01.881Z] Getting build status for v-4f04a66d1e...

[2020-05-26T21:04:01.884Z] Getting build status for v-4f04a66d1e... → Done (took 0 sec)

[2020-05-26T21:04:01.968Z] Getting build status for v-f782aed143... → Done (took 0.7 sec)

[2020-05-26T21:04:01.971Z] Deploying version v-f782aed143...

[2020-05-26T21:04:01.974Z] Deploying version v-f782aed143... → Already deployed

[2020-05-26T21:04:02.026Z] Error: 1 deploy task(s) failed!
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at Generator.next (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at new Promise (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at Object.handleProcessResults (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at DeployCommand.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
Error Details:
results:
  taskResults:
    stage-build.server:
      type: stage-build
      key: stage-build.server
      name: server
      description: staging build for server
      completedAt: '2020-05-26T21:04:01.265Z'
      batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
      output: {}
      dependencyResults: {}
    get-service-status.db:
      type: get-service-status
      key: get-service-status.db
      name: db
      description: getting status for service 'db' (from module 'db')
      completedAt: '2020-05-26T21:04:01.857Z'
      batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-57df7df941
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: db-v-57df7df941
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-57df7df941
              namespace: node-microservice
              labels:
                module: db
                service: db
                garden.io/version: v-57df7df941
            spec:
              selector:
                matchLabels:
                  service: db
                  garden.io/version: v-57df7df941
              template:
                metadata:
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults: {}
    stage-build.db:
      type: stage-build
      key: stage-build.db
      name: db
      description: staging build for db
      completedAt: '2020-05-26T21:04:01.868Z'
      batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
      output: {}
      dependencyResults: {}
    build.db:
      type: build
      key: build.db
      name: db
      description: building db
      completedAt: '2020-05-26T21:04:01.873Z'
      batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
      output:
        fresh: false
      dependencyResults:
        stage-build.db:
          type: stage-build
          key: stage-build.db
          name: db
          description: staging build for db
          completedAt: '2020-05-26T21:04:01.868Z'
          batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
          output: {}
          dependencyResults: {}
    deploy.db:
      type: deploy
      key: deploy.db
      name: db
      description: deploying service 'db' (from module 'db')
      completedAt: '2020-05-26T21:04:01.877Z'
      batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-57df7df941
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: db-v-57df7df941
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-57df7df941
              namespace: node-microservice
              labels:
                module: db
                service: db
                garden.io/version: v-57df7df941
            spec:
              selector:
                matchLabels:
                  service: db
                  garden.io/version: v-57df7df941
              template:
                metadata:
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.db:
          type: get-service-status
          key: get-service-status.db
          name: db
          description: getting status for service 'db' (from module 'db')
          completedAt: '2020-05-26T21:04:01.857Z'
          batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults: {}
        build.db:
          type: build
          key: build.db
          name: db
          description: building db
          completedAt: '2020-05-26T21:04:01.873Z'
          batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
          output:
            fresh: false
          dependencyResults:
            stage-build.db:
              type: stage-build
              key: stage-build.db
              name: db
              description: staging build for db
              completedAt: '2020-05-26T21:04:01.868Z'
              batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
              output: {}
              dependencyResults: {}
    get-service-status.backend:
      type: get-service-status
      key: get-service-status.backend
      name: backend
      description: getting status for service 'backend' (from module 'server')
      completedAt: '2020-05-26T21:04:01.922Z'
      batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-f782aed143
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: backend-v-f782aed143
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-f782aed143
              namespace: node-microservice
              labels:
                module: server
                service: backend
                garden.io/version: v-f782aed143
            spec:
              selector:
                matchLabels:
                  service: backend
                  garden.io/version: v-f782aed143
              template:
                metadata:
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-f782aed143
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.db:
          type: get-service-status
          key: get-service-status.db
          name: db
          description: getting status for service 'db' (from module 'db')
          completedAt: '2020-05-26T21:04:01.857Z'
          batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults: {}
    build.server:
      type: build
      key: build.server
      name: server
      description: building server
      completedAt: '2020-05-26T21:04:01.968Z'
      batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
      output:
        fresh: false
      dependencyResults:
        stage-build.server:
          type: stage-build
          key: stage-build.server
          name: server
          description: staging build for server
          completedAt: '2020-05-26T21:04:01.265Z'
          batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
          output: {}
          dependencyResults: {}
    deploy.backend:
      type: deploy
      key: deploy.backend
      name: backend
      description: deploying service 'backend' (from module 'server')
      completedAt: '2020-05-26T21:04:01.974Z'
      batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-f782aed143
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: backend-v-f782aed143
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-f782aed143
              namespace: node-microservice
              labels:
                module: server
                service: backend
                garden.io/version: v-f782aed143
            spec:
              selector:
                matchLabels:
                  service: backend
                  garden.io/version: v-f782aed143
              template:
                metadata:
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-f782aed143
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.backend:
          type: get-service-status
          key: get-service-status.backend
          name: backend
          description: getting status for service 'backend' (from module 'server')
          completedAt: '2020-05-26T21:04:01.922Z'
          batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-f782aed143
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: backend-v-f782aed143
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-f782aed143
                  namespace: node-microservice
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-f782aed143
                spec:
                  selector:
                    matchLabels:
                      service: backend
                      garden.io/version: v-f782aed143
                  template:
                    metadata:
                      labels:
                        module: server
                        service: backend
                        garden.io/version: v-f782aed143
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults:
            get-service-status.db:
              type: get-service-status
              key: get-service-status.db
              name: db
              description: getting status for service 'db' (from module 'db')
              completedAt: '2020-05-26T21:04:01.857Z'
              batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
              output:
                forwardablePorts: []
                ingresses: []
                state: ready
                version: v-57df7df941
                detail:
                  remoteResources: []
                  workload:
                    kind: Deployment
                    apiVersion: apps/v1
                    metadata:
                      name: db-v-57df7df941
                      annotations:
                        garden.io/configured.replicas: '1'
                        garden.io/generated: 'true'
                        garden.io/version: v-57df7df941
                      namespace: node-microservice
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      selector:
                        matchLabels:
                          service: db
                          garden.io/version: v-57df7df941
                      template:
                        metadata:
                          labels:
                            module: db
                            service: db
                            garden.io/version: v-57df7df941
                        spec:
                          containers: []
                          restartPolicy: Always
                          terminationGracePeriodSeconds: 5
                          dnsPolicy: ClusterFirst
                      replicas: 1
                      strategy:
                        type: RollingUpdate
                        rollingUpdate:
                          maxUnavailable: 1
                          maxSurge: 1
                      revisionHistoryLimit: 3
              dependencyResults: {}
        deploy.db:
          type: deploy
          key: deploy.db
          name: db
          description: deploying service 'db' (from module 'db')
          completedAt: '2020-05-26T21:04:01.877Z'
          batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults:
            get-service-status.db:
              type: get-service-status
              key: get-service-status.db
              name: db
              description: getting status for service 'db' (from module 'db')
              completedAt: '2020-05-26T21:04:01.857Z'
              batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
              output:
                forwardablePorts: []
                ingresses: []
                state: ready
                version: v-57df7df941
                detail:
                  remoteResources: []
                  workload:
                    kind: Deployment
                    apiVersion: apps/v1
                    metadata:
                      name: db-v-57df7df941
                      annotations:
                        garden.io/configured.replicas: '1'
                        garden.io/generated: 'true'
                        garden.io/version: v-57df7df941
                      namespace: node-microservice
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      selector:
                        matchLabels:
                          service: db
                          garden.io/version: v-57df7df941
                      template:
                        metadata:
                          labels:
                            module: db
                            service: db
                            garden.io/version: v-57df7df941
                        spec:
                          containers: []
                          restartPolicy: Always
                          terminationGracePeriodSeconds: 5
                          dnsPolicy: ClusterFirst
                      replicas: 1
                      strategy:
                        type: RollingUpdate
                        rollingUpdate:
                          maxUnavailable: 1
                          maxSurge: 1
                      revisionHistoryLimit: 3
              dependencyResults: {}
            build.db:
              type: build
              key: build.db
              name: db
              description: building db
              completedAt: '2020-05-26T21:04:01.873Z'
              batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
              output:
                fresh: false
              dependencyResults:
                stage-build.db:
                  type: stage-build
                  key: stage-build.db
                  name: db
                  description: staging build for db
                  completedAt: '2020-05-26T21:04:01.868Z'
                  batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
                  output: {}
                  dependencyResults: {}
        build.server:
          type: build
          key: build.server
          name: server
          description: building server
          completedAt: '2020-05-26T21:04:01.968Z'
          batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
          output:
            fresh: false
          dependencyResults:
            stage-build.server:
              type: stage-build
              key: stage-build.server
              name: server
              description: staging build for server
              completedAt: '2020-05-26T21:04:01.265Z'
              batchId: e6993f47-6a09-42ba-b1f2-00b36265c39c
              output: {}
              dependencyResults: {}
    get-service-status.frontend:
      type: get-service-status
      description: getting status for service 'frontend' (from module 'client')
      key: get-service-status.frontend
      name: frontend
      error:
        detail:
          spec:
            services:
              - name: frontend
                ports:
                  - name: http
                    containerPort: 8080
                    protocol: TCP
                    servicePort: 8080
                dependencies: []
                disabled: false
                annotations: {}
                daemon: false
                ingresses: []
                env: {}
                limits:
                  cpu: 1000
                  memory: 1024
                volumes: []
            build:
              dependencies: []
              timeout: 1200
            buildArgs: {}
            tests: []
            tasks: []
        type: configuration
      completedAt: '2020-05-26T21:04:01.196Z'
      batchId: dfdec4c9-583c-45be-a1ca-984f1a0032a5
    stage-build.client:
      type: stage-build
      key: stage-build.client
      name: client
      description: staging build for client
      completedAt: '2020-05-26T21:04:01.878Z'
      batchId: dfdec4c9-583c-45be-a1ca-984f1a0032a5
      output: {}
      dependencyResults: {}
    build.client:
      type: build
      key: build.client
      name: client
      description: building client
      completedAt: '2020-05-26T21:04:01.884Z'
      batchId: dfdec4c9-583c-45be-a1ca-984f1a0032a5
      output:
        fresh: false
      dependencyResults:
        stage-build.client:
          type: stage-build
          key: stage-build.client
          name: client
          description: staging build for client
          completedAt: '2020-05-26T21:04:01.878Z'
          batchId: dfdec4c9-583c-45be-a1ca-984f1a0032a5
          output: {}
          dependencyResults: {}
  restartRequired: false


[2020-05-26T21:04:02.035Z] 
See error.log for detailed error message

[2020-05-26T21:09:21.758Z] Getting status...

[2020-05-26T21:09:25.033Z] Getting status... → Done

[2020-05-26T21:09:26.228Z] Syncing module sources (5 files)...

[2020-05-26T21:09:26.231Z] Syncing module sources (15 files)...

[2020-05-26T21:09:26.298Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-26T21:09:26.300Z] Getting build status for v-56ab2b577f...

[2020-05-26T21:09:26.946Z] Getting build status for v-57df7df941...

[2020-05-26T21:09:26.948Z] Getting build status for v-57df7df941... → Done (took 0 sec)

[2020-05-26T21:09:26.953Z] Deploying version v-57df7df941...

[2020-05-26T21:09:26.956Z] Deploying version v-57df7df941... → Already deployed

[2020-05-26T21:09:26.959Z] Syncing module sources (15 files)... → Done (took 0.7 sec)

[2020-05-26T21:09:26.961Z] Getting build status for v-302a3fe1bf...

[2020-05-26T21:09:27.088Z] Building version v-56ab2b577f...

[2020-05-26T21:09:27.119Z] Building version v-302a3fe1bf...

[2020-05-26T21:09:27.163Z] Building server:v-56ab2b577f...

[2020-05-26T21:09:27.202Z] Building client:v-302a3fe1bf...

[2020-05-26T21:10:47.931Z] Building server:v-56ab2b577f... → Done (took 81.6 sec)

[2020-05-26T21:10:47.933Z] Deploying version v-56ab2b577f...

[2020-05-26T21:10:50.565Z] Waiting for resources to be ready...

[2020-05-26T21:10:52.585Z] Resources ready

[2020-05-26T21:10:52.611Z] Deploying version v-56ab2b577f... → Done (took 4.7 sec)

[2020-05-26T21:11:12.755Z] Getting status...

[2020-05-26T21:11:16.137Z] Getting status... → Done

[2020-05-26T21:11:17.660Z] Syncing module sources (5 files)...

[2020-05-26T21:11:17.663Z] Syncing module sources (16 files)...

[2020-05-26T21:11:17.730Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-26T21:11:17.732Z] Getting build status for v-56ab2b577f...

[2020-05-26T21:11:18.240Z] Getting build status for v-56ab2b577f... → Done (took 0.5 sec)

[2020-05-26T21:11:18.303Z] Getting build status for v-57df7df941...

[2020-05-26T21:11:18.308Z] Getting build status for v-57df7df941... → Done (took 0 sec)

[2020-05-26T21:11:18.311Z] Deploying version v-57df7df941...

[2020-05-26T21:11:18.312Z] Deploying version v-57df7df941... → Already deployed

[2020-05-26T21:11:18.315Z] Deploying version v-56ab2b577f...

[2020-05-26T21:11:18.318Z] Deploying version v-56ab2b577f... → Already deployed

[2020-05-26T21:11:18.321Z] Syncing module sources (16 files)... → Done (took 0.7 sec)

[2020-05-26T21:11:18.324Z] Getting build status for v-d2cb35f33f...

[2020-05-26T21:11:18.468Z] Building version v-d2cb35f33f...

[2020-05-26T21:11:18.548Z] Building client:v-d2cb35f33f...

[2020-05-26T21:12:00.241Z] Building client:v-d2cb35f33f... → Done (took 41.9 sec)

[2020-05-26T21:12:00.244Z] Deploying version v-d2cb35f33f...

[2020-05-26T21:12:01.805Z] Waiting for resources to be ready...

[2020-05-26T21:12:03.856Z] Deployment/frontend-v-d2cb35f33f: Started container frontend

[2020-05-26T21:12:06.440Z] Deploying version v-d2cb35f33f...

[2020-05-26T21:12:06.459Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 10s restarting failed container=frontend pod=frontend-v-d2cb35f33f-74748f9b6f-fth9q_node-microservice(376498ef-a685-4077-9cb9-f8a277906276)

━━━ Events ━━━
Deployment frontend-v-d2cb35f33f: ScalingReplicaSet - Scaled up replica set frontend-v-d2cb35f33f-74748f9b6f to 1
Pod frontend-v-d2cb35f33f-74748f9b6f-fth9q: Scheduled - Successfully assigned node-microservice/frontend-v-d2cb35f33f-74748f9b6f-fth9q to minikube
Pod frontend-v-d2cb35f33f-74748f9b6f-fth9q: Pulled - Container image "client:v-d2cb35f33f" already present on machine
Pod frontend-v-d2cb35f33f-74748f9b6f-fth9q: Created - Created container frontend
Pod frontend-v-d2cb35f33f-74748f9b6f-fth9q: Started - Started container frontend
Pod frontend-v-d2cb35f33f-74748f9b6f-fth9q: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-d2cb35f33f

****** frontend-v-d2cb35f33f-74748f9b6f-fth9q ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=frontend
    pod=frontend-v-d2cb35f33f-74748f9b6f-fth9q_node-microservice(376498ef-a685-4077-9cb9-f8a277906276)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-d2cb35f33f:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-d2cb35f33f-74748f9b6f to 1\e[39m\n\e[94mPod frontend-v-d2cb35f33f-74748f9b6f-fth9q:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-d2cb35f33f-74748f9b6f-fth9q to minikube\e[39m\n\e[94mPod frontend-v-d2cb35f33f-74748f9b6f-fth9q:\e[39m \e[37mPulled - Container image \"client:v-d2cb35f33f\" already present on machine\e[39m\n\e[94mPod frontend-v-d2cb35f33f-74748f9b6f-fth9q:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-d2cb35f33f-74748f9b6f-fth9q:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-d2cb35f33f-74748f9b6f-fth9q:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-d2cb35f33f\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-d2cb35f33f-74748f9b6f-fth9q ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-d2cb35f33f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-d2cb35f33f
      uid: bb761a6c-9171-405a-8907-fb6211c52a1f
      resourceVersion: '15049'
      generation: 1
      creationTimestamp: '2020-05-26T21:12:00Z'
      labels:
        garden.io/version: v-d2cb35f33f
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: bfe12bc45c2f37fa2851724794e67e048bbcffbeb9d50a49cf963c7a25dde619
        garden.io/version: v-d2cb35f33f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"bfe12bc45c2f37fa2851724794e67e048bbcffbeb9d50a49cf963c7a25dde619","garden.io/version":"v-d2cb35f33f"},"labels":{"garden.io/version":"v-d2cb35f33f","module":"client","service":"frontend"},"name":"frontend-v-d2cb35f33f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-d2cb35f33f","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-d2cb35f33f","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-d2cb35f33f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-d2cb35f33f\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-d2cb35f33f","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-d2cb35f33f
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-d2cb35f33f
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-26T21:12:06.525Z] Error: 1 deploy task(s) failed!
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at Generator.next (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at new Promise (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at Object.handleProcessResults (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at DeployCommand.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
Error Details:
results:
  taskResults:
    get-service-status.db:
      type: get-service-status
      key: get-service-status.db
      name: db
      description: getting status for service 'db' (from module 'db')
      completedAt: '2020-05-26T21:11:17.720Z'
      batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-57df7df941
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: db-v-57df7df941
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-57df7df941
              namespace: node-microservice
              labels:
                module: db
                service: db
                garden.io/version: v-57df7df941
            spec:
              selector:
                matchLabels:
                  service: db
                  garden.io/version: v-57df7df941
              template:
                metadata:
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults: {}
    stage-build.server:
      type: stage-build
      key: stage-build.server
      name: server
      description: staging build for server
      completedAt: '2020-05-26T21:11:17.730Z'
      batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
      output: {}
      dependencyResults: {}
    get-service-status.backend:
      type: get-service-status
      key: get-service-status.backend
      name: backend
      description: getting status for service 'backend' (from module 'server')
      completedAt: '2020-05-26T21:11:18.138Z'
      batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-56ab2b577f
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: backend-v-56ab2b577f
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-56ab2b577f
              namespace: node-microservice
              labels:
                module: server
                service: backend
                garden.io/version: v-56ab2b577f
            spec:
              selector:
                matchLabels:
                  service: backend
                  garden.io/version: v-56ab2b577f
              template:
                metadata:
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-56ab2b577f
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.db:
          type: get-service-status
          key: get-service-status.db
          name: db
          description: getting status for service 'db' (from module 'db')
          completedAt: '2020-05-26T21:11:17.720Z'
          batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults: {}
    build.server:
      type: build
      key: build.server
      name: server
      description: building server
      completedAt: '2020-05-26T21:11:18.240Z'
      batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
      output:
        fresh: false
      dependencyResults:
        stage-build.server:
          type: stage-build
          key: stage-build.server
          name: server
          description: staging build for server
          completedAt: '2020-05-26T21:11:17.730Z'
          batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
          output: {}
          dependencyResults: {}
    stage-build.db:
      type: stage-build
      key: stage-build.db
      name: db
      description: staging build for db
      completedAt: '2020-05-26T21:11:18.301Z'
      batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
      output: {}
      dependencyResults: {}
    build.db:
      type: build
      key: build.db
      name: db
      description: building db
      completedAt: '2020-05-26T21:11:18.308Z'
      batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
      output:
        fresh: false
      dependencyResults:
        stage-build.db:
          type: stage-build
          key: stage-build.db
          name: db
          description: staging build for db
          completedAt: '2020-05-26T21:11:18.301Z'
          batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
          output: {}
          dependencyResults: {}
    deploy.db:
      type: deploy
      key: deploy.db
      name: db
      description: deploying service 'db' (from module 'db')
      completedAt: '2020-05-26T21:11:18.312Z'
      batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-57df7df941
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: db-v-57df7df941
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-57df7df941
              namespace: node-microservice
              labels:
                module: db
                service: db
                garden.io/version: v-57df7df941
            spec:
              selector:
                matchLabels:
                  service: db
                  garden.io/version: v-57df7df941
              template:
                metadata:
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.db:
          type: get-service-status
          key: get-service-status.db
          name: db
          description: getting status for service 'db' (from module 'db')
          completedAt: '2020-05-26T21:11:17.720Z'
          batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults: {}
        build.db:
          type: build
          key: build.db
          name: db
          description: building db
          completedAt: '2020-05-26T21:11:18.308Z'
          batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
          output:
            fresh: false
          dependencyResults:
            stage-build.db:
              type: stage-build
              key: stage-build.db
              name: db
              description: staging build for db
              completedAt: '2020-05-26T21:11:18.301Z'
              batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
              output: {}
              dependencyResults: {}
    deploy.backend:
      type: deploy
      key: deploy.backend
      name: backend
      description: deploying service 'backend' (from module 'server')
      completedAt: '2020-05-26T21:11:18.318Z'
      batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-56ab2b577f
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: backend-v-56ab2b577f
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-56ab2b577f
              namespace: node-microservice
              labels:
                module: server
                service: backend
                garden.io/version: v-56ab2b577f
            spec:
              selector:
                matchLabels:
                  service: backend
                  garden.io/version: v-56ab2b577f
              template:
                metadata:
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-56ab2b577f
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.backend:
          type: get-service-status
          key: get-service-status.backend
          name: backend
          description: getting status for service 'backend' (from module 'server')
          completedAt: '2020-05-26T21:11:18.138Z'
          batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-56ab2b577f
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: backend-v-56ab2b577f
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-56ab2b577f
                  namespace: node-microservice
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-56ab2b577f
                spec:
                  selector:
                    matchLabels:
                      service: backend
                      garden.io/version: v-56ab2b577f
                  template:
                    metadata:
                      labels:
                        module: server
                        service: backend
                        garden.io/version: v-56ab2b577f
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults:
            get-service-status.db:
              type: get-service-status
              key: get-service-status.db
              name: db
              description: getting status for service 'db' (from module 'db')
              completedAt: '2020-05-26T21:11:17.720Z'
              batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
              output:
                forwardablePorts: []
                ingresses: []
                state: ready
                version: v-57df7df941
                detail:
                  remoteResources: []
                  workload:
                    kind: Deployment
                    apiVersion: apps/v1
                    metadata:
                      name: db-v-57df7df941
                      annotations:
                        garden.io/configured.replicas: '1'
                        garden.io/generated: 'true'
                        garden.io/version: v-57df7df941
                      namespace: node-microservice
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      selector:
                        matchLabels:
                          service: db
                          garden.io/version: v-57df7df941
                      template:
                        metadata:
                          labels:
                            module: db
                            service: db
                            garden.io/version: v-57df7df941
                        spec:
                          containers: []
                          restartPolicy: Always
                          terminationGracePeriodSeconds: 5
                          dnsPolicy: ClusterFirst
                      replicas: 1
                      strategy:
                        type: RollingUpdate
                        rollingUpdate:
                          maxUnavailable: 1
                          maxSurge: 1
                      revisionHistoryLimit: 3
              dependencyResults: {}
        deploy.db:
          type: deploy
          key: deploy.db
          name: db
          description: deploying service 'db' (from module 'db')
          completedAt: '2020-05-26T21:11:18.312Z'
          batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults:
            get-service-status.db:
              type: get-service-status
              key: get-service-status.db
              name: db
              description: getting status for service 'db' (from module 'db')
              completedAt: '2020-05-26T21:11:17.720Z'
              batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
              output:
                forwardablePorts: []
                ingresses: []
                state: ready
                version: v-57df7df941
                detail:
                  remoteResources: []
                  workload:
                    kind: Deployment
                    apiVersion: apps/v1
                    metadata:
                      name: db-v-57df7df941
                      annotations:
                        garden.io/configured.replicas: '1'
                        garden.io/generated: 'true'
                        garden.io/version: v-57df7df941
                      namespace: node-microservice
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      selector:
                        matchLabels:
                          service: db
                          garden.io/version: v-57df7df941
                      template:
                        metadata:
                          labels:
                            module: db
                            service: db
                            garden.io/version: v-57df7df941
                        spec:
                          containers: []
                          restartPolicy: Always
                          terminationGracePeriodSeconds: 5
                          dnsPolicy: ClusterFirst
                      replicas: 1
                      strategy:
                        type: RollingUpdate
                        rollingUpdate:
                          maxUnavailable: 1
                          maxSurge: 1
                      revisionHistoryLimit: 3
              dependencyResults: {}
            build.db:
              type: build
              key: build.db
              name: db
              description: building db
              completedAt: '2020-05-26T21:11:18.308Z'
              batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
              output:
                fresh: false
              dependencyResults:
                stage-build.db:
                  type: stage-build
                  key: stage-build.db
                  name: db
                  description: staging build for db
                  completedAt: '2020-05-26T21:11:18.301Z'
                  batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
                  output: {}
                  dependencyResults: {}
        build.server:
          type: build
          key: build.server
          name: server
          description: building server
          completedAt: '2020-05-26T21:11:18.240Z'
          batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
          output:
            fresh: false
          dependencyResults:
            stage-build.server:
              type: stage-build
              key: stage-build.server
              name: server
              description: staging build for server
              completedAt: '2020-05-26T21:11:17.730Z'
              batchId: ce6a4ce7-eb07-405f-b8e3-8704d1cefead
              output: {}
              dependencyResults: {}
    get-service-status.frontend:
      type: get-service-status
      key: get-service-status.frontend
      name: frontend
      description: getting status for service 'frontend' (from module 'client')
      completedAt: '2020-05-26T21:11:17.710Z'
      batchId: e1da3aa4-0363-49e1-8dea-bfd9996f3b84
      output:
        forwardablePorts: []
        ingresses: []
        state: missing
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: frontend-v-d2cb35f33f
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-d2cb35f33f
              namespace: node-microservice
              labels:
                module: client
                service: frontend
                garden.io/version: v-d2cb35f33f
            spec:
              selector:
                matchLabels:
                  service: frontend
                  garden.io/version: v-d2cb35f33f
              template:
                metadata:
                  labels:
                    module: client
                    service: frontend
                    garden.io/version: v-d2cb35f33f
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults: {}
    stage-build.client:
      type: stage-build
      key: stage-build.client
      name: client
      description: staging build for client
      completedAt: '2020-05-26T21:11:18.321Z'
      batchId: e1da3aa4-0363-49e1-8dea-bfd9996f3b84
      output: {}
      dependencyResults: {}
    build.client:
      type: build
      key: build.client
      name: client
      description: building client
      completedAt: '2020-05-26T21:12:00.241Z'
      batchId: e1da3aa4-0363-49e1-8dea-bfd9996f3b84
      output:
        fresh: true
        buildLog: "Sending build context to Docker daemon  607.7kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\n ---> Using cache\n ---> b3f9eb30a186\nStep 4/7 : RUN npm install\n ---> Running in 4c4499090345\n\n> core-js@2.6.11 postinstall /usr/src/client/node_modules/babel-runtime/node_modules/core-js\n> node -e \"try{require('./postinstall')}catch(e){}\"\n\n\e[96mThank you for using core-js (\e[94m https://github.com/zloirock/core-js \e[96m) for polyfilling JavaScript standard library!\e[0m\n\n\e[96mThe project needs your help! Please consider supporting of core-js on Open Collective or Patreon: \e[0m\n\e[96m>\e[94m https://opencollective.com/core-js \e[0m\n\e[96m>\e[94m https://www.patreon.com/zloirock \e[0m\n\n\e[96mAlso, the author of core-js (\e[94m https://github.com/zloirock \e[96m) is looking for a good job -)\e[0m\n\n\n> core-js@3.6.5 postinstall /usr/src/client/node_modules/core-js\n> node -e \"try{require('./postinstall')}catch(e){}\"\n\n\e[96mThank you for using core-js (\e[94m https://github.com/zloirock/core-js \e[96m) for polyfilling JavaScript standard library!\e[0m\n\n\e[96mThe project needs your help! Please consider supporting of core-js on Open Collective or Patreon: \e[0m\n\e[96m>\e[94m https://opencollective.com/core-js \e[0m\n\e[96m>\e[94m https://www.patreon.com/zloirock \e[0m\n\n\e[96mAlso, the author of core-js (\e[94m https://github.com/zloirock \e[96m) is looking for a good job -)\e[0m\n\n\n> core-js-pure@3.6.5 postinstall /usr/src/client/node_modules/core-js-pure\n> node -e \"try{require('./postinstall')}catch(e){}\"\n\n\e[96mThank you for using core-js (\e[94m https://github.com/zloirock/core-js \e[96m) for polyfilling JavaScript standard library!\e[0m\n\n\e[96mThe project needs your help! Please consider supporting of core-js on Open Collective or Patreon: \e[0m\n\e[96m>\e[94m https://opencollective.com/core-js \e[0m\n\e[96m>\e[94m https://www.patreon.com/zloirock \e[0m\n\n\e[96mAlso, the author of core-js (\e[94m https://github.com/zloirock \e[96m) is looking for a good job -)\e[0m\n\n\e[91mnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules/webpack-dev-server/node_modules/fsevents):\nnpm \e[0m\e[91mWARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"linux\",\"arch\":\"x64\"})\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules/watchpack-chokidar2/node_modules/fsevents):\nnpm\e[0m\e[91m WARN \e[0m\e[91mnotsup\e[0m\e[91m SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"linux\",\"arch\":\"x64\"})\n\e[0m\e[91mnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules/jest-haste-map/node_modules/fsevents):\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"linux\",\"arch\":\"x64\"})\n\e[0m\e[91mnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@2.1.2 (node_modules/fsevents):\nnpm WARN \e[0m\e[91mnotsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.1.2: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"linux\",\"arch\":\"x64\"})\n\e[0m\e[91m\n\e[0madded 1616 packages from 752 contributors and audited 1623 packages in 30.02s\n\n59 packages are looking for funding\n  run `npm fund` for details\n\nfound 1 low severity vulnerability\n  run `npm audit fix` to fix them, or `npm audit` for details\nRemoving intermediate container 4c4499090345\n ---> 4dcd77c86b94\nStep 5/7 : COPY . .\n ---> 15d1f9690b12\nStep 6/7 : EXPOSE 5000\n ---> Running in 51fee096d49c\nRemoving intermediate container 51fee096d49c\n ---> 295939214ae6\nStep 7/7 : CMD [\"npm\", \"start\"]\n ---> Running in bce074a9c897\nRemoving intermediate container bce074a9c897\n ---> a7871a718580\nSuccessfully built a7871a718580\nSuccessfully tagged client:v-d2cb35f33f\n"
        details:
          identifier: 'client:v-d2cb35f33f'
      dependencyResults:
        stage-build.client:
          type: stage-build
          key: stage-build.client
          name: client
          description: staging build for client
          completedAt: '2020-05-26T21:11:18.321Z'
          batchId: e1da3aa4-0363-49e1-8dea-bfd9996f3b84
          output: {}
          dependencyResults: {}
    deploy.frontend:
      type: deploy
      description: deploying service 'frontend' (from module 'client')
      key: deploy.frontend
      name: frontend
      error:
        detail:
          serviceName: frontend
          status:
            state: unhealthy
            lastMessage: >-
              CrashLoopBackOff - back-off 10s restarting failed
              container=frontend
              pod=frontend-v-d2cb35f33f-74748f9b6f-fth9q_node-microservice(376498ef-a685-4077-9cb9-f8a277906276)
            logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-d2cb35f33f:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-d2cb35f33f-74748f9b6f to 1\e[39m\n\e[94mPod frontend-v-d2cb35f33f-74748f9b6f-fth9q:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-d2cb35f33f-74748f9b6f-fth9q to minikube\e[39m\n\e[94mPod frontend-v-d2cb35f33f-74748f9b6f-fth9q:\e[39m \e[37mPulled - Container image \"client:v-d2cb35f33f\" already present on machine\e[39m\n\e[94mPod frontend-v-d2cb35f33f-74748f9b6f-fth9q:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-d2cb35f33f-74748f9b6f-fth9q:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-d2cb35f33f-74748f9b6f-fth9q:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-d2cb35f33f\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-d2cb35f33f-74748f9b6f-fth9q ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
            resource:
              kind: Deployment
              apiVersion: apps/v1
              metadata:
                name: frontend-v-d2cb35f33f
                namespace: node-microservice
                selfLink: >-
                  /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-d2cb35f33f
                uid: bb761a6c-9171-405a-8907-fb6211c52a1f
                resourceVersion: '15049'
                generation: 1
                creationTimestamp: '2020-05-26T21:12:00Z'
                labels:
                  garden.io/version: v-d2cb35f33f
                  module: client
                  service: frontend
                annotations:
                  deployment.kubernetes.io/revision: '1'
                  garden.io/configured.replicas: '1'
                  garden.io/generated: 'true'
                  garden.io/manifest-hash: >-
                    bfe12bc45c2f37fa2851724794e67e048bbcffbeb9d50a49cf963c7a25dde619
                  garden.io/version: v-d2cb35f33f
                  kubectl.kubernetes.io/last-applied-configuration: >
                    {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"bfe12bc45c2f37fa2851724794e67e048bbcffbeb9d50a49cf963c7a25dde619","garden.io/version":"v-d2cb35f33f"},"labels":{"garden.io/version":"v-d2cb35f33f","module":"client","service":"frontend"},"name":"frontend-v-d2cb35f33f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-d2cb35f33f","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-d2cb35f33f","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-d2cb35f33f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-d2cb35f33f\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-d2cb35f33f","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
                managedFields:
                  - manager: kubectl
                    operation: Update
                    apiVersion: apps/v1
                    time: '2020-05-26T21:12:00Z'
                    fieldsType: FieldsV1
                    fieldsV1:
                      'f:metadata':
                        'f:annotations':
                          .: {}
                          'f:garden.io/configured.replicas': {}
                          'f:garden.io/generated': {}
                          'f:garden.io/manifest-hash': {}
                          'f:garden.io/version': {}
                          'f:kubectl.kubernetes.io/last-applied-configuration': {}
                        'f:labels':
                          .: {}
                          'f:garden.io/version': {}
                          'f:module': {}
                          'f:service': {}
                      'f:spec':
                        'f:progressDeadlineSeconds': {}
                        'f:replicas': {}
                        'f:revisionHistoryLimit': {}
                        'f:selector':
                          'f:matchLabels':
                            .: {}
                            'f:garden.io/version': {}
                            'f:service': {}
                        'f:strategy':
                          'f:rollingUpdate':
                            .: {}
                            'f:maxSurge': {}
                            'f:maxUnavailable': {}
                          'f:type': {}
                        'f:template':
                          'f:metadata':
                            'f:labels':
                              .: {}
                              'f:garden.io/version': {}
                              'f:module': {}
                              'f:service': {}
                          'f:spec':
                            'f:containers':
                              'k:{"name":"frontend"}':
                                .: {}
                                'f:env':
                                  .: {}
                                  'k:{"name":"GARDEN_DEPENDENCIES"}':
                                    .: {}
                                    'f:name': {}
                                    'f:value': {}
                                  'k:{"name":"GARDEN_VERSION"}':
                                    .: {}
                                    'f:name': {}
                                    'f:value': {}
                                  'k:{"name":"POD_HOST_IP"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_IP"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NAME"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NAMESPACE"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NODE_NAME"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_SERVICE_ACCOUNT"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_UID"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                'f:image': {}
                                'f:imagePullPolicy': {}
                                'f:name': {}
                                'f:resources':
                                  .: {}
                                  'f:limits':
                                    .: {}
                                    'f:cpu': {}
                                    'f:memory': {}
                                  'f:requests':
                                    .: {}
                                    'f:cpu': {}
                                    'f:memory': {}
                                'f:securityContext':
                                  .: {}
                                  'f:allowPrivilegeEscalation': {}
                                'f:terminationMessagePath': {}
                                'f:terminationMessagePolicy': {}
                            'f:dnsPolicy': {}
                            'f:restartPolicy': {}
                            'f:schedulerName': {}
                            'f:securityContext': {}
                            'f:terminationGracePeriodSeconds': {}
                  - manager: kube-controller-manager
                    operation: Update
                    apiVersion: apps/v1
                    time: '2020-05-26T21:12:05Z'
                    fieldsType: FieldsV1
                    fieldsV1:
                      'f:metadata':
                        'f:annotations':
                          'f:deployment.kubernetes.io/revision': {}
                      'f:status':
                        'f:conditions':
                          .: {}
                          'k:{"type":"Available"}':
                            .: {}
                            'f:lastTransitionTime': {}
                            'f:lastUpdateTime': {}
                            'f:message': {}
                            'f:reason': {}
                            'f:status': {}
                            'f:type': {}
                          'k:{"type":"Progressing"}':
                            .: {}
                            'f:lastTransitionTime': {}
                            'f:lastUpdateTime': {}
                            'f:message': {}
                            'f:reason': {}
                            'f:status': {}
                            'f:type': {}
                        'f:observedGeneration': {}
                        'f:replicas': {}
                        'f:unavailableReplicas': {}
                        'f:updatedReplicas': {}
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    garden.io/version: v-d2cb35f33f
                    service: frontend
                template:
                  metadata:
                    creationTimestamp: null
                    labels:
                      garden.io/version: v-d2cb35f33f
                      module: client
                      service: frontend
                  spec:
                    containers:
                      - name: frontend
                        image: 'client:v-d2cb35f33f'
                        env:
                          - name: GARDEN_VERSION
                            value: v-d2cb35f33f
                          - name: GARDEN_DEPENDENCIES
                            value: >-
                              [{"moduleName":"client","name":"client","type":"build","version":"v-d2cb35f33f"}]
                          - name: POD_HOST_IP
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: status.hostIP
                          - name: POD_IP
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: status.podIP
                          - name: POD_NAME
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.name
                          - name: POD_NAMESPACE
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.namespace
                          - name: POD_NODE_NAME
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: spec.nodeName
                          - name: POD_SERVICE_ACCOUNT
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: spec.serviceAccountName
                          - name: POD_UID
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.uid
                        resources:
                          limits:
                            cpu: '1'
                            memory: 1Gi
                          requests:
                            cpu: 10m
                            memory: 64Mi
                        terminationMessagePath: /dev/termination-log
                        terminationMessagePolicy: File
                        imagePullPolicy: IfNotPresent
                        securityContext:
                          allowPrivilegeEscalation: false
                    restartPolicy: Always
                    terminationGracePeriodSeconds: 5
                    dnsPolicy: ClusterFirst
                    securityContext: {}
                    schedulerName: default-scheduler
                strategy:
                  type: RollingUpdate
                  rollingUpdate:
                    maxUnavailable: 1
                    maxSurge: 1
                revisionHistoryLimit: 3
                progressDeadlineSeconds: 600
              status:
                observedGeneration: 1
                replicas: 1
                updatedReplicas: 1
                unavailableReplicas: 1
                conditions:
                  - type: Available
                    status: 'True'
                    lastUpdateTime: '2020-05-26T21:12:00Z'
                    lastTransitionTime: '2020-05-26T21:12:00Z'
                    reason: MinimumReplicasAvailable
                    message: Deployment has minimum availability.
                  - type: Progressing
                    status: 'True'
                    lastUpdateTime: '2020-05-26T21:12:02Z'
                    lastTransitionTime: '2020-05-26T21:12:00Z'
                    reason: NewReplicaSetAvailable
                    message: >-
                      ReplicaSet "frontend-v-d2cb35f33f-74748f9b6f" has
                      successfully progressed.
        type: deployment
      completedAt: '2020-05-26T21:12:06.440Z'
      batchId: e1da3aa4-0363-49e1-8dea-bfd9996f3b84
  restartRequired: false


[2020-05-26T21:12:06.539Z] 
See error.log for detailed error message

[2020-05-26T21:16:06.282Z] Getting status...

[2020-05-26T21:16:09.466Z] Getting status... → Done

[2020-05-26T21:16:10.674Z] Syncing module sources (16 files)...

[2020-05-26T21:16:10.678Z] Syncing module sources (5 files)...

[2020-05-26T21:16:10.760Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-26T21:16:10.763Z] Getting build status for v-56ab2b577f...

[2020-05-26T21:16:11.429Z] Syncing module sources (16 files)... → Done (took 0.8 sec)

[2020-05-26T21:16:11.431Z] Getting build status for v-6d32869129...

[2020-05-26T21:16:11.437Z] Getting build status for v-57df7df941...

[2020-05-26T21:16:11.440Z] Getting build status for v-57df7df941... → Done (took 0 sec)

[2020-05-26T21:16:11.443Z] Deploying version v-57df7df941...

[2020-05-26T21:16:11.445Z] Deploying version v-57df7df941... → Already deployed

[2020-05-26T21:16:11.632Z] Getting build status for v-56ab2b577f... → Done (took 0.9 sec)

[2020-05-26T21:16:11.635Z] Deploying version v-56ab2b577f...

[2020-05-26T21:16:11.637Z] Deploying version v-56ab2b577f... → Already deployed

[2020-05-26T21:16:11.672Z] Building version v-6d32869129...

[2020-05-26T21:16:11.741Z] Building client:v-6d32869129...

[2020-05-26T21:16:12.343Z] Building client:v-6d32869129... → Done (took 0.9 sec)

[2020-05-26T21:16:12.346Z] Deploying version v-6d32869129...

[2020-05-26T21:16:14.081Z] Waiting for resources to be ready...

[2020-05-26T21:16:16.135Z] Deployment/frontend-v-6d32869129: Started container frontend

[2020-05-26T21:16:18.688Z] Deploying version v-6d32869129...

[2020-05-26T21:16:18.700Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 10s restarting failed container=frontend pod=frontend-v-6d32869129-68cfb8d47f-m9d8s_node-microservice(a6be7697-237e-4e52-816b-6286e8283232)

━━━ Events ━━━
Deployment frontend-v-6d32869129: ScalingReplicaSet - Scaled up replica set frontend-v-6d32869129-68cfb8d47f to 1
Pod frontend-v-6d32869129-68cfb8d47f-m9d8s: Scheduled - Successfully assigned node-microservice/frontend-v-6d32869129-68cfb8d47f-m9d8s to minikube
Pod frontend-v-6d32869129-68cfb8d47f-m9d8s: Pulled - Container image "client:v-6d32869129" already present on machine
Pod frontend-v-6d32869129-68cfb8d47f-m9d8s: Created - Created container frontend
Pod frontend-v-6d32869129-68cfb8d47f-m9d8s: Started - Started container frontend
Pod frontend-v-6d32869129-68cfb8d47f-m9d8s: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-6d32869129

****** frontend-v-6d32869129-68cfb8d47f-m9d8s ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.9/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=frontend
    pod=frontend-v-6d32869129-68cfb8d47f-m9d8s_node-microservice(a6be7697-237e-4e52-816b-6286e8283232)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-6d32869129:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-6d32869129-68cfb8d47f to 1\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-6d32869129-68cfb8d47f-m9d8s to minikube\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mPulled - Container image \"client:v-6d32869129\" already present on machine\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-6d32869129\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-6d32869129-68cfb8d47f-m9d8s ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.9/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-6d32869129
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-6d32869129
      uid: 2ecd57da-5187-45ba-832c-f30dcf066ea8
      resourceVersion: '15721'
      generation: 1
      creationTimestamp: '2020-05-26T21:16:12Z'
      labels:
        garden.io/version: v-6d32869129
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d575077779fdaad309dfd582ad23a6688d7749efe82194f239abd170b299fd85
        garden.io/version: v-6d32869129
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d575077779fdaad309dfd582ad23a6688d7749efe82194f239abd170b299fd85","garden.io/version":"v-6d32869129"},"labels":{"garden.io/version":"v-6d32869129","module":"client","service":"frontend"},"name":"frontend-v-6d32869129","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-6d32869129","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-6d32869129","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-6d32869129"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-6d32869129\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-6d32869129","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-6d32869129
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-6d32869129
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-26T21:16:18.768Z] Error: 1 deploy task(s) failed!
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at Generator.next (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at new Promise (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at Object.handleProcessResults (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at DeployCommand.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
Error Details:
results:
  taskResults:
    get-service-status.frontend:
      type: get-service-status
      key: get-service-status.frontend
      name: frontend
      description: getting status for service 'frontend' (from module 'client')
      completedAt: '2020-05-26T21:16:10.741Z'
      batchId: bd861d56-7f05-428b-9741-93117c6a5724
      output:
        forwardablePorts: []
        ingresses: []
        state: missing
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: frontend-v-6d32869129
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-6d32869129
              namespace: node-microservice
              labels:
                module: client
                service: frontend
                garden.io/version: v-6d32869129
            spec:
              selector:
                matchLabels:
                  service: frontend
                  garden.io/version: v-6d32869129
              template:
                metadata:
                  labels:
                    module: client
                    service: frontend
                    garden.io/version: v-6d32869129
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults: {}
    stage-build.client:
      type: stage-build
      key: stage-build.client
      name: client
      description: staging build for client
      completedAt: '2020-05-26T21:16:11.429Z'
      batchId: bd861d56-7f05-428b-9741-93117c6a5724
      output: {}
      dependencyResults: {}
    build.client:
      type: build
      key: build.client
      name: client
      description: building client
      completedAt: '2020-05-26T21:16:12.343Z'
      batchId: bd861d56-7f05-428b-9741-93117c6a5724
      output:
        fresh: true
        buildLog: "Sending build context to Docker daemon  607.7kB\r\r\nStep 1/7 : FROM node:12\n ---> bdca973cfa07\nStep 2/7 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/7 : COPY package*.json ./\n ---> Using cache\n ---> b3f9eb30a186\nStep 4/7 : RUN npm install\n ---> Using cache\n ---> 4dcd77c86b94\nStep 5/7 : COPY . .\n ---> 72cbf10f321a\nStep 6/7 : EXPOSE 5000\n ---> Running in dc919c368976\nRemoving intermediate container dc919c368976\n ---> 039587c8db81\nStep 7/7 : CMD [\"npm\", \"start\"]\n ---> Running in ce6a90167988\nRemoving intermediate container ce6a90167988\n ---> a3b8d562ae25\nSuccessfully built a3b8d562ae25\nSuccessfully tagged client:v-6d32869129\n"
        details:
          identifier: 'client:v-6d32869129'
      dependencyResults:
        stage-build.client:
          type: stage-build
          key: stage-build.client
          name: client
          description: staging build for client
          completedAt: '2020-05-26T21:16:11.429Z'
          batchId: bd861d56-7f05-428b-9741-93117c6a5724
          output: {}
          dependencyResults: {}
    deploy.frontend:
      type: deploy
      description: deploying service 'frontend' (from module 'client')
      key: deploy.frontend
      name: frontend
      error:
        detail:
          serviceName: frontend
          status:
            state: unhealthy
            lastMessage: >-
              CrashLoopBackOff - back-off 10s restarting failed
              container=frontend
              pod=frontend-v-6d32869129-68cfb8d47f-m9d8s_node-microservice(a6be7697-237e-4e52-816b-6286e8283232)
            logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-6d32869129:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-6d32869129-68cfb8d47f to 1\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-6d32869129-68cfb8d47f-m9d8s to minikube\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mPulled - Container image \"client:v-6d32869129\" already present on machine\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-6d32869129\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-6d32869129-68cfb8d47f-m9d8s ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.9/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
            resource:
              kind: Deployment
              apiVersion: apps/v1
              metadata:
                name: frontend-v-6d32869129
                namespace: node-microservice
                selfLink: >-
                  /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-6d32869129
                uid: 2ecd57da-5187-45ba-832c-f30dcf066ea8
                resourceVersion: '15721'
                generation: 1
                creationTimestamp: '2020-05-26T21:16:12Z'
                labels:
                  garden.io/version: v-6d32869129
                  module: client
                  service: frontend
                annotations:
                  deployment.kubernetes.io/revision: '1'
                  garden.io/configured.replicas: '1'
                  garden.io/generated: 'true'
                  garden.io/manifest-hash: >-
                    d575077779fdaad309dfd582ad23a6688d7749efe82194f239abd170b299fd85
                  garden.io/version: v-6d32869129
                  kubectl.kubernetes.io/last-applied-configuration: >
                    {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d575077779fdaad309dfd582ad23a6688d7749efe82194f239abd170b299fd85","garden.io/version":"v-6d32869129"},"labels":{"garden.io/version":"v-6d32869129","module":"client","service":"frontend"},"name":"frontend-v-6d32869129","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-6d32869129","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-6d32869129","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-6d32869129"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-6d32869129\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-6d32869129","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
                managedFields:
                  - manager: kubectl
                    operation: Update
                    apiVersion: apps/v1
                    time: '2020-05-26T21:16:12Z'
                    fieldsType: FieldsV1
                    fieldsV1:
                      'f:metadata':
                        'f:annotations':
                          .: {}
                          'f:garden.io/configured.replicas': {}
                          'f:garden.io/generated': {}
                          'f:garden.io/manifest-hash': {}
                          'f:garden.io/version': {}
                          'f:kubectl.kubernetes.io/last-applied-configuration': {}
                        'f:labels':
                          .: {}
                          'f:garden.io/version': {}
                          'f:module': {}
                          'f:service': {}
                      'f:spec':
                        'f:progressDeadlineSeconds': {}
                        'f:replicas': {}
                        'f:revisionHistoryLimit': {}
                        'f:selector':
                          'f:matchLabels':
                            .: {}
                            'f:garden.io/version': {}
                            'f:service': {}
                        'f:strategy':
                          'f:rollingUpdate':
                            .: {}
                            'f:maxSurge': {}
                            'f:maxUnavailable': {}
                          'f:type': {}
                        'f:template':
                          'f:metadata':
                            'f:labels':
                              .: {}
                              'f:garden.io/version': {}
                              'f:module': {}
                              'f:service': {}
                          'f:spec':
                            'f:containers':
                              'k:{"name":"frontend"}':
                                .: {}
                                'f:env':
                                  .: {}
                                  'k:{"name":"GARDEN_DEPENDENCIES"}':
                                    .: {}
                                    'f:name': {}
                                    'f:value': {}
                                  'k:{"name":"GARDEN_VERSION"}':
                                    .: {}
                                    'f:name': {}
                                    'f:value': {}
                                  'k:{"name":"POD_HOST_IP"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_IP"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NAME"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NAMESPACE"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NODE_NAME"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_SERVICE_ACCOUNT"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_UID"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                'f:image': {}
                                'f:imagePullPolicy': {}
                                'f:name': {}
                                'f:resources':
                                  .: {}
                                  'f:limits':
                                    .: {}
                                    'f:cpu': {}
                                    'f:memory': {}
                                  'f:requests':
                                    .: {}
                                    'f:cpu': {}
                                    'f:memory': {}
                                'f:securityContext':
                                  .: {}
                                  'f:allowPrivilegeEscalation': {}
                                'f:terminationMessagePath': {}
                                'f:terminationMessagePolicy': {}
                            'f:dnsPolicy': {}
                            'f:restartPolicy': {}
                            'f:schedulerName': {}
                            'f:securityContext': {}
                            'f:terminationGracePeriodSeconds': {}
                  - manager: kube-controller-manager
                    operation: Update
                    apiVersion: apps/v1
                    time: '2020-05-26T21:16:17Z'
                    fieldsType: FieldsV1
                    fieldsV1:
                      'f:metadata':
                        'f:annotations':
                          'f:deployment.kubernetes.io/revision': {}
                      'f:status':
                        'f:conditions':
                          .: {}
                          'k:{"type":"Available"}':
                            .: {}
                            'f:lastTransitionTime': {}
                            'f:lastUpdateTime': {}
                            'f:message': {}
                            'f:reason': {}
                            'f:status': {}
                            'f:type': {}
                          'k:{"type":"Progressing"}':
                            .: {}
                            'f:lastTransitionTime': {}
                            'f:lastUpdateTime': {}
                            'f:message': {}
                            'f:reason': {}
                            'f:status': {}
                            'f:type': {}
                        'f:observedGeneration': {}
                        'f:replicas': {}
                        'f:unavailableReplicas': {}
                        'f:updatedReplicas': {}
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    garden.io/version: v-6d32869129
                    service: frontend
                template:
                  metadata:
                    creationTimestamp: null
                    labels:
                      garden.io/version: v-6d32869129
                      module: client
                      service: frontend
                  spec:
                    containers:
                      - name: frontend
                        image: 'client:v-6d32869129'
                        env:
                          - name: GARDEN_VERSION
                            value: v-6d32869129
                          - name: GARDEN_DEPENDENCIES
                            value: >-
                              [{"moduleName":"client","name":"client","type":"build","version":"v-6d32869129"}]
                          - name: POD_HOST_IP
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: status.hostIP
                          - name: POD_IP
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: status.podIP
                          - name: POD_NAME
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.name
                          - name: POD_NAMESPACE
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.namespace
                          - name: POD_NODE_NAME
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: spec.nodeName
                          - name: POD_SERVICE_ACCOUNT
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: spec.serviceAccountName
                          - name: POD_UID
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.uid
                        resources:
                          limits:
                            cpu: '1'
                            memory: 1Gi
                          requests:
                            cpu: 10m
                            memory: 64Mi
                        terminationMessagePath: /dev/termination-log
                        terminationMessagePolicy: File
                        imagePullPolicy: IfNotPresent
                        securityContext:
                          allowPrivilegeEscalation: false
                    restartPolicy: Always
                    terminationGracePeriodSeconds: 5
                    dnsPolicy: ClusterFirst
                    securityContext: {}
                    schedulerName: default-scheduler
                strategy:
                  type: RollingUpdate
                  rollingUpdate:
                    maxUnavailable: 1
                    maxSurge: 1
                revisionHistoryLimit: 3
                progressDeadlineSeconds: 600
              status:
                observedGeneration: 1
                replicas: 1
                updatedReplicas: 1
                unavailableReplicas: 1
                conditions:
                  - type: Available
                    status: 'True'
                    lastUpdateTime: '2020-05-26T21:16:12Z'
                    lastTransitionTime: '2020-05-26T21:16:12Z'
                    reason: MinimumReplicasAvailable
                    message: Deployment has minimum availability.
                  - type: Progressing
                    status: 'True'
                    lastUpdateTime: '2020-05-26T21:16:14Z'
                    lastTransitionTime: '2020-05-26T21:16:12Z'
                    reason: NewReplicaSetAvailable
                    message: >-
                      ReplicaSet "frontend-v-6d32869129-68cfb8d47f" has
                      successfully progressed.
        type: deployment
      completedAt: '2020-05-26T21:16:18.688Z'
      batchId: bd861d56-7f05-428b-9741-93117c6a5724
    get-service-status.db:
      type: get-service-status
      key: get-service-status.db
      name: db
      description: getting status for service 'db' (from module 'db')
      completedAt: '2020-05-26T21:16:10.750Z'
      batchId: 15f7485f-2290-4fe7-9424-107b40883a45
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-57df7df941
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: db-v-57df7df941
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-57df7df941
              namespace: node-microservice
              labels:
                module: db
                service: db
                garden.io/version: v-57df7df941
            spec:
              selector:
                matchLabels:
                  service: db
                  garden.io/version: v-57df7df941
              template:
                metadata:
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults: {}
    stage-build.server:
      type: stage-build
      key: stage-build.server
      name: server
      description: staging build for server
      completedAt: '2020-05-26T21:16:10.761Z'
      batchId: 15f7485f-2290-4fe7-9424-107b40883a45
      output: {}
      dependencyResults: {}
    stage-build.db:
      type: stage-build
      key: stage-build.db
      name: db
      description: staging build for db
      completedAt: '2020-05-26T21:16:11.432Z'
      batchId: 15f7485f-2290-4fe7-9424-107b40883a45
      output: {}
      dependencyResults: {}
    build.db:
      type: build
      key: build.db
      name: db
      description: building db
      completedAt: '2020-05-26T21:16:11.440Z'
      batchId: 15f7485f-2290-4fe7-9424-107b40883a45
      output:
        fresh: false
      dependencyResults:
        stage-build.db:
          type: stage-build
          key: stage-build.db
          name: db
          description: staging build for db
          completedAt: '2020-05-26T21:16:11.432Z'
          batchId: 15f7485f-2290-4fe7-9424-107b40883a45
          output: {}
          dependencyResults: {}
    deploy.db:
      type: deploy
      key: deploy.db
      name: db
      description: deploying service 'db' (from module 'db')
      completedAt: '2020-05-26T21:16:11.445Z'
      batchId: 15f7485f-2290-4fe7-9424-107b40883a45
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-57df7df941
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: db-v-57df7df941
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-57df7df941
              namespace: node-microservice
              labels:
                module: db
                service: db
                garden.io/version: v-57df7df941
            spec:
              selector:
                matchLabels:
                  service: db
                  garden.io/version: v-57df7df941
              template:
                metadata:
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.db:
          type: get-service-status
          key: get-service-status.db
          name: db
          description: getting status for service 'db' (from module 'db')
          completedAt: '2020-05-26T21:16:10.750Z'
          batchId: 15f7485f-2290-4fe7-9424-107b40883a45
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults: {}
        build.db:
          type: build
          key: build.db
          name: db
          description: building db
          completedAt: '2020-05-26T21:16:11.440Z'
          batchId: 15f7485f-2290-4fe7-9424-107b40883a45
          output:
            fresh: false
          dependencyResults:
            stage-build.db:
              type: stage-build
              key: stage-build.db
              name: db
              description: staging build for db
              completedAt: '2020-05-26T21:16:11.432Z'
              batchId: 15f7485f-2290-4fe7-9424-107b40883a45
              output: {}
              dependencyResults: {}
    get-service-status.backend:
      type: get-service-status
      key: get-service-status.backend
      name: backend
      description: getting status for service 'backend' (from module 'server')
      completedAt: '2020-05-26T21:16:11.563Z'
      batchId: 15f7485f-2290-4fe7-9424-107b40883a45
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-56ab2b577f
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: backend-v-56ab2b577f
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-56ab2b577f
              namespace: node-microservice
              labels:
                module: server
                service: backend
                garden.io/version: v-56ab2b577f
            spec:
              selector:
                matchLabels:
                  service: backend
                  garden.io/version: v-56ab2b577f
              template:
                metadata:
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-56ab2b577f
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.db:
          type: get-service-status
          key: get-service-status.db
          name: db
          description: getting status for service 'db' (from module 'db')
          completedAt: '2020-05-26T21:16:10.750Z'
          batchId: 15f7485f-2290-4fe7-9424-107b40883a45
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults: {}
    build.server:
      type: build
      key: build.server
      name: server
      description: building server
      completedAt: '2020-05-26T21:16:11.632Z'
      batchId: 15f7485f-2290-4fe7-9424-107b40883a45
      output:
        fresh: false
      dependencyResults:
        stage-build.server:
          type: stage-build
          key: stage-build.server
          name: server
          description: staging build for server
          completedAt: '2020-05-26T21:16:10.761Z'
          batchId: 15f7485f-2290-4fe7-9424-107b40883a45
          output: {}
          dependencyResults: {}
    deploy.backend:
      type: deploy
      key: deploy.backend
      name: backend
      description: deploying service 'backend' (from module 'server')
      completedAt: '2020-05-26T21:16:11.637Z'
      batchId: 15f7485f-2290-4fe7-9424-107b40883a45
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-56ab2b577f
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: backend-v-56ab2b577f
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-56ab2b577f
              namespace: node-microservice
              labels:
                module: server
                service: backend
                garden.io/version: v-56ab2b577f
            spec:
              selector:
                matchLabels:
                  service: backend
                  garden.io/version: v-56ab2b577f
              template:
                metadata:
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-56ab2b577f
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.backend:
          type: get-service-status
          key: get-service-status.backend
          name: backend
          description: getting status for service 'backend' (from module 'server')
          completedAt: '2020-05-26T21:16:11.563Z'
          batchId: 15f7485f-2290-4fe7-9424-107b40883a45
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-56ab2b577f
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: backend-v-56ab2b577f
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-56ab2b577f
                  namespace: node-microservice
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-56ab2b577f
                spec:
                  selector:
                    matchLabels:
                      service: backend
                      garden.io/version: v-56ab2b577f
                  template:
                    metadata:
                      labels:
                        module: server
                        service: backend
                        garden.io/version: v-56ab2b577f
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults:
            get-service-status.db:
              type: get-service-status
              key: get-service-status.db
              name: db
              description: getting status for service 'db' (from module 'db')
              completedAt: '2020-05-26T21:16:10.750Z'
              batchId: 15f7485f-2290-4fe7-9424-107b40883a45
              output:
                forwardablePorts: []
                ingresses: []
                state: ready
                version: v-57df7df941
                detail:
                  remoteResources: []
                  workload:
                    kind: Deployment
                    apiVersion: apps/v1
                    metadata:
                      name: db-v-57df7df941
                      annotations:
                        garden.io/configured.replicas: '1'
                        garden.io/generated: 'true'
                        garden.io/version: v-57df7df941
                      namespace: node-microservice
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      selector:
                        matchLabels:
                          service: db
                          garden.io/version: v-57df7df941
                      template:
                        metadata:
                          labels:
                            module: db
                            service: db
                            garden.io/version: v-57df7df941
                        spec:
                          containers: []
                          restartPolicy: Always
                          terminationGracePeriodSeconds: 5
                          dnsPolicy: ClusterFirst
                      replicas: 1
                      strategy:
                        type: RollingUpdate
                        rollingUpdate:
                          maxUnavailable: 1
                          maxSurge: 1
                      revisionHistoryLimit: 3
              dependencyResults: {}
        deploy.db:
          type: deploy
          key: deploy.db
          name: db
          description: deploying service 'db' (from module 'db')
          completedAt: '2020-05-26T21:16:11.445Z'
          batchId: 15f7485f-2290-4fe7-9424-107b40883a45
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults:
            get-service-status.db:
              type: get-service-status
              key: get-service-status.db
              name: db
              description: getting status for service 'db' (from module 'db')
              completedAt: '2020-05-26T21:16:10.750Z'
              batchId: 15f7485f-2290-4fe7-9424-107b40883a45
              output:
                forwardablePorts: []
                ingresses: []
                state: ready
                version: v-57df7df941
                detail:
                  remoteResources: []
                  workload:
                    kind: Deployment
                    apiVersion: apps/v1
                    metadata:
                      name: db-v-57df7df941
                      annotations:
                        garden.io/configured.replicas: '1'
                        garden.io/generated: 'true'
                        garden.io/version: v-57df7df941
                      namespace: node-microservice
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      selector:
                        matchLabels:
                          service: db
                          garden.io/version: v-57df7df941
                      template:
                        metadata:
                          labels:
                            module: db
                            service: db
                            garden.io/version: v-57df7df941
                        spec:
                          containers: []
                          restartPolicy: Always
                          terminationGracePeriodSeconds: 5
                          dnsPolicy: ClusterFirst
                      replicas: 1
                      strategy:
                        type: RollingUpdate
                        rollingUpdate:
                          maxUnavailable: 1
                          maxSurge: 1
                      revisionHistoryLimit: 3
              dependencyResults: {}
            build.db:
              type: build
              key: build.db
              name: db
              description: building db
              completedAt: '2020-05-26T21:16:11.440Z'
              batchId: 15f7485f-2290-4fe7-9424-107b40883a45
              output:
                fresh: false
              dependencyResults:
                stage-build.db:
                  type: stage-build
                  key: stage-build.db
                  name: db
                  description: staging build for db
                  completedAt: '2020-05-26T21:16:11.432Z'
                  batchId: 15f7485f-2290-4fe7-9424-107b40883a45
                  output: {}
                  dependencyResults: {}
        build.server:
          type: build
          key: build.server
          name: server
          description: building server
          completedAt: '2020-05-26T21:16:11.632Z'
          batchId: 15f7485f-2290-4fe7-9424-107b40883a45
          output:
            fresh: false
          dependencyResults:
            stage-build.server:
              type: stage-build
              key: stage-build.server
              name: server
              description: staging build for server
              completedAt: '2020-05-26T21:16:10.761Z'
              batchId: 15f7485f-2290-4fe7-9424-107b40883a45
              output: {}
              dependencyResults: {}
  restartRequired: false


[2020-05-26T21:16:18.779Z] 
See error.log for detailed error message

[2020-05-26T21:20:57.104Z] Getting status...

[2020-05-26T21:21:00.269Z] Getting status... → Done

[2020-05-26T21:21:01.514Z] Syncing module sources (16 files)...

[2020-05-26T21:21:01.517Z] Syncing module sources (5 files)...

[2020-05-26T21:21:01.596Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-26T21:21:01.599Z] Getting build status for v-56ab2b577f...

[2020-05-26T21:21:02.282Z] Syncing module sources (16 files)... → Done (took 0.8 sec)

[2020-05-26T21:21:02.284Z] Getting build status for v-6d32869129...

[2020-05-26T21:21:02.289Z] Getting build status for v-57df7df941...

[2020-05-26T21:21:02.292Z] Getting build status for v-57df7df941... → Done (took 0 sec)

[2020-05-26T21:21:02.295Z] Deploying version v-57df7df941...

[2020-05-26T21:21:02.297Z] Deploying version v-57df7df941... → Already deployed

[2020-05-26T21:21:02.436Z] Getting build status for v-56ab2b577f... → Done (took 0.8 sec)

[2020-05-26T21:21:02.439Z] Deploying version v-56ab2b577f...

[2020-05-26T21:21:02.440Z] Deploying version v-56ab2b577f... → Already deployed

[2020-05-26T21:21:02.478Z] Getting build status for v-6d32869129... → Done (took 0.2 sec)

[2020-05-26T21:21:02.480Z] Deploying version v-6d32869129...

[2020-05-26T21:21:04.683Z] Waiting for resources to be ready...

[2020-05-26T21:21:06.744Z] Deploying version v-6d32869129...

[2020-05-26T21:21:06.759Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 2m40s restarting failed container=frontend pod=frontend-v-6d32869129-68cfb8d47f-m9d8s_node-microservice(a6be7697-237e-4e52-816b-6286e8283232)

━━━ Events ━━━
Deployment frontend-v-6d32869129: ScalingReplicaSet - Scaled up replica set frontend-v-6d32869129-68cfb8d47f to 1
Pod frontend-v-6d32869129-68cfb8d47f-m9d8s: Scheduled - Successfully assigned node-microservice/frontend-v-6d32869129-68cfb8d47f-m9d8s to minikube
Pod frontend-v-6d32869129-68cfb8d47f-m9d8s: Pulled - Container image "client:v-6d32869129" already present on machine
Pod frontend-v-6d32869129-68cfb8d47f-m9d8s: Created - Created container frontend
Pod frontend-v-6d32869129-68cfb8d47f-m9d8s: Started - Started container frontend
Pod frontend-v-6d32869129-68cfb8d47f-m9d8s: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-6d32869129

****** frontend-v-6d32869129-68cfb8d47f-m9d8s ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.9/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 2m40s restarting failed container=frontend
    pod=frontend-v-6d32869129-68cfb8d47f-m9d8s_node-microservice(a6be7697-237e-4e52-816b-6286e8283232)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-6d32869129:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-6d32869129-68cfb8d47f to 1\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-6d32869129-68cfb8d47f-m9d8s to minikube\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mPulled - Container image \"client:v-6d32869129\" already present on machine\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-6d32869129\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-6d32869129-68cfb8d47f-m9d8s ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.9/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-6d32869129
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-6d32869129
      uid: 2ecd57da-5187-45ba-832c-f30dcf066ea8
      resourceVersion: '16196'
      generation: 1
      creationTimestamp: '2020-05-26T21:16:12Z'
      labels:
        garden.io/version: v-6d32869129
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d575077779fdaad309dfd582ad23a6688d7749efe82194f239abd170b299fd85
        garden.io/version: v-6d32869129
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d575077779fdaad309dfd582ad23a6688d7749efe82194f239abd170b299fd85","garden.io/version":"v-6d32869129"},"labels":{"garden.io/version":"v-6d32869129","module":"client","service":"frontend"},"name":"frontend-v-6d32869129","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-6d32869129","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-6d32869129","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-6d32869129"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-6d32869129\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-6d32869129","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-6d32869129
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-6d32869129
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-26T21:21:06.823Z] Error: 1 deploy task(s) failed!
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at Generator.next (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at new Promise (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at Object.handleProcessResults (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at DeployCommand.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
Error Details:
results:
  taskResults:
    stage-build.client:
      type: stage-build
      key: stage-build.client
      name: client
      description: staging build for client
      completedAt: '2020-05-26T21:21:02.282Z'
      batchId: dbc29a27-1ea2-4b0d-8c61-ec235ddd898b
      output: {}
      dependencyResults: {}
    get-service-status.frontend:
      type: get-service-status
      key: get-service-status.frontend
      name: frontend
      description: getting status for service 'frontend' (from module 'client')
      completedAt: '2020-05-26T21:21:02.423Z'
      batchId: dbc29a27-1ea2-4b0d-8c61-ec235ddd898b
      output:
        forwardablePorts: []
        ingresses: []
        state: unhealthy
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: frontend-v-6d32869129
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-6d32869129
              namespace: node-microservice
              labels:
                module: client
                service: frontend
                garden.io/version: v-6d32869129
            spec:
              selector:
                matchLabels:
                  service: frontend
                  garden.io/version: v-6d32869129
              template:
                metadata:
                  labels:
                    module: client
                    service: frontend
                    garden.io/version: v-6d32869129
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults: {}
    build.client:
      type: build
      key: build.client
      name: client
      description: building client
      completedAt: '2020-05-26T21:21:02.478Z'
      batchId: dbc29a27-1ea2-4b0d-8c61-ec235ddd898b
      output:
        fresh: false
      dependencyResults:
        stage-build.client:
          type: stage-build
          key: stage-build.client
          name: client
          description: staging build for client
          completedAt: '2020-05-26T21:21:02.282Z'
          batchId: dbc29a27-1ea2-4b0d-8c61-ec235ddd898b
          output: {}
          dependencyResults: {}
    deploy.frontend:
      type: deploy
      description: deploying service 'frontend' (from module 'client')
      key: deploy.frontend
      name: frontend
      error:
        detail:
          serviceName: frontend
          status:
            state: unhealthy
            lastMessage: >-
              CrashLoopBackOff - back-off 2m40s restarting failed
              container=frontend
              pod=frontend-v-6d32869129-68cfb8d47f-m9d8s_node-microservice(a6be7697-237e-4e52-816b-6286e8283232)
            logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-6d32869129:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-6d32869129-68cfb8d47f to 1\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-6d32869129-68cfb8d47f-m9d8s to minikube\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mPulled - Container image \"client:v-6d32869129\" already present on machine\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-6d32869129-68cfb8d47f-m9d8s:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-6d32869129\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-6d32869129-68cfb8d47f-m9d8s ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.9/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
            resource:
              kind: Deployment
              apiVersion: apps/v1
              metadata:
                name: frontend-v-6d32869129
                namespace: node-microservice
                selfLink: >-
                  /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-6d32869129
                uid: 2ecd57da-5187-45ba-832c-f30dcf066ea8
                resourceVersion: '16196'
                generation: 1
                creationTimestamp: '2020-05-26T21:16:12Z'
                labels:
                  garden.io/version: v-6d32869129
                  module: client
                  service: frontend
                annotations:
                  deployment.kubernetes.io/revision: '1'
                  garden.io/configured.replicas: '1'
                  garden.io/generated: 'true'
                  garden.io/manifest-hash: >-
                    d575077779fdaad309dfd582ad23a6688d7749efe82194f239abd170b299fd85
                  garden.io/version: v-6d32869129
                  kubectl.kubernetes.io/last-applied-configuration: >
                    {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d575077779fdaad309dfd582ad23a6688d7749efe82194f239abd170b299fd85","garden.io/version":"v-6d32869129"},"labels":{"garden.io/version":"v-6d32869129","module":"client","service":"frontend"},"name":"frontend-v-6d32869129","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-6d32869129","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-6d32869129","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-6d32869129"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-6d32869129\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-6d32869129","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
                managedFields:
                  - manager: kubectl
                    operation: Update
                    apiVersion: apps/v1
                    time: '2020-05-26T21:16:12Z'
                    fieldsType: FieldsV1
                    fieldsV1:
                      'f:metadata':
                        'f:annotations':
                          .: {}
                          'f:garden.io/configured.replicas': {}
                          'f:garden.io/generated': {}
                          'f:garden.io/manifest-hash': {}
                          'f:garden.io/version': {}
                          'f:kubectl.kubernetes.io/last-applied-configuration': {}
                        'f:labels':
                          .: {}
                          'f:garden.io/version': {}
                          'f:module': {}
                          'f:service': {}
                      'f:spec':
                        'f:progressDeadlineSeconds': {}
                        'f:replicas': {}
                        'f:revisionHistoryLimit': {}
                        'f:selector':
                          'f:matchLabels':
                            .: {}
                            'f:garden.io/version': {}
                            'f:service': {}
                        'f:strategy':
                          'f:rollingUpdate':
                            .: {}
                            'f:maxSurge': {}
                            'f:maxUnavailable': {}
                          'f:type': {}
                        'f:template':
                          'f:metadata':
                            'f:labels':
                              .: {}
                              'f:garden.io/version': {}
                              'f:module': {}
                              'f:service': {}
                          'f:spec':
                            'f:containers':
                              'k:{"name":"frontend"}':
                                .: {}
                                'f:env':
                                  .: {}
                                  'k:{"name":"GARDEN_DEPENDENCIES"}':
                                    .: {}
                                    'f:name': {}
                                    'f:value': {}
                                  'k:{"name":"GARDEN_VERSION"}':
                                    .: {}
                                    'f:name': {}
                                    'f:value': {}
                                  'k:{"name":"POD_HOST_IP"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_IP"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NAME"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NAMESPACE"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NODE_NAME"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_SERVICE_ACCOUNT"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_UID"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                'f:image': {}
                                'f:imagePullPolicy': {}
                                'f:name': {}
                                'f:resources':
                                  .: {}
                                  'f:limits':
                                    .: {}
                                    'f:cpu': {}
                                    'f:memory': {}
                                  'f:requests':
                                    .: {}
                                    'f:cpu': {}
                                    'f:memory': {}
                                'f:securityContext':
                                  .: {}
                                  'f:allowPrivilegeEscalation': {}
                                'f:terminationMessagePath': {}
                                'f:terminationMessagePolicy': {}
                            'f:dnsPolicy': {}
                            'f:restartPolicy': {}
                            'f:schedulerName': {}
                            'f:securityContext': {}
                            'f:terminationGracePeriodSeconds': {}
                  - manager: kube-controller-manager
                    operation: Update
                    apiVersion: apps/v1
                    time: '2020-05-26T21:19:17Z'
                    fieldsType: FieldsV1
                    fieldsV1:
                      'f:metadata':
                        'f:annotations':
                          'f:deployment.kubernetes.io/revision': {}
                      'f:status':
                        'f:conditions':
                          .: {}
                          'k:{"type":"Available"}':
                            .: {}
                            'f:lastTransitionTime': {}
                            'f:lastUpdateTime': {}
                            'f:message': {}
                            'f:reason': {}
                            'f:status': {}
                            'f:type': {}
                          'k:{"type":"Progressing"}':
                            .: {}
                            'f:lastTransitionTime': {}
                            'f:lastUpdateTime': {}
                            'f:message': {}
                            'f:reason': {}
                            'f:status': {}
                            'f:type': {}
                        'f:observedGeneration': {}
                        'f:replicas': {}
                        'f:unavailableReplicas': {}
                        'f:updatedReplicas': {}
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    garden.io/version: v-6d32869129
                    service: frontend
                template:
                  metadata:
                    creationTimestamp: null
                    labels:
                      garden.io/version: v-6d32869129
                      module: client
                      service: frontend
                  spec:
                    containers:
                      - name: frontend
                        image: 'client:v-6d32869129'
                        env:
                          - name: GARDEN_VERSION
                            value: v-6d32869129
                          - name: GARDEN_DEPENDENCIES
                            value: >-
                              [{"moduleName":"client","name":"client","type":"build","version":"v-6d32869129"}]
                          - name: POD_HOST_IP
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: status.hostIP
                          - name: POD_IP
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: status.podIP
                          - name: POD_NAME
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.name
                          - name: POD_NAMESPACE
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.namespace
                          - name: POD_NODE_NAME
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: spec.nodeName
                          - name: POD_SERVICE_ACCOUNT
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: spec.serviceAccountName
                          - name: POD_UID
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.uid
                        resources:
                          limits:
                            cpu: '1'
                            memory: 1Gi
                          requests:
                            cpu: 10m
                            memory: 64Mi
                        terminationMessagePath: /dev/termination-log
                        terminationMessagePolicy: File
                        imagePullPolicy: IfNotPresent
                        securityContext:
                          allowPrivilegeEscalation: false
                    restartPolicy: Always
                    terminationGracePeriodSeconds: 5
                    dnsPolicy: ClusterFirst
                    securityContext: {}
                    schedulerName: default-scheduler
                strategy:
                  type: RollingUpdate
                  rollingUpdate:
                    maxUnavailable: 1
                    maxSurge: 1
                revisionHistoryLimit: 3
                progressDeadlineSeconds: 600
              status:
                observedGeneration: 1
                replicas: 1
                updatedReplicas: 1
                unavailableReplicas: 1
                conditions:
                  - type: Available
                    status: 'True'
                    lastUpdateTime: '2020-05-26T21:16:12Z'
                    lastTransitionTime: '2020-05-26T21:16:12Z'
                    reason: MinimumReplicasAvailable
                    message: Deployment has minimum availability.
                  - type: Progressing
                    status: 'True'
                    lastUpdateTime: '2020-05-26T21:16:14Z'
                    lastTransitionTime: '2020-05-26T21:16:12Z'
                    reason: NewReplicaSetAvailable
                    message: >-
                      ReplicaSet "frontend-v-6d32869129-68cfb8d47f" has
                      successfully progressed.
        type: deployment
      completedAt: '2020-05-26T21:21:06.744Z'
      batchId: dbc29a27-1ea2-4b0d-8c61-ec235ddd898b
    get-service-status.db:
      type: get-service-status
      key: get-service-status.db
      name: db
      description: getting status for service 'db' (from module 'db')
      completedAt: '2020-05-26T21:21:01.585Z'
      batchId: f40ce512-248e-4458-9739-2751f15895bd
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-57df7df941
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: db-v-57df7df941
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-57df7df941
              namespace: node-microservice
              labels:
                module: db
                service: db
                garden.io/version: v-57df7df941
            spec:
              selector:
                matchLabels:
                  service: db
                  garden.io/version: v-57df7df941
              template:
                metadata:
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults: {}
    stage-build.server:
      type: stage-build
      key: stage-build.server
      name: server
      description: staging build for server
      completedAt: '2020-05-26T21:21:01.597Z'
      batchId: f40ce512-248e-4458-9739-2751f15895bd
      output: {}
      dependencyResults: {}
    stage-build.db:
      type: stage-build
      key: stage-build.db
      name: db
      description: staging build for db
      completedAt: '2020-05-26T21:21:02.285Z'
      batchId: f40ce512-248e-4458-9739-2751f15895bd
      output: {}
      dependencyResults: {}
    build.db:
      type: build
      key: build.db
      name: db
      description: building db
      completedAt: '2020-05-26T21:21:02.292Z'
      batchId: f40ce512-248e-4458-9739-2751f15895bd
      output:
        fresh: false
      dependencyResults:
        stage-build.db:
          type: stage-build
          key: stage-build.db
          name: db
          description: staging build for db
          completedAt: '2020-05-26T21:21:02.285Z'
          batchId: f40ce512-248e-4458-9739-2751f15895bd
          output: {}
          dependencyResults: {}
    deploy.db:
      type: deploy
      key: deploy.db
      name: db
      description: deploying service 'db' (from module 'db')
      completedAt: '2020-05-26T21:21:02.297Z'
      batchId: f40ce512-248e-4458-9739-2751f15895bd
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-57df7df941
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: db-v-57df7df941
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-57df7df941
              namespace: node-microservice
              labels:
                module: db
                service: db
                garden.io/version: v-57df7df941
            spec:
              selector:
                matchLabels:
                  service: db
                  garden.io/version: v-57df7df941
              template:
                metadata:
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.db:
          type: get-service-status
          key: get-service-status.db
          name: db
          description: getting status for service 'db' (from module 'db')
          completedAt: '2020-05-26T21:21:01.585Z'
          batchId: f40ce512-248e-4458-9739-2751f15895bd
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults: {}
        build.db:
          type: build
          key: build.db
          name: db
          description: building db
          completedAt: '2020-05-26T21:21:02.292Z'
          batchId: f40ce512-248e-4458-9739-2751f15895bd
          output:
            fresh: false
          dependencyResults:
            stage-build.db:
              type: stage-build
              key: stage-build.db
              name: db
              description: staging build for db
              completedAt: '2020-05-26T21:21:02.285Z'
              batchId: f40ce512-248e-4458-9739-2751f15895bd
              output: {}
              dependencyResults: {}
    get-service-status.backend:
      type: get-service-status
      key: get-service-status.backend
      name: backend
      description: getting status for service 'backend' (from module 'server')
      completedAt: '2020-05-26T21:21:02.351Z'
      batchId: f40ce512-248e-4458-9739-2751f15895bd
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-56ab2b577f
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: backend-v-56ab2b577f
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-56ab2b577f
              namespace: node-microservice
              labels:
                module: server
                service: backend
                garden.io/version: v-56ab2b577f
            spec:
              selector:
                matchLabels:
                  service: backend
                  garden.io/version: v-56ab2b577f
              template:
                metadata:
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-56ab2b577f
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.db:
          type: get-service-status
          key: get-service-status.db
          name: db
          description: getting status for service 'db' (from module 'db')
          completedAt: '2020-05-26T21:21:01.585Z'
          batchId: f40ce512-248e-4458-9739-2751f15895bd
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults: {}
    build.server:
      type: build
      key: build.server
      name: server
      description: building server
      completedAt: '2020-05-26T21:21:02.436Z'
      batchId: f40ce512-248e-4458-9739-2751f15895bd
      output:
        fresh: false
      dependencyResults:
        stage-build.server:
          type: stage-build
          key: stage-build.server
          name: server
          description: staging build for server
          completedAt: '2020-05-26T21:21:01.597Z'
          batchId: f40ce512-248e-4458-9739-2751f15895bd
          output: {}
          dependencyResults: {}
    deploy.backend:
      type: deploy
      key: deploy.backend
      name: backend
      description: deploying service 'backend' (from module 'server')
      completedAt: '2020-05-26T21:21:02.441Z'
      batchId: f40ce512-248e-4458-9739-2751f15895bd
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-56ab2b577f
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: backend-v-56ab2b577f
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-56ab2b577f
              namespace: node-microservice
              labels:
                module: server
                service: backend
                garden.io/version: v-56ab2b577f
            spec:
              selector:
                matchLabels:
                  service: backend
                  garden.io/version: v-56ab2b577f
              template:
                metadata:
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-56ab2b577f
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.backend:
          type: get-service-status
          key: get-service-status.backend
          name: backend
          description: getting status for service 'backend' (from module 'server')
          completedAt: '2020-05-26T21:21:02.351Z'
          batchId: f40ce512-248e-4458-9739-2751f15895bd
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-56ab2b577f
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: backend-v-56ab2b577f
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-56ab2b577f
                  namespace: node-microservice
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-56ab2b577f
                spec:
                  selector:
                    matchLabels:
                      service: backend
                      garden.io/version: v-56ab2b577f
                  template:
                    metadata:
                      labels:
                        module: server
                        service: backend
                        garden.io/version: v-56ab2b577f
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults:
            get-service-status.db:
              type: get-service-status
              key: get-service-status.db
              name: db
              description: getting status for service 'db' (from module 'db')
              completedAt: '2020-05-26T21:21:01.585Z'
              batchId: f40ce512-248e-4458-9739-2751f15895bd
              output:
                forwardablePorts: []
                ingresses: []
                state: ready
                version: v-57df7df941
                detail:
                  remoteResources: []
                  workload:
                    kind: Deployment
                    apiVersion: apps/v1
                    metadata:
                      name: db-v-57df7df941
                      annotations:
                        garden.io/configured.replicas: '1'
                        garden.io/generated: 'true'
                        garden.io/version: v-57df7df941
                      namespace: node-microservice
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      selector:
                        matchLabels:
                          service: db
                          garden.io/version: v-57df7df941
                      template:
                        metadata:
                          labels:
                            module: db
                            service: db
                            garden.io/version: v-57df7df941
                        spec:
                          containers: []
                          restartPolicy: Always
                          terminationGracePeriodSeconds: 5
                          dnsPolicy: ClusterFirst
                      replicas: 1
                      strategy:
                        type: RollingUpdate
                        rollingUpdate:
                          maxUnavailable: 1
                          maxSurge: 1
                      revisionHistoryLimit: 3
              dependencyResults: {}
        deploy.db:
          type: deploy
          key: deploy.db
          name: db
          description: deploying service 'db' (from module 'db')
          completedAt: '2020-05-26T21:21:02.297Z'
          batchId: f40ce512-248e-4458-9739-2751f15895bd
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults:
            get-service-status.db:
              type: get-service-status
              key: get-service-status.db
              name: db
              description: getting status for service 'db' (from module 'db')
              completedAt: '2020-05-26T21:21:01.585Z'
              batchId: f40ce512-248e-4458-9739-2751f15895bd
              output:
                forwardablePorts: []
                ingresses: []
                state: ready
                version: v-57df7df941
                detail:
                  remoteResources: []
                  workload:
                    kind: Deployment
                    apiVersion: apps/v1
                    metadata:
                      name: db-v-57df7df941
                      annotations:
                        garden.io/configured.replicas: '1'
                        garden.io/generated: 'true'
                        garden.io/version: v-57df7df941
                      namespace: node-microservice
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      selector:
                        matchLabels:
                          service: db
                          garden.io/version: v-57df7df941
                      template:
                        metadata:
                          labels:
                            module: db
                            service: db
                            garden.io/version: v-57df7df941
                        spec:
                          containers: []
                          restartPolicy: Always
                          terminationGracePeriodSeconds: 5
                          dnsPolicy: ClusterFirst
                      replicas: 1
                      strategy:
                        type: RollingUpdate
                        rollingUpdate:
                          maxUnavailable: 1
                          maxSurge: 1
                      revisionHistoryLimit: 3
              dependencyResults: {}
            build.db:
              type: build
              key: build.db
              name: db
              description: building db
              completedAt: '2020-05-26T21:21:02.292Z'
              batchId: f40ce512-248e-4458-9739-2751f15895bd
              output:
                fresh: false
              dependencyResults:
                stage-build.db:
                  type: stage-build
                  key: stage-build.db
                  name: db
                  description: staging build for db
                  completedAt: '2020-05-26T21:21:02.285Z'
                  batchId: f40ce512-248e-4458-9739-2751f15895bd
                  output: {}
                  dependencyResults: {}
        build.server:
          type: build
          key: build.server
          name: server
          description: building server
          completedAt: '2020-05-26T21:21:02.436Z'
          batchId: f40ce512-248e-4458-9739-2751f15895bd
          output:
            fresh: false
          dependencyResults:
            stage-build.server:
              type: stage-build
              key: stage-build.server
              name: server
              description: staging build for server
              completedAt: '2020-05-26T21:21:01.597Z'
              batchId: f40ce512-248e-4458-9739-2751f15895bd
              output: {}
              dependencyResults: {}
  restartRequired: false


[2020-05-26T21:21:06.837Z] 
See error.log for detailed error message

[2020-05-26T21:22:16.818Z] Getting status...

[2020-05-26T21:22:19.976Z] Getting status... → Done

[2020-05-26T21:22:21.273Z] Syncing module sources (5 files)...

[2020-05-26T21:22:21.277Z] Syncing module sources (16 files)...

[2020-05-26T21:22:21.342Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-26T21:22:21.344Z] Getting build status for v-56ab2b577f...

[2020-05-26T21:22:21.730Z] Getting build status for v-57df7df941...

[2020-05-26T21:22:21.733Z] Getting build status for v-57df7df941... → Done (took 0 sec)

[2020-05-26T21:22:21.737Z] Syncing module sources (16 files)... → Done (took 0.5 sec)

[2020-05-26T21:22:21.740Z] Getting build status for v-6edac0350c...

[2020-05-26T21:22:21.764Z] Deploying version v-57df7df941...

[2020-05-26T21:22:21.766Z] Deploying version v-57df7df941... → Already deployed

[2020-05-26T21:22:21.853Z] Getting build status for v-56ab2b577f... → Done (took 0.5 sec)

[2020-05-26T21:22:21.856Z] Deploying version v-56ab2b577f...

[2020-05-26T21:22:21.858Z] Deploying version v-56ab2b577f... → Already deployed

[2020-05-26T21:22:21.878Z] Building version v-6edac0350c...

[2020-05-26T21:22:21.948Z] Building client:v-6edac0350c...

[2020-05-26T21:22:22.337Z] Building client:v-6edac0350c... → Done (took 0.6 sec)

[2020-05-26T21:22:22.340Z] Deploying version v-6edac0350c...

[2020-05-26T21:22:24.071Z] Waiting for resources to be ready...

[2020-05-26T21:22:26.128Z] Deploying version v-6edac0350c...

[2020-05-26T21:22:26.142Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 10s restarting failed container=frontend pod=frontend-v-6edac0350c-64cd778595-b5wfx_node-microservice(989e2070-3440-43c1-a47a-8f13f0e27b7e)

━━━ Events ━━━
Deployment frontend-v-6edac0350c: ScalingReplicaSet - Scaled up replica set frontend-v-6edac0350c-64cd778595 to 1
Pod frontend-v-6edac0350c-64cd778595-b5wfx: Scheduled - Successfully assigned node-microservice/frontend-v-6edac0350c-64cd778595-b5wfx to minikube
Pod frontend-v-6edac0350c-64cd778595-b5wfx: Pulled - Container image "client:v-6edac0350c" already present on machine
Pod frontend-v-6edac0350c-64cd778595-b5wfx: Created - Created container frontend
Pod frontend-v-6edac0350c-64cd778595-b5wfx: Started - Started container frontend
Pod frontend-v-6edac0350c-64cd778595-b5wfx: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-6edac0350c

****** frontend-v-6edac0350c-64cd778595-b5wfx ******
------ frontend ------<no logs>
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=frontend
    pod=frontend-v-6edac0350c-64cd778595-b5wfx_node-microservice(989e2070-3440-43c1-a47a-8f13f0e27b7e)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-6edac0350c:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-6edac0350c-64cd778595 to 1\e[39m\n\e[94mPod frontend-v-6edac0350c-64cd778595-b5wfx:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-6edac0350c-64cd778595-b5wfx to minikube\e[39m\n\e[94mPod frontend-v-6edac0350c-64cd778595-b5wfx:\e[39m \e[37mPulled - Container image \"client:v-6edac0350c\" already present on machine\e[39m\n\e[94mPod frontend-v-6edac0350c-64cd778595-b5wfx:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-6edac0350c-64cd778595-b5wfx:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-6edac0350c-64cd778595-b5wfx:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-6edac0350c\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-6edac0350c-64cd778595-b5wfx ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m<no logs>"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-6edac0350c
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-6edac0350c
      uid: 88da003a-0ddc-46a2-adaf-9eb613aef16d
      resourceVersion: '16644'
      generation: 1
      creationTimestamp: '2020-05-26T21:22:22Z'
      labels:
        garden.io/version: v-6edac0350c
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: ba30a38b2f1535e1684ee508e6e691920c7d36c648df419e89c199a58163b9e2
        garden.io/version: v-6edac0350c
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"ba30a38b2f1535e1684ee508e6e691920c7d36c648df419e89c199a58163b9e2","garden.io/version":"v-6edac0350c"},"labels":{"garden.io/version":"v-6edac0350c","module":"client","service":"frontend"},"name":"frontend-v-6edac0350c","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-6edac0350c","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-6edac0350c","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-6edac0350c"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-6edac0350c\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-6edac0350c","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-6edac0350c
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-6edac0350c
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-26T21:22:26.199Z] Error: 1 deploy task(s) failed!
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at Generator.next (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at new Promise (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at Object.handleProcessResults (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at DeployCommand.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
Error Details:
results:
  taskResults:
    stage-build.server:
      type: stage-build
      key: stage-build.server
      name: server
      description: staging build for server
      completedAt: '2020-05-26T21:22:21.342Z'
      batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
      output: {}
      dependencyResults: {}
    stage-build.db:
      type: stage-build
      key: stage-build.db
      name: db
      description: staging build for db
      completedAt: '2020-05-26T21:22:21.728Z'
      batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
      output: {}
      dependencyResults: {}
    build.db:
      type: build
      key: build.db
      name: db
      description: building db
      completedAt: '2020-05-26T21:22:21.733Z'
      batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
      output:
        fresh: false
      dependencyResults:
        stage-build.db:
          type: stage-build
          key: stage-build.db
          name: db
          description: staging build for db
          completedAt: '2020-05-26T21:22:21.728Z'
          batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
          output: {}
          dependencyResults: {}
    get-service-status.db:
      type: get-service-status
      key: get-service-status.db
      name: db
      description: getting status for service 'db' (from module 'db')
      completedAt: '2020-05-26T21:22:21.758Z'
      batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-57df7df941
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: db-v-57df7df941
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-57df7df941
              namespace: node-microservice
              labels:
                module: db
                service: db
                garden.io/version: v-57df7df941
            spec:
              selector:
                matchLabels:
                  service: db
                  garden.io/version: v-57df7df941
              template:
                metadata:
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults: {}
    deploy.db:
      type: deploy
      key: deploy.db
      name: db
      description: deploying service 'db' (from module 'db')
      completedAt: '2020-05-26T21:22:21.766Z'
      batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-57df7df941
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: db-v-57df7df941
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-57df7df941
              namespace: node-microservice
              labels:
                module: db
                service: db
                garden.io/version: v-57df7df941
            spec:
              selector:
                matchLabels:
                  service: db
                  garden.io/version: v-57df7df941
              template:
                metadata:
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.db:
          type: get-service-status
          key: get-service-status.db
          name: db
          description: getting status for service 'db' (from module 'db')
          completedAt: '2020-05-26T21:22:21.758Z'
          batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults: {}
        build.db:
          type: build
          key: build.db
          name: db
          description: building db
          completedAt: '2020-05-26T21:22:21.733Z'
          batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
          output:
            fresh: false
          dependencyResults:
            stage-build.db:
              type: stage-build
              key: stage-build.db
              name: db
              description: staging build for db
              completedAt: '2020-05-26T21:22:21.728Z'
              batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
              output: {}
              dependencyResults: {}
    get-service-status.backend:
      type: get-service-status
      key: get-service-status.backend
      name: backend
      description: getting status for service 'backend' (from module 'server')
      completedAt: '2020-05-26T21:22:21.806Z'
      batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-56ab2b577f
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: backend-v-56ab2b577f
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-56ab2b577f
              namespace: node-microservice
              labels:
                module: server
                service: backend
                garden.io/version: v-56ab2b577f
            spec:
              selector:
                matchLabels:
                  service: backend
                  garden.io/version: v-56ab2b577f
              template:
                metadata:
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-56ab2b577f
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.db:
          type: get-service-status
          key: get-service-status.db
          name: db
          description: getting status for service 'db' (from module 'db')
          completedAt: '2020-05-26T21:22:21.758Z'
          batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults: {}
    build.server:
      type: build
      key: build.server
      name: server
      description: building server
      completedAt: '2020-05-26T21:22:21.853Z'
      batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
      output:
        fresh: false
      dependencyResults:
        stage-build.server:
          type: stage-build
          key: stage-build.server
          name: server
          description: staging build for server
          completedAt: '2020-05-26T21:22:21.342Z'
          batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
          output: {}
          dependencyResults: {}
    deploy.backend:
      type: deploy
      key: deploy.backend
      name: backend
      description: deploying service 'backend' (from module 'server')
      completedAt: '2020-05-26T21:22:21.858Z'
      batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-56ab2b577f
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: backend-v-56ab2b577f
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-56ab2b577f
              namespace: node-microservice
              labels:
                module: server
                service: backend
                garden.io/version: v-56ab2b577f
            spec:
              selector:
                matchLabels:
                  service: backend
                  garden.io/version: v-56ab2b577f
              template:
                metadata:
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-56ab2b577f
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.backend:
          type: get-service-status
          key: get-service-status.backend
          name: backend
          description: getting status for service 'backend' (from module 'server')
          completedAt: '2020-05-26T21:22:21.806Z'
          batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-56ab2b577f
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: backend-v-56ab2b577f
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-56ab2b577f
                  namespace: node-microservice
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-56ab2b577f
                spec:
                  selector:
                    matchLabels:
                      service: backend
                      garden.io/version: v-56ab2b577f
                  template:
                    metadata:
                      labels:
                        module: server
                        service: backend
                        garden.io/version: v-56ab2b577f
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults:
            get-service-status.db:
              type: get-service-status
              key: get-service-status.db
              name: db
              description: getting status for service 'db' (from module 'db')
              completedAt: '2020-05-26T21:22:21.758Z'
              batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
              output:
                forwardablePorts: []
                ingresses: []
                state: ready
                version: v-57df7df941
                detail:
                  remoteResources: []
                  workload:
                    kind: Deployment
                    apiVersion: apps/v1
                    metadata:
                      name: db-v-57df7df941
                      annotations:
                        garden.io/configured.replicas: '1'
                        garden.io/generated: 'true'
                        garden.io/version: v-57df7df941
                      namespace: node-microservice
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      selector:
                        matchLabels:
                          service: db
                          garden.io/version: v-57df7df941
                      template:
                        metadata:
                          labels:
                            module: db
                            service: db
                            garden.io/version: v-57df7df941
                        spec:
                          containers: []
                          restartPolicy: Always
                          terminationGracePeriodSeconds: 5
                          dnsPolicy: ClusterFirst
                      replicas: 1
                      strategy:
                        type: RollingUpdate
                        rollingUpdate:
                          maxUnavailable: 1
                          maxSurge: 1
                      revisionHistoryLimit: 3
              dependencyResults: {}
        deploy.db:
          type: deploy
          key: deploy.db
          name: db
          description: deploying service 'db' (from module 'db')
          completedAt: '2020-05-26T21:22:21.766Z'
          batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults:
            get-service-status.db:
              type: get-service-status
              key: get-service-status.db
              name: db
              description: getting status for service 'db' (from module 'db')
              completedAt: '2020-05-26T21:22:21.758Z'
              batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
              output:
                forwardablePorts: []
                ingresses: []
                state: ready
                version: v-57df7df941
                detail:
                  remoteResources: []
                  workload:
                    kind: Deployment
                    apiVersion: apps/v1
                    metadata:
                      name: db-v-57df7df941
                      annotations:
                        garden.io/configured.replicas: '1'
                        garden.io/generated: 'true'
                        garden.io/version: v-57df7df941
                      namespace: node-microservice
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      selector:
                        matchLabels:
                          service: db
                          garden.io/version: v-57df7df941
                      template:
                        metadata:
                          labels:
                            module: db
                            service: db
                            garden.io/version: v-57df7df941
                        spec:
                          containers: []
                          restartPolicy: Always
                          terminationGracePeriodSeconds: 5
                          dnsPolicy: ClusterFirst
                      replicas: 1
                      strategy:
                        type: RollingUpdate
                        rollingUpdate:
                          maxUnavailable: 1
                          maxSurge: 1
                      revisionHistoryLimit: 3
              dependencyResults: {}
            build.db:
              type: build
              key: build.db
              name: db
              description: building db
              completedAt: '2020-05-26T21:22:21.733Z'
              batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
              output:
                fresh: false
              dependencyResults:
                stage-build.db:
                  type: stage-build
                  key: stage-build.db
                  name: db
                  description: staging build for db
                  completedAt: '2020-05-26T21:22:21.728Z'
                  batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
                  output: {}
                  dependencyResults: {}
        build.server:
          type: build
          key: build.server
          name: server
          description: building server
          completedAt: '2020-05-26T21:22:21.853Z'
          batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
          output:
            fresh: false
          dependencyResults:
            stage-build.server:
              type: stage-build
              key: stage-build.server
              name: server
              description: staging build for server
              completedAt: '2020-05-26T21:22:21.342Z'
              batchId: 9665e4a0-e98d-463d-8b04-ab65e52fa790
              output: {}
              dependencyResults: {}
    get-service-status.frontend:
      type: get-service-status
      key: get-service-status.frontend
      name: frontend
      description: getting status for service 'frontend' (from module 'client')
      completedAt: '2020-05-26T21:22:21.334Z'
      batchId: 891aa412-803d-4b9a-8d6d-81f077f96c58
      output:
        forwardablePorts: []
        ingresses: []
        state: missing
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: frontend-v-6edac0350c
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-6edac0350c
              namespace: node-microservice
              labels:
                module: client
                service: frontend
                garden.io/version: v-6edac0350c
            spec:
              selector:
                matchLabels:
                  service: frontend
                  garden.io/version: v-6edac0350c
              template:
                metadata:
                  labels:
                    module: client
                    service: frontend
                    garden.io/version: v-6edac0350c
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults: {}
    stage-build.client:
      type: stage-build
      key: stage-build.client
      name: client
      description: staging build for client
      completedAt: '2020-05-26T21:22:21.737Z'
      batchId: 891aa412-803d-4b9a-8d6d-81f077f96c58
      output: {}
      dependencyResults: {}
    build.client:
      type: build
      key: build.client
      name: client
      description: building client
      completedAt: '2020-05-26T21:22:22.337Z'
      batchId: 891aa412-803d-4b9a-8d6d-81f077f96c58
      output:
        fresh: true
        buildLog: "Sending build context to Docker daemon  607.7kB\r\r\nStep 1/5 : FROM node:12\n ---> bdca973cfa07\nStep 2/5 : WORKDIR /usr/src/client\n ---> Using cache\n ---> 70b30d82d719\nStep 3/5 : COPY package*.json ./\n ---> Using cache\n ---> b3f9eb30a186\nStep 4/5 : RUN npm install\n ---> Using cache\n ---> 4dcd77c86b94\nStep 5/5 : COPY . .\n ---> fb26cb170372\nSuccessfully built fb26cb170372\nSuccessfully tagged client:v-6edac0350c\n"
        details:
          identifier: 'client:v-6edac0350c'
      dependencyResults:
        stage-build.client:
          type: stage-build
          key: stage-build.client
          name: client
          description: staging build for client
          completedAt: '2020-05-26T21:22:21.737Z'
          batchId: 891aa412-803d-4b9a-8d6d-81f077f96c58
          output: {}
          dependencyResults: {}
    deploy.frontend:
      type: deploy
      description: deploying service 'frontend' (from module 'client')
      key: deploy.frontend
      name: frontend
      error:
        detail:
          serviceName: frontend
          status:
            state: unhealthy
            lastMessage: >-
              CrashLoopBackOff - back-off 10s restarting failed
              container=frontend
              pod=frontend-v-6edac0350c-64cd778595-b5wfx_node-microservice(989e2070-3440-43c1-a47a-8f13f0e27b7e)
            logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-6edac0350c:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-6edac0350c-64cd778595 to 1\e[39m\n\e[94mPod frontend-v-6edac0350c-64cd778595-b5wfx:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-6edac0350c-64cd778595-b5wfx to minikube\e[39m\n\e[94mPod frontend-v-6edac0350c-64cd778595-b5wfx:\e[39m \e[37mPulled - Container image \"client:v-6edac0350c\" already present on machine\e[39m\n\e[94mPod frontend-v-6edac0350c-64cd778595-b5wfx:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-6edac0350c-64cd778595-b5wfx:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-6edac0350c-64cd778595-b5wfx:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-6edac0350c\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-6edac0350c-64cd778595-b5wfx ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m<no logs>"
            resource:
              kind: Deployment
              apiVersion: apps/v1
              metadata:
                name: frontend-v-6edac0350c
                namespace: node-microservice
                selfLink: >-
                  /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-6edac0350c
                uid: 88da003a-0ddc-46a2-adaf-9eb613aef16d
                resourceVersion: '16644'
                generation: 1
                creationTimestamp: '2020-05-26T21:22:22Z'
                labels:
                  garden.io/version: v-6edac0350c
                  module: client
                  service: frontend
                annotations:
                  deployment.kubernetes.io/revision: '1'
                  garden.io/configured.replicas: '1'
                  garden.io/generated: 'true'
                  garden.io/manifest-hash: >-
                    ba30a38b2f1535e1684ee508e6e691920c7d36c648df419e89c199a58163b9e2
                  garden.io/version: v-6edac0350c
                  kubectl.kubernetes.io/last-applied-configuration: >
                    {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"ba30a38b2f1535e1684ee508e6e691920c7d36c648df419e89c199a58163b9e2","garden.io/version":"v-6edac0350c"},"labels":{"garden.io/version":"v-6edac0350c","module":"client","service":"frontend"},"name":"frontend-v-6edac0350c","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-6edac0350c","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-6edac0350c","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-6edac0350c"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-6edac0350c\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-6edac0350c","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
                managedFields:
                  - manager: kube-controller-manager
                    operation: Update
                    apiVersion: apps/v1
                    time: '2020-05-26T21:22:22Z'
                    fieldsType: FieldsV1
                    fieldsV1:
                      'f:metadata':
                        'f:annotations':
                          'f:deployment.kubernetes.io/revision': {}
                      'f:status':
                        'f:conditions':
                          .: {}
                          'k:{"type":"Available"}':
                            .: {}
                            'f:lastTransitionTime': {}
                            'f:lastUpdateTime': {}
                            'f:message': {}
                            'f:reason': {}
                            'f:status': {}
                            'f:type': {}
                          'k:{"type":"Progressing"}':
                            .: {}
                            'f:lastTransitionTime': {}
                            'f:lastUpdateTime': {}
                            'f:message': {}
                            'f:reason': {}
                            'f:status': {}
                            'f:type': {}
                        'f:observedGeneration': {}
                        'f:replicas': {}
                        'f:unavailableReplicas': {}
                        'f:updatedReplicas': {}
                  - manager: kubectl
                    operation: Update
                    apiVersion: apps/v1
                    time: '2020-05-26T21:22:22Z'
                    fieldsType: FieldsV1
                    fieldsV1:
                      'f:metadata':
                        'f:annotations':
                          .: {}
                          'f:garden.io/configured.replicas': {}
                          'f:garden.io/generated': {}
                          'f:garden.io/manifest-hash': {}
                          'f:garden.io/version': {}
                          'f:kubectl.kubernetes.io/last-applied-configuration': {}
                        'f:labels':
                          .: {}
                          'f:garden.io/version': {}
                          'f:module': {}
                          'f:service': {}
                      'f:spec':
                        'f:progressDeadlineSeconds': {}
                        'f:replicas': {}
                        'f:revisionHistoryLimit': {}
                        'f:selector':
                          'f:matchLabels':
                            .: {}
                            'f:garden.io/version': {}
                            'f:service': {}
                        'f:strategy':
                          'f:rollingUpdate':
                            .: {}
                            'f:maxSurge': {}
                            'f:maxUnavailable': {}
                          'f:type': {}
                        'f:template':
                          'f:metadata':
                            'f:labels':
                              .: {}
                              'f:garden.io/version': {}
                              'f:module': {}
                              'f:service': {}
                          'f:spec':
                            'f:containers':
                              'k:{"name":"frontend"}':
                                .: {}
                                'f:env':
                                  .: {}
                                  'k:{"name":"GARDEN_DEPENDENCIES"}':
                                    .: {}
                                    'f:name': {}
                                    'f:value': {}
                                  'k:{"name":"GARDEN_VERSION"}':
                                    .: {}
                                    'f:name': {}
                                    'f:value': {}
                                  'k:{"name":"POD_HOST_IP"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_IP"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NAME"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NAMESPACE"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_NODE_NAME"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_SERVICE_ACCOUNT"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                  'k:{"name":"POD_UID"}':
                                    .: {}
                                    'f:name': {}
                                    'f:valueFrom':
                                      .: {}
                                      'f:fieldRef':
                                        .: {}
                                        'f:apiVersion': {}
                                        'f:fieldPath': {}
                                'f:image': {}
                                'f:imagePullPolicy': {}
                                'f:name': {}
                                'f:resources':
                                  .: {}
                                  'f:limits':
                                    .: {}
                                    'f:cpu': {}
                                    'f:memory': {}
                                  'f:requests':
                                    .: {}
                                    'f:cpu': {}
                                    'f:memory': {}
                                'f:securityContext':
                                  .: {}
                                  'f:allowPrivilegeEscalation': {}
                                'f:terminationMessagePath': {}
                                'f:terminationMessagePolicy': {}
                            'f:dnsPolicy': {}
                            'f:restartPolicy': {}
                            'f:schedulerName': {}
                            'f:securityContext': {}
                            'f:terminationGracePeriodSeconds': {}
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    garden.io/version: v-6edac0350c
                    service: frontend
                template:
                  metadata:
                    creationTimestamp: null
                    labels:
                      garden.io/version: v-6edac0350c
                      module: client
                      service: frontend
                  spec:
                    containers:
                      - name: frontend
                        image: 'client:v-6edac0350c'
                        env:
                          - name: GARDEN_VERSION
                            value: v-6edac0350c
                          - name: GARDEN_DEPENDENCIES
                            value: >-
                              [{"moduleName":"client","name":"client","type":"build","version":"v-6edac0350c"}]
                          - name: POD_HOST_IP
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: status.hostIP
                          - name: POD_IP
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: status.podIP
                          - name: POD_NAME
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.name
                          - name: POD_NAMESPACE
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.namespace
                          - name: POD_NODE_NAME
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: spec.nodeName
                          - name: POD_SERVICE_ACCOUNT
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: spec.serviceAccountName
                          - name: POD_UID
                            valueFrom:
                              fieldRef:
                                apiVersion: v1
                                fieldPath: metadata.uid
                        resources:
                          limits:
                            cpu: '1'
                            memory: 1Gi
                          requests:
                            cpu: 10m
                            memory: 64Mi
                        terminationMessagePath: /dev/termination-log
                        terminationMessagePolicy: File
                        imagePullPolicy: IfNotPresent
                        securityContext:
                          allowPrivilegeEscalation: false
                    restartPolicy: Always
                    terminationGracePeriodSeconds: 5
                    dnsPolicy: ClusterFirst
                    securityContext: {}
                    schedulerName: default-scheduler
                strategy:
                  type: RollingUpdate
                  rollingUpdate:
                    maxUnavailable: 1
                    maxSurge: 1
                revisionHistoryLimit: 3
                progressDeadlineSeconds: 600
              status:
                observedGeneration: 1
                replicas: 1
                updatedReplicas: 1
                unavailableReplicas: 1
                conditions:
                  - type: Available
                    status: 'True'
                    lastUpdateTime: '2020-05-26T21:22:22Z'
                    lastTransitionTime: '2020-05-26T21:22:22Z'
                    reason: MinimumReplicasAvailable
                    message: Deployment has minimum availability.
                  - type: Progressing
                    status: 'True'
                    lastUpdateTime: '2020-05-26T21:22:22Z'
                    lastTransitionTime: '2020-05-26T21:22:22Z'
                    reason: ReplicaSetUpdated
                    message: >-
                      ReplicaSet "frontend-v-6edac0350c-64cd778595" is
                      progressing.
        type: deployment
      completedAt: '2020-05-26T21:22:26.128Z'
      batchId: 891aa412-803d-4b9a-8d6d-81f077f96c58
  restartRequired: false


[2020-05-26T21:22:26.214Z] 
See error.log for detailed error message

[2020-05-26T21:29:48.618Z] Getting status...

[2020-05-26T21:29:51.764Z] Getting status... → Done

[2020-05-26T21:29:52.951Z] Syncing module sources (1 file)...

[2020-05-26T21:29:52.956Z] Syncing module sources (5 files)...

[2020-05-26T21:29:53.009Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-26T21:29:53.011Z] Getting build status for v-56ab2b577f...

[2020-05-26T21:29:53.664Z] Getting build status for v-57df7df941...

[2020-05-26T21:29:53.666Z] Getting build status for v-57df7df941... → Done (took 0 sec)

[2020-05-26T21:29:53.671Z] Syncing module sources (1 file)... → Done (took 0.7 sec)

[2020-05-26T21:29:53.673Z] Getting build status for v-2c7b9b23bc...

[2020-05-26T21:29:53.698Z] Deploying version v-57df7df941...

[2020-05-26T21:29:53.701Z] Deploying version v-57df7df941... → Already deployed

[2020-05-26T21:29:53.809Z] Getting build status for v-56ab2b577f... → Done (took 0.8 sec)

[2020-05-26T21:29:53.812Z] Deploying version v-56ab2b577f...

[2020-05-26T21:29:53.814Z] Deploying version v-56ab2b577f... → Already deployed

[2020-05-26T21:29:53.817Z] Building version v-2c7b9b23bc...

[2020-05-26T21:29:53.883Z] Building client:v-2c7b9b23bc...

[2020-05-26T21:30:07.065Z] Building client:v-2c7b9b23bc...

[2020-05-26T21:30:07.089Z] Error: Unable to run docker command: Command "docker build -t client:v-2c7b9b23bc /Users/emilwils/Documents/node-microservice/.garden/build/client" failed with code 127:

The command '/bin/sh -c npm run build' returned a non-zero code: 127

Here's the full output:

Sending build context to Docker daemon  2.048kB
Step 1/3 : FROM nginx
latest: Pulling from library/nginx
afb6ec6fdc1c: Pulling fs layer
b90c53a0b692: Pulling fs layer
11fa52a0fdc0: Pulling fs layer
11fa52a0fdc0: Verifying Checksum
11fa52a0fdc0: Download complete
b90c53a0b692: Verifying Checksum
b90c53a0b692: Download complete
afb6ec6fdc1c: Download complete
afb6ec6fdc1c: Pull complete
b90c53a0b692: Pull complete
11fa52a0fdc0: Pull complete
Digest: sha256:30dfa439718a17baafefadf16c5e7c9d0a1cde97b4fd84f63b69e13513be7097
Status: Downloaded newer image for nginx:latest
 ---> 9beeba249f3e
Step 2/3 : RUN npm run build
 ---> Running in d982275b72ce
/bin/sh: 1: npm: not found
The command '/bin/sh -c npm run build' returned a non-zero code: 127
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
    at Generator.throw (<anonymous>)
    at rejected (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
    at processTicksAndRejections (internal/process/task_queues.js:93:5)
Error Details:
err:
  detail:
    cmd: docker
    args:
      - build
      - '-t'
      - 'client:v-2c7b9b23bc'
      - /Users/emilwils/Documents/node-microservice/.garden/build/client
    opts:
      cwd: /Users/emilwils/Documents/node-microservice/.garden/build/client
      ignoreError: false
      stdout:
        _readableState:
          objectMode: true
          highWaterMark: 16
          buffer:
            head: null
            tail: null
            length: 0
          length: 0
          pipes: null
          pipesCount: 0
          flowing: true
          ended: true
          endEmitted: true
          reading: false
          sync: false
          needReadable: false
          emittedReadable: false
          readableListening: false
          resumeScheduled: false
          paused: false
          emitClose: true
          destroyed: false
          defaultEncoding: utf8
          awaitDrain: 0
          readingMore: false
          decoder: null
          encoding: null
        readable: false
        _events: {}
        _eventsCount: 3
        _writableState:
          objectMode: false
          highWaterMark: 16384
          finalCalled: false
          needDrain: false
          ending: true
          ended: true
          finished: true
          destroyed: false
          decodeStrings: true
          defaultEncoding: utf8
          length: 0
          writing: false
          corked: 0
          sync: false
          bufferProcessing: false
          writecb: null
          writelen: 0
          bufferedRequest: null
          lastBufferedRequest: null
          pendingcb: 0
          prefinished: true
          errorEmitted: false
          emitClose: true
          bufferedRequestCount: 0
          corkedRequestsFree:
            next: null
            entry: null
        writable: false
        allowHalfOpen: true
        _transformState:
          needTransform: false
          transforming: false
          writecb: null
          writechunk: null
          writeencoding: buffer
        matcher: {}
        overflow: false
      timeout: 1200
      env:
        TERM_PROGRAM: Apple_Terminal
        SHELL: /bin/zsh
        TERM: xterm-256color
        TMPDIR: /var/folders/nr/97f582w94rl7snqc5h3ldwqh0000gn/T/
        TERM_PROGRAM_VERSION: '433'
        TERM_SESSION_ID: A6BD6B7C-14CE-4383-8F6D-D382816C6EE9
        USER: emilwils
        SSH_AUTH_SOCK: /private/tmp/com.apple.launchd.3ygVNIh0vg/Listeners
        PATH: >-
          /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware
          Fusion.app/Contents/Public
        LaunchInstanceID: DD0DB73A-B855-43F4-B00C-C5EFD5F0D6A8
        PWD: /Users/emilwils/Documents/node-microservice
        LANG: en_US.UTF-8
        XPC_FLAGS: '0x0'
        XPC_SERVICE_NAME: '0'
        SHLVL: '1'
        HOME: /Users/emilwils
        LOGNAME: emilwils
        SECURITYSESSIONID: 186a6
        _: /usr/local/bin/garden
        __CF_USER_TEXT_ENCODING: '0x1F5:0x0:0x0'
        DOCKER_TLS_VERIFY: '1'
        DOCKER_HOST: 'tcp://192.168.99.108:2376'
        DOCKER_CERT_PATH: /Users/emilwils/.minikube/certs
        MINIKUBE_ACTIVE_DOCKERD: minikube
        DOCKER_CLI_EXPERIMENTAL: enabled
        PKG_EXECPATH: /usr/local/Cellar/garden-cli/0.11.14/libexec/garden
    result:
      code: 127
      all: "Sending build context to Docker daemon  2.048kB\r\r\nStep 1/3 : FROM nginx\nlatest: Pulling from library/nginx\nafb6ec6fdc1c: Pulling fs layer\nb90c53a0b692: Pulling fs layer\n11fa52a0fdc0: Pulling fs layer\n11fa52a0fdc0: Verifying Checksum\n11fa52a0fdc0: Download complete\nb90c53a0b692: Verifying Checksum\nb90c53a0b692: Download complete\nafb6ec6fdc1c: Download complete\nafb6ec6fdc1c: Pull complete\nb90c53a0b692: Pull complete\n11fa52a0fdc0: Pull complete\nDigest: sha256:30dfa439718a17baafefadf16c5e7c9d0a1cde97b4fd84f63b69e13513be7097\nStatus: Downloaded newer image for nginx:latest\n ---> 9beeba249f3e\nStep 2/3 : RUN npm run build\n ---> Running in d982275b72ce\n\e[91m/bin/sh: 1: npm: not found\n\e[0mThe command '/bin/sh -c npm run build' returned a non-zero code: 127\n"
      stdout: "Sending build context to Docker daemon  2.048kB\r\r\nStep 1/3 : FROM nginx\nlatest: Pulling from library/nginx\nafb6ec6fdc1c: Pulling fs layer\nb90c53a0b692: Pulling fs layer\n11fa52a0fdc0: Pulling fs layer\n11fa52a0fdc0: Verifying Checksum\n11fa52a0fdc0: Download complete\nb90c53a0b692: Verifying Checksum\nb90c53a0b692: Download complete\nafb6ec6fdc1c: Download complete\nafb6ec6fdc1c: Pull complete\nb90c53a0b692: Pull complete\n11fa52a0fdc0: Pull complete\nDigest: sha256:30dfa439718a17baafefadf16c5e7c9d0a1cde97b4fd84f63b69e13513be7097\nStatus: Downloaded newer image for nginx:latest\n ---> 9beeba249f3e\nStep 2/3 : RUN npm run build\n ---> Running in d982275b72ce\n\e[91m/bin/sh: 1: npm: not found\n\e[0m"
      stderr: |
        The command '/bin/sh -c npm run build' returned a non-zero code: 127
      proc:
        _events: {}
        _eventsCount: 2
        _closesNeeded: 3
        _closesGot: 3
        connected: false
        signalCode: null
        exitCode: 127
        killed: false
        spawnfile: docker
        _handle: null
        spawnargs:
          - docker
          - build
          - '-t'
          - 'client:v-2c7b9b23bc'
          - /Users/emilwils/Documents/node-microservice/.garden/build/client
        pid: 24424
        stdin:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: null
            ended: false
            endEmitted: false
            reading: false
            sync: true
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: true
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 1
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stdout:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: false
            ended: true
            endEmitted: true
            reading: false
            sync: false
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: false
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 3
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stderr:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: true
            ended: true
            endEmitted: true
            reading: false
            sync: false
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: false
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 3
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stdio:
          - ~err~detail~result~proc~stdin
          - ~err~detail~result~proc~stdout
          - ~err~detail~result~proc~stderr
    code: 127
    all: "Sending build context to Docker daemon  2.048kB\r\r\nStep 1/3 : FROM nginx\nlatest: Pulling from library/nginx\nafb6ec6fdc1c: Pulling fs layer\nb90c53a0b692: Pulling fs layer\n11fa52a0fdc0: Pulling fs layer\n11fa52a0fdc0: Verifying Checksum\n11fa52a0fdc0: Download complete\nb90c53a0b692: Verifying Checksum\nb90c53a0b692: Download complete\nafb6ec6fdc1c: Download complete\nafb6ec6fdc1c: Pull complete\nb90c53a0b692: Pull complete\n11fa52a0fdc0: Pull complete\nDigest: sha256:30dfa439718a17baafefadf16c5e7c9d0a1cde97b4fd84f63b69e13513be7097\nStatus: Downloaded newer image for nginx:latest\n ---> 9beeba249f3e\nStep 2/3 : RUN npm run build\n ---> Running in d982275b72ce\n\e[91m/bin/sh: 1: npm: not found\n\e[0mThe command '/bin/sh -c npm run build' returned a non-zero code: 127\n"
    stdout: "Sending build context to Docker daemon  2.048kB\r\r\nStep 1/3 : FROM nginx\nlatest: Pulling from library/nginx\nafb6ec6fdc1c: Pulling fs layer\nb90c53a0b692: Pulling fs layer\n11fa52a0fdc0: Pulling fs layer\n11fa52a0fdc0: Verifying Checksum\n11fa52a0fdc0: Download complete\nb90c53a0b692: Verifying Checksum\nb90c53a0b692: Download complete\nafb6ec6fdc1c: Download complete\nafb6ec6fdc1c: Pull complete\nb90c53a0b692: Pull complete\n11fa52a0fdc0: Pull complete\nDigest: sha256:30dfa439718a17baafefadf16c5e7c9d0a1cde97b4fd84f63b69e13513be7097\nStatus: Downloaded newer image for nginx:latest\n ---> 9beeba249f3e\nStep 2/3 : RUN npm run build\n ---> Running in d982275b72ce\n\e[91m/bin/sh: 1: npm: not found\n\e[0m"
    stderr: |
      The command '/bin/sh -c npm run build' returned a non-zero code: 127
    proc: ~err~detail~result~proc
  type: runtime
args: []
cwd: /Users/emilwils/Documents/node-microservice/.garden/build/client


[2020-05-26T21:30:07.171Z] Error: 1 deploy task(s) failed!
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at Generator.next (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at new Promise (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at Object.handleProcessResults (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at DeployCommand.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/commands/deploy.js:0)
Error Details:
results:
  taskResults:
    get-service-status.frontend:
      type: get-service-status
      key: get-service-status.frontend
      name: frontend
      description: getting status for service 'frontend' (from module 'client')
      completedAt: '2020-05-26T21:29:52.998Z'
      batchId: c56466f3-6d55-4cee-94de-c47338a0fcd6
      output:
        forwardablePorts: []
        ingresses: []
        state: missing
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: frontend-v-2c7b9b23bc
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-2c7b9b23bc
              namespace: node-microservice
              labels:
                module: client
                service: frontend
                garden.io/version: v-2c7b9b23bc
            spec:
              selector:
                matchLabels:
                  service: frontend
                  garden.io/version: v-2c7b9b23bc
              template:
                metadata:
                  labels:
                    module: client
                    service: frontend
                    garden.io/version: v-2c7b9b23bc
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults: {}
    stage-build.client:
      type: stage-build
      key: stage-build.client
      name: client
      description: staging build for client
      completedAt: '2020-05-26T21:29:53.671Z'
      batchId: c56466f3-6d55-4cee-94de-c47338a0fcd6
      output: {}
      dependencyResults: {}
    build.client:
      type: build
      description: building client
      key: build.client
      name: client
      error:
        detail:
          err:
            detail:
              cmd: docker
              args:
                - build
                - '-t'
                - 'client:v-2c7b9b23bc'
                - >-
                  /Users/emilwils/Documents/node-microservice/.garden/build/client
              opts:
                cwd: >-
                  /Users/emilwils/Documents/node-microservice/.garden/build/client
                ignoreError: false
                stdout:
                  _readableState:
                    objectMode: true
                    highWaterMark: 16
                    buffer:
                      head: null
                      tail: null
                      length: 0
                    length: 0
                    pipes: null
                    pipesCount: 0
                    flowing: true
                    ended: true
                    endEmitted: true
                    reading: false
                    sync: false
                    needReadable: false
                    emittedReadable: false
                    readableListening: false
                    resumeScheduled: false
                    paused: false
                    emitClose: true
                    destroyed: false
                    defaultEncoding: utf8
                    awaitDrain: 0
                    readingMore: false
                    decoder: null
                    encoding: null
                  readable: false
                  _events: {}
                  _eventsCount: 3
                  _writableState:
                    objectMode: false
                    highWaterMark: 16384
                    finalCalled: false
                    needDrain: false
                    ending: true
                    ended: true
                    finished: true
                    destroyed: false
                    decodeStrings: true
                    defaultEncoding: utf8
                    length: 0
                    writing: false
                    corked: 0
                    sync: false
                    bufferProcessing: false
                    writecb: null
                    writelen: 0
                    bufferedRequest: null
                    lastBufferedRequest: null
                    pendingcb: 0
                    prefinished: true
                    errorEmitted: false
                    emitClose: true
                    bufferedRequestCount: 0
                    corkedRequestsFree:
                      next: null
                      entry: null
                  writable: false
                  allowHalfOpen: true
                  _transformState:
                    needTransform: false
                    transforming: false
                    writecb: null
                    writechunk: null
                    writeencoding: buffer
                  matcher: {}
                  overflow: false
                timeout: 1200
                env:
                  TERM_PROGRAM: Apple_Terminal
                  SHELL: /bin/zsh
                  TERM: xterm-256color
                  TMPDIR: /var/folders/nr/97f582w94rl7snqc5h3ldwqh0000gn/T/
                  TERM_PROGRAM_VERSION: '433'
                  TERM_SESSION_ID: A6BD6B7C-14CE-4383-8F6D-D382816C6EE9
                  USER: emilwils
                  SSH_AUTH_SOCK: /private/tmp/com.apple.launchd.3ygVNIh0vg/Listeners
                  PATH: >-
                    /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware
                    Fusion.app/Contents/Public
                  LaunchInstanceID: DD0DB73A-B855-43F4-B00C-C5EFD5F0D6A8
                  PWD: /Users/emilwils/Documents/node-microservice
                  LANG: en_US.UTF-8
                  XPC_FLAGS: '0x0'
                  XPC_SERVICE_NAME: '0'
                  SHLVL: '1'
                  HOME: /Users/emilwils
                  LOGNAME: emilwils
                  SECURITYSESSIONID: 186a6
                  _: /usr/local/bin/garden
                  __CF_USER_TEXT_ENCODING: '0x1F5:0x0:0x0'
                  DOCKER_TLS_VERIFY: '1'
                  DOCKER_HOST: 'tcp://192.168.99.108:2376'
                  DOCKER_CERT_PATH: /Users/emilwils/.minikube/certs
                  MINIKUBE_ACTIVE_DOCKERD: minikube
                  DOCKER_CLI_EXPERIMENTAL: enabled
                  PKG_EXECPATH: /usr/local/Cellar/garden-cli/0.11.14/libexec/garden
              result:
                code: 127
                all: "Sending build context to Docker daemon  2.048kB\r\r\nStep 1/3 : FROM nginx\nlatest: Pulling from library/nginx\nafb6ec6fdc1c: Pulling fs layer\nb90c53a0b692: Pulling fs layer\n11fa52a0fdc0: Pulling fs layer\n11fa52a0fdc0: Verifying Checksum\n11fa52a0fdc0: Download complete\nb90c53a0b692: Verifying Checksum\nb90c53a0b692: Download complete\nafb6ec6fdc1c: Download complete\nafb6ec6fdc1c: Pull complete\nb90c53a0b692: Pull complete\n11fa52a0fdc0: Pull complete\nDigest: sha256:30dfa439718a17baafefadf16c5e7c9d0a1cde97b4fd84f63b69e13513be7097\nStatus: Downloaded newer image for nginx:latest\n ---> 9beeba249f3e\nStep 2/3 : RUN npm run build\n ---> Running in d982275b72ce\n\e[91m/bin/sh: 1: npm: not found\n\e[0mThe command '/bin/sh -c npm run build' returned a non-zero code: 127\n"
                stdout: "Sending build context to Docker daemon  2.048kB\r\r\nStep 1/3 : FROM nginx\nlatest: Pulling from library/nginx\nafb6ec6fdc1c: Pulling fs layer\nb90c53a0b692: Pulling fs layer\n11fa52a0fdc0: Pulling fs layer\n11fa52a0fdc0: Verifying Checksum\n11fa52a0fdc0: Download complete\nb90c53a0b692: Verifying Checksum\nb90c53a0b692: Download complete\nafb6ec6fdc1c: Download complete\nafb6ec6fdc1c: Pull complete\nb90c53a0b692: Pull complete\n11fa52a0fdc0: Pull complete\nDigest: sha256:30dfa439718a17baafefadf16c5e7c9d0a1cde97b4fd84f63b69e13513be7097\nStatus: Downloaded newer image for nginx:latest\n ---> 9beeba249f3e\nStep 2/3 : RUN npm run build\n ---> Running in d982275b72ce\n\e[91m/bin/sh: 1: npm: not found\n\e[0m"
                stderr: >
                  The command '/bin/sh -c npm run build' returned a non-zero
                  code: 127
                proc:
                  _events: {}
                  _eventsCount: 2
                  _closesNeeded: 3
                  _closesGot: 3
                  connected: false
                  signalCode: null
                  exitCode: 127
                  killed: false
                  spawnfile: docker
                  _handle: null
                  spawnargs:
                    - docker
                    - build
                    - '-t'
                    - 'client:v-2c7b9b23bc'
                    - >-
                      /Users/emilwils/Documents/node-microservice/.garden/build/client
                  pid: 24424
                  stdin:
                    connecting: false
                    _hadError: false
                    _parent: null
                    _host: null
                    _readableState:
                      objectMode: false
                      highWaterMark: 16384
                      buffer:
                        head: null
                        tail: null
                        length: 0
                      length: 0
                      pipes: null
                      pipesCount: 0
                      flowing: null
                      ended: false
                      endEmitted: false
                      reading: false
                      sync: true
                      needReadable: false
                      emittedReadable: false
                      readableListening: false
                      resumeScheduled: false
                      paused: true
                      emitClose: false
                      autoDestroy: false
                      destroyed: true
                      defaultEncoding: utf8
                      awaitDrain: 0
                      readingMore: false
                      decoder: null
                      encoding: null
                    readable: false
                    _events: {}
                    _eventsCount: 1
                    _writableState:
                      objectMode: false
                      highWaterMark: 16384
                      finalCalled: false
                      needDrain: false
                      ending: false
                      ended: false
                      finished: false
                      destroyed: true
                      decodeStrings: false
                      defaultEncoding: utf8
                      length: 0
                      writing: false
                      corked: 0
                      sync: true
                      bufferProcessing: false
                      writecb: null
                      writelen: 0
                      bufferedRequest: null
                      lastBufferedRequest: null
                      pendingcb: 0
                      prefinished: false
                      errorEmitted: false
                      emitClose: false
                      autoDestroy: false
                      bufferedRequestCount: 0
                      corkedRequestsFree:
                        next: null
                        entry: null
                    writable: false
                    allowHalfOpen: false
                    _sockname: null
                    _pendingData: null
                    _pendingEncoding: ''
                    server: null
                    _server: null
                  stdout:
                    connecting: false
                    _hadError: false
                    _parent: null
                    _host: null
                    _readableState:
                      objectMode: false
                      highWaterMark: 16384
                      buffer:
                        head: null
                        tail: null
                        length: 0
                      length: 0
                      pipes: null
                      pipesCount: 0
                      flowing: false
                      ended: true
                      endEmitted: true
                      reading: false
                      sync: false
                      needReadable: false
                      emittedReadable: false
                      readableListening: false
                      resumeScheduled: false
                      paused: false
                      emitClose: false
                      autoDestroy: false
                      destroyed: true
                      defaultEncoding: utf8
                      awaitDrain: 0
                      readingMore: false
                      decoder: null
                      encoding: null
                    readable: false
                    _events: {}
                    _eventsCount: 3
                    _writableState:
                      objectMode: false
                      highWaterMark: 16384
                      finalCalled: false
                      needDrain: false
                      ending: false
                      ended: false
                      finished: false
                      destroyed: true
                      decodeStrings: false
                      defaultEncoding: utf8
                      length: 0
                      writing: false
                      corked: 0
                      sync: true
                      bufferProcessing: false
                      writecb: null
                      writelen: 0
                      bufferedRequest: null
                      lastBufferedRequest: null
                      pendingcb: 0
                      prefinished: false
                      errorEmitted: false
                      emitClose: false
                      autoDestroy: false
                      bufferedRequestCount: 0
                      corkedRequestsFree:
                        next: null
                        entry: null
                    writable: false
                    allowHalfOpen: false
                    _sockname: null
                    _pendingData: null
                    _pendingEncoding: ''
                    server: null
                    _server: null
                  stderr:
                    connecting: false
                    _hadError: false
                    _parent: null
                    _host: null
                    _readableState:
                      objectMode: false
                      highWaterMark: 16384
                      buffer:
                        head: null
                        tail: null
                        length: 0
                      length: 0
                      pipes: null
                      pipesCount: 0
                      flowing: true
                      ended: true
                      endEmitted: true
                      reading: false
                      sync: false
                      needReadable: false
                      emittedReadable: false
                      readableListening: false
                      resumeScheduled: false
                      paused: false
                      emitClose: false
                      autoDestroy: false
                      destroyed: true
                      defaultEncoding: utf8
                      awaitDrain: 0
                      readingMore: false
                      decoder: null
                      encoding: null
                    readable: false
                    _events: {}
                    _eventsCount: 3
                    _writableState:
                      objectMode: false
                      highWaterMark: 16384
                      finalCalled: false
                      needDrain: false
                      ending: false
                      ended: false
                      finished: false
                      destroyed: true
                      decodeStrings: false
                      defaultEncoding: utf8
                      length: 0
                      writing: false
                      corked: 0
                      sync: true
                      bufferProcessing: false
                      writecb: null
                      writelen: 0
                      bufferedRequest: null
                      lastBufferedRequest: null
                      pendingcb: 0
                      prefinished: false
                      errorEmitted: false
                      emitClose: false
                      autoDestroy: false
                      bufferedRequestCount: 0
                      corkedRequestsFree:
                        next: null
                        entry: null
                    writable: false
                    allowHalfOpen: false
                    _sockname: null
                    _pendingData: null
                    _pendingEncoding: ''
                    server: null
                    _server: null
                  stdio:
                    - >-
                      ~results~taskResults~build.client~error~detail~err~detail~result~proc~stdin
                    - >-
                      ~results~taskResults~build.client~error~detail~err~detail~result~proc~stdout
                    - >-
                      ~results~taskResults~build.client~error~detail~err~detail~result~proc~stderr
              code: 127
              all: "Sending build context to Docker daemon  2.048kB\r\r\nStep 1/3 : FROM nginx\nlatest: Pulling from library/nginx\nafb6ec6fdc1c: Pulling fs layer\nb90c53a0b692: Pulling fs layer\n11fa52a0fdc0: Pulling fs layer\n11fa52a0fdc0: Verifying Checksum\n11fa52a0fdc0: Download complete\nb90c53a0b692: Verifying Checksum\nb90c53a0b692: Download complete\nafb6ec6fdc1c: Download complete\nafb6ec6fdc1c: Pull complete\nb90c53a0b692: Pull complete\n11fa52a0fdc0: Pull complete\nDigest: sha256:30dfa439718a17baafefadf16c5e7c9d0a1cde97b4fd84f63b69e13513be7097\nStatus: Downloaded newer image for nginx:latest\n ---> 9beeba249f3e\nStep 2/3 : RUN npm run build\n ---> Running in d982275b72ce\n\e[91m/bin/sh: 1: npm: not found\n\e[0mThe command '/bin/sh -c npm run build' returned a non-zero code: 127\n"
              stdout: "Sending build context to Docker daemon  2.048kB\r\r\nStep 1/3 : FROM nginx\nlatest: Pulling from library/nginx\nafb6ec6fdc1c: Pulling fs layer\nb90c53a0b692: Pulling fs layer\n11fa52a0fdc0: Pulling fs layer\n11fa52a0fdc0: Verifying Checksum\n11fa52a0fdc0: Download complete\nb90c53a0b692: Verifying Checksum\nb90c53a0b692: Download complete\nafb6ec6fdc1c: Download complete\nafb6ec6fdc1c: Pull complete\nb90c53a0b692: Pull complete\n11fa52a0fdc0: Pull complete\nDigest: sha256:30dfa439718a17baafefadf16c5e7c9d0a1cde97b4fd84f63b69e13513be7097\nStatus: Downloaded newer image for nginx:latest\n ---> 9beeba249f3e\nStep 2/3 : RUN npm run build\n ---> Running in d982275b72ce\n\e[91m/bin/sh: 1: npm: not found\n\e[0m"
              stderr: >
                The command '/bin/sh -c npm run build' returned a non-zero code:
                127
              proc: >-
                ~results~taskResults~build.client~error~detail~err~detail~result~proc
            type: runtime
          args: ~results~taskResults~build.client~error~detail~err~detail~args
          cwd: /Users/emilwils/Documents/node-microservice/.garden/build/client
        type: runtime
      completedAt: '2020-05-26T21:30:07.065Z'
      batchId: c56466f3-6d55-4cee-94de-c47338a0fcd6
    stage-build.server:
      type: stage-build
      key: stage-build.server
      name: server
      description: staging build for server
      completedAt: '2020-05-26T21:29:53.009Z'
      batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
      output: {}
      dependencyResults: {}
    stage-build.db:
      type: stage-build
      key: stage-build.db
      name: db
      description: staging build for db
      completedAt: '2020-05-26T21:29:53.662Z'
      batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
      output: {}
      dependencyResults: {}
    build.db:
      type: build
      key: build.db
      name: db
      description: building db
      completedAt: '2020-05-26T21:29:53.667Z'
      batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
      output:
        fresh: false
      dependencyResults:
        stage-build.db:
          type: stage-build
          key: stage-build.db
          name: db
          description: staging build for db
          completedAt: '2020-05-26T21:29:53.662Z'
          batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
          output: {}
          dependencyResults: {}
    get-service-status.db:
      type: get-service-status
      key: get-service-status.db
      name: db
      description: getting status for service 'db' (from module 'db')
      completedAt: '2020-05-26T21:29:53.691Z'
      batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-57df7df941
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: db-v-57df7df941
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-57df7df941
              namespace: node-microservice
              labels:
                module: db
                service: db
                garden.io/version: v-57df7df941
            spec:
              selector:
                matchLabels:
                  service: db
                  garden.io/version: v-57df7df941
              template:
                metadata:
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults: {}
    deploy.db:
      type: deploy
      key: deploy.db
      name: db
      description: deploying service 'db' (from module 'db')
      completedAt: '2020-05-26T21:29:53.701Z'
      batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-57df7df941
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: db-v-57df7df941
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-57df7df941
              namespace: node-microservice
              labels:
                module: db
                service: db
                garden.io/version: v-57df7df941
            spec:
              selector:
                matchLabels:
                  service: db
                  garden.io/version: v-57df7df941
              template:
                metadata:
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.db:
          type: get-service-status
          key: get-service-status.db
          name: db
          description: getting status for service 'db' (from module 'db')
          completedAt: '2020-05-26T21:29:53.691Z'
          batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults: {}
        build.db:
          type: build
          key: build.db
          name: db
          description: building db
          completedAt: '2020-05-26T21:29:53.667Z'
          batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
          output:
            fresh: false
          dependencyResults:
            stage-build.db:
              type: stage-build
              key: stage-build.db
              name: db
              description: staging build for db
              completedAt: '2020-05-26T21:29:53.662Z'
              batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
              output: {}
              dependencyResults: {}
    get-service-status.backend:
      type: get-service-status
      key: get-service-status.backend
      name: backend
      description: getting status for service 'backend' (from module 'server')
      completedAt: '2020-05-26T21:29:53.728Z'
      batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-56ab2b577f
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: backend-v-56ab2b577f
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-56ab2b577f
              namespace: node-microservice
              labels:
                module: server
                service: backend
                garden.io/version: v-56ab2b577f
            spec:
              selector:
                matchLabels:
                  service: backend
                  garden.io/version: v-56ab2b577f
              template:
                metadata:
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-56ab2b577f
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.db:
          type: get-service-status
          key: get-service-status.db
          name: db
          description: getting status for service 'db' (from module 'db')
          completedAt: '2020-05-26T21:29:53.691Z'
          batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults: {}
    build.server:
      type: build
      key: build.server
      name: server
      description: building server
      completedAt: '2020-05-26T21:29:53.809Z'
      batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
      output:
        fresh: false
      dependencyResults:
        stage-build.server:
          type: stage-build
          key: stage-build.server
          name: server
          description: staging build for server
          completedAt: '2020-05-26T21:29:53.009Z'
          batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
          output: {}
          dependencyResults: {}
    deploy.backend:
      type: deploy
      key: deploy.backend
      name: backend
      description: deploying service 'backend' (from module 'server')
      completedAt: '2020-05-26T21:29:53.814Z'
      batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
      output:
        forwardablePorts: []
        ingresses: []
        state: ready
        version: v-56ab2b577f
        detail:
          remoteResources: []
          workload:
            kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: backend-v-56ab2b577f
              annotations:
                garden.io/configured.replicas: '1'
                garden.io/generated: 'true'
                garden.io/version: v-56ab2b577f
              namespace: node-microservice
              labels:
                module: server
                service: backend
                garden.io/version: v-56ab2b577f
            spec:
              selector:
                matchLabels:
                  service: backend
                  garden.io/version: v-56ab2b577f
              template:
                metadata:
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-56ab2b577f
                spec:
                  containers: []
                  restartPolicy: Always
                  terminationGracePeriodSeconds: 5
                  dnsPolicy: ClusterFirst
              replicas: 1
              strategy:
                type: RollingUpdate
                rollingUpdate:
                  maxUnavailable: 1
                  maxSurge: 1
              revisionHistoryLimit: 3
      dependencyResults:
        get-service-status.backend:
          type: get-service-status
          key: get-service-status.backend
          name: backend
          description: getting status for service 'backend' (from module 'server')
          completedAt: '2020-05-26T21:29:53.728Z'
          batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-56ab2b577f
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: backend-v-56ab2b577f
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-56ab2b577f
                  namespace: node-microservice
                  labels:
                    module: server
                    service: backend
                    garden.io/version: v-56ab2b577f
                spec:
                  selector:
                    matchLabels:
                      service: backend
                      garden.io/version: v-56ab2b577f
                  template:
                    metadata:
                      labels:
                        module: server
                        service: backend
                        garden.io/version: v-56ab2b577f
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults:
            get-service-status.db:
              type: get-service-status
              key: get-service-status.db
              name: db
              description: getting status for service 'db' (from module 'db')
              completedAt: '2020-05-26T21:29:53.691Z'
              batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
              output:
                forwardablePorts: []
                ingresses: []
                state: ready
                version: v-57df7df941
                detail:
                  remoteResources: []
                  workload:
                    kind: Deployment
                    apiVersion: apps/v1
                    metadata:
                      name: db-v-57df7df941
                      annotations:
                        garden.io/configured.replicas: '1'
                        garden.io/generated: 'true'
                        garden.io/version: v-57df7df941
                      namespace: node-microservice
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      selector:
                        matchLabels:
                          service: db
                          garden.io/version: v-57df7df941
                      template:
                        metadata:
                          labels:
                            module: db
                            service: db
                            garden.io/version: v-57df7df941
                        spec:
                          containers: []
                          restartPolicy: Always
                          terminationGracePeriodSeconds: 5
                          dnsPolicy: ClusterFirst
                      replicas: 1
                      strategy:
                        type: RollingUpdate
                        rollingUpdate:
                          maxUnavailable: 1
                          maxSurge: 1
                      revisionHistoryLimit: 3
              dependencyResults: {}
        deploy.db:
          type: deploy
          key: deploy.db
          name: db
          description: deploying service 'db' (from module 'db')
          completedAt: '2020-05-26T21:29:53.701Z'
          batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
          output:
            forwardablePorts: []
            ingresses: []
            state: ready
            version: v-57df7df941
            detail:
              remoteResources: []
              workload:
                kind: Deployment
                apiVersion: apps/v1
                metadata:
                  name: db-v-57df7df941
                  annotations:
                    garden.io/configured.replicas: '1'
                    garden.io/generated: 'true'
                    garden.io/version: v-57df7df941
                  namespace: node-microservice
                  labels:
                    module: db
                    service: db
                    garden.io/version: v-57df7df941
                spec:
                  selector:
                    matchLabels:
                      service: db
                      garden.io/version: v-57df7df941
                  template:
                    metadata:
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      containers: []
                      restartPolicy: Always
                      terminationGracePeriodSeconds: 5
                      dnsPolicy: ClusterFirst
                  replicas: 1
                  strategy:
                    type: RollingUpdate
                    rollingUpdate:
                      maxUnavailable: 1
                      maxSurge: 1
                  revisionHistoryLimit: 3
          dependencyResults:
            get-service-status.db:
              type: get-service-status
              key: get-service-status.db
              name: db
              description: getting status for service 'db' (from module 'db')
              completedAt: '2020-05-26T21:29:53.691Z'
              batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
              output:
                forwardablePorts: []
                ingresses: []
                state: ready
                version: v-57df7df941
                detail:
                  remoteResources: []
                  workload:
                    kind: Deployment
                    apiVersion: apps/v1
                    metadata:
                      name: db-v-57df7df941
                      annotations:
                        garden.io/configured.replicas: '1'
                        garden.io/generated: 'true'
                        garden.io/version: v-57df7df941
                      namespace: node-microservice
                      labels:
                        module: db
                        service: db
                        garden.io/version: v-57df7df941
                    spec:
                      selector:
                        matchLabels:
                          service: db
                          garden.io/version: v-57df7df941
                      template:
                        metadata:
                          labels:
                            module: db
                            service: db
                            garden.io/version: v-57df7df941
                        spec:
                          containers: []
                          restartPolicy: Always
                          terminationGracePeriodSeconds: 5
                          dnsPolicy: ClusterFirst
                      replicas: 1
                      strategy:
                        type: RollingUpdate
                        rollingUpdate:
                          maxUnavailable: 1
                          maxSurge: 1
                      revisionHistoryLimit: 3
              dependencyResults: {}
            build.db:
              type: build
              key: build.db
              name: db
              description: building db
              completedAt: '2020-05-26T21:29:53.667Z'
              batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
              output:
                fresh: false
              dependencyResults:
                stage-build.db:
                  type: stage-build
                  key: stage-build.db
                  name: db
                  description: staging build for db
                  completedAt: '2020-05-26T21:29:53.662Z'
                  batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
                  output: {}
                  dependencyResults: {}
        build.server:
          type: build
          key: build.server
          name: server
          description: building server
          completedAt: '2020-05-26T21:29:53.809Z'
          batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
          output:
            fresh: false
          dependencyResults:
            stage-build.server:
              type: stage-build
              key: stage-build.server
              name: server
              description: staging build for server
              completedAt: '2020-05-26T21:29:53.009Z'
              batchId: 33ad8b50-76b3-4ac3-8275-b3d7060f8483
              output: {}
              dependencyResults: {}
  restartRequired: false


[2020-05-26T21:30:07.182Z] 
See error.log for detailed error message

[2020-05-26T21:33:15.537Z] Getting status...

[2020-05-26T21:33:18.683Z] Getting status... → Done

[2020-05-26T21:33:19.852Z] Running task build 🏃‍♂️ 

[2020-05-26T21:33:19.858Z] Syncing module sources (1 file)...

[2020-05-26T21:33:19.861Z] Checking result...

[2020-05-26T21:33:19.880Z] Checking result... → Done

[2020-05-26T21:33:20.335Z] Syncing module sources (1 file)... → Done (took 0.5 sec)

[2020-05-26T21:33:20.337Z] Getting build status for v-761a7001ea...

[2020-05-26T21:33:20.847Z] Building version v-761a7001ea...

[2020-05-26T21:33:20.913Z] Building client:v-761a7001ea...

[2020-05-26T21:33:21.174Z] Building client:v-761a7001ea...

[2020-05-26T21:33:21.191Z] Error: Unable to run docker command: Command "docker build -t client:v-761a7001ea /Users/emilwils/Documents/node-microservice/.garden/build/client" failed with code 1:

COPY failed: stat /var/lib/docker/tmp/docker-builder055147431/build: no such file or directory

Here's the full output:

Sending build context to Docker daemon  2.048kB
Step 1/2 : FROM nginx
 ---> 9beeba249f3e
Step 2/2 : COPY build/ /usr/share/nginx/html
COPY failed: stat /var/lib/docker/tmp/docker-builder055147431/build: no such file or directory
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
    at Generator.throw (<anonymous>)
    at rejected (/snapshot/project/garden-service/tmp/dist/build/src/plugins/container/helpers.js:0)
    at processTicksAndRejections (internal/process/task_queues.js:93:5)
Error Details:
err:
  detail:
    cmd: docker
    args:
      - build
      - '-t'
      - 'client:v-761a7001ea'
      - /Users/emilwils/Documents/node-microservice/.garden/build/client
    opts:
      cwd: /Users/emilwils/Documents/node-microservice/.garden/build/client
      ignoreError: false
      stdout:
        _readableState:
          objectMode: true
          highWaterMark: 16
          buffer:
            head: null
            tail: null
            length: 0
          length: 0
          pipes: null
          pipesCount: 0
          flowing: true
          ended: true
          endEmitted: true
          reading: false
          sync: false
          needReadable: false
          emittedReadable: false
          readableListening: false
          resumeScheduled: false
          paused: false
          emitClose: true
          destroyed: false
          defaultEncoding: utf8
          awaitDrain: 0
          readingMore: false
          decoder: null
          encoding: null
        readable: false
        _events: {}
        _eventsCount: 3
        _writableState:
          objectMode: false
          highWaterMark: 16384
          finalCalled: false
          needDrain: false
          ending: true
          ended: true
          finished: true
          destroyed: false
          decodeStrings: true
          defaultEncoding: utf8
          length: 0
          writing: false
          corked: 0
          sync: false
          bufferProcessing: false
          writecb: null
          writelen: 0
          bufferedRequest: null
          lastBufferedRequest: null
          pendingcb: 0
          prefinished: true
          errorEmitted: false
          emitClose: true
          bufferedRequestCount: 0
          corkedRequestsFree:
            next: null
            entry: null
        writable: false
        allowHalfOpen: true
        _transformState:
          needTransform: false
          transforming: false
          writecb: null
          writechunk: null
          writeencoding: buffer
        matcher: {}
        overflow: false
      timeout: 1200
      env:
        TERM_PROGRAM: Apple_Terminal
        SHELL: /bin/zsh
        TERM: xterm-256color
        TMPDIR: /var/folders/nr/97f582w94rl7snqc5h3ldwqh0000gn/T/
        TERM_PROGRAM_VERSION: '433'
        TERM_SESSION_ID: A6BD6B7C-14CE-4383-8F6D-D382816C6EE9
        USER: emilwils
        SSH_AUTH_SOCK: /private/tmp/com.apple.launchd.3ygVNIh0vg/Listeners
        PATH: >-
          /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware
          Fusion.app/Contents/Public
        LaunchInstanceID: DD0DB73A-B855-43F4-B00C-C5EFD5F0D6A8
        PWD: /Users/emilwils/Documents/node-microservice/client
        LANG: en_US.UTF-8
        XPC_FLAGS: '0x0'
        XPC_SERVICE_NAME: '0'
        SHLVL: '1'
        HOME: /Users/emilwils
        LOGNAME: emilwils
        SECURITYSESSIONID: 186a6
        _: /usr/local/bin/garden
        __CF_USER_TEXT_ENCODING: '0x1F5:0x0:0x0'
        DOCKER_TLS_VERIFY: '1'
        DOCKER_HOST: 'tcp://192.168.99.108:2376'
        DOCKER_CERT_PATH: /Users/emilwils/.minikube/certs
        MINIKUBE_ACTIVE_DOCKERD: minikube
        DOCKER_CLI_EXPERIMENTAL: enabled
        PKG_EXECPATH: /usr/local/Cellar/garden-cli/0.11.14/libexec/garden
    result:
      code: 1
      all: "Sending build context to Docker daemon  2.048kB\r\r\nStep 1/2 : FROM nginx\n ---> 9beeba249f3e\nStep 2/2 : COPY build/ /usr/share/nginx/html\nCOPY failed: stat /var/lib/docker/tmp/docker-builder055147431/build: no such file or directory\n"
      stdout: "Sending build context to Docker daemon  2.048kB\r\r\nStep 1/2 : FROM nginx\n ---> 9beeba249f3e\nStep 2/2 : COPY build/ /usr/share/nginx/html\n"
      stderr: >
        COPY failed: stat /var/lib/docker/tmp/docker-builder055147431/build: no
        such file or directory
      proc:
        _events: {}
        _eventsCount: 2
        _closesNeeded: 3
        _closesGot: 3
        connected: false
        signalCode: null
        exitCode: 1
        killed: false
        spawnfile: docker
        _handle: null
        spawnargs:
          - docker
          - build
          - '-t'
          - 'client:v-761a7001ea'
          - /Users/emilwils/Documents/node-microservice/.garden/build/client
        pid: 24925
        stdin:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: null
            ended: false
            endEmitted: false
            reading: false
            sync: true
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: true
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 1
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stdout:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: false
            ended: true
            endEmitted: true
            reading: false
            sync: false
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: false
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 3
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stderr:
          connecting: false
          _hadError: false
          _parent: null
          _host: null
          _readableState:
            objectMode: false
            highWaterMark: 16384
            buffer:
              head: null
              tail: null
              length: 0
            length: 0
            pipes: null
            pipesCount: 0
            flowing: true
            ended: true
            endEmitted: true
            reading: false
            sync: false
            needReadable: false
            emittedReadable: false
            readableListening: false
            resumeScheduled: false
            paused: false
            emitClose: false
            autoDestroy: false
            destroyed: true
            defaultEncoding: utf8
            awaitDrain: 0
            readingMore: false
            decoder: null
            encoding: null
          readable: false
          _events: {}
          _eventsCount: 3
          _writableState:
            objectMode: false
            highWaterMark: 16384
            finalCalled: false
            needDrain: false
            ending: false
            ended: false
            finished: false
            destroyed: true
            decodeStrings: false
            defaultEncoding: utf8
            length: 0
            writing: false
            corked: 0
            sync: true
            bufferProcessing: false
            writecb: null
            writelen: 0
            bufferedRequest: null
            lastBufferedRequest: null
            pendingcb: 0
            prefinished: false
            errorEmitted: false
            emitClose: false
            autoDestroy: false
            bufferedRequestCount: 0
            corkedRequestsFree:
              next: null
              entry: null
          writable: false
          allowHalfOpen: false
          _sockname: null
          _pendingData: null
          _pendingEncoding: ''
          server: null
          _server: null
        stdio:
          - ~err~detail~result~proc~stdin
          - ~err~detail~result~proc~stdout
          - ~err~detail~result~proc~stderr
    code: 1
    all: "Sending build context to Docker daemon  2.048kB\r\r\nStep 1/2 : FROM nginx\n ---> 9beeba249f3e\nStep 2/2 : COPY build/ /usr/share/nginx/html\nCOPY failed: stat /var/lib/docker/tmp/docker-builder055147431/build: no such file or directory\n"
    stdout: "Sending build context to Docker daemon  2.048kB\r\r\nStep 1/2 : FROM nginx\n ---> 9beeba249f3e\nStep 2/2 : COPY build/ /usr/share/nginx/html\n"
    stderr: >
      COPY failed: stat /var/lib/docker/tmp/docker-builder055147431/build: no
      such file or directory
    proc: ~err~detail~result~proc
  type: runtime
args: []
cwd: /Users/emilwils/Documents/node-microservice/.garden/build/client


[2020-05-26T21:33:21.197Z] TypeError: Cannot read property 'error' of undefined
    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at Generator.next (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at new Promise (<anonymous>)
    at /snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0
    at Object.handleTaskResult (/snapshot/project/garden-service/tmp/dist/build/src/commands/base.js:0)
    at RunTaskCommand.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/run/task.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/commands/run/task.js:0)

[2020-05-26T21:33:21.200Z] 
See error.log for detailed error message

[2020-05-27T16:15:01.937Z] Getting status...

[2020-05-27T16:15:05.091Z] Getting status... → Done

[2020-05-27T16:15:06.311Z] Syncing module sources (5 files)...

[2020-05-27T16:15:06.365Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-27T16:15:06.370Z] Getting build status for v-56ab2b577f...

[2020-05-27T16:15:07.023Z] Getting build status for v-57df7df941...

[2020-05-27T16:15:07.025Z] Getting build status for v-57df7df941... → Done (took 0 sec)

[2020-05-27T16:15:07.029Z] Deploying version v-57df7df941...

[2020-05-27T16:15:07.031Z] Deploying version v-57df7df941... → Already deployed

[2020-05-27T16:15:07.132Z] Getting build status for v-56ab2b577f... → Done (took 0.8 sec)

[2020-05-27T16:15:07.134Z] Deploying version v-56ab2b577f...

[2020-05-27T16:15:07.136Z] Deploying version v-56ab2b577f... → Already deployed

[2020-05-27T16:15:07.154Z] Done! ✔️ 

[2020-05-27T16:15:21.428Z] Getting status...

[2020-05-27T16:15:24.529Z] Getting status... → Done

[2020-05-27T16:15:25.693Z] Syncing module sources (5 files)...

[2020-05-27T16:15:25.731Z] Syncing module sources (5 files)... → Done (took 0 sec)

[2020-05-27T16:15:25.734Z] Getting build status for v-56ab2b577f...

[2020-05-27T16:15:26.112Z] Getting build status for v-57df7df941...

[2020-05-27T16:15:26.117Z] Getting build status for v-57df7df941... → Done (took 0 sec)

[2020-05-27T16:15:26.124Z] Deploying version v-57df7df941...

[2020-05-27T16:15:26.125Z] Deploying version v-57df7df941... → Already deployed

[2020-05-27T16:15:26.218Z] Getting build status for v-56ab2b577f... → Done (took 0.5 sec)

[2020-05-27T16:15:26.222Z] Deploying version v-56ab2b577f...

[2020-05-27T16:15:26.225Z] Deploying version v-56ab2b577f... → Already deployed

[2020-05-27T16:15:26.245Z] Done! ✔️ 

[2020-05-27T16:16:10.321Z] Getting status...

[2020-05-27T16:16:13.414Z] Getting status... → Done

[2020-05-27T16:16:14.691Z] modules:
  - allowPublish: true
    apiVersion: garden.io/v0
    build:
      dependencies: []
    buildDependencies: {}
    buildMetadataPath: /Users/emilwils/Documents/node-microservice/.garden/build-metadata/client
    buildPath: /Users/emilwils/Documents/node-microservice/.garden/build/client
    compatibleTypes:
      - container
    configPath: /Users/emilwils/Documents/node-microservice/client/garden.yml
    description: Frontend container
    disabled: false
    kind: Module
    name: client
    needsBuild: true
    outputs:
      deployment-image-name: client
      local-image-name: client
    path: /Users/emilwils/Documents/node-microservice/client
    serviceConfigs: []
    serviceDependencyNames: []
    taskConfigs: []
    taskDependencyNames: []
    testConfigs: []
    type: container
    version:
      dependencyVersions: {}
      files:
        - /Users/emilwils/Documents/node-microservice/client/.dockerignore
        - /Users/emilwils/Documents/node-microservice/client/.gitignore
        - /Users/emilwils/Documents/node-microservice/client/Dockerfile
        - /Users/emilwils/Documents/node-microservice/client/package-lock.json
        - /Users/emilwils/Documents/node-microservice/client/package.json
        - /Users/emilwils/Documents/node-microservice/client/public/favicon.ico
        - /Users/emilwils/Documents/node-microservice/client/public/index.html
        - /Users/emilwils/Documents/node-microservice/client/public/logo192.png
        - /Users/emilwils/Documents/node-microservice/client/public/logo512.png
        - >-
          /Users/emilwils/Documents/node-microservice/client/public/manifest.json
        - /Users/emilwils/Documents/node-microservice/client/public/robots.txt
        - /Users/emilwils/Documents/node-microservice/client/src/App.css
        - /Users/emilwils/Documents/node-microservice/client/src/App.js
        - /Users/emilwils/Documents/node-microservice/client/src/index.css
        - /Users/emilwils/Documents/node-microservice/client/src/index.js
        - >-
          /Users/emilwils/Documents/node-microservice/client/src/serviceWorker.js
      versionString: v-94eed36afe
  - allowPublish: true
    apiVersion: garden.io/v0
    build:
      dependencies: []
    buildDependencies: {}
    buildMetadataPath: /Users/emilwils/Documents/node-microservice/.garden/build-metadata/server
    buildPath: /Users/emilwils/Documents/node-microservice/.garden/build/server
    compatibleTypes:
      - container
    configPath: /Users/emilwils/Documents/node-microservice/server/garden.yml
    description: Backend container
    disabled: false
    kind: Module
    name: server
    needsBuild: true
    outputs:
      deployment-image-name: server
      local-image-name: server
    path: /Users/emilwils/Documents/node-microservice/server
    serviceConfigs:
      - dependencies:
          - db
        disabled: false
        hotReloadable: false
        name: backend
    serviceDependencyNames:
      - db
    taskConfigs: []
    taskDependencyNames: []
    testConfigs: []
    type: container
    version:
      dependencyVersions: {}
      files:
        - /Users/emilwils/Documents/node-microservice/server/.dockerignore
        - /Users/emilwils/Documents/node-microservice/server/Dockerfile
        - /Users/emilwils/Documents/node-microservice/server/app.js
        - /Users/emilwils/Documents/node-microservice/server/package-lock.json
        - /Users/emilwils/Documents/node-microservice/server/package.json
      versionString: v-56ab2b577f
  - allowPublish: true
    apiVersion: garden.io/v0
    build:
      dependencies: []
    buildDependencies: {}
    buildMetadataPath: /Users/emilwils/Documents/node-microservice/.garden/build-metadata/db
    buildPath: /Users/emilwils/Documents/node-microservice/.garden/build/db
    compatibleTypes:
      - container
    configPath: /Users/emilwils/Documents/node-microservice/garden.yml
    description: Database container
    disabled: false
    include: []
    kind: Module
    name: db
    needsBuild: true
    outputs:
      deployment-image-name: mysql
      local-image-name: mysql
    path: /Users/emilwils/Documents/node-microservice
    serviceConfigs:
      - dependencies: []
        disabled: false
        hotReloadable: false
        name: db
    serviceDependencyNames: []
    taskConfigs: []
    taskDependencyNames: []
    testConfigs: []
    type: container
    version:
      dependencyVersions: {}
      files: []
      versionString: v-57df7df941


[2020-05-27T16:16:38.046Z] Getting status...

[2020-05-27T16:16:41.133Z] Getting status... → Done

[2020-05-27T16:16:42.293Z] Syncing module sources (5 files)...

[2020-05-27T16:16:42.336Z] Syncing module sources (5 files)... → Done (took 0 sec)

[2020-05-27T16:16:42.338Z] Getting build status for v-56ab2b577f...

[2020-05-27T16:16:42.707Z] Getting build status for v-57df7df941...

[2020-05-27T16:16:42.709Z] Getting build status for v-57df7df941... → Done (took 0 sec)

[2020-05-27T16:16:42.714Z] Deploying version v-57df7df941...

[2020-05-27T16:16:42.716Z] Deploying version v-57df7df941... → Already deployed

[2020-05-27T16:16:42.813Z] Getting build status for v-56ab2b577f... → Done (took 0.5 sec)

[2020-05-27T16:16:42.818Z] Deploying version v-56ab2b577f...

[2020-05-27T16:16:42.820Z] Deploying version v-56ab2b577f... → Already deployed

[2020-05-27T16:16:42.840Z] Done! ✔️ 

[2020-05-27T16:17:28.384Z] Getting status...

[2020-05-27T16:17:31.474Z] Getting status... → Done

[2020-05-27T16:17:32.645Z] Error: Could not find module(s): node-microservice
    at Object.pickKeys (/snapshot/project/garden-service/tmp/dist/build/src/util/util.js:0)
    at ConfigGraph.getModules (/snapshot/project/garden-service/tmp/dist/build/src/config-graph.js:0)
    at BuildCommand.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/commands/build.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/commands/build.js:0)
Error Details:
missing: []
available: []


[2020-05-27T16:17:32.646Z] 
See error.log for detailed error message

[2020-05-27T16:18:04.586Z] Getting status...

[2020-05-27T16:18:07.695Z] Getting status... → Done

[2020-05-27T16:18:08.937Z] ⏳  Processing...

[2020-05-27T16:18:08.945Z] Syncing module sources (5 files)...

[2020-05-27T16:18:08.947Z] Syncing module sources (16 files)...

[2020-05-27T16:18:09.002Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-27T16:18:09.005Z] Getting build status for v-56ab2b577f...

[2020-05-27T16:18:09.411Z] Getting build status for v-57df7df941...

[2020-05-27T16:18:09.415Z] Getting build status for v-57df7df941... → Done (took 0 sec)

[2020-05-27T16:18:09.419Z] Deploying version v-57df7df941...

[2020-05-27T16:18:09.422Z] Deploying version v-57df7df941... → Already deployed

[2020-05-27T16:18:09.428Z] Syncing module sources (16 files)... → Done (took 0.5 sec)

[2020-05-27T16:18:09.431Z] Getting build status for v-94eed36afe...

[2020-05-27T16:18:09.547Z] Getting build status for v-56ab2b577f... → Done (took 0.5 sec)

[2020-05-27T16:18:09.551Z] Deploying version v-56ab2b577f...

[2020-05-27T16:18:09.554Z] Deploying version v-56ab2b577f... → Already deployed

[2020-05-27T16:18:09.564Z] → Forward: http://127.0.0.1:8080 → backend:8080 (http)

[2020-05-27T16:18:09.578Z] Building version v-94eed36afe...

[2020-05-27T16:18:09.647Z] Building client:v-94eed36afe...

[2020-05-27T16:19:08.670Z] Building client:v-94eed36afe... → Done (took 59.2 sec)

[2020-05-27T16:19:08.702Z] Waiting for code changes...

[2020-05-27T16:19:54.748Z] ⏳  Processing...

[2020-05-27T16:19:54.815Z] Waiting for code changes...

[2020-05-27T16:19:54.823Z] ⏳  Processing...

[2020-05-27T16:19:54.876Z] Waiting for code changes...

[2020-05-27T16:19:54.886Z] ⏳  Processing...

[2020-05-27T16:19:54.916Z] Waiting for code changes...

[2020-05-27T16:20:01.659Z] ⏳  Processing...

[2020-05-27T16:20:01.686Z] Waiting for code changes...

[2020-05-27T16:20:44.228Z] ⏳  Processing...

[2020-05-27T16:20:44.259Z] Waiting for code changes...

[2020-05-27T16:21:40.774Z] Getting status...

[2020-05-27T16:21:42.930Z] Getting status... → Done

[2020-05-27T16:21:43.636Z] Module configuration changed, reloading...

[2020-05-27T16:21:44.324Z] Getting status...

[2020-05-27T16:21:45.496Z] Getting status... → Done

[2020-05-27T16:21:46.017Z] ⏳  Processing...

[2020-05-27T16:21:46.021Z] Syncing module sources (5 files)...

[2020-05-27T16:21:46.029Z] Syncing module sources (16 files)...

[2020-05-27T16:21:46.092Z] Syncing module sources (5 files)... → Done (took 0.1 sec)

[2020-05-27T16:21:46.096Z] Getting build status for v-56ab2b577f...

[2020-05-27T16:21:46.502Z] Getting build status for v-57df7df941...

[2020-05-27T16:21:46.508Z] Getting build status for v-57df7df941... → Done (took 0 sec)

[2020-05-27T16:21:46.513Z] Deploying version v-57df7df941...

[2020-05-27T16:21:46.518Z] Deploying version v-57df7df941... → Already deployed

[2020-05-27T16:21:46.523Z] Syncing module sources (16 files)... → Done (took 0.5 sec)

[2020-05-27T16:21:46.531Z] Getting build status for v-dd379d9320...

[2020-05-27T16:21:46.627Z] Getting build status for v-56ab2b577f... → Done (took 0.5 sec)

[2020-05-27T16:21:46.633Z] Deploying version v-56ab2b577f...

[2020-05-27T16:21:46.638Z] Deploying version v-56ab2b577f... → Already deployed

[2020-05-27T16:21:46.644Z] → Forward: http://127.0.0.1:8080 → backend:8080 (http)

[2020-05-27T16:21:46.679Z] Building version v-dd379d9320...

[2020-05-27T16:21:46.757Z] Building client:v-dd379d9320...

[2020-05-27T16:21:47.048Z] Building client:v-dd379d9320... → Done (took 0.5 sec)

[2020-05-27T16:21:47.054Z] Deploying version v-dd379d9320...

[2020-05-27T16:21:48.775Z] Waiting for resources to be ready...

[2020-05-27T16:21:50.816Z] Deployment/frontend-v-dd379d9320: Started container frontend

[2020-05-27T16:21:53.385Z] Deploying version v-dd379d9320...

[2020-05-27T16:21:53.405Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-dd379d9320: ScalingReplicaSet - Scaled up replica set frontend-v-dd379d9320-657944d865 to 1
Pod frontend-v-dd379d9320-657944d865-cd7kt: Scheduled - Successfully assigned node-microservice/frontend-v-dd379d9320-657944d865-cd7kt to minikube
Pod frontend-v-dd379d9320-657944d865-cd7kt: Pulled - Container image "client:v-dd379d9320" already present on machine
Pod frontend-v-dd379d9320-657944d865-cd7kt: Created - Created container frontend
Pod frontend-v-dd379d9320-657944d865-cd7kt: Started - Started container frontend
Pod frontend-v-dd379d9320-657944d865-cd7kt: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-dd379d9320

****** frontend-v-dd379d9320-657944d865-cd7kt ******
------ frontend ------
> client@0.1.0 start /client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.9/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-dd379d9320:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-dd379d9320-657944d865 to 1\e[39m\n\e[94mPod frontend-v-dd379d9320-657944d865-cd7kt:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-dd379d9320-657944d865-cd7kt to minikube\e[39m\n\e[94mPod frontend-v-dd379d9320-657944d865-cd7kt:\e[39m \e[37mPulled - Container image \"client:v-dd379d9320\" already present on machine\e[39m\n\e[94mPod frontend-v-dd379d9320-657944d865-cd7kt:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-dd379d9320-657944d865-cd7kt:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-dd379d9320-657944d865-cd7kt:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-dd379d9320\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-dd379d9320-657944d865-cd7kt ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.9/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-dd379d9320
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-dd379d9320
      uid: a42f0167-7936-4799-b8b4-a9d8d8de84d7
      resourceVersion: '35695'
      generation: 1
      creationTimestamp: '2020-05-27T16:21:47Z'
      labels:
        garden.io/version: v-dd379d9320
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 9f66f130de687826bdc6cdbf8030ac8d424888e7610eb13ec9107484307b6e8f
        garden.io/version: v-dd379d9320
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"9f66f130de687826bdc6cdbf8030ac8d424888e7610eb13ec9107484307b6e8f","garden.io/version":"v-dd379d9320"},"labels":{"garden.io/version":"v-dd379d9320","module":"client","service":"frontend"},"name":"frontend-v-dd379d9320","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-dd379d9320","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-dd379d9320","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-dd379d9320"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-dd379d9320\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-dd379d9320","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-dd379d9320
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-dd379d9320
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T16:21:53.429Z] Waiting for code changes...

[2020-05-27T16:22:02.723Z] ⏳  Processing...

[2020-05-27T16:22:02.774Z] ⏳  Processing...

[2020-05-27T16:22:02.791Z] Waiting for code changes...

[2020-05-27T16:22:02.801Z] ⏳  Processing...

[2020-05-27T16:22:02.891Z] Waiting for code changes...

[2020-05-27T16:22:02.903Z] ⏳  Processing...

[2020-05-27T16:22:02.928Z] Waiting for code changes...

[2020-05-27T16:22:05.721Z] ⏳  Processing...

[2020-05-27T16:22:05.744Z] Waiting for code changes...

[2020-05-27T16:22:40.330Z] ⏳  Processing...

[2020-05-27T16:22:40.367Z] Waiting for code changes...

[2020-05-27T16:24:31.699Z] ⏳  Processing...

[2020-05-27T16:24:31.864Z] Waiting for code changes...

[2020-05-27T16:24:31.879Z] ⏳  Processing...

[2020-05-27T16:24:32.007Z] Waiting for code changes...

[2020-05-27T16:24:32.019Z] ⏳  Processing...

[2020-05-27T16:24:32.027Z] Syncing module sources (17 files)...

[2020-05-27T16:24:32.397Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-27T16:24:32.404Z] Building version v-c6aa67d3aa...

[2020-05-27T16:24:32.850Z] Building client:v-c6aa67d3aa...

[2020-05-27T16:24:33.354Z] Building client:v-c6aa67d3aa... → Done (took 0.9 sec)

[2020-05-27T16:24:33.362Z] Deploying version v-c6aa67d3aa...

[2020-05-27T16:24:35.116Z] Waiting for resources to be ready...

[2020-05-27T16:24:37.167Z] Deployment/frontend-v-c6aa67d3aa: Started container frontend

[2020-05-27T16:24:39.735Z] Deploying version v-c6aa67d3aa...

[2020-05-27T16:24:39.749Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 10s restarting failed container=frontend pod=frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg_node-microservice(8619ded7-a031-4d7b-ae79-f4337ce57914)

━━━ Events ━━━
Deployment frontend-v-c6aa67d3aa: ScalingReplicaSet - Scaled up replica set frontend-v-c6aa67d3aa-d4fb6dcbf to 1
Pod frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg: Scheduled - Successfully assigned node-microservice/frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg to minikube
Pod frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg: Pulled - Container image "client:v-c6aa67d3aa" already present on machine
Pod frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg: Created - Created container frontend
Pod frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg: Started - Started container frontend
Pod frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-c6aa67d3aa

****** frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg ******
------ frontend ------
> client@0.1.0 start /client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=frontend
    pod=frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg_node-microservice(8619ded7-a031-4d7b-ae79-f4337ce57914)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-c6aa67d3aa:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-c6aa67d3aa-d4fb6dcbf to 1\e[39m\n\e[94mPod frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg to minikube\e[39m\n\e[94mPod frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg:\e[39m \e[37mPulled - Container image \"client:v-c6aa67d3aa\" already present on machine\e[39m\n\e[94mPod frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-c6aa67d3aa\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-c6aa67d3aa-d4fb6dcbf-wt6gg ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-c6aa67d3aa
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-c6aa67d3aa
      uid: 02fed957-6481-44f7-9b6d-a29caedb9bac
      resourceVersion: '36166'
      generation: 1
      creationTimestamp: '2020-05-27T16:24:33Z'
      labels:
        garden.io/version: v-c6aa67d3aa
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: cae1fa2ec05b0a24ef2abf7afe947753a4a8222facc5214634faed032a1ec001
        garden.io/version: v-c6aa67d3aa
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"cae1fa2ec05b0a24ef2abf7afe947753a4a8222facc5214634faed032a1ec001","garden.io/version":"v-c6aa67d3aa"},"labels":{"garden.io/version":"v-c6aa67d3aa","module":"client","service":"frontend"},"name":"frontend-v-c6aa67d3aa","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-c6aa67d3aa","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-c6aa67d3aa","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-c6aa67d3aa"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-c6aa67d3aa\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-c6aa67d3aa","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-c6aa67d3aa
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-c6aa67d3aa
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T16:24:39.760Z] Waiting for code changes...

[2020-05-27T16:26:03.622Z] ⏳  Processing...

[2020-05-27T16:26:03.790Z] Waiting for code changes...

[2020-05-27T16:26:03.804Z] ⏳  Processing...

[2020-05-27T16:26:03.814Z] Syncing module sources (17 files)...

[2020-05-27T16:26:04.313Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-27T16:26:04.324Z] Building version v-58e85129af...

[2020-05-27T16:26:04.773Z] Building client:v-58e85129af...

[2020-05-27T16:26:05.290Z] Building client:v-58e85129af... → Done (took 1 sec)

[2020-05-27T16:26:05.301Z] Deploying version v-58e85129af...

[2020-05-27T16:26:07.058Z] Waiting for resources to be ready...

[2020-05-27T16:26:09.120Z] Deployment/frontend-v-58e85129af: Started container frontend

[2020-05-27T16:26:11.687Z] Deploying version v-58e85129af...

[2020-05-27T16:26:11.705Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-58e85129af: ScalingReplicaSet - Scaled up replica set frontend-v-58e85129af-cf44bfb7f to 1
Pod frontend-v-58e85129af-cf44bfb7f-zc2bh: Scheduled - Successfully assigned node-microservice/frontend-v-58e85129af-cf44bfb7f-zc2bh to minikube
Pod frontend-v-58e85129af-cf44bfb7f-zc2bh: Pulled - Container image "client:v-58e85129af" already present on machine
Pod frontend-v-58e85129af-cf44bfb7f-zc2bh: Created - Created container frontend
Pod frontend-v-58e85129af-cf44bfb7f-zc2bh: Started - Started container frontend
Pod frontend-v-58e85129af-cf44bfb7f-zc2bh: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-58e85129af

****** frontend-v-58e85129af-cf44bfb7f-zc2bh ******
------ frontend ------
> client@0.1.0 start /client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.9/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-58e85129af:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-58e85129af-cf44bfb7f to 1\e[39m\n\e[94mPod frontend-v-58e85129af-cf44bfb7f-zc2bh:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-58e85129af-cf44bfb7f-zc2bh to minikube\e[39m\n\e[94mPod frontend-v-58e85129af-cf44bfb7f-zc2bh:\e[39m \e[37mPulled - Container image \"client:v-58e85129af\" already present on machine\e[39m\n\e[94mPod frontend-v-58e85129af-cf44bfb7f-zc2bh:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-58e85129af-cf44bfb7f-zc2bh:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-58e85129af-cf44bfb7f-zc2bh:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-58e85129af\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-58e85129af-cf44bfb7f-zc2bh ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.9/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-58e85129af
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-58e85129af
      uid: edb6c217-6053-4036-aa67-f2aa818224fc
      resourceVersion: '36455'
      generation: 1
      creationTimestamp: '2020-05-27T16:26:05Z'
      labels:
        garden.io/version: v-58e85129af
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 50ff583d44e297a50c8e7756be3bf6d8c7b0d3e72622422915194441bbf4ae4c
        garden.io/version: v-58e85129af
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"50ff583d44e297a50c8e7756be3bf6d8c7b0d3e72622422915194441bbf4ae4c","garden.io/version":"v-58e85129af"},"labels":{"garden.io/version":"v-58e85129af","module":"client","service":"frontend"},"name":"frontend-v-58e85129af","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-58e85129af","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-58e85129af","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-58e85129af"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-58e85129af\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-58e85129af","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-58e85129af
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-58e85129af
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T16:26:11.717Z] Waiting for code changes...

[2020-05-27T16:28:39.374Z] ⏳  Processing...

[2020-05-27T16:28:39.544Z] Waiting for code changes...

[2020-05-27T16:28:39.560Z] ⏳  Processing...

[2020-05-27T16:28:39.572Z] Syncing module sources (17 files)...

[2020-05-27T16:28:39.872Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-27T16:28:39.885Z] Building version v-e50057b7a1...

[2020-05-27T16:28:40.343Z] Building client:v-e50057b7a1...

[2020-05-27T16:28:40.842Z] Building client:v-e50057b7a1... → Done (took 1 sec)

[2020-05-27T16:28:40.855Z] Deploying version v-e50057b7a1...

[2020-05-27T16:28:42.591Z] Waiting for resources to be ready...

[2020-05-27T16:28:44.640Z] Deployment/frontend-v-e50057b7a1: Started container frontend

[2020-05-27T16:28:47.212Z] Deploying version v-e50057b7a1...

[2020-05-27T16:28:47.228Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 10s restarting failed container=frontend pod=frontend-v-e50057b7a1-bfd4c7bf-4pc5g_node-microservice(c72ee8bb-faa3-4950-9795-d9d8c13de46f)

━━━ Events ━━━
Deployment frontend-v-e50057b7a1: ScalingReplicaSet - Scaled up replica set frontend-v-e50057b7a1-bfd4c7bf to 1
Pod frontend-v-e50057b7a1-bfd4c7bf-4pc5g: Scheduled - Successfully assigned node-microservice/frontend-v-e50057b7a1-bfd4c7bf-4pc5g to minikube
Pod frontend-v-e50057b7a1-bfd4c7bf-4pc5g: Pulled - Container image "client:v-e50057b7a1" already present on machine
Pod frontend-v-e50057b7a1-bfd4c7bf-4pc5g: Created - Created container frontend
Pod frontend-v-e50057b7a1-bfd4c7bf-4pc5g: Started - Started container frontend
Pod frontend-v-e50057b7a1-bfd4c7bf-4pc5g: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-e50057b7a1

****** frontend-v-e50057b7a1-bfd4c7bf-4pc5g ******
------ frontend ------
> client@0.1.0 start /client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=frontend
    pod=frontend-v-e50057b7a1-bfd4c7bf-4pc5g_node-microservice(c72ee8bb-faa3-4950-9795-d9d8c13de46f)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-e50057b7a1:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-e50057b7a1-bfd4c7bf to 1\e[39m\n\e[94mPod frontend-v-e50057b7a1-bfd4c7bf-4pc5g:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-e50057b7a1-bfd4c7bf-4pc5g to minikube\e[39m\n\e[94mPod frontend-v-e50057b7a1-bfd4c7bf-4pc5g:\e[39m \e[37mPulled - Container image \"client:v-e50057b7a1\" already present on machine\e[39m\n\e[94mPod frontend-v-e50057b7a1-bfd4c7bf-4pc5g:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-e50057b7a1-bfd4c7bf-4pc5g:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-e50057b7a1-bfd4c7bf-4pc5g:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-e50057b7a1\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-e50057b7a1-bfd4c7bf-4pc5g ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-e50057b7a1
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-e50057b7a1
      uid: 2fda685f-f99a-457f-9281-9833395303c4
      resourceVersion: '36896'
      generation: 1
      creationTimestamp: '2020-05-27T16:28:41Z'
      labels:
        garden.io/version: v-e50057b7a1
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 274aa061853b7da8b3101872421832ee0ce155d11e48e9117823ad0ec73166d8
        garden.io/version: v-e50057b7a1
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"274aa061853b7da8b3101872421832ee0ce155d11e48e9117823ad0ec73166d8","garden.io/version":"v-e50057b7a1"},"labels":{"garden.io/version":"v-e50057b7a1","module":"client","service":"frontend"},"name":"frontend-v-e50057b7a1","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-e50057b7a1","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-e50057b7a1","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-e50057b7a1"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-e50057b7a1\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-e50057b7a1","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-e50057b7a1
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-e50057b7a1
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T16:28:47.241Z] ⏳  Processing...

[2020-05-27T16:28:47.253Z] Syncing module sources (17 files)...

[2020-05-27T16:28:47.536Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-27T16:28:47.551Z] Building version v-a9e68860e7...

[2020-05-27T16:28:47.824Z] Building client:v-a9e68860e7...

[2020-05-27T16:28:48.293Z] Building client:v-a9e68860e7... → Done (took 0.7 sec)

[2020-05-27T16:28:48.307Z] Deploying version v-a9e68860e7...

[2020-05-27T16:28:50.234Z] Waiting for resources to be ready...

[2020-05-27T16:28:52.287Z] Deployment/frontend-v-a9e68860e7: Started container frontend

[2020-05-27T16:28:54.850Z] Deploying version v-a9e68860e7...

[2020-05-27T16:28:54.868Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-a9e68860e7: ScalingReplicaSet - Scaled up replica set frontend-v-a9e68860e7-565574677c to 1
Pod frontend-v-a9e68860e7-565574677c-vv7jf: Scheduled - Successfully assigned node-microservice/frontend-v-a9e68860e7-565574677c-vv7jf to minikube
Pod frontend-v-a9e68860e7-565574677c-vv7jf: Pulled - Container image "client:v-a9e68860e7" already present on machine
Pod frontend-v-a9e68860e7-565574677c-vv7jf: Created - Created container frontend
Pod frontend-v-a9e68860e7-565574677c-vv7jf: Started - Started container frontend
Pod frontend-v-a9e68860e7-565574677c-vv7jf: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-a9e68860e7

****** frontend-v-a9e68860e7-565574677c-vv7jf ******
------ frontend ------
> client@0.1.0 start /client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.9/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-a9e68860e7:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-a9e68860e7-565574677c to 1\e[39m\n\e[94mPod frontend-v-a9e68860e7-565574677c-vv7jf:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-a9e68860e7-565574677c-vv7jf to minikube\e[39m\n\e[94mPod frontend-v-a9e68860e7-565574677c-vv7jf:\e[39m \e[37mPulled - Container image \"client:v-a9e68860e7\" already present on machine\e[39m\n\e[94mPod frontend-v-a9e68860e7-565574677c-vv7jf:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-a9e68860e7-565574677c-vv7jf:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-a9e68860e7-565574677c-vv7jf:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-a9e68860e7\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-a9e68860e7-565574677c-vv7jf ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.9/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-a9e68860e7
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-a9e68860e7
      uid: 3c168879-bdee-4d05-bd40-9eb73459f9b9
      resourceVersion: '36961'
      generation: 1
      creationTimestamp: '2020-05-27T16:28:48Z'
      labels:
        garden.io/version: v-a9e68860e7
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: e3cafda182842f145d6c76f0398b2aad0f6aba4d0723ab9160f18f69ae7b2afb
        garden.io/version: v-a9e68860e7
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"e3cafda182842f145d6c76f0398b2aad0f6aba4d0723ab9160f18f69ae7b2afb","garden.io/version":"v-a9e68860e7"},"labels":{"garden.io/version":"v-a9e68860e7","module":"client","service":"frontend"},"name":"frontend-v-a9e68860e7","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-a9e68860e7","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-a9e68860e7","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-a9e68860e7"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-a9e68860e7\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-a9e68860e7","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-a9e68860e7
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-a9e68860e7
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T16:28:54.884Z] Waiting for code changes...

[2020-05-27T16:37:59.641Z] ⏳  Processing...

[2020-05-27T16:37:59.798Z] Waiting for code changes...

[2020-05-27T16:37:59.816Z] ⏳  Processing...

[2020-05-27T16:37:59.830Z] Syncing module sources (17 files)...

[2020-05-27T16:38:00.401Z] Syncing module sources (17 files)... → Done (took 0.6 sec)

[2020-05-27T16:38:00.418Z] Building version v-b17b93eeb9...

[2020-05-27T16:38:00.876Z] Building client:v-b17b93eeb9...

[2020-05-27T16:38:01.381Z] Building client:v-b17b93eeb9... → Done (took 1 sec)

[2020-05-27T16:38:01.396Z] Deploying version v-b17b93eeb9...

[2020-05-27T16:38:03.131Z] Waiting for resources to be ready...

[2020-05-27T16:38:05.199Z] Deployment/frontend-v-b17b93eeb9: Started container frontend

[2020-05-27T16:38:07.779Z] Deploying version v-b17b93eeb9...

[2020-05-27T16:38:07.798Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-b17b93eeb9: ScalingReplicaSet - Scaled up replica set frontend-v-b17b93eeb9-65d559c49c to 1
Pod frontend-v-b17b93eeb9-65d559c49c-sq5gv: Scheduled - Successfully assigned node-microservice/frontend-v-b17b93eeb9-65d559c49c-sq5gv to minikube
Pod frontend-v-b17b93eeb9-65d559c49c-sq5gv: Pulled - Container image "client:v-b17b93eeb9" already present on machine
Pod frontend-v-b17b93eeb9-65d559c49c-sq5gv: Created - Created container frontend
Pod frontend-v-b17b93eeb9-65d559c49c-sq5gv: Started - Started container frontend
Pod frontend-v-b17b93eeb9-65d559c49c-sq5gv: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-b17b93eeb9

****** frontend-v-b17b93eeb9-65d559c49c-sq5gv ******
------ frontend ------
> client@0.1.0 start /client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.3/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-b17b93eeb9:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-b17b93eeb9-65d559c49c to 1\e[39m\n\e[94mPod frontend-v-b17b93eeb9-65d559c49c-sq5gv:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-b17b93eeb9-65d559c49c-sq5gv to minikube\e[39m\n\e[94mPod frontend-v-b17b93eeb9-65d559c49c-sq5gv:\e[39m \e[37mPulled - Container image \"client:v-b17b93eeb9\" already present on machine\e[39m\n\e[94mPod frontend-v-b17b93eeb9-65d559c49c-sq5gv:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-b17b93eeb9-65d559c49c-sq5gv:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-b17b93eeb9-65d559c49c-sq5gv:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-b17b93eeb9\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-b17b93eeb9-65d559c49c-sq5gv ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.3/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-b17b93eeb9
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-b17b93eeb9
      uid: f7630866-37d8-4be4-9ee0-1660de048a51
      resourceVersion: '38560'
      generation: 1
      creationTimestamp: '2020-05-27T16:38:01Z'
      labels:
        garden.io/version: v-b17b93eeb9
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: c986a35b6d00b1f8edf247a9450c231701bb21be2b974026648e4e6f3cb5e1cd
        garden.io/version: v-b17b93eeb9
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"c986a35b6d00b1f8edf247a9450c231701bb21be2b974026648e4e6f3cb5e1cd","garden.io/version":"v-b17b93eeb9"},"labels":{"garden.io/version":"v-b17b93eeb9","module":"client","service":"frontend"},"name":"frontend-v-b17b93eeb9","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-b17b93eeb9","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-b17b93eeb9","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-b17b93eeb9"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-b17b93eeb9\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-b17b93eeb9","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-b17b93eeb9
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-b17b93eeb9
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T16:38:07.817Z] Waiting for code changes...

[2020-05-27T16:38:19.836Z] ⏳  Processing...

[2020-05-27T16:38:19.989Z] Waiting for code changes...

[2020-05-27T16:38:20.010Z] ⏳  Processing...

[2020-05-27T16:38:20.027Z] Syncing module sources (17 files)...

[2020-05-27T16:38:20.361Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-27T16:38:20.380Z] Building version v-892795808e...

[2020-05-27T16:38:20.851Z] Building client:v-892795808e...

[2020-05-27T16:38:21.425Z] Building client:v-892795808e... → Done (took 1 sec)

[2020-05-27T16:38:21.443Z] Deploying version v-892795808e...

[2020-05-27T16:38:23.153Z] Waiting for resources to be ready...

[2020-05-27T16:38:25.204Z] Deployment/frontend-v-892795808e: Started container frontend

[2020-05-27T16:38:27.787Z] Deploying version v-892795808e...

[2020-05-27T16:38:27.806Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 10s restarting failed container=frontend pod=frontend-v-892795808e-699fb6f79c-7sjv9_node-microservice(21addf22-279a-49e6-991a-7d0d376dfc5e)

━━━ Events ━━━
Deployment frontend-v-892795808e: ScalingReplicaSet - Scaled up replica set frontend-v-892795808e-699fb6f79c to 1
Pod frontend-v-892795808e-699fb6f79c-7sjv9: Scheduled - Successfully assigned node-microservice/frontend-v-892795808e-699fb6f79c-7sjv9 to minikube
Pod frontend-v-892795808e-699fb6f79c-7sjv9: Pulled - Container image "client:v-892795808e" already present on machine
Pod frontend-v-892795808e-699fb6f79c-7sjv9: Created - Created container frontend
Pod frontend-v-892795808e-699fb6f79c-7sjv9: Started - Started container frontend
Pod frontend-v-892795808e-699fb6f79c-7sjv9: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-892795808e

****** frontend-v-892795808e-699fb6f79c-7sjv9 ******
------ frontend ------
> client@0.1.0 start /client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=frontend
    pod=frontend-v-892795808e-699fb6f79c-7sjv9_node-microservice(21addf22-279a-49e6-991a-7d0d376dfc5e)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-892795808e:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-892795808e-699fb6f79c to 1\e[39m\n\e[94mPod frontend-v-892795808e-699fb6f79c-7sjv9:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-892795808e-699fb6f79c-7sjv9 to minikube\e[39m\n\e[94mPod frontend-v-892795808e-699fb6f79c-7sjv9:\e[39m \e[37mPulled - Container image \"client:v-892795808e\" already present on machine\e[39m\n\e[94mPod frontend-v-892795808e-699fb6f79c-7sjv9:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-892795808e-699fb6f79c-7sjv9:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-892795808e-699fb6f79c-7sjv9:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-892795808e\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-892795808e-699fb6f79c-7sjv9 ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-892795808e
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-892795808e
      uid: 5249ffcc-2110-4a6c-a27f-dcbdf8d4fa3f
      resourceVersion: '38655'
      generation: 1
      creationTimestamp: '2020-05-27T16:38:21Z'
      labels:
        garden.io/version: v-892795808e
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 2ab1133e5c983fe3e9dc23e84ee4a8fc1097eabd58f2afa73f66f700674433a6
        garden.io/version: v-892795808e
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"2ab1133e5c983fe3e9dc23e84ee4a8fc1097eabd58f2afa73f66f700674433a6","garden.io/version":"v-892795808e"},"labels":{"garden.io/version":"v-892795808e","module":"client","service":"frontend"},"name":"frontend-v-892795808e","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-892795808e","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-892795808e","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-892795808e"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-892795808e\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-892795808e","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-892795808e
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-892795808e
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T16:38:27.824Z] ⏳  Processing...

[2020-05-27T16:38:27.840Z] Syncing module sources (17 files)...

[2020-05-27T16:38:28.123Z] Syncing module sources (17 files)... → Done (took 0.3 sec)

[2020-05-27T16:38:28.142Z] Building version v-f8e05f103e...

[2020-05-27T16:38:28.409Z] Building client:v-f8e05f103e...

[2020-05-27T16:38:28.676Z] Building client:v-f8e05f103e... → Done (took 0.5 sec)

[2020-05-27T16:38:28.696Z] Deploying version v-f8e05f103e...

[2020-05-27T16:38:30.431Z] Waiting for resources to be ready...

[2020-05-27T16:38:32.487Z] Deployment/frontend-v-f8e05f103e: Started container frontend

[2020-05-27T16:38:35.057Z] Deploying version v-f8e05f103e...

[2020-05-27T16:38:35.078Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 10s restarting failed container=frontend pod=frontend-v-f8e05f103e-8444f4fbc7-dh497_node-microservice(9b81a085-335d-40de-8fd4-306dee620cfc)

━━━ Events ━━━
Deployment frontend-v-f8e05f103e: ScalingReplicaSet - Scaled up replica set frontend-v-f8e05f103e-8444f4fbc7 to 1
Pod frontend-v-f8e05f103e-8444f4fbc7-dh497: Scheduled - Successfully assigned node-microservice/frontend-v-f8e05f103e-8444f4fbc7-dh497 to minikube
Pod frontend-v-f8e05f103e-8444f4fbc7-dh497: Pulled - Container image "client:v-f8e05f103e" already present on machine
Pod frontend-v-f8e05f103e-8444f4fbc7-dh497: Created - Created container frontend
Pod frontend-v-f8e05f103e-8444f4fbc7-dh497: Started - Started container frontend
Pod frontend-v-f8e05f103e-8444f4fbc7-dh497: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-f8e05f103e

****** frontend-v-f8e05f103e-8444f4fbc7-dh497 ******
------ frontend ------
> client@0.1.0 start /client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.3/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 10s restarting failed container=frontend
    pod=frontend-v-f8e05f103e-8444f4fbc7-dh497_node-microservice(9b81a085-335d-40de-8fd4-306dee620cfc)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-f8e05f103e:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-f8e05f103e-8444f4fbc7 to 1\e[39m\n\e[94mPod frontend-v-f8e05f103e-8444f4fbc7-dh497:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-f8e05f103e-8444f4fbc7-dh497 to minikube\e[39m\n\e[94mPod frontend-v-f8e05f103e-8444f4fbc7-dh497:\e[39m \e[37mPulled - Container image \"client:v-f8e05f103e\" already present on machine\e[39m\n\e[94mPod frontend-v-f8e05f103e-8444f4fbc7-dh497:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-f8e05f103e-8444f4fbc7-dh497:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-f8e05f103e-8444f4fbc7-dh497:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-f8e05f103e\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-f8e05f103e-8444f4fbc7-dh497 ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.3/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-f8e05f103e
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-f8e05f103e
      uid: 674039fe-516f-49ea-a547-ed08ab317018
      resourceVersion: '38719'
      generation: 1
      creationTimestamp: '2020-05-27T16:38:29Z'
      labels:
        garden.io/version: v-f8e05f103e
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: da9217c1aa3530c9a48e90b39e90db2c1dd89302f99173b0f53baf5708049299
        garden.io/version: v-f8e05f103e
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"da9217c1aa3530c9a48e90b39e90db2c1dd89302f99173b0f53baf5708049299","garden.io/version":"v-f8e05f103e"},"labels":{"garden.io/version":"v-f8e05f103e","module":"client","service":"frontend"},"name":"frontend-v-f8e05f103e","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-f8e05f103e","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-f8e05f103e","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-f8e05f103e"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-f8e05f103e\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-f8e05f103e","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-f8e05f103e
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-f8e05f103e
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T16:38:35.096Z] Waiting for code changes...

[2020-05-27T16:43:03.656Z] ⏳  Processing...

[2020-05-27T16:43:03.834Z] Waiting for code changes...

[2020-05-27T16:43:03.857Z] ⏳  Processing...

[2020-05-27T16:43:03.876Z] Syncing module sources (17 files)...

[2020-05-27T16:43:04.241Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-27T16:43:04.261Z] Building version v-ed5f9cd88c...

[2020-05-27T16:43:04.726Z] Building client:v-ed5f9cd88c...

[2020-05-27T16:44:01.137Z] Building client:v-ed5f9cd88c... → Done (took 56.9 sec)

[2020-05-27T16:44:01.160Z] Deploying version v-ed5f9cd88c...

[2020-05-27T16:44:03.842Z] Waiting for resources to be ready...

[2020-05-27T16:44:05.941Z] Deployment/frontend-v-ed5f9cd88c: Started container frontend

[2020-05-27T16:44:08.526Z] Deploying version v-ed5f9cd88c...

[2020-05-27T16:44:08.549Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-ed5f9cd88c: ScalingReplicaSet - Scaled up replica set frontend-v-ed5f9cd88c-978478d4f to 1
Pod frontend-v-ed5f9cd88c-978478d4f-tmccc: Scheduled - Successfully assigned node-microservice/frontend-v-ed5f9cd88c-978478d4f-tmccc to minikube
Pod frontend-v-ed5f9cd88c-978478d4f-tmccc: Pulled - Container image "client:v-ed5f9cd88c" already present on machine
Pod frontend-v-ed5f9cd88c-978478d4f-tmccc: Created - Created container frontend
Pod frontend-v-ed5f9cd88c-978478d4f-tmccc: Started - Started container frontend
Pod frontend-v-ed5f9cd88c-978478d4f-tmccc: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-ed5f9cd88c

****** frontend-v-ed5f9cd88c-978478d4f-tmccc ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-ed5f9cd88c:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-ed5f9cd88c-978478d4f to 1\e[39m\n\e[94mPod frontend-v-ed5f9cd88c-978478d4f-tmccc:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-ed5f9cd88c-978478d4f-tmccc to minikube\e[39m\n\e[94mPod frontend-v-ed5f9cd88c-978478d4f-tmccc:\e[39m \e[37mPulled - Container image \"client:v-ed5f9cd88c\" already present on machine\e[39m\n\e[94mPod frontend-v-ed5f9cd88c-978478d4f-tmccc:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-ed5f9cd88c-978478d4f-tmccc:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-ed5f9cd88c-978478d4f-tmccc:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-ed5f9cd88c\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-ed5f9cd88c-978478d4f-tmccc ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-ed5f9cd88c
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-ed5f9cd88c
      uid: 3b8db9a2-832d-4c60-bbfd-23c2b76e5dc0
      resourceVersion: '39647'
      generation: 1
      creationTimestamp: '2020-05-27T16:44:02Z'
      labels:
        garden.io/version: v-ed5f9cd88c
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 48961e33f91128db6f5da6241c3ed4cfd939ba736bd01319b0c0db569f5a9379
        garden.io/version: v-ed5f9cd88c
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"48961e33f91128db6f5da6241c3ed4cfd939ba736bd01319b0c0db569f5a9379","garden.io/version":"v-ed5f9cd88c"},"labels":{"garden.io/version":"v-ed5f9cd88c","module":"client","service":"frontend"},"name":"frontend-v-ed5f9cd88c","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-ed5f9cd88c","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-ed5f9cd88c","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-ed5f9cd88c"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-ed5f9cd88c\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-ed5f9cd88c","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-ed5f9cd88c
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-ed5f9cd88c
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T16:44:08.571Z] ⏳  Processing...

[2020-05-27T16:44:08.590Z] Syncing module sources (17 files)...

[2020-05-27T16:44:08.999Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-27T16:44:09.021Z] Building version v-eee65a97ae...

[2020-05-27T16:44:09.479Z] Building client:v-eee65a97ae...

[2020-05-27T16:44:10.107Z] Building client:v-eee65a97ae... → Done (took 1.1 sec)

[2020-05-27T16:44:10.129Z] Deploying version v-eee65a97ae...

[2020-05-27T16:44:11.893Z] Waiting for resources to be ready...

[2020-05-27T16:44:13.978Z] Deployment/frontend-v-eee65a97ae: Started container frontend

[2020-05-27T16:44:16.553Z] Deploying version v-eee65a97ae...

[2020-05-27T16:44:16.581Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-eee65a97ae: ScalingReplicaSet - Scaled up replica set frontend-v-eee65a97ae-577d898f77 to 1
Pod frontend-v-eee65a97ae-577d898f77-hwkn5: Scheduled - Successfully assigned node-microservice/frontend-v-eee65a97ae-577d898f77-hwkn5 to minikube
Pod frontend-v-eee65a97ae-577d898f77-hwkn5: Pulled - Container image "client:v-eee65a97ae" already present on machine
Pod frontend-v-eee65a97ae-577d898f77-hwkn5: Created - Created container frontend
Pod frontend-v-eee65a97ae-577d898f77-hwkn5: Started - Started container frontend
Pod frontend-v-eee65a97ae-577d898f77-hwkn5: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-eee65a97ae

****** frontend-v-eee65a97ae-577d898f77-hwkn5 ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.3/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-eee65a97ae:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-eee65a97ae-577d898f77 to 1\e[39m\n\e[94mPod frontend-v-eee65a97ae-577d898f77-hwkn5:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-eee65a97ae-577d898f77-hwkn5 to minikube\e[39m\n\e[94mPod frontend-v-eee65a97ae-577d898f77-hwkn5:\e[39m \e[37mPulled - Container image \"client:v-eee65a97ae\" already present on machine\e[39m\n\e[94mPod frontend-v-eee65a97ae-577d898f77-hwkn5:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-eee65a97ae-577d898f77-hwkn5:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-eee65a97ae-577d898f77-hwkn5:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-eee65a97ae\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-eee65a97ae-577d898f77-hwkn5 ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.3/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-eee65a97ae
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-eee65a97ae
      uid: 5e62849a-74c5-472a-ad1e-d7ab834744df
      resourceVersion: '39709'
      generation: 1
      creationTimestamp: '2020-05-27T16:44:10Z'
      labels:
        garden.io/version: v-eee65a97ae
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 38f87bc1e73c332c3d6761897da477c7ea0326e2937bd58820f36eb29db12901
        garden.io/version: v-eee65a97ae
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"38f87bc1e73c332c3d6761897da477c7ea0326e2937bd58820f36eb29db12901","garden.io/version":"v-eee65a97ae"},"labels":{"garden.io/version":"v-eee65a97ae","module":"client","service":"frontend"},"name":"frontend-v-eee65a97ae","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-eee65a97ae","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-eee65a97ae","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-eee65a97ae"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-eee65a97ae\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-eee65a97ae","imagePullPolicy":"IfNotPresent","name":"frontend","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-eee65a97ae
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-eee65a97ae
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T16:44:16.604Z] Waiting for code changes...

[2020-05-27T16:55:53.921Z] ⏳  Processing...

[2020-05-27T16:55:54.103Z] Waiting for code changes...

[2020-05-27T16:55:54.129Z] ⏳  Processing...

[2020-05-27T16:55:54.153Z] Syncing module sources (17 files)...

[2020-05-27T16:55:54.770Z] Syncing module sources (17 files)... → Done (took 0.6 sec)

[2020-05-27T16:55:54.792Z] Building version v-d6ea7b5b29...

[2020-05-27T16:55:55.256Z] Building client:v-d6ea7b5b29...

[2020-05-27T16:57:36.377Z] Building client:v-d6ea7b5b29... → Done (took 101.6 sec)

[2020-05-27T16:57:36.412Z] Deploying version v-d6ea7b5b29...

[2020-05-27T16:57:39.106Z] Waiting for resources to be ready...

[2020-05-27T16:57:41.163Z] Resources ready

[2020-05-27T16:57:41.210Z] Deploying version v-d6ea7b5b29... → Done (took 4.8 sec)

[2020-05-27T16:57:41.239Z] ⏳  Processing...

[2020-05-27T16:57:41.269Z] Syncing module sources (16 files)...

[2020-05-27T16:57:41.953Z] Syncing module sources (16 files)... → Done (took 0.7 sec)

[2020-05-27T16:57:41.983Z] Building version v-41b18b5223...

[2020-05-27T16:57:42.693Z] Building client:v-41b18b5223...

[2020-05-27T16:58:57.763Z] Building client:v-41b18b5223... → Done (took 75.8 sec)

[2020-05-27T16:58:57.790Z] Deploying version v-41b18b5223...

[2020-05-27T16:58:59.588Z] Waiting for resources to be ready...

[2020-05-27T16:59:01.626Z] Resources ready

[2020-05-27T16:59:01.668Z] Deploying version v-41b18b5223... → Done (took 3.9 sec)

[2020-05-27T16:59:01.697Z] ⏳  Processing...

[2020-05-27T16:59:01.723Z] Syncing module sources (16 files)...

[2020-05-27T16:59:02.425Z] Syncing module sources (16 files)... → Done (took 0.7 sec)

[2020-05-27T16:59:02.450Z] Building version v-41b18b5223...

[2020-05-27T16:59:02.923Z] Building client:v-41b18b5223...

[2020-05-27T16:59:03.270Z] Building client:v-41b18b5223... → Done (took 0.8 sec)

[2020-05-27T16:59:03.297Z] Deploying version v-41b18b5223...

[2020-05-27T16:59:04.850Z] Waiting for resources to be ready...

[2020-05-27T16:59:06.883Z] Resources ready

[2020-05-27T16:59:06.925Z] Deploying version v-41b18b5223... → Done (took 3.6 sec)

[2020-05-27T16:59:06.953Z] Waiting for code changes...

[2020-05-27T17:01:24.948Z] ⏳  Processing...

[2020-05-27T17:01:25.040Z] Waiting for code changes...

[2020-05-27T17:01:25.077Z] ⏳  Processing...

[2020-05-27T17:01:25.215Z] Waiting for code changes...

[2020-05-27T17:01:25.246Z] ⏳  Processing...

[2020-05-27T17:01:25.289Z] Waiting for code changes...

[2020-05-27T17:01:59.309Z] ⏳  Processing...

[2020-05-27T17:01:59.366Z] Waiting for code changes...

[2020-05-27T17:02:01.843Z] ⏳  Processing...

[2020-05-27T17:02:01.892Z] Waiting for code changes...

[2020-05-27T17:04:15.749Z] Getting status...

[2020-05-27T17:04:18.182Z] Getting status... → Done

[2020-05-27T17:04:19.010Z] Module configuration changed, reloading...

[2020-05-27T17:04:19.748Z] Getting status...

[2020-05-27T17:04:20.994Z] Getting status... → Done

[2020-05-27T17:04:21.624Z] ⏳  Processing...

[2020-05-27T17:04:21.674Z] Syncing module sources (5 files)...

[2020-05-27T17:04:21.698Z] Syncing module sources (17 files)...

[2020-05-27T17:04:21.837Z] Syncing module sources (5 files)... → Done (took 0.2 sec)

[2020-05-27T17:04:21.865Z] Getting build status for v-56ab2b577f...

[2020-05-27T17:04:22.483Z] Getting build status for v-57df7df941...

[2020-05-27T17:04:22.515Z] Getting build status for v-57df7df941... → Done (took 0 sec)

[2020-05-27T17:04:22.547Z] Deploying version v-57df7df941...

[2020-05-27T17:04:22.574Z] Deploying version v-57df7df941... → Already deployed

[2020-05-27T17:04:22.601Z] Syncing module sources (17 files)... → Done (took 0.9 sec)

[2020-05-27T17:04:22.625Z] Getting build status for v-bed8c69c81...

[2020-05-27T17:04:22.800Z] Getting build status for v-56ab2b577f... → Done (took 0.9 sec)

[2020-05-27T17:04:22.833Z] Deploying version v-56ab2b577f...

[2020-05-27T17:04:23.036Z] Building version v-bed8c69c81...

[2020-05-27T17:04:23.151Z] Building client:v-bed8c69c81...

[2020-05-27T17:04:24.410Z] Waiting for resources to be ready...

[2020-05-27T17:04:26.491Z] Deploying version v-56ab2b577f...

[2020-05-27T17:04:26.527Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Pulled - Container image "server:v-56ab2b577f" already present on machine
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Created - Created container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Started - Started container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mPulled - Container image \"server:v-56ab2b577f\" already present on machine\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '42272'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:05:07.979Z] Building client:v-bed8c69c81... → Done (took 45.3 sec)

[2020-05-27T17:05:08.020Z] Deploying version v-bed8c69c81...

[2020-05-27T17:05:10.155Z] Waiting for resources to be ready...

[2020-05-27T17:05:12.203Z] Resources ready

[2020-05-27T17:05:12.273Z] Deploying version v-bed8c69c81... → Done (took 4.3 sec)

[2020-05-27T17:05:12.304Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T17:05:12.347Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T17:05:12.386Z] Waiting for code changes...

[2020-05-27T17:10:23.210Z] ⏳  Processing...

[2020-05-27T17:10:23.405Z] Waiting for code changes...

[2020-05-27T17:10:23.437Z] ⏳  Processing...

[2020-05-27T17:10:23.467Z] Syncing module sources (17 files)...

[2020-05-27T17:10:23.941Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-27T17:10:23.976Z] Building version v-2bdbac3599...

[2020-05-27T17:10:24.435Z] Building client:v-2bdbac3599...

[2020-05-27T17:10:32.538Z] Error: Command "rsync --recursive --times --owner --group --perms --links --safe-links --ignore-missing-args --temp-dir /Users/emilwils/Documents/node-microservice/.garden/build/db.tmp --prune-empty-dirs --include-from=- --exclude=* --delete-excluded /Users/emilwils/Documents/node-microservice/ /Users/emilwils/Documents/node-microservice/.garden/build/db" failed with code 24:

directory has vanished: "/Users/emilwils/Documents/node-microservice/client/node_modules/resolve"
directory has vanished: "/Users/emilwils/Documents/node-microservice/client/node_modules/bytes"
rsync warning: some files vanished before they could be transferred (code 24) at main.c(1209) [sender=3.1.3]
    at makeError (/snapshot/project/garden-service/tmp/dist/node_modules/execa/lib/error.js:58:11)
    at handlePromise (/snapshot/project/garden-service/tmp/dist/node_modules/execa/index.js:114:26)
    at processTicksAndRejections (internal/process/task_queues.js:93:5)
Error Details:
shortMessage: >-
  Command failed with exit code 24: rsync --recursive --times --owner --group
  --perms --links --safe-links --ignore-missing-args --temp-dir
  /Users/emilwils/Documents/node-microservice/.garden/build/db.tmp
  --prune-empty-dirs --include-from=- --exclude=* --delete-excluded
  /Users/emilwils/Documents/node-microservice/
  /Users/emilwils/Documents/node-microservice/.garden/build/db
command: >-
  rsync --recursive --times --owner --group --perms --links --safe-links
  --ignore-missing-args --temp-dir
  /Users/emilwils/Documents/node-microservice/.garden/build/db.tmp
  --prune-empty-dirs --include-from=- --exclude=* --delete-excluded
  /Users/emilwils/Documents/node-microservice/
  /Users/emilwils/Documents/node-microservice/.garden/build/db
exitCode: 24
stdout: ''
stderr: >-
  directory has vanished:
  "/Users/emilwils/Documents/node-microservice/client/node_modules/resolve"

  directory has vanished:
  "/Users/emilwils/Documents/node-microservice/client/node_modules/bytes"

  rsync warning: some files vanished before they could be transferred (code 24)
  at main.c(1209) [sender=3.1.3]
all: >-
  directory has vanished:
  "/Users/emilwils/Documents/node-microservice/client/node_modules/resolve"

  directory has vanished:
  "/Users/emilwils/Documents/node-microservice/client/node_modules/bytes"

  rsync warning: some files vanished before they could be transferred (code 24)
  at main.c(1209) [sender=3.1.3]
failed: true
timedOut: false
isCanceled: false
killed: false


[2020-05-27T17:10:33.766Z] Building version v-57df7df941...

[2020-05-27T17:10:35.114Z] Building version v-57df7df941... → Done (took 1.4 sec)

[2020-05-27T17:10:35.181Z] Deploying version v-57df7df941...

[2020-05-27T17:10:38.408Z] Waiting for resources to be ready...

[2020-05-27T17:10:40.490Z] Resources ready

[2020-05-27T17:10:40.594Z] Deploying version v-57df7df941... → Done (took 5.4 sec)

[2020-05-27T17:10:40.635Z] Deploying version v-56ab2b577f...

[2020-05-27T17:10:42.267Z] Waiting for resources to be ready...

[2020-05-27T17:10:44.400Z] Deploying version v-56ab2b577f...

[2020-05-27T17:10:44.450Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Pulled - Container image "server:v-56ab2b577f" already present on machine
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Created - Created container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Started - Started container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mPulled - Container image \"server:v-56ab2b577f\" already present on machine\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '42272'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:10:44.556Z] Building version v-57df7df941...

[2020-05-27T17:10:45.460Z] Building version v-57df7df941... → Done (took 0.9 sec)

[2020-05-27T17:10:45.511Z] Deploying version v-57df7df941...

[2020-05-27T17:10:47.146Z] Waiting for resources to be ready...

[2020-05-27T17:10:49.203Z] Resources ready

[2020-05-27T17:10:49.260Z] Deploying version v-57df7df941... → Done (took 3.8 sec)

[2020-05-27T17:10:49.302Z] Deploying version v-56ab2b577f...

[2020-05-27T17:10:50.936Z] Waiting for resources to be ready...

[2020-05-27T17:10:53.067Z] Deploying version v-56ab2b577f...

[2020-05-27T17:10:53.128Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Pulled - Container image "server:v-56ab2b577f" already present on machine
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Created - Created container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Started - Started container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mPulled - Container image \"server:v-56ab2b577f\" already present on machine\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '42272'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:10:53.233Z] Building version v-57df7df941...

[2020-05-27T17:10:53.850Z] Building version v-57df7df941... → Done (took 0.6 sec)

[2020-05-27T17:10:53.899Z] Deploying version v-57df7df941...

[2020-05-27T17:10:55.536Z] Waiting for resources to be ready...

[2020-05-27T17:10:57.594Z] Resources ready

[2020-05-27T17:10:57.680Z] Deploying version v-57df7df941... → Done (took 3.8 sec)

[2020-05-27T17:10:57.722Z] Deploying version v-56ab2b577f...

[2020-05-27T17:10:59.343Z] Waiting for resources to be ready...

[2020-05-27T17:11:01.460Z] Deploying version v-56ab2b577f...

[2020-05-27T17:11:01.516Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Pulled - Container image "server:v-56ab2b577f" already present on machine
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Created - Created container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Started - Started container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mPulled - Container image \"server:v-56ab2b577f\" already present on machine\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '42272'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:11:01.629Z] Building version v-57df7df941...

[2020-05-27T17:11:02.371Z] Building version v-57df7df941... → Done (took 0.7 sec)

[2020-05-27T17:11:02.423Z] Deploying version v-57df7df941...

[2020-05-27T17:11:03.879Z] Waiting for resources to be ready...

[2020-05-27T17:11:05.944Z] Resources ready

[2020-05-27T17:11:06.003Z] Deploying version v-57df7df941... → Done (took 3.6 sec)

[2020-05-27T17:11:06.049Z] Deploying version v-56ab2b577f...

[2020-05-27T17:11:07.691Z] Waiting for resources to be ready...

[2020-05-27T17:11:09.799Z] Deploying version v-56ab2b577f...

[2020-05-27T17:11:09.853Z] Error: Error deploying backend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Pulled - Container image "server:v-56ab2b577f" already present on machine
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Created - Created container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Started - Started container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mPulled - Container image \"server:v-56ab2b577f\" already present on machine\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '43778'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:11:09.988Z] Building version v-57df7df941...

[2020-05-27T17:11:10.565Z] Building version v-57df7df941... → Done (took 0.6 sec)

[2020-05-27T17:11:10.622Z] Deploying version v-57df7df941...

[2020-05-27T17:11:16.515Z] Waiting for resources to be ready...

[2020-05-27T17:11:29.678Z] Resources ready

[2020-05-27T17:11:29.941Z] Deploying version v-57df7df941... → Done (took 19.3 sec)

[2020-05-27T17:11:30.043Z] Deploying version v-56ab2b577f...

[2020-05-27T17:11:32.222Z] Waiting for resources to be ready...

[2020-05-27T17:11:34.412Z] Deploying version v-56ab2b577f...

[2020-05-27T17:11:34.468Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Pulled - Container image "server:v-56ab2b577f" already present on machine
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Created - Created container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Started - Started container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mPulled - Container image \"server:v-56ab2b577f\" already present on machine\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '43778'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:11:35.246Z] Building version v-57df7df941...

[2020-05-27T17:11:36.425Z] Building version v-57df7df941... → Done (took 1.2 sec)

[2020-05-27T17:11:36.489Z] Deploying version v-57df7df941...

[2020-05-27T17:11:38.576Z] Waiting for resources to be ready...

[2020-05-27T17:11:41.800Z] Resources ready

[2020-05-27T17:11:43.428Z] Deploying version v-57df7df941... → Done (took 6.9 sec)

[2020-05-27T17:11:43.603Z] Deploying version v-56ab2b577f...

[2020-05-27T17:11:46.011Z] Waiting for resources to be ready...

[2020-05-27T17:11:51.881Z] Deploying version v-56ab2b577f...

[2020-05-27T17:11:51.968Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Pulled - Container image "server:v-56ab2b577f" already present on machine
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Created - Created container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Started - Started container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mPulled - Container image \"server:v-56ab2b577f\" already present on machine\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '43778'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:11:53.242Z] Building version v-57df7df941...

[2020-05-27T17:11:55.462Z] Building version v-57df7df941... → Done (took 2.2 sec)

[2020-05-27T17:11:55.567Z] Deploying version v-57df7df941...

[2020-05-27T17:11:57.728Z] Waiting for resources to be ready...

[2020-05-27T17:12:00.061Z] Resources ready

[2020-05-27T17:12:00.402Z] Deploying version v-57df7df941... → Done (took 4.9 sec)

[2020-05-27T17:12:00.479Z] Deploying version v-56ab2b577f...

[2020-05-27T17:12:02.207Z] Waiting for resources to be ready...

[2020-05-27T17:12:04.332Z] Deploying version v-56ab2b577f...

[2020-05-27T17:12:04.399Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Pulled - Container image "server:v-56ab2b577f" already present on machine
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Created - Created container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Started - Started container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mPulled - Container image \"server:v-56ab2b577f\" already present on machine\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '43778'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:12:04.856Z] Building version v-57df7df941...

[2020-05-27T17:12:05.699Z] Building version v-57df7df941... → Done (took 0.8 sec)

[2020-05-27T17:12:05.770Z] Deploying version v-57df7df941...

[2020-05-27T17:12:07.432Z] Waiting for resources to be ready...

[2020-05-27T17:12:09.509Z] Resources ready

[2020-05-27T17:12:09.585Z] Deploying version v-57df7df941... → Done (took 3.8 sec)

[2020-05-27T17:12:09.648Z] Deploying version v-56ab2b577f...

[2020-05-27T17:12:11.312Z] Waiting for resources to be ready...

[2020-05-27T17:12:13.441Z] Deploying version v-56ab2b577f...

[2020-05-27T17:12:13.510Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Pulled - Container image "server:v-56ab2b577f" already present on machine
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Created - Created container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Started - Started container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mPulled - Container image \"server:v-56ab2b577f\" already present on machine\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '43778'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:12:14.081Z] Building version v-57df7df941...

[2020-05-27T17:12:14.704Z] Building version v-57df7df941... → Done (took 0.6 sec)

[2020-05-27T17:12:14.778Z] Deploying version v-57df7df941...

[2020-05-27T17:12:16.463Z] Waiting for resources to be ready...

[2020-05-27T17:12:18.541Z] Resources ready

[2020-05-27T17:12:18.623Z] Deploying version v-57df7df941... → Done (took 3.9 sec)

[2020-05-27T17:12:18.688Z] Deploying version v-56ab2b577f...

[2020-05-27T17:12:20.186Z] Waiting for resources to be ready...

[2020-05-27T17:12:22.334Z] Deploying version v-56ab2b577f...

[2020-05-27T17:12:22.400Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Pulled - Container image "server:v-56ab2b577f" already present on machine
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Created - Created container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Started - Started container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mPulled - Container image \"server:v-56ab2b577f\" already present on machine\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '43778'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:12:22.919Z] Building version v-57df7df941...

[2020-05-27T17:12:23.760Z] Building version v-57df7df941... → Done (took 0.8 sec)

[2020-05-27T17:12:23.838Z] Deploying version v-57df7df941...

[2020-05-27T17:12:25.728Z] Waiting for resources to be ready...

[2020-05-27T17:12:27.829Z] Resources ready

[2020-05-27T17:12:27.915Z] Deploying version v-57df7df941... → Done (took 4.1 sec)

[2020-05-27T17:12:27.984Z] Deploying version v-56ab2b577f...

[2020-05-27T17:12:29.637Z] Waiting for resources to be ready...

[2020-05-27T17:12:31.777Z] Deploying version v-56ab2b577f...

[2020-05-27T17:12:31.846Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Pulled - Container image "server:v-56ab2b577f" already present on machine
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Created - Created container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Started - Started container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mPulled - Container image \"server:v-56ab2b577f\" already present on machine\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '43778'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:12:35.230Z] Building client:v-2bdbac3599... → Done (took 131.2 sec)

[2020-05-27T17:12:35.295Z] Deploying version v-2bdbac3599...

[2020-05-27T17:12:37.367Z] Waiting for resources to be ready...

[2020-05-27T17:12:39.484Z] Deployment/frontend-v-2bdbac3599: Started container frontend

[2020-05-27T17:12:42.112Z] Deploying version v-2bdbac3599...

[2020-05-27T17:12:42.182Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-2bdbac3599: ScalingReplicaSet - Scaled up replica set frontend-v-2bdbac3599-57b68b89bc to 1
Pod frontend-v-2bdbac3599-57b68b89bc-dmqhs: Scheduled - Successfully assigned node-microservice/frontend-v-2bdbac3599-57b68b89bc-dmqhs to minikube
Pod frontend-v-2bdbac3599-57b68b89bc-dmqhs: Pulled - Container image "client:v-2bdbac3599" already present on machine
Pod frontend-v-2bdbac3599-57b68b89bc-dmqhs: Created - Created container frontend
Pod frontend-v-2bdbac3599-57b68b89bc-dmqhs: Started - Started container frontend
Pod frontend-v-2bdbac3599-57b68b89bc-dmqhs: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-2bdbac3599

****** frontend-v-2bdbac3599-57b68b89bc-dmqhs ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.3/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-2bdbac3599:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-2bdbac3599-57b68b89bc to 1\e[39m\n\e[94mPod frontend-v-2bdbac3599-57b68b89bc-dmqhs:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-2bdbac3599-57b68b89bc-dmqhs to minikube\e[39m\n\e[94mPod frontend-v-2bdbac3599-57b68b89bc-dmqhs:\e[39m \e[37mPulled - Container image \"client:v-2bdbac3599\" already present on machine\e[39m\n\e[94mPod frontend-v-2bdbac3599-57b68b89bc-dmqhs:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-2bdbac3599-57b68b89bc-dmqhs:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-2bdbac3599-57b68b89bc-dmqhs:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-2bdbac3599\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-2bdbac3599-57b68b89bc-dmqhs ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.3/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-2bdbac3599
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-2bdbac3599
      uid: b04f5328-9964-4d46-a5cf-ae7a09c1fe0d
      resourceVersion: '44054'
      generation: 1
      creationTimestamp: '2020-05-27T17:12:35Z'
      labels:
        garden.io/version: v-2bdbac3599
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: 9f39ef0f56aa3158e20cededf34598157a2eda29f06497dbd4f55818787a3684
        garden.io/version: v-2bdbac3599
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"9f39ef0f56aa3158e20cededf34598157a2eda29f06497dbd4f55818787a3684","garden.io/version":"v-2bdbac3599"},"labels":{"garden.io/version":"v-2bdbac3599","module":"client","service":"frontend"},"name":"frontend-v-2bdbac3599","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-2bdbac3599","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-2bdbac3599","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-2bdbac3599"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-2bdbac3599\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-2bdbac3599","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-2bdbac3599
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-2bdbac3599
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:12:42.248Z] ⏳  Processing...

[2020-05-27T17:12:42.314Z] Syncing module sources (17 files)...

[2020-05-27T17:12:42.800Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-27T17:12:42.872Z] Building version v-8c957a01c7...

[2020-05-27T17:12:43.493Z] Building client:v-8c957a01c7...

[2020-05-27T17:13:30.872Z] Building client:v-8c957a01c7... → Done (took 48 sec)

[2020-05-27T17:13:30.957Z] Deploying version v-8c957a01c7...

[2020-05-27T17:13:32.990Z] Waiting for resources to be ready...

[2020-05-27T17:13:35.140Z] Deployment/frontend-v-8c957a01c7: Started container frontend

[2020-05-27T17:13:37.725Z] Resources ready

[2020-05-27T17:13:37.847Z] Deploying version v-8c957a01c7... → Done (took 6.9 sec)

[2020-05-27T17:13:37.919Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T17:13:37.991Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T17:13:38.063Z] ⏳  Processing...

[2020-05-27T17:13:38.134Z] Syncing module sources (17 files)...

[2020-05-27T17:13:38.691Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-27T17:13:38.764Z] Building version v-8c957a01c7...

[2020-05-27T17:13:39.475Z] Building client:v-8c957a01c7...

[2020-05-27T17:13:39.932Z] Building client:v-8c957a01c7... → Done (took 1.2 sec)

[2020-05-27T17:13:40.005Z] Deploying version v-8c957a01c7...

[2020-05-27T17:13:41.819Z] Waiting for resources to be ready...

[2020-05-27T17:13:43.947Z] Deploying version v-8c957a01c7...

[2020-05-27T17:13:44.027Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-8c957a01c7: ScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Scheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Pulled - Container image "client:v-8c957a01c7" already present on machine
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Created - Created container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Started - Started container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7

****** frontend-v-8c957a01c7-df79896dc-7gzlr ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-8c957a01c7:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mPulled - Container image \"client:v-8c957a01c7\" already present on machine\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-8c957a01c7-df79896dc-7gzlr ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-8c957a01c7
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-8c957a01c7
      uid: f3ce89ff-8ab0-42a9-8b20-3d099892701d
      resourceVersion: '44275'
      generation: 1
      creationTimestamp: '2020-05-27T17:13:31Z'
      labels:
        garden.io/version: v-8c957a01c7
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839
        garden.io/version: v-8c957a01c7
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839","garden.io/version":"v-8c957a01c7"},"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"},"name":"frontend-v-8c957a01c7","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-8c957a01c7","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-8c957a01c7"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-8c957a01c7\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-8c957a01c7","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-8c957a01c7
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-8c957a01c7
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:13:44.098Z] ⏳  Processing...

[2020-05-27T17:13:44.173Z] Syncing module sources (17 files)...

[2020-05-27T17:13:44.596Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-27T17:13:44.676Z] Building version v-8c957a01c7...

[2020-05-27T17:13:45.063Z] Building client:v-8c957a01c7...

[2020-05-27T17:13:45.485Z] Building client:v-8c957a01c7... → Done (took 0.8 sec)

[2020-05-27T17:13:45.565Z] Deploying version v-8c957a01c7...

[2020-05-27T17:13:47.360Z] Waiting for resources to be ready...

[2020-05-27T17:13:49.506Z] Deploying version v-8c957a01c7...

[2020-05-27T17:13:49.586Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-8c957a01c7: ScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Scheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Pulled - Container image "client:v-8c957a01c7" already present on machine
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Created - Created container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Started - Started container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7

****** frontend-v-8c957a01c7-df79896dc-7gzlr ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-8c957a01c7:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mPulled - Container image \"client:v-8c957a01c7\" already present on machine\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-8c957a01c7-df79896dc-7gzlr ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-8c957a01c7
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-8c957a01c7
      uid: f3ce89ff-8ab0-42a9-8b20-3d099892701d
      resourceVersion: '44275'
      generation: 1
      creationTimestamp: '2020-05-27T17:13:31Z'
      labels:
        garden.io/version: v-8c957a01c7
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839
        garden.io/version: v-8c957a01c7
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839","garden.io/version":"v-8c957a01c7"},"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"},"name":"frontend-v-8c957a01c7","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-8c957a01c7","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-8c957a01c7"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-8c957a01c7\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-8c957a01c7","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-8c957a01c7
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-8c957a01c7
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:13:49.658Z] ⏳  Processing...

[2020-05-27T17:13:49.731Z] Syncing module sources (17 files)...

[2020-05-27T17:13:50.168Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-27T17:13:50.244Z] Building version v-8c957a01c7...

[2020-05-27T17:13:50.417Z] Building client:v-8c957a01c7...

[2020-05-27T17:13:50.819Z] Building client:v-8c957a01c7... → Done (took 0.6 sec)

[2020-05-27T17:13:50.897Z] Deploying version v-8c957a01c7...

[2020-05-27T17:13:52.643Z] Waiting for resources to be ready...

[2020-05-27T17:13:54.747Z] Resources ready

[2020-05-27T17:13:54.849Z] Deploying version v-8c957a01c7... → Done (took 4 sec)

[2020-05-27T17:13:54.920Z] → Ingress: http://node-microservice.192.168.99.108.nip.io

[2020-05-27T17:13:54.994Z] → Forward: http://127.0.0.1:3000 → frontend:3000 (http)

[2020-05-27T17:13:55.069Z] ⏳  Processing...

[2020-05-27T17:13:55.142Z] Syncing module sources (17 files)...

[2020-05-27T17:13:55.546Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-27T17:13:55.622Z] Building version v-8c957a01c7...

[2020-05-27T17:13:56.296Z] Building client:v-8c957a01c7...

[2020-05-27T17:13:56.736Z] Building client:v-8c957a01c7... → Done (took 1.1 sec)

[2020-05-27T17:13:56.819Z] Deploying version v-8c957a01c7...

[2020-05-27T17:13:58.549Z] Waiting for resources to be ready...

[2020-05-27T17:14:00.696Z] Deploying version v-8c957a01c7...

[2020-05-27T17:14:00.775Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-8c957a01c7: ScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Scheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Pulled - Container image "client:v-8c957a01c7" already present on machine
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Created - Created container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Started - Started container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7

****** frontend-v-8c957a01c7-df79896dc-7gzlr ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-8c957a01c7:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mPulled - Container image \"client:v-8c957a01c7\" already present on machine\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-8c957a01c7-df79896dc-7gzlr ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-8c957a01c7
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-8c957a01c7
      uid: f3ce89ff-8ab0-42a9-8b20-3d099892701d
      resourceVersion: '44336'
      generation: 1
      creationTimestamp: '2020-05-27T17:13:31Z'
      labels:
        garden.io/version: v-8c957a01c7
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839
        garden.io/version: v-8c957a01c7
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839","garden.io/version":"v-8c957a01c7"},"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"},"name":"frontend-v-8c957a01c7","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-8c957a01c7","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-8c957a01c7"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-8c957a01c7\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-8c957a01c7","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-8c957a01c7
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-8c957a01c7
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:14:00.852Z] ⏳  Processing...

[2020-05-27T17:14:00.926Z] Syncing module sources (17 files)...

[2020-05-27T17:14:01.326Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-27T17:14:01.406Z] Building version v-8c957a01c7...

[2020-05-27T17:14:01.579Z] Building client:v-8c957a01c7...

[2020-05-27T17:14:02.266Z] Building client:v-8c957a01c7... → Done (took 0.9 sec)

[2020-05-27T17:14:02.346Z] Deploying version v-8c957a01c7...

[2020-05-27T17:14:04.096Z] Waiting for resources to be ready...

[2020-05-27T17:14:06.255Z] Deploying version v-8c957a01c7...

[2020-05-27T17:14:06.333Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-8c957a01c7: ScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Scheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Pulled - Container image "client:v-8c957a01c7" already present on machine
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Created - Created container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Started - Started container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7

****** frontend-v-8c957a01c7-df79896dc-7gzlr ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-8c957a01c7:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mPulled - Container image \"client:v-8c957a01c7\" already present on machine\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-8c957a01c7-df79896dc-7gzlr ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-8c957a01c7
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-8c957a01c7
      uid: f3ce89ff-8ab0-42a9-8b20-3d099892701d
      resourceVersion: '44336'
      generation: 1
      creationTimestamp: '2020-05-27T17:13:31Z'
      labels:
        garden.io/version: v-8c957a01c7
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839
        garden.io/version: v-8c957a01c7
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839","garden.io/version":"v-8c957a01c7"},"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"},"name":"frontend-v-8c957a01c7","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-8c957a01c7","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-8c957a01c7"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-8c957a01c7\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-8c957a01c7","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-8c957a01c7
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-8c957a01c7
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:14:06.410Z] ⏳  Processing...

[2020-05-27T17:14:06.486Z] Syncing module sources (17 files)...

[2020-05-27T17:14:06.897Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-27T17:14:06.979Z] Building version v-8c957a01c7...

[2020-05-27T17:14:07.156Z] Building client:v-8c957a01c7...

[2020-05-27T17:14:07.560Z] Building client:v-8c957a01c7... → Done (took 0.6 sec)

[2020-05-27T17:14:07.646Z] Deploying version v-8c957a01c7...

[2020-05-27T17:14:09.404Z] Waiting for resources to be ready...

[2020-05-27T17:14:11.651Z] Deploying version v-8c957a01c7...

[2020-05-27T17:14:11.735Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 20s restarting failed container=frontend pod=frontend-v-8c957a01c7-df79896dc-7gzlr_node-microservice(4a865141-3b34-44ca-9b17-428af8beeb4c)

━━━ Events ━━━
Deployment frontend-v-8c957a01c7: ScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Scheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Pulled - Container image "client:v-8c957a01c7" already present on machine
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Created - Created container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Started - Started container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7

****** frontend-v-8c957a01c7-df79896dc-7gzlr ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 20s restarting failed container=frontend
    pod=frontend-v-8c957a01c7-df79896dc-7gzlr_node-microservice(4a865141-3b34-44ca-9b17-428af8beeb4c)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-8c957a01c7:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mPulled - Container image \"client:v-8c957a01c7\" already present on machine\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-8c957a01c7-df79896dc-7gzlr ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-8c957a01c7
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-8c957a01c7
      uid: f3ce89ff-8ab0-42a9-8b20-3d099892701d
      resourceVersion: '44336'
      generation: 1
      creationTimestamp: '2020-05-27T17:13:31Z'
      labels:
        garden.io/version: v-8c957a01c7
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839
        garden.io/version: v-8c957a01c7
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839","garden.io/version":"v-8c957a01c7"},"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"},"name":"frontend-v-8c957a01c7","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-8c957a01c7","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-8c957a01c7"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-8c957a01c7\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-8c957a01c7","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-8c957a01c7
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-8c957a01c7
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:14:11.812Z] ⏳  Processing...

[2020-05-27T17:14:11.891Z] Syncing module sources (17 files)...

[2020-05-27T17:14:12.306Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-27T17:14:12.387Z] Building version v-8c957a01c7...

[2020-05-27T17:14:12.897Z] Building client:v-8c957a01c7...

[2020-05-27T17:14:13.322Z] Building client:v-8c957a01c7... → Done (took 0.9 sec)

[2020-05-27T17:14:13.406Z] Deploying version v-8c957a01c7...

[2020-05-27T17:14:15.152Z] Waiting for resources to be ready...

[2020-05-27T17:14:17.305Z] Deploying version v-8c957a01c7...

[2020-05-27T17:14:17.387Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 20s restarting failed container=frontend pod=frontend-v-8c957a01c7-df79896dc-7gzlr_node-microservice(4a865141-3b34-44ca-9b17-428af8beeb4c)

━━━ Events ━━━
Deployment frontend-v-8c957a01c7: ScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Scheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Pulled - Container image "client:v-8c957a01c7" already present on machine
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Created - Created container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Started - Started container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7

****** frontend-v-8c957a01c7-df79896dc-7gzlr ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 20s restarting failed container=frontend
    pod=frontend-v-8c957a01c7-df79896dc-7gzlr_node-microservice(4a865141-3b34-44ca-9b17-428af8beeb4c)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-8c957a01c7:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mPulled - Container image \"client:v-8c957a01c7\" already present on machine\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-8c957a01c7-df79896dc-7gzlr ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-8c957a01c7
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-8c957a01c7
      uid: f3ce89ff-8ab0-42a9-8b20-3d099892701d
      resourceVersion: '44336'
      generation: 1
      creationTimestamp: '2020-05-27T17:13:31Z'
      labels:
        garden.io/version: v-8c957a01c7
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839
        garden.io/version: v-8c957a01c7
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839","garden.io/version":"v-8c957a01c7"},"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"},"name":"frontend-v-8c957a01c7","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-8c957a01c7","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-8c957a01c7"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-8c957a01c7\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-8c957a01c7","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-8c957a01c7
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-8c957a01c7
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:14:17.462Z] ⏳  Processing...

[2020-05-27T17:14:17.543Z] Syncing module sources (17 files)...

[2020-05-27T17:14:17.951Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-27T17:14:18.037Z] Building version v-8c957a01c7...

[2020-05-27T17:14:18.453Z] Building client:v-8c957a01c7...

[2020-05-27T17:14:18.856Z] Building client:v-8c957a01c7... → Done (took 0.8 sec)

[2020-05-27T17:14:18.940Z] Deploying version v-8c957a01c7...

[2020-05-27T17:14:20.655Z] Waiting for resources to be ready...

[2020-05-27T17:14:22.807Z] Deploying version v-8c957a01c7...

[2020-05-27T17:14:22.894Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 20s restarting failed container=frontend pod=frontend-v-8c957a01c7-df79896dc-7gzlr_node-microservice(4a865141-3b34-44ca-9b17-428af8beeb4c)

━━━ Events ━━━
Deployment frontend-v-8c957a01c7: ScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Scheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Pulled - Container image "client:v-8c957a01c7" already present on machine
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Created - Created container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Started - Started container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7

****** frontend-v-8c957a01c7-df79896dc-7gzlr ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 20s restarting failed container=frontend
    pod=frontend-v-8c957a01c7-df79896dc-7gzlr_node-microservice(4a865141-3b34-44ca-9b17-428af8beeb4c)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-8c957a01c7:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mPulled - Container image \"client:v-8c957a01c7\" already present on machine\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-8c957a01c7-df79896dc-7gzlr ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-8c957a01c7
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-8c957a01c7
      uid: f3ce89ff-8ab0-42a9-8b20-3d099892701d
      resourceVersion: '44336'
      generation: 1
      creationTimestamp: '2020-05-27T17:13:31Z'
      labels:
        garden.io/version: v-8c957a01c7
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839
        garden.io/version: v-8c957a01c7
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839","garden.io/version":"v-8c957a01c7"},"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"},"name":"frontend-v-8c957a01c7","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-8c957a01c7","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-8c957a01c7"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-8c957a01c7\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-8c957a01c7","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-8c957a01c7
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-8c957a01c7
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:14:22.974Z] ⏳  Processing...

[2020-05-27T17:14:23.053Z] Syncing module sources (17 files)...

[2020-05-27T17:14:23.455Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-27T17:14:23.540Z] Building version v-8c957a01c7...

[2020-05-27T17:14:23.900Z] Building client:v-8c957a01c7...

[2020-05-27T17:14:24.325Z] Building client:v-8c957a01c7... → Done (took 0.8 sec)

[2020-05-27T17:14:24.411Z] Deploying version v-8c957a01c7...

[2020-05-27T17:14:26.121Z] Waiting for resources to be ready...

[2020-05-27T17:14:28.269Z] Deploying version v-8c957a01c7...

[2020-05-27T17:14:28.353Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-8c957a01c7: ScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Scheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Pulled - Container image "client:v-8c957a01c7" already present on machine
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Created - Created container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Started - Started container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7

****** frontend-v-8c957a01c7-df79896dc-7gzlr ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-8c957a01c7:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mPulled - Container image \"client:v-8c957a01c7\" already present on machine\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-8c957a01c7-df79896dc-7gzlr ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-8c957a01c7
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-8c957a01c7
      uid: f3ce89ff-8ab0-42a9-8b20-3d099892701d
      resourceVersion: '44422'
      generation: 1
      creationTimestamp: '2020-05-27T17:13:31Z'
      labels:
        garden.io/version: v-8c957a01c7
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839
        garden.io/version: v-8c957a01c7
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839","garden.io/version":"v-8c957a01c7"},"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"},"name":"frontend-v-8c957a01c7","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-8c957a01c7","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-8c957a01c7"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-8c957a01c7\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-8c957a01c7","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-8c957a01c7
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-8c957a01c7
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:14:28.439Z] ⏳  Processing...

[2020-05-27T17:14:28.522Z] Syncing module sources (17 files)...

[2020-05-27T17:14:28.936Z] Syncing module sources (17 files)... → Done (took 0.4 sec)

[2020-05-27T17:14:29.023Z] Building version v-8c957a01c7...

[2020-05-27T17:14:29.482Z] Building client:v-8c957a01c7...

[2020-05-27T17:14:29.885Z] Building client:v-8c957a01c7... → Done (took 0.9 sec)

[2020-05-27T17:14:29.974Z] Deploying version v-8c957a01c7...

[2020-05-27T17:14:31.742Z] Waiting for resources to be ready...

[2020-05-27T17:14:33.904Z] Deploying version v-8c957a01c7...

[2020-05-27T17:14:33.992Z] Error: Error deploying frontend: BackOff - Back-off restarting failed container

━━━ Events ━━━
Deployment frontend-v-8c957a01c7: ScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Scheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Pulled - Container image "client:v-8c957a01c7" already present on machine
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Created - Created container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Started - Started container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7

****** frontend-v-8c957a01c7-df79896dc-7gzlr ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: BackOff - Back-off restarting failed container
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-8c957a01c7:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mPulled - Container image \"client:v-8c957a01c7\" already present on machine\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-8c957a01c7-df79896dc-7gzlr ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-8c957a01c7
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-8c957a01c7
      uid: f3ce89ff-8ab0-42a9-8b20-3d099892701d
      resourceVersion: '44422'
      generation: 1
      creationTimestamp: '2020-05-27T17:13:31Z'
      labels:
        garden.io/version: v-8c957a01c7
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839
        garden.io/version: v-8c957a01c7
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839","garden.io/version":"v-8c957a01c7"},"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"},"name":"frontend-v-8c957a01c7","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-8c957a01c7","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-8c957a01c7"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-8c957a01c7\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-8c957a01c7","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-8c957a01c7
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-8c957a01c7
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:14:34.079Z] ⏳  Processing...

[2020-05-27T17:14:34.166Z] Syncing module sources (17 files)...

[2020-05-27T17:14:34.637Z] Syncing module sources (17 files)... → Done (took 0.5 sec)

[2020-05-27T17:14:34.729Z] Building version v-8c957a01c7...

[2020-05-27T17:14:35.172Z] Building client:v-8c957a01c7...

[2020-05-27T17:14:35.606Z] Building client:v-8c957a01c7... → Done (took 0.9 sec)

[2020-05-27T17:14:35.699Z] Deploying version v-8c957a01c7...

[2020-05-27T17:14:37.484Z] Waiting for resources to be ready...

[2020-05-27T17:14:39.657Z] Deploying version v-8c957a01c7...

[2020-05-27T17:14:39.747Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 40s restarting failed container=frontend pod=frontend-v-8c957a01c7-df79896dc-7gzlr_node-microservice(4a865141-3b34-44ca-9b17-428af8beeb4c)

━━━ Events ━━━
Deployment frontend-v-8c957a01c7: ScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Scheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Pulled - Container image "client:v-8c957a01c7" already present on machine
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Created - Created container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Started - Started container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7

****** frontend-v-8c957a01c7-df79896dc-7gzlr ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 40s restarting failed container=frontend
    pod=frontend-v-8c957a01c7-df79896dc-7gzlr_node-microservice(4a865141-3b34-44ca-9b17-428af8beeb4c)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-8c957a01c7:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mPulled - Container image \"client:v-8c957a01c7\" already present on machine\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-8c957a01c7-df79896dc-7gzlr ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-8c957a01c7
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-8c957a01c7
      uid: f3ce89ff-8ab0-42a9-8b20-3d099892701d
      resourceVersion: '44422'
      generation: 1
      creationTimestamp: '2020-05-27T17:13:31Z'
      labels:
        garden.io/version: v-8c957a01c7
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839
        garden.io/version: v-8c957a01c7
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839","garden.io/version":"v-8c957a01c7"},"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"},"name":"frontend-v-8c957a01c7","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-8c957a01c7","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-8c957a01c7"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-8c957a01c7\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-8c957a01c7","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-8c957a01c7
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-8c957a01c7
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:14:39.841Z] Waiting for code changes...

[2020-05-27T17:25:37.280Z] Getting status...

[2020-05-27T17:25:40.526Z] Getting status... → Done

[2020-05-27T17:25:42.665Z] Module configuration changed, reloading...

[2020-05-27T17:25:44.168Z] Getting status...

[2020-05-27T17:25:51.625Z] Getting status... → Done

[2020-05-27T17:25:54.035Z] ⏳  Processing...

[2020-05-27T17:25:54.198Z] Syncing module sources (17 files)...

[2020-05-27T17:25:54.577Z] Syncing module sources (5 files)...

[2020-05-27T17:25:55.207Z] Syncing module sources (5 files)... → Done (took 0.6 sec)

[2020-05-27T17:25:55.392Z] Getting build status for v-56ab2b577f...

[2020-05-27T17:25:56.724Z] Syncing module sources (17 files)... → Done (took 2.5 sec)

[2020-05-27T17:25:56.927Z] Getting build status for v-8c957a01c7...

[2020-05-27T17:25:57.122Z] Getting build status for v-57df7df941...

[2020-05-27T17:25:57.292Z] Getting build status for v-57df7df941... → Done (took 0.2 sec)

[2020-05-27T17:25:57.781Z] Deploying version v-57df7df941...

[2020-05-27T17:25:57.923Z] Deploying version v-57df7df941... → Already deployed

[2020-05-27T17:25:58.385Z] Getting build status for v-56ab2b577f... → Done (took 3 sec)

[2020-05-27T17:25:58.522Z] Deploying version v-56ab2b577f...

[2020-05-27T17:25:58.937Z] Getting build status for v-8c957a01c7... → Done (took 2.1 sec)

[2020-05-27T17:25:59.072Z] Deploying version v-8c957a01c7...

[2020-05-27T17:26:02.199Z] Waiting for resources to be ready...

[2020-05-27T17:26:02.533Z] Waiting for resources to be ready...

[2020-05-27T17:26:04.384Z] Deploying version v-56ab2b577f...

[2020-05-27T17:26:04.513Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Pulled - Container image "server:v-56ab2b577f" already present on machine
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Created - Created container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Started - Started container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mPulled - Container image \"server:v-56ab2b577f\" already present on machine\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '43778'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:26:04.716Z] Deploying version v-8c957a01c7...

[2020-05-27T17:26:04.843Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 5m0s restarting failed container=frontend pod=frontend-v-8c957a01c7-df79896dc-7gzlr_node-microservice(4a865141-3b34-44ca-9b17-428af8beeb4c)

━━━ Events ━━━
Deployment frontend-v-8c957a01c7: ScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Scheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Pulled - Container image "client:v-8c957a01c7" already present on machine
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Created - Created container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Started - Started container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7

****** frontend-v-8c957a01c7-df79896dc-7gzlr ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=frontend
    pod=frontend-v-8c957a01c7-df79896dc-7gzlr_node-microservice(4a865141-3b34-44ca-9b17-428af8beeb4c)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-8c957a01c7:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mPulled - Container image \"client:v-8c957a01c7\" already present on machine\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-8c957a01c7-df79896dc-7gzlr ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-8c957a01c7
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-8c957a01c7
      uid: f3ce89ff-8ab0-42a9-8b20-3d099892701d
      resourceVersion: '45921'
      generation: 1
      creationTimestamp: '2020-05-27T17:13:31Z'
      labels:
        garden.io/version: v-8c957a01c7
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839
        garden.io/version: v-8c957a01c7
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839","garden.io/version":"v-8c957a01c7"},"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"},"name":"frontend-v-8c957a01c7","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-8c957a01c7","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-8c957a01c7"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-8c957a01c7\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-8c957a01c7","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-8c957a01c7
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-8c957a01c7
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:26:04.979Z] Waiting for code changes...

[2020-05-27T17:30:19.633Z] Getting status...

[2020-05-27T17:30:22.557Z] Getting status... → Done

[2020-05-27T17:30:23.165Z] Project configuration changed, reloading...

[2020-05-27T17:30:24.330Z] Getting status...

[2020-05-27T17:30:26.394Z] Getting status... → Done

[2020-05-27T17:30:27.130Z] ⏳  Processing...

[2020-05-27T17:30:27.386Z] Syncing module sources (5 files)...

[2020-05-27T17:30:27.509Z] Syncing module sources (17 files)...

[2020-05-27T17:30:27.877Z] Syncing module sources (5 files)... → Done (took 0.5 sec)

[2020-05-27T17:30:28.002Z] Getting build status for v-56ab2b577f...

[2020-05-27T17:30:28.888Z] Getting build status for v-57df7df941...

[2020-05-27T17:30:29.013Z] Getting build status for v-57df7df941... → Done (took 0.1 sec)

[2020-05-27T17:30:29.141Z] Syncing module sources (17 files)... → Done (took 1.6 sec)

[2020-05-27T17:30:29.265Z] Getting build status for v-8c957a01c7...

[2020-05-27T17:30:29.571Z] Deploying version v-57df7df941...

[2020-05-27T17:30:29.696Z] Deploying version v-57df7df941... → Already deployed

[2020-05-27T17:30:30.035Z] Getting build status for v-56ab2b577f... → Done (took 2 sec)

[2020-05-27T17:30:30.164Z] Deploying version v-56ab2b577f...

[2020-05-27T17:30:30.294Z] Getting build status for v-8c957a01c7... → Done (took 1 sec)

[2020-05-27T17:30:30.424Z] Deploying version v-8c957a01c7...

[2020-05-27T17:30:32.003Z] Waiting for resources to be ready...

[2020-05-27T17:30:32.125Z] Waiting for resources to be ready...

[2020-05-27T17:30:34.249Z] Deploying version v-56ab2b577f...

[2020-05-27T17:30:34.380Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Pulled - Container image "server:v-56ab2b577f" already present on machine
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Created - Created container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Started - Started container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mPulled - Container image \"server:v-56ab2b577f\" already present on machine\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '46196'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:30:34.566Z] Deploying version v-8c957a01c7...

[2020-05-27T17:30:34.696Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 5m0s restarting failed container=frontend pod=frontend-v-8c957a01c7-df79896dc-7gzlr_node-microservice(4a865141-3b34-44ca-9b17-428af8beeb4c)

━━━ Events ━━━
Deployment frontend-v-8c957a01c7: ScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Scheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Pulled - Container image "client:v-8c957a01c7" already present on machine
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Created - Created container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Started - Started container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7

****** frontend-v-8c957a01c7-df79896dc-7gzlr ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=frontend
    pod=frontend-v-8c957a01c7-df79896dc-7gzlr_node-microservice(4a865141-3b34-44ca-9b17-428af8beeb4c)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-8c957a01c7:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mPulled - Container image \"client:v-8c957a01c7\" already present on machine\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-8c957a01c7-df79896dc-7gzlr ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-8c957a01c7
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-8c957a01c7
      uid: f3ce89ff-8ab0-42a9-8b20-3d099892701d
      resourceVersion: '46672'
      generation: 1
      creationTimestamp: '2020-05-27T17:13:31Z'
      labels:
        garden.io/version: v-8c957a01c7
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839
        garden.io/version: v-8c957a01c7
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839","garden.io/version":"v-8c957a01c7"},"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"},"name":"frontend-v-8c957a01c7","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-8c957a01c7","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-8c957a01c7"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-8c957a01c7\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-8c957a01c7","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-8c957a01c7
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-8c957a01c7
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:30:34.830Z] Waiting for code changes...

[2020-05-27T17:30:50.777Z] Getting status...

[2020-05-27T17:30:53.635Z] Getting status... → Done

[2020-05-27T17:30:54.203Z] Project configuration changed, reloading...

[2020-05-27T17:30:55.364Z] Getting status...

[2020-05-27T17:30:57.346Z] Getting status... → Done

[2020-05-27T17:30:58.000Z] ⏳  Processing...

[2020-05-27T17:30:58.131Z] Syncing module sources (17 files)...

[2020-05-27T17:30:58.505Z] Syncing module sources (5 files)...

[2020-05-27T17:30:58.734Z] Syncing module sources (5 files)... → Done (took 0.2 sec)

[2020-05-27T17:30:58.872Z] Getting build status for v-56ab2b577f...

[2020-05-27T17:30:59.694Z] Syncing module sources (17 files)... → Done (took 1.5 sec)

[2020-05-27T17:30:59.843Z] Getting build status for v-8c957a01c7...

[2020-05-27T17:30:59.991Z] Getting build status for v-57df7df941...

[2020-05-27T17:31:00.133Z] Getting build status for v-57df7df941... → Done (took 0.1 sec)

[2020-05-27T17:31:00.509Z] Deploying version v-57df7df941...

[2020-05-27T17:31:00.654Z] Deploying version v-57df7df941... → Already deployed

[2020-05-27T17:31:00.799Z] Getting build status for v-56ab2b577f... → Done (took 1.9 sec)

[2020-05-27T17:31:01.109Z] Deploying version v-56ab2b577f...

[2020-05-27T17:31:01.329Z] Getting build status for v-8c957a01c7... → Done (took 1.4 sec)

[2020-05-27T17:31:01.468Z] Deploying version v-8c957a01c7...

[2020-05-27T17:31:02.874Z] Waiting for resources to be ready...

[2020-05-27T17:31:03.092Z] Waiting for resources to be ready...

[2020-05-27T17:31:05.060Z] Deploying version v-56ab2b577f...

[2020-05-27T17:31:05.187Z] Error: Error deploying backend: CrashLoopBackOff - back-off 5m0s restarting failed container=backend pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)

━━━ Events ━━━
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Pulled - Container image "server:v-56ab2b577f" already present on machine
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Created - Created container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: Started - Started container backend
Pod backend-v-56ab2b577f-7695db79f5-lzjqq: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f

****** backend-v-56ab2b577f-7695db79f5-lzjqq ******
------ backend ------Error: connect ECONNREFUSED 172.17.0.2:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)
    --------------------
    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)
    at Object.<anonymous> (/usr/src/server/app.js:11:6)
    at Module._compile (internal/modules/cjs/loader.js:1133:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)
    at Module.load (internal/modules/cjs/loader.js:977:32)
    at Function.Module._load (internal/modules/cjs/loader.js:877:14)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)
    at internal/main/run_main_module.js:18:47 {
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '172.17.0.2',
  port: 3306,
  fatal: true
}

    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: backend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=backend
    pod=backend-v-56ab2b577f-7695db79f5-lzjqq_node-microservice(3765cd99-317e-4785-abe7-c532d3b64885)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mPulled - Container image \"server:v-56ab2b577f\" already present on machine\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mCreated - Created container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[37mStarted - Started container backend\e[39m\n\e[94mPod backend-v-56ab2b577f-7695db79f5-lzjqq:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/backend-v-56ab2b577f\e[39m\n\e[94m\e[39m\n\e[94m****** backend-v-56ab2b577f-7695db79f5-lzjqq ******\e[39m\n\e[94m\e[39m\e[90m------ backend ------\e[39mError: connect ECONNREFUSED 172.17.0.2:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1141:16)\n    --------------------\n    at Protocol._enqueue (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:144:48)\n    at Protocol.handshake (/usr/src/server/node_modules/mysql/lib/protocol/Protocol.js:51:23)\n    at Connection.connect (/usr/src/server/node_modules/mysql/lib/Connection.js:116:18)\n    at Object.<anonymous> (/usr/src/server/app.js:11:6)\n    at Module._compile (internal/modules/cjs/loader.js:1133:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1153:10)\n    at Module.load (internal/modules/cjs/loader.js:977:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:877:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\n    at internal/main/run_main_module.js:18:47 {\n  errno: 'ECONNREFUSED',\n  code: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '172.17.0.2',\n  port: 3306,\n  fatal: true\n}\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: backend-v-56ab2b577f
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/backend-v-56ab2b577f
      uid: 8bdc3e45-165c-43c1-9fc0-6fde61eb1e89
      resourceVersion: '46196'
      generation: 1
      creationTimestamp: '2020-05-26T21:10:49Z'
      labels:
        garden.io/version: v-56ab2b577f
        module: server
        service: backend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91
        garden.io/version: v-56ab2b577f
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"a69290753306f144c1d8a7928f82194e7af91991e75f346f7def3ec09db36a91","garden.io/version":"v-56ab2b577f"},"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"},"name":"backend-v-56ab2b577f","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-56ab2b577f","service":"backend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-56ab2b577f","module":"server","service":"backend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-56ab2b577f"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"server\",\"name\":\"server\",\"type\":\"build\",\"version\":\"v-56ab2b577f\"},{\"moduleName\":\"db\",\"name\":\"db\",\"type\":\"service\",\"version\":\"v-57df7df941\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"server:v-56ab2b577f","imagePullPolicy":"IfNotPresent","name":"backend","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-56ab2b577f
          service: backend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-56ab2b577f
            module: server
            service: backend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:31:05.367Z] Deploying version v-8c957a01c7...

[2020-05-27T17:31:05.521Z] Error: Error deploying frontend: CrashLoopBackOff - back-off 5m0s restarting failed container=frontend pod=frontend-v-8c957a01c7-df79896dc-7gzlr_node-microservice(4a865141-3b34-44ca-9b17-428af8beeb4c)

━━━ Events ━━━
Deployment frontend-v-8c957a01c7: ScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Scheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Pulled - Container image "client:v-8c957a01c7" already present on machine
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Created - Created container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: Started - Started container frontend
Pod frontend-v-8c957a01c7-df79896dc-7gzlr: BackOff - Back-off restarting failed container

━━━ Pod logs ━━━
<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>
$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7

****** frontend-v-8c957a01c7-df79896dc-7gzlr ******
------ frontend ------
> client@0.1.0 start /usr/src/client
> react-scripts start

ℹ ｢wds｣: Project is running at http://172.17.0.7/
ℹ ｢wds｣: webpack output is served from 
ℹ ｢wds｣: Content not from webpack is served from /usr/src/client/public
ℹ ｢wds｣: 404s will fallback to /
Starting the development server...


    at Object.<anonymous> (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at Generator.next (<anonymous>)
    at fulfilled (/snapshot/project/garden-service/tmp/dist/build/src/plugins/kubernetes/status/status.js:0)
    at runMicrotasks (<anonymous>)
    at runNextTicks (internal/process/task_queues.js:58:5)
    at processImmediate (internal/timers.js:412:9)
    at process.topLevelDomainCallback (domain.js:130:23)
Error Details:
serviceName: frontend
status:
  state: unhealthy
  lastMessage: >-
    CrashLoopBackOff - back-off 5m0s restarting failed container=frontend
    pod=frontend-v-8c957a01c7-df79896dc-7gzlr_node-microservice(4a865141-3b34-44ca-9b17-428af8beeb4c)
  logs: "\e[37m━━━ Events ━━━\e[39m\n\e[94mDeployment frontend-v-8c957a01c7:\e[39m \e[37mScalingReplicaSet - Scaled up replica set frontend-v-8c957a01c7-df79896dc to 1\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mScheduled - Successfully assigned node-microservice/frontend-v-8c957a01c7-df79896dc-7gzlr to minikube\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mPulled - Container image \"client:v-8c957a01c7\" already present on machine\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mCreated - Created container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[37mStarted - Started container frontend\e[39m\n\e[94mPod frontend-v-8c957a01c7-df79896dc-7gzlr:\e[39m \e[33mBackOff - Back-off restarting failed container\e[39m\e[37m\e[39m\n\e[37m\e[39m\n\e[37m━━━ Pod logs ━━━\e[39m\n\e[37m\e[39m\e[90m<Showing last 20 lines per pod in this Deployment. Run the following command for complete logs>\e[39m\n\e[90m$ kubectl -n node-microservice --context=minikube logs deployment/frontend-v-8c957a01c7\e[39m\n\e[94m\e[39m\n\e[94m****** frontend-v-8c957a01c7-df79896dc-7gzlr ******\e[39m\n\e[94m\e[39m\e[90m------ frontend ------\e[39m\n> client@0.1.0 start /usr/src/client\n> react-scripts start\n\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Project is running at http://172.17.0.7/\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: webpack output is served from \n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: Content not from webpack is served from /usr/src/client/public\n\e[34mℹ\e[39m \e[90m｢wds｣\e[39m: 404s will fallback to /\nStarting the development server...\n\n"
  resource:
    kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: frontend-v-8c957a01c7
      namespace: node-microservice
      selfLink: >-
        /apis/apps/v1/namespaces/node-microservice/deployments/frontend-v-8c957a01c7
      uid: f3ce89ff-8ab0-42a9-8b20-3d099892701d
      resourceVersion: '46672'
      generation: 1
      creationTimestamp: '2020-05-27T17:13:31Z'
      labels:
        garden.io/version: v-8c957a01c7
        module: client
        service: frontend
      annotations:
        deployment.kubernetes.io/revision: '1'
        garden.io/configured.replicas: '1'
        garden.io/generated: 'true'
        garden.io/manifest-hash: d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839
        garden.io/version: v-8c957a01c7
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"garden.io/configured.replicas":"1","garden.io/generated":"true","garden.io/manifest-hash":"d4ef7cf248b88397c5f6664d58bd78d800287cb3d590a828304b01ba414f1839","garden.io/version":"v-8c957a01c7"},"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"},"name":"frontend-v-8c957a01c7","namespace":"node-microservice"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"garden.io/version":"v-8c957a01c7","service":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"garden.io/version":"v-8c957a01c7","module":"client","service":"frontend"}},"spec":{"containers":[{"env":[{"name":"GARDEN_VERSION","value":"v-8c957a01c7"},{"name":"GARDEN_DEPENDENCIES","value":"[{\"moduleName\":\"client\",\"name\":\"client\",\"type\":\"build\",\"version\":\"v-8c957a01c7\"}]"},{"name":"POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_SERVICE_ACCOUNT","valueFrom":{"fieldRef":{"fieldPath":"spec.serviceAccountName"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"client:v-8c957a01c7","imagePullPolicy":"IfNotPresent","name":"frontend","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":5}}}}
      managedFields: []
    spec:
      replicas: 1
      selector:
        matchLabels:
          garden.io/version: v-8c957a01c7
          service: frontend
      template:
        metadata:
          creationTimestamp: null
          labels:
            garden.io/version: v-8c957a01c7
            module: client
            service: frontend
        spec:
          containers: []
          restartPolicy: Always
          terminationGracePeriodSeconds: 5
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      revisionHistoryLimit: 3
      progressDeadlineSeconds: 600
    status:
      observedGeneration: 1
      replicas: 1
      updatedReplicas: 1
      unavailableReplicas: 1
      conditions: []


[2020-05-27T17:31:05.657Z] Waiting for code changes...
